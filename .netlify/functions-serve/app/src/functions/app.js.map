{
  "version": 3,
  "sources": ["../../../../Documents/Websites/Personal/MAV/Backend/node_modules/depd/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bytes/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/content-type/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/setprototypeof/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/statuses/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/inherits/inherits_browser.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/inherits/inherits.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/toidentifier/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/http-errors/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/ms/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/debug/src/debug.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/debug/src/browser.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/debug/src/node.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/debug/src/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/destroy/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/safer-buffer/safer.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/lib/bom-handling.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/internal.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/utf16.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/utf7.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/sbcs-codec.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/sbcs-data.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/sbcs-data-generated.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/dbcs-codec.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/dbcs-data.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/encodings/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/lib/streams.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/lib/extend-node.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/iconv-lite/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/unpipe/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/raw-body/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/ee-first/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/on-finished/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/lib/read.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/media-typer/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mime-db/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mime-types/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/type-is/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/lib/types/json.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/lib/types/raw.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/lib/types/text.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/has-symbols/shams.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/has-symbols/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/has-proto/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/function-bind/implementation.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/function-bind/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/has/src/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/get-intrinsic/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/call-bind/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/call-bind/callBound.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/object-inspect/util.inspect.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/object-inspect/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/side-channel/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/qs/lib/formats.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/qs/lib/utils.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/qs/lib/stringify.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/qs/lib/parse.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/qs/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/lib/types/urlencoded.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/body-parser/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/merge-descriptors/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/encodeurl/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/escape-html/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/parseurl/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/finalhandler/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/array-flatten/array-flatten.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/path-to-regexp/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/router/layer.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/methods/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/router/route.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/utils-merge/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/router/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/middleware/init.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/middleware/query.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/view.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/safe-buffer/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/content-disposition/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/etag/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/fresh/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mime/mime.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/send/node_modules/ms/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/range-parser/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/send/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/forwarded/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/ipaddr.js/lib/ipaddr.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/proxy-addr/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/utils.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/application.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/negotiator/lib/charset.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/negotiator/lib/encoding.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/negotiator/lib/language.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/negotiator/lib/mediaType.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/negotiator/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/accepts/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/request.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/cookie-signature/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/cookie/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/vary/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/response.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serve-static/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/lib/express.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/express/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/finish.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/response.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/framework/get-framework.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/clean-up-event.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/request.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/create-request.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/is-binary.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/sanitize-headers.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/format-response.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/aws/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/clean-up-request.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/create-request.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/is-binary.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/sanitize-headers.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/format-response.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/azure/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/lib/provider/get-provider.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/serverless-http/serverless-http.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/object-assign/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/cors/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/dotenv/lib/main.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/dotenv/lib/env-options.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/dotenv/lib/cli-options.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/driver.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/connectionstate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/immediate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/collection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/mongooseError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/error.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/parser/utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/constants.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/error.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/utils/node_byte_utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/utils/web_byte_utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/utils/byte_utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/bson_value.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/binary.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/code.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/db_ref.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/long.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/decimal128.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/double.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/int_32.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/max_key.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/min_key.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/objectid.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/parser/calculate_size.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/regexp.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/symbol.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/timestamp.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/validate_utf8.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/parser/deserializer.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/parser/serializer.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/extended_json.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/bson/src/bson.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/bson.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/wire_protocol/constants.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/constants.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/read_concern.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/read_preference.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/common.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/write_concern.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/explain.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/server_selection.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/operation.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/command.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/add_user.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/execute_operation.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/list_databases.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/remove_user.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/run_command.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/validate_collection.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/admin.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/delete.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/bulk_write.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/common_functions.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/insert.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/update.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/bulk/common.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/bulk/ordered.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/bulk/unordered.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/aggregate.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/mongo_types.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/get_more.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/kill_cursors.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/metrics.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/server_description.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/topology_description.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/wire_protocol/shared.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/transactions.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sessions.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/abstract_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/aggregation_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/count.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sort.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/find.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/find_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/indexes.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/list_indexes_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/list_search_indexes_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/count_documents.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/distinct.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/drop.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/estimated_document_count.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/find_and_modify.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/is_capped.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/options_operation.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/rename.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/search_indexes/create.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/search_indexes/drop.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/search_indexes/update.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/stats.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/collection.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/change_stream_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/list_collections.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/list_collections_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cursor/run_command_cursor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/collections.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/create_collection.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/profiling_level.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/operations/set_profiling_level.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/db.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/memory-pager/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sparse-bitfield/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/saslprep/lib/memory-code-points.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/saslprep/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/deps.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/auth_provider.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/gssapi.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/providers.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongo_credentials.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/webidl-conversions/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/utils.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/tr46/lib/regexes.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/tr46/lib/statusMapping.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/tr46/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/infra.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/encoding.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/percent-encoding.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/url-state-machine.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/urlencoded.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/Function.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/URLSearchParams-impl.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/URLSearchParams.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/URL-impl.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/lib/URL.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/webidl2js-wrapper.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/whatwg-url/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb-connection-string-url/src/redact.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb-connection-string-url/src/index.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/handshake/client_metadata.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/wire_protocol/compression.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/encrypter.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/mongo_logger.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/connection_string.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/events.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/commands.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/command_monitoring_events.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/message_stream.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/stream_description.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/connection.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/ip/lib/ip.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/smart-buffer/src/utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/smart-buffer/src/smartbuffer.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/common/constants.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/common/util.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/common/helpers.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/common/receivebuffer.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/client/socksclient.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/socks/src/index.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongocr.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_aws.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/service_workflow.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/aws_service_workflow.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/cache.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_token_cache.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_service_workflow.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/callback_lock_cache.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_entry_cache.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc/callback_workflow.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/mongodb_oidc.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/plain.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/scram.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/auth/x509.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/connect.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/connection_pool_events.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/errors.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/cmap/connection_pool.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/monitor.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/server.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/srv_polling.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/sdam/topology.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/mongo_client.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/change_stream.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/gridfs/download.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/gridfs/upload.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/gridfs/index.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongodb/src/index.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/symbols.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/objectid.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/getConstructorName.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/decimal128.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/specialProperties.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/array/isMongooseArray.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isMongooseObject.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/getFunctionName.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isBsonType.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isObject.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isPOJO.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/trusted.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/clone.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cursor/ChangeStream.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/kareem/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/messages.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/notFound.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/cast.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/error/combinePathErrors.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/validation.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/validator.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/version.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/parallelSave.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/overwriteModel.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/missingSchema.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/topology/allServersUnknown.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/topology/isAtlas.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/topology/isSSLError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/serverSelection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/divergentArray.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/strict.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/strictPopulate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/propertyOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaTypeOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/boolean.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/exists.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/type.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schematype/handleImmutable.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isAsyncFunction.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isSimpleValidator.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/node_modules/ms/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mpath/lib/stringToParts.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mpath/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mpath/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/PopulateOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/DocumentArray/isMongooseDocumentArray.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/promiseOrCallback.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/merge.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/statemachine.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/internal.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/symbols.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/mixed.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/objectExpected.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/objectParameter.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/parallelValidate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/hasIncludedChildren.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/applyDefaults.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/cleanModifiedSubpaths.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/compile.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/common.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/get.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/areDiscriminatorValuesEqual.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/getSchemaDiscriminatorByValue.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/getEmbeddedDiscriminatorPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/getKeysInSchemaOrder.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/getSubdocumentStrictValue.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/handleSpreadDoc.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isDefiningProjection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isExclusive.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/markArraySubdocsPopulated.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/checkEmbeddedDiscriminatorKeyProjection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/getDiscriminatorByValue.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isPathSelectedInclusive.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/queryhelpers.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/isPromise.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/path/parentPaths.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/document/getDeepestSubdocumentForPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/subdocument.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/ArraySubdocument.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/array/methods/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/array/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/objectid.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/DocumentArray/methods/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/DocumentArray/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/document.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/utils.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schematype.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/VirtualOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/virtualtype.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/addAutoId.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/decorateDiscriminatorIndexOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/getIndexes.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/handleReadPreferenceAliases.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/idGetter.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/cleanPositionalOperators.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/handleTimestampOption.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/applyTimestampsToChildren.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/applyTimestampsToUpdate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/timestamps/setDocumentTimestamps.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/timestamps/setupTimestamps.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/validateRef.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/validOps.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/applyQueryMiddleware.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/applyHooks.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/buffer.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/map.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/uuid.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/types/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaArrayOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/arrayDepth.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/number.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/cast$expr.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/string.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/text.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/isOperator.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaNumberOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/bitwise.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/number.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/helpers.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/operators/geospatial.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/array.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/boolean.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/bigint.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/bigint.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaBufferOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/buffer.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaDateOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/date.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/date.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cast/decimal128.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/decimal128.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaSubdocumentOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/each.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/removeSubdocs.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/saveSubdocs.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/sharding.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/trackTransaction.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/validateBeforeSave.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/plugins/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/applyBuiltinPlugins.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/mergeDiscriminatorSchema.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/discriminator.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/discriminator/getConstructor.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/handleIdOption.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/invalidSchemaOption.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/SubdocumentPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/DocumentArrayElement.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/documentarray.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaMapOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/map.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaObjectIdOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/objectid.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/SchemaStringOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/string.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/uuid.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/schema.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/syncIndexes.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/applyPlugins.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/createCollectionsError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/connection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/processConnectionOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/timers.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/drivers/node-mongodb-native/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/validoptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/eachAsyncMultiError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/cursor/eachAsync.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cursor/QueryCursor.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/applyGlobalOption.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/applyWriteConcern.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/castFilterPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/schema/getPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/modifiedPaths.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/updatedPathsByArrayFilter.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/castArrayFilters.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/getEmbeddedDiscriminatorPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/handleImmutable.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/moveImmutableProperties.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/path/setDottedPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/castUpdate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/completeMany.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/hasDollarKeys.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isInclusive.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isSubpath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/utils.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/node_modules/ms/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/node_modules/debug/src/common.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/node_modules/debug/src/browser.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/has-flag/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/supports-color/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/node_modules/debug/src/node.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/node_modules/debug/src/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/permissions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/env.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/collection/collection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/collection/node.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/collection/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mquery/lib/mquery.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/parseProjection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/update/removeUnusedArrayFilters.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/sanitizeFilter.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/sanitizeProjection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/query/selectPopulatedFields.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/setDefaultsOnInsert.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/updateValidators.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/query.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/cursor/AggregationCursor.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/aggregate/prepareDiscriminatorPipeline.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/aggregate/stringifyFunctionOperators.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/aggregate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/options/saveOptions.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/applyDefaultsToPOJO.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/applyMethods.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/applyProjection.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/isTextIndex.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/applySchemaCollation.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/applyStaticHooks.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/applyStatics.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/SkipPopulateValue.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/leanPopulateMap.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/assignRawDocsToIdStructure.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/getVirtual.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/lookupLocalFields.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/node_modules/tslib/tslib.es6.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/src/utils.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/src/core.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/src/operations.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/src/index.ts", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/sift/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/assignVals.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/castBulkWrite.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/createPopulateQueryFilter.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/getDefaultBulkwriteResult.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/firstKey.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/getSchemaTypes.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/projection/isPathExcluded.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/modelNamesFromRefPath.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/isDefaultIdIndex.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/isIndexEqual.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/indexes/getRelatedIndexes.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/parallelLimit.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/model/pushNestedArrayPaths.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/populate/removeDeselectedForeignField.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/bulkWriteError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/model.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/pluralize.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/error/setOptionError.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/helpers/printJestWarning.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/browserDocument.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/document_provider.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/lib/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/mongoose/index.js", "../../../../Documents/Websites/Personal/MAV/Backend/functions/app.js", "../../../../Documents/Websites/Personal/MAV/Backend/node_modules/dotenv/config.js", "../../../../Documents/Websites/Personal/MAV/Backend/functions/routes/line.js", "../../../../Documents/Websites/Personal/MAV/Backend/functions/models/line.js", "../../../../Documents/Websites/Personal/MAV/Backend/functions/models/train.js", "../../../../Documents/Websites/Personal/MAV/Backend/functions/routes/train.js"],
  "sourceRoot": "C:/Users/jfadg/AppData/Local/Temp/tmp-2752-UDNiPFIBCqTf",
  "sourcesContent": ["/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n", "/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n", "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n", "'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n", "/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n", "/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n", "/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n", "/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n", "/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n", "/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n", "\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n", "\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n", "/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n", "/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n", "/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n", "/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n", "/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0, index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "module.exports = require('util').inspect;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n", "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  // use default type for parsers\n  var opts = Object.create(options || null, {\n    type: {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n      writable: true\n    }\n  })\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n", "/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n", "/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n", "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n", "/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n", "/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n", "'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n", "/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n", "/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    var layer = stack[idx++]\n\n    // end of layers\n    if (!layer) {\n      return done(err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      next(err)\n    } else if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n", "/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n", "/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n", "/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n", "var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n", "/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createHttpError(status, err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    etag: this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream, true)\n  }\n\n  // response finished, cleanup\n  onFinished(res, cleanup)\n\n  // error handling\n  stream.on('error', function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status, err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status, err, { expose: false })\n    : createError(status, err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(str.substring(start, end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start, end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n", "/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n", "(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n", "/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings, setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n", "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n", "/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n", "/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n", "/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n", "/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n", "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n", "'use strict';\n\nmodule.exports = async function finish(item, transform, ...details) {\n  await new Promise((resolve, reject) => {\n    if (item.finished || item.complete) {\n      resolve();\n      return;\n    }\n\n    let finished = false;\n\n    function done(err) {\n      if (finished) {\n        return;\n      }\n\n      finished = true;\n\n      item.removeListener('error', done);\n      item.removeListener('end', done);\n      item.removeListener('finish', done);\n\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    }\n\n    item.once('error', done);\n    item.once('end', done);\n    item.once('finish', done);\n  });\n\n  if (typeof transform === 'function') {\n    await transform(item, ...details);\n  } else if (typeof transform === 'object' && transform !== null) {\n    Object.assign(item, transform);\n  }\n\n  return item;\n};\n", "'use strict';\n\nconst http = require('http');\n\nconst headerEnd = '\\r\\n\\r\\n';\n\nconst BODY = Symbol();\nconst HEADERS = Symbol();\n\nfunction getString(data) {\n  if (Buffer.isBuffer(data)) {\n    return data.toString('utf8');\n  } else if (typeof data === 'string') {\n    return data;\n  } else {\n    throw new Error(`response.write() of unexpected type: ${typeof data}`);\n  }\n}\n\nfunction addData(stream, data) {\n  if (Buffer.isBuffer(data) || typeof data === 'string' || data instanceof Uint8Array) {\n    stream[BODY].push(Buffer.from(data));\n  } else {\n    throw new Error(`response.write() of unexpected type: ${typeof data}`);\n  }\n}\n\nmodule.exports = class ServerlessResponse extends http.ServerResponse {\n\n  static from(res) {\n    const response = new ServerlessResponse(res);\n\n    response.statusCode = res.statusCode\n    response[HEADERS] = res.headers;\n    response[BODY] = [Buffer.from(res.body)];\n    response.end();\n\n    return response;\n  }\n\n  static body(res) {\n    return Buffer.concat(res[BODY]);\n  }\n\n  static headers(res) {\n    const headers = typeof res.getHeaders === 'function'\n      ? res.getHeaders()\n      : res._headers;\n\n    return Object.assign(headers, res[HEADERS]);\n  }\n\n  get headers() {\n    return this[HEADERS];\n  }\n\n  setHeader(key, value) {\n    if (this._wroteHeader) {\n      this[HEADERS][key] = value;\n    } else {\n      super.setHeader(key, value);\n    }\n  }\n\n  writeHead(statusCode, reason, obj) {\n    const headers = typeof reason === 'string'\n      ? obj\n      : reason\n\n    for (const name in headers) {\n      this.setHeader(name, headers[name])\n\n      if (!this._wroteHeader) {\n        // we only need to initiate super.headers once\n        // writeHead will add the other headers itself\n        break\n      }\n    }\n\n    super.writeHead(statusCode, reason, obj);\n  }\n\n  constructor({ method }) {\n    super({ method });\n\n    this[BODY] = [];\n    this[HEADERS] = {};\n\n    this.useChunkedEncodingByDefault = false;\n    this.chunkedEncoding = false;\n    this._header = '';\n\n    this.assignSocket({\n      _writableState: {},\n      writable: true,\n      on: Function.prototype,\n      removeListener: Function.prototype,\n      destroy: Function.prototype,\n      cork: Function.prototype,\n      uncork: Function.prototype,\n      write: (data, encoding, cb) => {\n        if (typeof encoding === 'function') {\n          cb = encoding;\n          encoding = null;\n        }\n\n        if (this._header === '' || this._wroteHeader) {\n          addData(this, data);\n        } else {\n          const string = getString(data);\n          const index = string.indexOf(headerEnd);\n\n          if (index !== -1) {\n            const remainder = string.slice(index + headerEnd.length);\n\n            if (remainder) {\n              addData(this, remainder);\n            }\n\n            this._wroteHeader = true;\n          }\n        }\n\n        if (typeof cb === 'function') {\n          cb();\n        }\n      },\n    });\n\n    this.once('finish', () => {\n      this.emit('close')\n    });\n  }\n\n};\n", "'use strict';\n\nconst http = require('http')\nconst Response = require('../response');\n\nfunction common(cb) {\n  return request => {\n    const response = new Response(request);\n\n    cb(request, response);\n\n    return response;\n  };\n}\n\nmodule.exports = function getFramework(app) {\n  if (app instanceof http.Server) {\n    return request => {\n      const response = new Response(request);\n      app.emit('request', request, response)\n      return response\n    }\n  }\n\n  if (typeof app.callback === 'function') {\n    return common(app.callback());\n  }\n\n  if (typeof app.handle === 'function') {\n    return common((request, response) => {\n      app.handle(request, response);\n    });\n  }\n\n  if (typeof app.handler === 'function') {\n    return common((request, response) => {\n      app.handler(request, response);\n    });\n  }\n\n  if (typeof app._onRequest === 'function') {\n    return common((request, response) => {\n      app._onRequest(request, response);\n    });\n  }\n\n  if (typeof app === 'function') {\n    return common(app);\n  }\n\n  if (app.router && typeof app.router.route == 'function') {\n    return common((req, res) => {\n      const { url, method, headers, body } = req;\n      app.router.route({ url, method, headers, body }, res);\n    });\n  }\n\n  if (app._core && typeof app._core._dispatch === 'function') {\n    return common(app._core._dispatch({\n      app\n    }));\n  }\n\n  if (typeof app.inject === 'function') {\n    return async request => {\n      const { method, url, headers, body } = request;\n\n      const res = await app.inject({ method, url, headers, payload: body })\n\n      return Response.from(res);\n    };\n  }\n\n  if (typeof app.main === 'function') {\n    return common(app.main);\n  }\n\n  throw new Error('Unsupported framework');\n};\n", "'use strict';\n\nfunction removeBasePath(path = '/', basePath) {\n  if (basePath) {\n    const basePathIndex = path.indexOf(basePath);\n\n    if (basePathIndex > -1) {\n      return path.substr(basePathIndex + basePath.length) || '/';\n    }\n  }\n\n  return path;\n}\n\nfunction isString(value)\n{\n  return (typeof value === 'string' || value instanceof String);\n}\n\n// ELBs will pass spaces as + symbols, and decodeURIComponent doesn't decode + symbols. So we need to convert them into something it can convert\nfunction specialDecodeURIComponent(value)\n{\n  if(!isString(value))\n  {\n    return value;\n  }\n\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value.replace(/[+]/g, \"%20\"));\n  } catch (err) {\n    decoded = value.replace(/[+]/g, \"%20\");\n  }\n\n  return decoded;\n}\n\nfunction recursiveURLDecode(value) {\n\n  if (isString(value)) {\n    return specialDecodeURIComponent(value);\n  } else if (Array.isArray(value)) {\n\n    const decodedArray = [];\n\n    for (let index in value) {\n      decodedArray.push(recursiveURLDecode(value[index]));\n    }\n\n    return decodedArray;\n\n  } else if (value instanceof Object) {\n\n    const decodedObject = {};\n\n    for (let key of Object.keys(value)) {\n      decodedObject[specialDecodeURIComponent(key)] = recursiveURLDecode(value[key]);\n    }\n\n    return decodedObject;\n  }\n\n  return value;\n}\n\nmodule.exports = function cleanupEvent(evt, options) {\n  const event = evt || {};\n\n  event.requestContext = event.requestContext || {};\n  event.body = event.body || '';\n  event.headers = event.headers || {};\n\n  // Events coming from AWS Elastic Load Balancers do not automatically urldecode query parameters (unlike API Gateway). So we need to check for that and automatically decode them\n  // to normalize the request between the two.\n  if ('elb' in event.requestContext) {\n\n    if (event.multiValueQueryStringParameters) {\n      event.multiValueQueryStringParameters = recursiveURLDecode(event.multiValueQueryStringParameters);\n    }\n\n    if (event.queryStringParameters) {\n      event.queryStringParameters = recursiveURLDecode(event.queryStringParameters);\n    }\n\n  }\n\n  if (event.version === '2.0') {\n    event.requestContext.authorizer = event.requestContext.authorizer || {};\n    event.requestContext.http.method = event.requestContext.http.method || 'GET';\n    event.rawPath = removeBasePath(event.requestPath || event.rawPath, options.basePath);\n  } else {\n    event.requestContext.identity = event.requestContext.identity || {};\n    event.httpMethod = event.httpMethod || 'GET';\n    event.path = removeBasePath(event.requestPath || event.path, options.basePath);\n  }\n\n  return event;\n};\n", "'use strict';\n\nconst http = require('http');\n\nmodule.exports = class ServerlessRequest extends http.IncomingMessage {\n  constructor({ method, url, headers, body, remoteAddress }) {\n    super({\n      encrypted: true,\n      readable: false,\n      remoteAddress,\n      address: () => ({ port: 443 }),\n      end: Function.prototype,\n      destroy: Function.prototype\n    });\n\n    if (typeof headers['content-length'] === 'undefined') {\n      headers['content-length'] = Buffer.byteLength(body);\n    }\n\n    Object.assign(this, {\n      ip: remoteAddress,\n      complete: true,\n      httpVersion: '1.1',\n      httpVersionMajor: '1',\n      httpVersionMinor: '1',\n      method,\n      headers,\n      body,\n      url,\n    });\n\n    this._read = () => {\n      this.push(body);\n      this.push(null);\n    };\n  }\n\n}\n", "'use strict';\n\nconst URL = require('url');\n\nconst Request = require('../../request');\n\nfunction requestMethod(event) {\n  if (event.version === '2.0') {\n    return event.requestContext.http.method;\n  }\n  return event.httpMethod;\n}\n\nfunction requestRemoteAddress(event) {\n  if (event.version === '2.0') {\n    return event.requestContext.http.sourceIp;\n  }\n  return event.requestContext.identity.sourceIp;\n}\n\nfunction requestHeaders(event) {\n  const initialHeader =\n    event.version === '2.0' && Array.isArray(event.cookies)\n      ? { cookie: event.cookies.join('; ') }\n      : {};\n\n  if (event.multiValueHeaders) {\n    Object.keys(event.multiValueHeaders).reduce((headers, key) => {\n      headers[key.toLowerCase()] = event.multiValueHeaders[key].join(', ');\n      return headers;\n    }, initialHeader);\n  }\n\n  return Object.keys(event.headers).reduce((headers, key) => {\n    headers[key.toLowerCase()] = event.headers[key];\n    return headers;\n  }, initialHeader);\n}\n\nfunction requestBody(event) {\n  const type = typeof event.body;\n\n  if (Buffer.isBuffer(event.body)) {\n    return event.body;\n  } else if (type === 'string') {\n    return Buffer.from(event.body, event.isBase64Encoded ? 'base64' : 'utf8');\n  } else if (type === 'object') {\n    return Buffer.from(JSON.stringify(event.body));\n  }\n\n  throw new Error(`Unexpected event.body type: ${typeof event.body}`);\n}\n\nfunction requestUrl(event) {\n  if (event.version === '2.0') {\n    return URL.format({\n      pathname: event.rawPath,\n      search: event.rawQueryString,\n    });\n  }\n  // Normalize all query params into a single query string.\n  const query = event.multiValueQueryStringParameters || {};\n  if (event.queryStringParameters) {\n    Object.keys(event.queryStringParameters).forEach((key) => {\n      if (Array.isArray(query[key])) {\n        if (!query[key].includes(event.queryStringParameters[key])) {\n          query[key].push(event.queryStringParameters[key]);\n        }\n      } else {\n        query[key] = [event.queryStringParameters[key]];\n      }\n    });\n  }\n  return URL.format({\n    pathname: event.path,\n    query: query,\n  });\n}\n\nmodule.exports = (event, context, options) => {\n  const method = requestMethod(event);\n  const remoteAddress = requestRemoteAddress(event);\n  const headers = requestHeaders(event);\n  const body = requestBody(event);\n  const url = requestUrl(event);\n\n  if (typeof options.requestId === 'string' && options.requestId.length > 0) {\n    const header = options.requestId.toLowerCase();\n    const requestId = headers[header] || event.requestContext.requestId;\n    if (requestId) {\n      headers[header] = requestId;\n    }\n  }\n\n  const req = new Request({\n    method,\n    headers,\n    body,\n    remoteAddress,\n    url,\n  });\n\n  req.requestContext = event.requestContext;\n  req.apiGateway = {\n    event,\n    context,\n  };\n\n  return req;\n};\n", "'use strict';\n\nconst BINARY_ENCODINGS = ['gzip', 'deflate', 'br'];\nconst BINARY_CONTENT_TYPES = (process.env.BINARY_CONTENT_TYPES || '').split(',');\n\nfunction isBinaryEncoding(headers) {\n  const contentEncoding = headers['content-encoding'];\n\n  if (typeof contentEncoding === 'string') {\n    return contentEncoding.split(',').some(value =>\n      BINARY_ENCODINGS.some(binaryEncoding => value.indexOf(binaryEncoding) !== -1)\n    );\n  }\n}\n\nfunction isBinaryContent(headers, options) {\n  const contentTypes = [].concat(options.binary\n    ? options.binary\n    : BINARY_CONTENT_TYPES\n  ).map(candidate =>\n    new RegExp(`^${candidate.replace(/\\*/g, '.*')}$`)\n  );\n\n  const contentType = (headers['content-type'] || '').split(';')[0];\n  return !!contentType && contentTypes.some(candidate => candidate.test(contentType));\n}\n\nmodule.exports = function isBinary(headers, options) {\n  if (options.binary === false) {\n    return false;\n  }\n\n  if (options.binary === true) {\n    return true\n  }\n\n  if (typeof options.binary === 'function') {\n    return options.binary(headers);\n  }\n\n  return isBinaryEncoding(headers) || isBinaryContent(headers, options);\n};\n", "'use strict';\n\nmodule.exports = function sanitizeHeaders(headers) {\n  return Object.keys(headers).reduce((memo, key) => {\n      const value = headers[key];\n\n    if (Array.isArray(value)) {\n      memo.multiValueHeaders[key] = value;\n      if (key.toLowerCase() !== 'set-cookie') {\n        memo.headers[key] = value.join(\", \");\n      }\n      } else {\n        memo.headers[key] = value == null ? '' : value.toString();\n      }\n\n      return memo;\n  }, {\n      headers: {},\n      multiValueHeaders: {}\n    });\n};\n", "'use strict';\n\nconst isBinary = require('./is-binary');\nconst Response = require('../../response');\nconst sanitizeHeaders = require('./sanitize-headers');\n\nmodule.exports = (event, response, options) => {\n  const { statusCode } = response;\n  const {headers, multiValueHeaders } = sanitizeHeaders(Response.headers(response));\n\n  let cookies = [];\n\n  if (multiValueHeaders['set-cookie']) {\n    cookies = multiValueHeaders['set-cookie'];\n  }\n\n  const isBase64Encoded = isBinary(headers, options);\n  const encoding = isBase64Encoded ? 'base64' : 'utf8';\n  let body = Response.body(response).toString(encoding);\n\n  if (headers['transfer-encoding'] === 'chunked' || response.chunkedEncoding) {\n    const raw = Response.body(response).toString().split('\\r\\n');\n    const parsed = [];\n    for (let i = 0; i < raw.length; i +=2) {\n      const size = parseInt(raw[i], 16);\n      const value = raw[i + 1];\n      if (value) {\n        parsed.push(value.substring(0, size));\n      }\n    }\n    body = parsed.join('')\n  }\n\n  let formattedResponse = { statusCode, headers, isBase64Encoded, body };\n\n  if (event.version === '2.0' && cookies.length) {\n    formattedResponse['cookies'] = cookies;\n  }\n\n  if ((!event.version || event.version === '1.0') && Object.keys(multiValueHeaders).length) {\n    formattedResponse['multiValueHeaders'] = multiValueHeaders;\n  }\n\n  return formattedResponse;\n};\n", "const cleanUpEvent = require('./clean-up-event');\n\nconst createRequest = require('./create-request');\nconst formatResponse = require('./format-response');\n\nmodule.exports = options => {\n  return getResponse => async (event_, context = {}) => {\n    const event = cleanUpEvent(event_, options);\n\n    const request = createRequest(event, context, options);\n    const response = await getResponse(request, event, context);\n\n    return formatResponse(event, response, options);\n  };\n};\n", "'use strict';\n\nfunction getUrl({ requestPath, url }) {\n    if (requestPath) {\n        return requestPath;\n    }\n\n    return typeof url === 'string' ? url : '/';\n}\n\nfunction getRequestContext(request) {\n    const requestContext = {};\n    requestContext.identity = {};\n    const forwardedIp = request.headers['x-forwarded-for'];\n    const clientIp = request.headers['client-ip'];\n    const ip = forwardedIp ? forwardedIp : (clientIp ? clientIp : '');\n    if (ip) {\n        requestContext.identity.sourceIp = ip.split(':')[0];\n    }\n    return requestContext;\n}\n\nmodule.exports = function cleanupRequest(req, options) {\n    const request = req || {};\n\n    request.requestContext = getRequestContext(req);\n    request.method = request.method || 'GET';\n    request.url = getUrl(request);\n    request.body = request.body || '';\n    request.headers = request.headers || {};\n\n    if (options.basePath) {\n        const basePathIndex = request.url.indexOf(options.basePath);\n\n        if (basePathIndex > -1) {\n            request.url = request.url.substr(basePathIndex + options.basePath.length);\n        }\n    }\n\n    return request;\n}", "'use strict';\n\nconst url = require('url');\n\nconst Request = require('../../request');\n\nfunction requestHeaders(request) {\n    return Object.keys(request.headers).reduce((headers, key) => {\n        headers[key.toLowerCase()] = request.headers[key];\n        return headers;\n    }, {});\n}\n\nfunction requestBody(request) {\n    const type = typeof request.rawBody;\n\n    if (Buffer.isBuffer(request.rawBody)) {\n        return request.rawBody;\n    } else if (type === 'string') {\n        return Buffer.from(request.rawBody, 'utf8');\n    } else if (type === 'object') {\n        return Buffer.from(JSON.stringify(request.rawBody));\n    }\n\n    throw new Error(`Unexpected request.body type: ${typeof request.rawBody}`);\n}\n\nmodule.exports = (request) => {\n    const method = request.method;\n    const query = request.query;\n    const headers = requestHeaders(request);\n    const body = requestBody(request);\n\n    const req = new Request({\n        method,\n        headers,\n        body,\n        url: url.format({\n            pathname: request.url,\n            query\n        })\n    });\n    req.requestContext = request.requestContext;\n    return req;\n}\n", "'use strict';\n\nconst BINARY_ENCODINGS = ['gzip', 'deflate', 'br'];\nconst BINARY_CONTENT_TYPES = (process.env.BINARY_CONTENT_TYPES || '').split(',');\n\nfunction isBinaryEncoding(headers) {\n  const contentEncoding = headers['content-encoding'];\n\n  if (typeof contentEncoding === 'string') {\n    return contentEncoding.split(',').some(value =>\n      BINARY_ENCODINGS.some(binaryEncoding => value.indexOf(binaryEncoding) !== -1)\n    );\n  }\n}\n\nfunction isBinaryContent(headers, options) {\n  const contentTypes = [].concat(options.binary\n    ? options.binary\n    : BINARY_CONTENT_TYPES\n  ).map(candidate =>\n    new RegExp(`^${candidate.replace(/\\*/g, '.*')}$`)\n  );\n\n  const contentType = (headers['content-type'] || '').split(';')[0];\n  return !!contentType && contentTypes.some(candidate => candidate.test(contentType));\n}\n\nmodule.exports = function isBinary(headers, options) {\n  if (options.binary === false) {\n    return false;\n  }\n\n  if (options.binary === true) {\n    return true\n  }\n\n  if (typeof options.binary === 'function') {\n    return options.binary(headers);\n  }\n\n  return isBinaryEncoding(headers) || isBinaryContent(headers, options);\n};\n", "'use strict';\n\nconst setCookieVariations = require('./set-cookie.json').variations;\n\nmodule.exports = function sanitizeHeaders(headers) {\n  return Object.keys(headers).reduce((memo, key) => {\n      const value = headers[key];\n\n      if (Array.isArray(value)) {\n        if (key.toLowerCase() === 'set-cookie') {\n          value.forEach((cookie, i) => {\n            memo[setCookieVariations[i]] = cookie;\n          });\n        } else {\n          memo[key] = value.join(', ');\n        }\n      } else {\n        memo[key] = value == null ? '' : value.toString();\n      }\n\n      return memo;\n    }, {});\n};\n", "const isBinary = require('./is-binary');\nconst Response = require('../../response');\nconst sanitizeHeaders = require('./sanitize-headers');\n\nmodule.exports = (response, options) => {\n    const { statusCode } = response;\n    const headers = sanitizeHeaders(Response.headers(response));\n\n    if (headers['transfer-encoding'] === 'chunked' || response.chunkedEncoding) {\n        throw new Error('chunked encoding not supported');\n    }\n\n    const isBase64Encoded = isBinary(headers, options);\n    const encoding = isBase64Encoded ? 'base64' : 'utf8';\n    const body = Response.body(response).toString(encoding);\n\n    return { status: statusCode, headers, isBase64Encoded, body };\n}", "const cleanupRequest = require('./clean-up-request');\nconst createRequest = require('./create-request');\nconst formatResponse = require('./format-response');\n\nmodule.exports = options => {\n    return getResponse => async (context, req) => {\n        const event = cleanupRequest(req, options);\n        const request = createRequest(event, options);\n        const response = await getResponse(request, context, event);\n        context.log(response);\n        return formatResponse(response, options);\n    }\n};", "const aws = require('./aws');\nconst azure = require('./azure');\n\nconst providers = {\n  aws,\n  azure\n};\n\nmodule.exports = function getProvider(options) {\n  const { provider = 'aws' } = options;\n\n  if (provider in providers) {\n    return providers[provider](options);\n  }\n\n  throw new Error(`Unsupported provider ${provider}`);\n};\n", "'use strict';\n\nconst finish = require('./lib/finish');\nconst getFramework = require('./lib/framework/get-framework');\nconst getProvider = require('./lib/provider/get-provider');\n\nconst defaultOptions = {\n  requestId: 'x-request-id'\n};\n\nmodule.exports = function (app, opts) {\n  const options = Object.assign({}, defaultOptions, opts);\n\n  const framework = getFramework(app);\n  const provider = getProvider(options);\n\n  return provider(async (request, ...context) => {\n    await finish(request, options.request, ...context);\n    const response = await framework(request);\n    await finish(response, options.response, ...context);\n    return response;\n  });\n};\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    throw new Error('INVALID_DOTENV_KEY: Missing key part')\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    throw new Error('INVALID_DOTENV_KEY: Missing environment part')\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n\n  if (options && options.path && options.path.length > 0) {\n    dotenvPath = options.path\n  }\n\n  // Locate .env.vault\n  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    let processEnv = process.env\n    if (options && options.processEnv != null) {\n      processEnv = options.processEnv\n    }\n\n    DotenvModule.populate(processEnv, parsed, options)\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _debug(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  const vaultPath = _vaultPath(options)\n\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!fs.existsSync(vaultPath)) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.slice(0, 12)\n  const authTag = ciphertext.slice(-16)\n  ciphertext = ciphertext.slice(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'\n      throw new Error(msg)\n    } else if (decryptionFailed) {\n      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'\n      throw new Error(msg)\n    } else {\n      console.error('Error: ', error.code)\n      console.error('Error: ', error.message)\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n", "// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n", "const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n", "'use strict';\n\n/*!\n * ignore\n */\n\nlet driver = null;\n\nmodule.exports.get = function() {\n  return driver;\n};\n\nmodule.exports.set = function(v) {\n  driver = v;\n};\n", "\n/*!\n * Connection states\n */\n\n'use strict';\n\nconst STATES = module.exports = exports = Object.create(null);\n\nconst disconnected = 'disconnected';\nconst connected = 'connected';\nconst connecting = 'connecting';\nconst disconnecting = 'disconnecting';\nconst uninitialized = 'uninitialized';\n\nSTATES[0] = disconnected;\nSTATES[1] = connected;\nSTATES[2] = connecting;\nSTATES[3] = disconnecting;\nSTATES[99] = uninitialized;\n\nSTATES[disconnected] = 0;\nSTATES[connected] = 1;\nSTATES[connecting] = 2;\nSTATES[disconnecting] = 3;\nSTATES[uninitialized] = 99;\n", "/*!\n * Centralize this so we can more easily work around issues with people\n * stubbing out `process.nextTick()` in tests using sinon:\n * https://github.com/sinonjs/lolex#automatically-incrementing-mocked-time\n * See gh-6074\n */\n\n'use strict';\n\nconst nextTick = typeof process !== 'undefined' && typeof process.nextTick === 'function' ?\n  process.nextTick.bind(process) :\n  cb => setTimeout(cb, 0); // Fallback for browser build\n\nmodule.exports = function immediate(cb) {\n  return nextTick(cb);\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\nconst STATES = require('./connectionstate');\nconst immediate = require('./helpers/immediate');\n\n/**\n * Abstract Collection constructor\n *\n * This is the base class that drivers inherit from and implement.\n *\n * @param {String} name name of the collection\n * @param {Connection} conn A MongooseConnection instance\n * @param {Object} [opts] optional collection options\n * @api public\n */\n\nfunction Collection(name, conn, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  this.opts = opts;\n  this.name = name;\n  this.collectionName = name;\n  this.conn = conn;\n  this.queue = [];\n  this.buffer = true;\n  this.emitter = new EventEmitter();\n\n  if (STATES.connected === this.conn.readyState) {\n    this.onOpen();\n  }\n}\n\n/**\n * The collection name\n *\n * @api public\n * @property name\n */\n\nCollection.prototype.name;\n\n/**\n * The collection name\n *\n * @api public\n * @property collectionName\n */\n\nCollection.prototype.collectionName;\n\n/**\n * The Connection instance\n *\n * @api public\n * @property conn\n */\n\nCollection.prototype.conn;\n\n/**\n * Called when the database connects\n *\n * @api private\n */\n\nCollection.prototype.onOpen = function() {\n  this.buffer = false;\n  immediate(() => this.doQueue());\n};\n\n/**\n * Called when the database disconnects\n *\n * @api private\n */\n\nCollection.prototype.onClose = function() {};\n\n/**\n * Queues a method for later execution when its\n * database connection opens.\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\nCollection.prototype.addQueue = function(name, args) {\n  this.queue.push([name, args]);\n  return this;\n};\n\n/**\n * Removes a queued method\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\nCollection.prototype.removeQueue = function(name, args) {\n  const index = this.queue.findIndex(v => v[0] === name && v[1] === args);\n  if (index === -1) {\n    return false;\n  }\n  this.queue.splice(index, 1);\n  return true;\n};\n\n/**\n * Executes all queued methods and clears the queue.\n *\n * @api private\n */\n\nCollection.prototype.doQueue = function() {\n  for (const method of this.queue) {\n    if (typeof method[0] === 'function') {\n      method[0].apply(this, method[1]);\n    } else {\n      this[method[0]].apply(this, method[1]);\n    }\n  }\n  this.queue = [];\n  const _this = this;\n  immediate(function() {\n    _this.emitter.emit('queue');\n  });\n  return this;\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.ensureIndex = function() {\n  throw new Error('Collection#ensureIndex unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.createIndex = function() {\n  throw new Error('Collection#createIndex unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findAndModify = function() {\n  throw new Error('Collection#findAndModify unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndUpdate = function() {\n  throw new Error('Collection#findOneAndUpdate unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndDelete = function() {\n  throw new Error('Collection#findOneAndDelete unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOneAndReplace = function() {\n  throw new Error('Collection#findOneAndReplace unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOne = function() {\n  throw new Error('Collection#findOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.find = function() {\n  throw new Error('Collection#find unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insert = function() {\n  throw new Error('Collection#insert unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insertOne = function() {\n  throw new Error('Collection#insertOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insertMany = function() {\n  throw new Error('Collection#insertMany unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.save = function() {\n  throw new Error('Collection#save unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.updateOne = function() {\n  throw new Error('Collection#updateOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.updateMany = function() {\n  throw new Error('Collection#updateMany unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.deleteOne = function() {\n  throw new Error('Collection#deleteOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.deleteMany = function() {\n  throw new Error('Collection#deleteMany unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.getIndexes = function() {\n  throw new Error('Collection#getIndexes unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.watch = function() {\n  throw new Error('Collection#watch unimplemented by driver');\n};\n\n/*!\n * ignore\n */\n\nCollection.prototype._shouldBufferCommands = function _shouldBufferCommands() {\n  const opts = this.opts;\n\n  if (opts.bufferCommands != null) {\n    return opts.bufferCommands;\n  }\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferCommands != null) {\n    return opts.schemaUserProvidedOptions.bufferCommands;\n  }\n\n  return this.conn._shouldBufferCommands();\n};\n\n/*!\n * ignore\n */\n\nCollection.prototype._getBufferTimeoutMS = function _getBufferTimeoutMS() {\n  const conn = this.conn;\n  const opts = this.opts;\n\n  if (opts.bufferTimeoutMS != null) {\n    return opts.bufferTimeoutMS;\n  }\n  if (opts && opts.schemaUserProvidedOptions != null && opts.schemaUserProvidedOptions.bufferTimeoutMS != null) {\n    return opts.schemaUserProvidedOptions.bufferTimeoutMS;\n  }\n  if (conn.config.bufferTimeoutMS != null) {\n    return conn.config.bufferTimeoutMS;\n  }\n  if (conn.base != null && conn.base.get('bufferTimeoutMS') != null) {\n    return conn.base.get('bufferTimeoutMS');\n  }\n  return 10000;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Collection;\n", "'use strict';\n\n/*!\n * ignore\n */\n\nclass MongooseError extends Error { }\n\nObject.defineProperty(MongooseError.prototype, 'name', {\n  value: 'MongooseError'\n});\n\nmodule.exports = MongooseError;\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.path = new Uint16Array(4)\n  this.pages = new Array(32768)\n  this.maxPages = this.pages.length\n  this.level = 0\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n  this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype._array = function (i, noAllocate) {\n  if (i >= this.maxPages) {\n    if (noAllocate) return\n    grow(this, i)\n  }\n\n  factor(i, this.path)\n\n  var arr = this.pages\n\n  for (var j = this.level; j > 0; j--) {\n    var p = this.path[j]\n    var next = arr[p]\n\n    if (!next) {\n      if (noAllocate) return\n      next = arr[p] = new Array(32768)\n    }\n\n    arr = next\n  }\n\n  return arr\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  var arr = this._array(i, noAllocate)\n  var first = this.path[0]\n  var page = arr && arr[first]\n\n  if (!page && !noAllocate) {\n    page = arr[first] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  var arr = this._array(i, false)\n  var first = this.path[0]\n\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf || (this.zeros && buf.equals && buf.equals(this.zeros))) {\n    arr[first] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = arr[first]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else arr[first] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n  var ptr = 0\n\n  while (ptr < list.length) {\n    var arr = this._array(ptr, true)\n    for (var i = 0; i < 32768 && ptr < list.length; i++) {\n      list[ptr++] = (arr && arr[i]) ? arr[i].buffer : empty\n    }\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (pager, index) {\n  while (pager.maxPages < index) {\n    var old = pager.pages\n    pager.pages = new Array(32768)\n    pager.pages[0] = old\n    pager.level++\n    pager.maxPages *= 32768\n  }\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n\nfunction factor (n, out) {\n  n = (n - (out[0] = (n & 32767))) / 32768\n  n = (n - (out[1] = (n & 32767))) / 32768\n  out[3] = ((n - (out[2] = (n & 32767))) / 32768) & 32767\n}\n", "var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n", "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\n/* eslint-disable-next-line security/detect-non-literal-fs-filename */\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\n/**\n * Loads each code points sequence from buffer.\n * @returns {bitfield}\n */\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n};\n", "'use strict';\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points');\n\nmodule.exports = saslprep;\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing;\n\n// utils\nconst getCodePoint = character => character.codePointAt(0);\nconst first = x => x[0];\nconst last = x => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  );\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    );\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(character =>\n    bidirectional_r_al.get(character)\n  );\n\n  const hasBidiL = normalized_map.some(character =>\n    bidirectional_l.get(character)\n  );\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(\n    getCodePoint(first(normalized_input))\n  );\n  const isLastBidiRAL = bidirectional_r_al.get(\n    getCodePoint(last(normalized_input))\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  return normalized_input;\n}\n", null, null, null, null, null, "\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n", "\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n", "\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n", "\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n", "\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n", "\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n", "\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n", "\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n", "\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || hasAnOpaquePath(url) || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(serializePath(url)));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n", "\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n", "\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n", "\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n", "\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n", null, null, null, null, null, null, null, null, null, null, null, null, null, "const ip = exports;\nconst { Buffer } = require('buffer');\nconst os = require('os');\n\nip.toBuffer = function (ip, buff, offset) {\n  offset = ~~offset;\n\n  let result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || Buffer.alloc(offset + 4);\n    ip.split(/\\./g).map((byte) => {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    const sections = ip.split(':', 8);\n\n    let i;\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = this.isV4Format(sections[i]);\n      let v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv = [i, 1];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice(...argv);\n    }\n\n    result = buff || Buffer.alloc(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error(`Invalid ip address: ${ip}`);\n  }\n\n  return result;\n};\n\nip.toString = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  let result = [];\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nconst ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nconst ipv6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function (ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function (ip) {\n  return ipv6Regex.test(ip);\n};\n\nfunction _normalizeFamily(family) {\n  if (family === 4) {\n    return 'ipv4';\n  }\n  if (family === 6) {\n    return 'ipv6';\n  }\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function (prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  let len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  const buff = Buffer.alloc(len);\n\n  for (let i = 0, n = buff.length; i < n; ++i) {\n    let bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function (addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  const result = Buffer.alloc(Math.max(addr.length, mask.length));\n\n  // Same protocol - do bitwise and\n  let i;\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4 + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i += 12;\n  }\n  for (; i < result.length; i++) {\n    result[i] = 0;\n  }\n\n  return ip.toString(result);\n};\n\nip.cidr = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function (addr, mask) {\n  const networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  const maskBuffer = ip.toBuffer(mask);\n  let maskLength = 0;\n\n  for (let i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      let octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  const numberOfAddresses = 2 ** (32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress)\n      : ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress + numberOfAddresses - 1)\n      : ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2\n      ? numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    },\n  };\n};\n\nip.cidrSubnet = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function (addr) {\n  const buff = ip.toBuffer(addr);\n  for (let i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  }\n  let buff = a;\n  let other = b;\n  if (b.length > a.length) {\n    buff = b;\n    other = a;\n  }\n\n  const offset = buff.length - other.length;\n  for (let i = offset; i < buff.length; ++i) {\n    buff[i] |= other[i - offset];\n  }\n\n  return ip.toString(buff);\n};\n\nip.isEqual = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    const t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (let i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  const word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (let i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function (addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n    .test(addr)\n    || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr)\n    || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^f[cd][0-9a-f]{2}:/i.test(addr)\n    || /^fe80:/i.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.isPublic = function (addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function (addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n    .test(addr)\n    || /^fe80::1$/.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.loopback = function (family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function (name, family) {\n  const interfaces = os.networkInterfaces();\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    const res = interfaces[name].filter((details) => {\n      const itemFamily = _normalizeFamily(details.family);\n      return itemFamily === family;\n    });\n    if (res.length === 0) {\n      return undefined;\n    }\n    return res[0].address;\n  }\n\n  const all = Object.keys(interfaces).map((nic) => {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    const addresses = interfaces[nic].filter((details) => {\n      details.family = _normalizeFamily(details.family);\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address)\n        : ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function (ip) {\n  let ipl = 0;\n  ip.split('.').forEach((octet) => {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return (ipl >>> 0);\n};\n\nip.fromLong = function (ipl) {\n  return (`${ipl >>> 24}.${\n    ipl >> 16 & 255}.${\n    ipl >> 8 & 255}.${\n    ipl & 255}`);\n};\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "'use strict';\n\nexports.arrayAtomicsBackupSymbol = Symbol('mongoose#Array#atomicsBackup');\nexports.arrayAtomicsSymbol = Symbol('mongoose#Array#_atomics');\nexports.arrayParentSymbol = Symbol('mongoose#Array#_parent');\nexports.arrayPathSymbol = Symbol('mongoose#Array#_path');\nexports.arraySchemaSymbol = Symbol('mongoose#Array#_schema');\nexports.documentArrayParent = Symbol('mongoose:documentArrayParent');\nexports.documentIsSelected = Symbol('mongoose#Document#isSelected');\nexports.documentIsModified = Symbol('mongoose#Document#isModified');\nexports.documentModifiedPaths = Symbol('mongoose#Document#modifiedPaths');\nexports.documentSchemaSymbol = Symbol('mongoose#Document#schema');\nexports.getSymbol = Symbol('mongoose#Document#get');\nexports.modelSymbol = Symbol('mongoose#Model');\nexports.objectIdSymbol = Symbol('mongoose#ObjectId');\nexports.populateModelSymbol = Symbol('mongoose.PopulateOptions#Model');\nexports.schemaTypeSymbol = Symbol('mongoose#schemaType');\nexports.sessionNewDocuments = Symbol('mongoose:ClientSession#newDocuments');\nexports.scopeSymbol = Symbol('mongoose#Document#scope');\nexports.validatorErrorSymbol = Symbol('mongoose:validatorError');\n", "/**\n * ObjectId type constructor\n *\n * #### Example:\n *\n *     const id = new mongoose.Types.ObjectId;\n *\n * @constructor ObjectId\n */\n\n'use strict';\n\nconst ObjectId = require('bson').ObjectId;\nconst objectIdSymbol = require('../helpers/symbols').objectIdSymbol;\n\n/**\n * Getter for convenience with populate, see gh-6115\n * @api private\n */\n\nObject.defineProperty(ObjectId.prototype, '_id', {\n  enumerable: false,\n  configurable: true,\n  get: function() {\n    return this;\n  }\n});\n\n/*!\n * Convenience `valueOf()` to allow comparing ObjectIds using double equals re: gh-7299\n */\n\nif (!ObjectId.prototype.hasOwnProperty('valueOf')) {\n  ObjectId.prototype.valueOf = function objectIdValueOf() {\n    return this.toString();\n  };\n}\n\nObjectId.prototype[objectIdSymbol] = true;\n\nmodule.exports = ObjectId;\n", "'use strict';\n\n/**\n * If `val` is an object, returns constructor name, if possible. Otherwise returns undefined.\n * @api private\n */\n\nmodule.exports = function getConstructorName(val) {\n  if (val == null) {\n    return void 0;\n  }\n  if (typeof val.constructor !== 'function') {\n    return void 0;\n  }\n  return val.constructor.name;\n};\n", "/**\n * Decimal128 type constructor\n *\n * #### Example:\n *\n *     const id = new mongoose.Types.Decimal128('3.1415');\n *\n * @constructor Decimal128\n */\n\n'use strict';\n\nmodule.exports = require('bson').Decimal128;\n", "'use strict';\n\nmodule.exports = new Set(['__proto__', 'constructor', 'prototype']);\n", "'use strict';\n\nexports.isMongooseArray = function(mongooseArray) {\n  return Array.isArray(mongooseArray) && mongooseArray.isMongooseArray;\n};\n", "'use strict';\n\nconst isMongooseArray = require('../types/array/isMongooseArray').isMongooseArray;\n/**\n * Returns if `v` is a mongoose object that has a `toObject()` method we can use.\n *\n * This is for compatibility with libs like Date.js which do foolish things to Natives.\n *\n * @param {Any} v\n * @api private\n */\n\nmodule.exports = function(v) {\n  return (\n    v != null && (\n      isMongooseArray(v) || // Array or Document Array\n      v.$__ != null || // Document\n      v.isMongooseBuffer || // Buffer\n      v.$isMongooseMap // Map\n    )\n  );\n};\n", "'use strict';\n\nconst functionNameRE = /^function\\s*([^\\s(]+)/;\n\nmodule.exports = function(fn) {\n  return (\n    fn.name ||\n    (fn.toString().trim().match(functionNameRE) || [])[1]\n  );\n};\n", "'use strict';\n\n/**\n * Get the bson type, if it exists\n * @api private\n */\n\nfunction isBsonType(obj, typename) {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    obj._bsontype === typename\n  );\n}\n\nmodule.exports = isBsonType;\n", "'use strict';\n\n/**\n * Determines if `arg` is an object.\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nmodule.exports = function(arg) {\n  return (\n    Buffer.isBuffer(arg) ||\n    Object.prototype.toString.call(arg) === '[object Object]'\n  );\n};\n", "'use strict';\n\nmodule.exports = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(arg);\n  // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n  return !proto || proto.constructor.name === 'Object';\n};\n", "'use strict';\n\nconst trustedSymbol = Symbol('mongoose#trustedSymbol');\n\nexports.trustedSymbol = trustedSymbol;\n\nexports.trusted = function trusted(obj) {\n  if (obj == null || typeof obj !== 'object') {\n    return obj;\n  }\n  obj[trustedSymbol] = true;\n  return obj;\n};\n", "'use strict';\n\nconst Decimal = require('../types/decimal128');\nconst ObjectId = require('../types/objectid');\nconst specialProperties = require('./specialProperties');\nconst isMongooseObject = require('./isMongooseObject');\nconst getFunctionName = require('./getFunctionName');\nconst isBsonType = require('./isBsonType');\nconst isMongooseArray = require('../types/array/isMongooseArray').isMongooseArray;\nconst isObject = require('./isObject');\nconst isPOJO = require('./isPOJO');\nconst symbols = require('./symbols');\nconst trustedSymbol = require('./query/trusted').trustedSymbol;\n\n/**\n * Object clone with Mongoose natives support.\n *\n * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.\n *\n * Functions are never cloned.\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.\n * @return {Object} the cloned object\n * @api private\n */\n\nfunction clone(obj, options, isArrayChild) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return cloneArray(isMongooseArray(obj) ? obj.__array : obj, options);\n  }\n\n  if (isMongooseObject(obj)) {\n    // Single nested subdocs should apply getters later in `applyGetters()`\n    // when calling `toObject()`. See gh-7442, gh-8295\n    if (options && options._skipSingleNestedGetters && obj.$isSingleNested) {\n      options = Object.assign({}, options, { getters: false });\n    }\n    const isSingleNested = obj.$isSingleNested;\n\n    if (isPOJO(obj) && obj.$__ != null && obj._doc != null) {\n      return obj._doc;\n    }\n\n    let ret;\n    if (options && options.json && typeof obj.toJSON === 'function') {\n      ret = obj.toJSON(options);\n    } else {\n      ret = obj.toObject(options);\n    }\n\n    if (options && options.minimize && isSingleNested && Object.keys(ret).length === 0) {\n      return undefined;\n    }\n\n    return ret;\n  }\n\n  const objConstructor = obj.constructor;\n\n  if (objConstructor) {\n    switch (getFunctionName(objConstructor)) {\n      case 'Object':\n        return cloneObject(obj, options, isArrayChild);\n      case 'Date':\n        return new objConstructor(+obj);\n      case 'RegExp':\n        return cloneRegExp(obj);\n      default:\n        // ignore\n        break;\n    }\n  }\n\n  if (isBsonType(obj, 'ObjectId')) {\n    if (options && options.flattenObjectIds) {\n      return obj.toJSON();\n    }\n    return new ObjectId(obj.id);\n  }\n\n  if (isBsonType(obj, 'Decimal128')) {\n    if (options && options.flattenDecimals) {\n      return obj.toJSON();\n    }\n    return Decimal.fromString(obj.toString());\n  }\n\n  // object created with Object.create(null)\n  if (!objConstructor && isObject(obj)) {\n    return cloneObject(obj, options, isArrayChild);\n  }\n\n  if (typeof obj === 'object' && obj[symbols.schemaTypeSymbol]) {\n    return obj.clone();\n  }\n\n  // If we're cloning this object to go into a MongoDB command,\n  // and there's a `toBSON()` function, assume this object will be\n  // stored as a primitive in MongoDB and doesn't need to be cloned.\n  if (options && options.bson && typeof obj.toBSON === 'function') {\n    return obj;\n  }\n\n  if (typeof obj.valueOf === 'function') {\n    return obj.valueOf();\n  }\n\n  return cloneObject(obj, options, isArrayChild);\n}\nmodule.exports = clone;\n\n/*!\n * ignore\n */\n\nfunction cloneObject(obj, options, isArrayChild) {\n  const minimize = options && options.minimize;\n  const omitUndefined = options && options.omitUndefined;\n  const seen = options && options._seen;\n  const ret = {};\n  let hasKeys;\n\n  if (seen && seen.has(obj)) {\n    return seen.get(obj);\n  } else if (seen) {\n    seen.set(obj, ret);\n  }\n  if (trustedSymbol in obj) {\n    ret[trustedSymbol] = obj[trustedSymbol];\n  }\n\n  let i = 0;\n  let key = '';\n  const keys = Object.keys(obj);\n  const len = keys.length;\n\n  for (i = 0; i < len; ++i) {\n    if (specialProperties.has(key = keys[i])) {\n      continue;\n    }\n\n    // Don't pass `isArrayChild` down\n    const val = clone(obj[key], options, false);\n\n    if ((minimize === false || omitUndefined) && typeof val === 'undefined') {\n      delete ret[key];\n    } else if (minimize !== true || (typeof val !== 'undefined')) {\n      hasKeys || (hasKeys = true);\n      ret[key] = val;\n    }\n  }\n\n  return minimize && !isArrayChild ? hasKeys && ret : ret;\n}\n\nfunction cloneArray(arr, options) {\n  let i = 0;\n  const len = arr.length;\n  const ret = new Array(len);\n  for (i = 0; i < len; ++i) {\n    ret[i] = clone(arr[i], options, true);\n  }\n\n  return ret;\n}\n\nfunction cloneRegExp(regexp) {\n  const ret = new RegExp(regexp.source, regexp.flags);\n\n  if (ret.lastIndex !== regexp.lastIndex) {\n    ret.lastIndex = regexp.lastIndex;\n  }\n  return ret;\n}\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseCollection = require('../../collection');\nconst MongooseError = require('../../error/mongooseError');\nconst Collection = require('mongodb').Collection;\nconst ObjectId = require('../../types/objectid');\nconst getConstructorName = require('../../helpers/getConstructorName');\nconst stream = require('stream');\nconst util = require('util');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\n *\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\n *\n * @inherits Collection https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html\n * @api private\n */\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n\n/*!\n * Inherit from abstract Collection.\n */\n\nObject.setPrototypeOf(NativeCollection.prototype, MongooseCollection.prototype);\n\n/**\n * Called when the connection opens.\n *\n * @api private\n */\n\nNativeCollection.prototype.onOpen = function() {\n  this.collection = this.conn.db.collection(this.name);\n  MongooseCollection.prototype.onOpen.call(this);\n  return this.collection;\n};\n\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\nNativeCollection.prototype.onClose = function(force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n\n/**\n * Helper to get the collection, in case `this.collection` isn't set yet.\n * May happen if `bufferCommands` is false and created the model when\n * Mongoose was disconnected.\n *\n * @api private\n */\n\nNativeCollection.prototype._getCollection = function _getCollection() {\n  if (this.collection) {\n    return this.collection;\n  }\n  if (this.conn.db != null) {\n    this.collection = this.conn.db.collection(this.name);\n    return this.collection;\n  }\n  return null;\n};\n\n/*!\n * ignore\n */\n\nconst syncCollectionMethods = { watch: true, find: true, aggregate: true };\n\n/**\n * Copy the collection methods and make them subject to queues\n * @param {Number|String} I\n * @api private\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function() {\n    const collection = this._getCollection();\n    const args = Array.from(arguments);\n    const _this = this;\n    const globalDebug = _this &&\n      _this.conn &&\n      _this.conn.base &&\n      _this.conn.base.options &&\n      _this.conn.base.options.debug;\n    const connectionDebug = _this &&\n      _this.conn &&\n      _this.conn.options &&\n      _this.conn.options.debug;\n    const debug = connectionDebug == null ? globalDebug : connectionDebug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId();\n\n    // If user force closed, queueing will hang forever. See #5664\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n      if (args.length > 0 &&\n        typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n\n    let _args = args;\n    let callback = null;\n    if (this._shouldBufferCommands() && this.buffer) {\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (syncCollectionMethods[i]) {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n          return lastArg.apply(this, arguments);\n        };\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' +\n            bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n        } else {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, result: res });\n        }\n        return lastArg.apply(this, arguments);\n      };\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n\n    if (debug) {\n      if (typeof debug === 'function') {\n        let argsToAdd = null;\n        if (typeof args[args.length - 1] == 'function') {\n          argsToAdd = args.slice(0, args.length - 1);\n        } else {\n          argsToAdd = args;\n        }\n        debug.apply(_this,\n          [_this.name, i].concat(argsToAdd));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n\n    this.conn.emit('operation-start', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, params: _args });\n\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' +\n          'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' +\n          'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        const ret = collection[i].apply(collection, _args.slice(0, _args.length - 1));\n        return lastArg.call(this, null, ret);\n      }\n\n      const ret = collection[i].apply(collection, _args);\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(\n          res => {\n            typeof lastArg === 'function' && lastArg(null, res);\n            return res;\n          },\n          err => {\n            if (typeof lastArg === 'function') {\n              lastArg(err);\n              return;\n            }\n            throw err;\n          }\n        );\n      }\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, error: error });\n\n        throw error;\n      }\n    }\n  };\n}\n\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\n  // Skip properties with getters because they may throw errors (gh-8528)\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n\n  iter(key);\n}\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$print = function(name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  console.info(moduleName + functionCall + params);\n};\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$printToStream = function(name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  stream.write(functionCall + params, 'utf8');\n};\n\n/**\n * Formatter for debug print args\n *\n * @api public\n * @method $format\n */\n\nNativeCollection.prototype.$format = function(arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n\n/**\n * Debug print helper\n * @param {Any} representation\n * @api private\n */\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function() { return representation; }\n  };\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n  return ret;\n}\nfunction map(o) {\n  return format(o, true);\n}\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n  if (obj == null) {\n    return obj;\n  }\n\n  const clone = require('../../helpers/clone');\n  let x = clone(obj, { transform: false });\n  const constructorName = getConstructorName(x);\n\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectId') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n      if (x[key]) {\n        let error;\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n        const _constructorName = getConstructorName(x[key]);\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' +\n            x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectId') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' +\n            (\n              x[key] &&\n              x[key].id &&\n              x[key].id.id &&\n              x[key].id.id.buffer || ''\n            ).toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n  if (sub) {\n    return x;\n  }\n\n  return util.\n    inspect(x, false, 10, color).\n    replace(/\\n/g, '').\n    replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * Retrieves information about this collections indexes.\n *\n * @param {Function} callback\n * @method getIndexes\n * @api public\n */\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeCollection;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\n\n/*!\n * ignore\n */\n\nclass ChangeStream extends EventEmitter {\n  constructor(changeStreamThunk, pipeline, options) {\n    super();\n\n    this.driverChangeStream = null;\n    this.closed = false;\n    this.bindedEvents = false;\n    this.pipeline = pipeline;\n    this.options = options;\n\n    if (options && options.hydrate && !options.model) {\n      throw new Error(\n        'Cannot create change stream with `hydrate: true` ' +\n        'unless calling `Model.watch()`'\n      );\n    }\n\n    // This wrapper is necessary because of buffering.\n    changeStreamThunk((err, driverChangeStream) => {\n      if (err != null) {\n        this.emit('error', err);\n        return;\n      }\n\n      this.driverChangeStream = driverChangeStream;\n      this.emit('ready');\n    });\n  }\n\n  _bindEvents() {\n    if (this.bindedEvents) {\n      return;\n    }\n\n    this.bindedEvents = true;\n\n    if (this.driverChangeStream == null) {\n      this.once('ready', () => {\n        this.driverChangeStream.on('close', () => {\n          this.closed = true;\n        });\n\n        ['close', 'change', 'end', 'error'].forEach(ev => {\n          this.driverChangeStream.on(ev, data => {\n            // Sometimes Node driver still polls after close, so\n            // avoid any uncaught exceptions due to closed change streams\n            // See tests for gh-7022\n            if (ev === 'error' && this.closed) {\n              return;\n            }\n            if (data != null && data.fullDocument != null && this.options && this.options.hydrate) {\n              data.fullDocument = this.options.model.hydrate(data.fullDocument);\n            }\n            this.emit(ev, data);\n          });\n        });\n      });\n\n      return;\n    }\n\n    this.driverChangeStream.on('close', () => {\n      this.closed = true;\n    });\n\n    ['close', 'change', 'end', 'error'].forEach(ev => {\n      this.driverChangeStream.on(ev, data => {\n        // Sometimes Node driver still polls after close, so\n        // avoid any uncaught exceptions due to closed change streams\n        // See tests for gh-7022\n        if (ev === 'error' && this.closed) {\n          return;\n        }\n        this.emit(ev, data);\n      });\n    });\n  }\n\n  hasNext(cb) {\n    return this.driverChangeStream.hasNext(cb);\n  }\n\n  next(cb) {\n    if (this.options && this.options.hydrate) {\n      if (cb != null) {\n        const originalCb = cb;\n        cb = (err, data) => {\n          if (err != null) {\n            return originalCb(err);\n          }\n          if (data.fullDocument != null) {\n            data.fullDocument = this.options.model.hydrate(data.fullDocument);\n          }\n          return originalCb(null, data);\n        };\n      }\n\n      let maybePromise = this.driverChangeStream.next(cb);\n      if (maybePromise && typeof maybePromise.then === 'function') {\n        maybePromise = maybePromise.then(data => {\n          if (data.fullDocument != null) {\n            data.fullDocument = this.options.model.hydrate(data.fullDocument);\n          }\n          return data;\n        });\n      }\n      return maybePromise;\n    }\n\n    return this.driverChangeStream.next(cb);\n  }\n\n  on(event, handler) {\n    this._bindEvents();\n    return super.on(event, handler);\n  }\n\n  once(event, handler) {\n    this._bindEvents();\n    return super.once(event, handler);\n  }\n\n  _queue(cb) {\n    this.once('ready', () => cb());\n  }\n\n  close() {\n    this.closed = true;\n    if (this.driverChangeStream) {\n      this.driverChangeStream.close();\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nmodule.exports = ChangeStream;\n", "'use strict';\n\n/**\n * Create a new instance\n */\nfunction Kareem() {\n  this._pres = new Map();\n  this._posts = new Map();\n}\n\nKareem.skipWrappedFunction = function skipWrappedFunction() {\n  if (!(this instanceof Kareem.skipWrappedFunction)) {\n    return new Kareem.skipWrappedFunction(...arguments);\n  }\n\n  this.args = [...arguments];\n};\n\nKareem.overwriteResult = function overwriteResult() {\n  if (!(this instanceof Kareem.overwriteResult)) {\n    return new Kareem.overwriteResult(...arguments);\n  }\n\n  this.args = [...arguments];\n};\n\n/**\n * Execute all \"pre\" hooks for \"name\"\n * @param {String} name The hook name to execute\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Array|Function} args Optional arguments or directly the callback\n * @param {Function} [callback] The callback to call when executing all hooks are finished\n * @returns {void}\n */\nKareem.prototype.execPre = function(name, context, args, callback) {\n  if (arguments.length === 3) {\n    callback = args;\n    args = [];\n  }\n  const pres = this._pres.get(name) || [];\n  const numPres = pres.length;\n  const numAsyncPres = pres.numAsync || 0;\n  let currentPre = 0;\n  let asyncPresLeft = numAsyncPres;\n  let done = false;\n  const $args = args;\n  let shouldSkipWrappedFunction = null;\n\n  if (!numPres) {\n    return nextTick(function() {\n      callback(null);\n    });\n  }\n\n  function next() {\n    if (currentPre >= numPres) {\n      return;\n    }\n    const pre = pres[currentPre];\n\n    if (pre.isAsync) {\n      const args = [\n        decorateNextFn(_next),\n        decorateNextFn(function(error) {\n          if (error) {\n            if (done) {\n              return;\n            }\n            if (error instanceof Kareem.skipWrappedFunction) {\n              shouldSkipWrappedFunction = error;\n            } else {\n              done = true;\n              return callback(error);\n            }\n          }\n          if (--asyncPresLeft === 0 && currentPre >= numPres) {\n            return callback(shouldSkipWrappedFunction);\n          }\n        })\n      ];\n\n      callMiddlewareFunction(pre.fn, context, args, args[0]);\n    } else if (pre.fn.length > 0) {\n      const args = [decorateNextFn(_next)];\n      const _args = arguments.length >= 2 ? arguments : [null].concat($args);\n      for (let i = 1; i < _args.length; ++i) {\n        if (i === _args.length - 1 && typeof _args[i] === 'function') {\n          continue; // skip callbacks to avoid accidentally calling the callback from a hook\n        }\n        args.push(_args[i]);\n      }\n\n      callMiddlewareFunction(pre.fn, context, args, args[0]);\n    } else {\n      let maybePromiseLike = null;\n      try {\n        maybePromiseLike = pre.fn.call(context);\n      } catch (err) {\n        if (err != null) {\n          return callback(err);\n        }\n      }\n\n      if (isPromiseLike(maybePromiseLike)) {\n        maybePromiseLike.then(() => _next(), err => _next(err));\n      } else {\n        if (++currentPre >= numPres) {\n          if (asyncPresLeft > 0) {\n            // Leave parallel hooks to run\n            return;\n          } else {\n            return nextTick(function() {\n              callback(shouldSkipWrappedFunction);\n            });\n          }\n        }\n        next();\n      }\n    }\n  }\n\n  next.apply(null, [null].concat(args));\n\n  function _next(error) {\n    if (error) {\n      if (done) {\n        return;\n      }\n      if (error instanceof Kareem.skipWrappedFunction) {\n        shouldSkipWrappedFunction = error;\n      } else {\n        done = true;\n        return callback(error);\n      }\n    }\n\n    if (++currentPre >= numPres) {\n      if (asyncPresLeft > 0) {\n        // Leave parallel hooks to run\n        return;\n      } else {\n        return callback(shouldSkipWrappedFunction);\n      }\n    }\n\n    next.apply(context, arguments);\n  }\n};\n\n/**\n * Execute all \"pre\" hooks for \"name\" synchronously\n * @param {String} name The hook name to execute\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Array} [args] Apply custom arguments to the hook\n * @returns {void}\n */\nKareem.prototype.execPreSync = function(name, context, args) {\n  const pres = this._pres.get(name) || [];\n  const numPres = pres.length;\n\n  for (let i = 0; i < numPres; ++i) {\n    pres[i].fn.apply(context, args || []);\n  }\n};\n\n/**\n * Execute all \"post\" hooks for \"name\"\n * @param {String} name The hook name to execute\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Array|Function} args Apply custom arguments to the hook\n * @param {*} options Optional options or directly the callback\n * @param {Function} [callback] The callback to call when executing all hooks are finished\n * @returns {void}\n */\nKareem.prototype.execPost = function(name, context, args, options, callback) {\n  if (arguments.length < 5) {\n    callback = options;\n    options = null;\n  }\n  const posts = this._posts.get(name) || [];\n  const numPosts = posts.length;\n  let currentPost = 0;\n\n  let firstError = null;\n  if (options && options.error) {\n    firstError = options.error;\n  }\n\n  if (!numPosts) {\n    return nextTick(function() {\n      callback.apply(null, [firstError].concat(args));\n    });\n  }\n\n  function next() {\n    const post = posts[currentPost].fn;\n    let numArgs = 0;\n    const argLength = args.length;\n    const newArgs = [];\n    for (let i = 0; i < argLength; ++i) {\n      numArgs += args[i] && args[i]._kareemIgnore ? 0 : 1;\n      if (!args[i] || !args[i]._kareemIgnore) {\n        newArgs.push(args[i]);\n      }\n    }\n\n    if (firstError) {\n      if (isErrorHandlingMiddleware(posts[currentPost], numArgs)) {\n        const _cb = decorateNextFn(function(error) {\n          if (error) {\n            if (error instanceof Kareem.overwriteResult) {\n              args = error.args;\n              if (++currentPost >= numPosts) {\n                return callback.call(null, firstError);\n              }\n              return next();\n            }\n            firstError = error;\n          }\n          if (++currentPost >= numPosts) {\n            return callback.call(null, firstError);\n          }\n          next();\n        });\n\n        callMiddlewareFunction(post, context,\n          [firstError].concat(newArgs).concat([_cb]), _cb);\n      } else {\n        if (++currentPost >= numPosts) {\n          return callback.call(null, firstError);\n        }\n        next();\n      }\n    } else {\n      const _cb = decorateNextFn(function(error) {\n        if (error) {\n          if (error instanceof Kareem.overwriteResult) {\n            args = error.args;\n            if (++currentPost >= numPosts) {\n              return callback.apply(null, [null].concat(args));\n            }\n            return next();\n          }\n          firstError = error;\n          return next();\n        }\n\n        if (++currentPost >= numPosts) {\n          return callback.apply(null, [null].concat(args));\n        }\n\n        next();\n      });\n\n      if (isErrorHandlingMiddleware(posts[currentPost], numArgs)) {\n        // Skip error handlers if no error\n        if (++currentPost >= numPosts) {\n          return callback.apply(null, [null].concat(args));\n        }\n        return next();\n      }\n      if (post.length === numArgs + 1) {\n        callMiddlewareFunction(post, context, newArgs.concat([_cb]), _cb);\n      } else {\n        let error;\n        let maybePromiseLike;\n        try {\n          maybePromiseLike = post.apply(context, newArgs);\n        } catch (err) {\n          error = err;\n          firstError = err;\n        }\n\n        if (isPromiseLike(maybePromiseLike)) {\n          return maybePromiseLike.then(\n            (res) => {\n              _cb(res instanceof Kareem.overwriteResult ? res : null);\n            },\n            err => _cb(err)\n          );\n        }\n\n        if (maybePromiseLike instanceof Kareem.overwriteResult) {\n          args = maybePromiseLike.args;\n        }\n\n        if (++currentPost >= numPosts) {\n          return callback.apply(null, [error].concat(args));\n        }\n\n        next();\n      }\n    }\n  }\n\n  next();\n};\n\n/**\n * Execute all \"post\" hooks for \"name\" synchronously\n * @param {String} name The hook name to execute\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Array|Function} args Apply custom arguments to the hook\n * @returns {Array} The used arguments\n */\nKareem.prototype.execPostSync = function(name, context, args) {\n  const posts = this._posts.get(name) || [];\n  const numPosts = posts.length;\n\n  for (let i = 0; i < numPosts; ++i) {\n    const res = posts[i].fn.apply(context, args || []);\n    if (res instanceof Kareem.overwriteResult) {\n      args = res.args;\n    }\n  }\n\n  return args;\n};\n\n/**\n * Create a synchronous wrapper for \"fn\"\n * @param {String} name The name of the hook\n * @param {Function} fn The function to wrap\n * @returns {Function} The wrapped function\n */\nKareem.prototype.createWrapperSync = function(name, fn) {\n  const _this = this;\n  return function syncWrapper() {\n    _this.execPreSync(name, this, arguments);\n\n    const toReturn = fn.apply(this, arguments);\n\n    const result = _this.execPostSync(name, this, [toReturn]);\n\n    return result[0];\n  };\n};\n\nfunction _handleWrapError(instance, error, name, context, args, options, callback) {\n  if (options.useErrorHandlers) {\n    return instance.execPost(name, context, args, { error: error }, function(error) {\n      return typeof callback === 'function' && callback(error);\n    });\n  } else {\n    return typeof callback === 'function' && callback(error);\n  }\n}\n\n/**\n * Executes pre hooks, followed by the wrapped function, followed by post hooks.\n * @param {String} name The name of the hook\n * @param {Function} fn The function for the hook\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Array} args Apply custom arguments to the hook\n * @param {Object} [options]\n * @param {Boolean} [options.checkForPromise]\n * @returns {void}\n */\nKareem.prototype.wrap = function(name, fn, context, args, options) {\n  const lastArg = (args.length > 0 ? args[args.length - 1] : null);\n  const argsWithoutCb = Array.from(args);\n  typeof lastArg === 'function' && argsWithoutCb.pop();\n  const _this = this;\n\n  options = options || {};\n  const checkForPromise = options.checkForPromise;\n\n  this.execPre(name, context, args, function(error) {\n    if (error && !(error instanceof Kareem.skipWrappedFunction)) {\n      const numCallbackParams = options.numCallbackParams || 0;\n      const errorArgs = options.contextParameter ? [context] : [];\n      for (let i = errorArgs.length; i < numCallbackParams; ++i) {\n        errorArgs.push(null);\n      }\n      return _handleWrapError(_this, error, name, context, errorArgs,\n        options, lastArg);\n    }\n\n    const numParameters = fn.length;\n    let ret;\n\n    if (error instanceof Kareem.skipWrappedFunction) {\n      ret = error.args[0];\n      return _cb(null, ...error.args);\n    } else {\n      try {\n        ret = fn.apply(context, argsWithoutCb.concat(_cb));\n      } catch (err) {\n        return _cb(err);\n      }\n    }\n\n    if (checkForPromise) {\n      if (isPromiseLike(ret)) {\n        // Thenable, use it\n        return ret.then(\n          res => _cb(null, res),\n          err => _cb(err)\n        );\n      }\n\n      // If `fn()` doesn't have a callback argument and doesn't return a\n      // promise, assume it is sync\n      if (numParameters < argsWithoutCb.length + 1) {\n        return _cb(null, ret);\n      }\n    }\n\n    function _cb() {\n      const argsWithoutError = Array.from(arguments);\n      argsWithoutError.shift();\n      if (options.nullResultByDefault && argsWithoutError.length === 0) {\n        argsWithoutError.push(null);\n      }\n      if (arguments[0]) {\n        // Assume error\n        return _handleWrapError(_this, arguments[0], name, context,\n          argsWithoutError, options, lastArg);\n      } else {\n        _this.execPost(name, context, argsWithoutError, function() {\n          if (lastArg === null) {\n            return;\n          }\n          arguments[0]\n            ? lastArg(arguments[0])\n            : lastArg.apply(context, arguments);\n        });\n      }\n    }\n  });\n};\n\n/**\n * Filter current instance for something specific and return the filtered clone\n * @param {Function} fn The filter function\n * @returns {Kareem} The cloned and filtered instance\n */\nKareem.prototype.filter = function(fn) {\n  const clone = this.clone();\n\n  const pres = Array.from(clone._pres.keys());\n  for (const name of pres) {\n    const hooks = this._pres.get(name).\n      map(h => Object.assign({}, h, { name: name })).\n      filter(fn);\n\n    if (hooks.length === 0) {\n      clone._pres.delete(name);\n      continue;\n    }\n\n    hooks.numAsync = hooks.filter(h => h.isAsync).length;\n\n    clone._pres.set(name, hooks);\n  }\n\n  const posts = Array.from(clone._posts.keys());\n  for (const name of posts) {\n    const hooks = this._posts.get(name).\n      map(h => Object.assign({}, h, { name: name })).\n      filter(fn);\n\n    if (hooks.length === 0) {\n      clone._posts.delete(name);\n      continue;\n    }\n\n    clone._posts.set(name, hooks);\n  }\n\n  return clone;\n};\n\n/**\n * Check for a \"name\" to exist either in pre or post hooks\n * @param {String} name The name of the hook\n * @returns {Boolean} \"true\" if found, \"false\" otherwise\n */\nKareem.prototype.hasHooks = function(name) {\n  return this._pres.has(name) || this._posts.has(name);\n};\n\n/**\n * Create a Wrapper for \"fn\" on \"name\" and return the wrapped function\n * @param {String} name The name of the hook\n * @param {Function} fn The function to wrap\n * @param {*} context Overwrite the \"this\" for the hook\n * @param {Object} [options]\n * @returns {Function} The wrapped function\n */\nKareem.prototype.createWrapper = function(name, fn, context, options) {\n  const _this = this;\n  if (!this.hasHooks(name)) {\n    // Fast path: if there's no hooks for this function, just return the\n    // function wrapped in a nextTick()\n    return function() {\n      nextTick(() => fn.apply(this, arguments));\n    };\n  }\n  return function() {\n    const _context = context || this;\n    _this.wrap(name, fn, _context, Array.from(arguments), options);\n  };\n};\n\n/**\n * Register a new hook for \"pre\"\n * @param {String} name The name of the hook\n * @param {Boolean} [isAsync]\n * @param {Function} fn The function to register for \"name\"\n * @param {never} error Unused\n * @param {Boolean} [unshift] Wheter to \"push\" or to \"unshift\" the new hook\n * @returns {Kareem}\n */\nKareem.prototype.pre = function(name, isAsync, fn, error, unshift) {\n  let options = {};\n  if (typeof isAsync === 'object' && isAsync !== null) {\n    options = isAsync;\n    isAsync = options.isAsync;\n  } else if (typeof arguments[1] !== 'boolean') {\n    fn = isAsync;\n    isAsync = false;\n  }\n\n  const pres = this._pres.get(name) || [];\n  this._pres.set(name, pres);\n\n  if (isAsync) {\n    pres.numAsync = pres.numAsync || 0;\n    ++pres.numAsync;\n  }\n\n  if (typeof fn !== 'function') {\n    throw new Error('pre() requires a function, got \"' + typeof fn + '\"');\n  }\n\n  if (unshift) {\n    pres.unshift(Object.assign({}, options, { fn: fn, isAsync: isAsync }));\n  } else {\n    pres.push(Object.assign({}, options, { fn: fn, isAsync: isAsync }));\n  }\n\n  return this;\n};\n\n/**\n * Register a new hook for \"post\"\n * @param {String} name The name of the hook\n * @param {Object} [options]\n * @param {Function} fn The function to register for \"name\"\n * @param {Boolean} [unshift] Wheter to \"push\" or to \"unshift\" the new hook\n * @returns {Kareem}\n */\nKareem.prototype.post = function(name, options, fn, unshift) {\n  const posts = this._posts.get(name) || [];\n\n  if (typeof options === 'function') {\n    unshift = !!fn;\n    fn = options;\n    options = {};\n  }\n\n  if (typeof fn !== 'function') {\n    throw new Error('post() requires a function, got \"' + typeof fn + '\"');\n  }\n\n  if (unshift) {\n    posts.unshift(Object.assign({}, options, { fn: fn }));\n  } else {\n    posts.push(Object.assign({}, options, { fn: fn }));\n  }\n  this._posts.set(name, posts);\n  return this;\n};\n\n/**\n * Clone the current instance\n * @returns {Kareem} The cloned instance\n */\nKareem.prototype.clone = function() {\n  const n = new Kareem();\n\n  for (const key of this._pres.keys()) {\n    const clone = this._pres.get(key).slice();\n    clone.numAsync = this._pres.get(key).numAsync;\n    n._pres.set(key, clone);\n  }\n  for (const key of this._posts.keys()) {\n    n._posts.set(key, this._posts.get(key).slice());\n  }\n\n  return n;\n};\n\n/**\n * Merge \"other\" into self or \"clone\"\n * @param {Kareem} other The instance to merge with\n * @param {Kareem} [clone] The instance to merge onto (if not defined, using \"this\")\n * @returns {Kareem} The merged instance\n */\nKareem.prototype.merge = function(other, clone) {\n  clone = arguments.length === 1 ? true : clone;\n  const ret = clone ? this.clone() : this;\n\n  for (const key of other._pres.keys()) {\n    const sourcePres = ret._pres.get(key) || [];\n    const deduplicated = other._pres.get(key).\n      // Deduplicate based on `fn`\n      filter(p => sourcePres.map(_p => _p.fn).indexOf(p.fn) === -1);\n    const combined = sourcePres.concat(deduplicated);\n    combined.numAsync = sourcePres.numAsync || 0;\n    combined.numAsync += deduplicated.filter(p => p.isAsync).length;\n    ret._pres.set(key, combined);\n  }\n  for (const key of other._posts.keys()) {\n    const sourcePosts = ret._posts.get(key) || [];\n    const deduplicated = other._posts.get(key).\n      filter(p => sourcePosts.indexOf(p) === -1);\n    ret._posts.set(key, sourcePosts.concat(deduplicated));\n  }\n\n  return ret;\n};\n\nfunction callMiddlewareFunction(fn, context, args, next) {\n  let maybePromiseLike;\n  try {\n    maybePromiseLike = fn.apply(context, args);\n  } catch (error) {\n    return next(error);\n  }\n\n  if (isPromiseLike(maybePromiseLike)) {\n    maybePromiseLike.then(() => next(), err => next(err));\n  }\n}\n\nfunction isPromiseLike(v) {\n  return (typeof v === 'object' && v !== null && typeof v.then === 'function');\n}\n\nfunction decorateNextFn(fn) {\n  let called = false;\n  const _this = this;\n  return function() {\n    // Ensure this function can only be called once\n    if (called) {\n      return;\n    }\n    called = true;\n    // Make sure to clear the stack so try/catch doesn't catch errors\n    // in subsequent middleware\n    return nextTick(() => fn.apply(_this, arguments));\n  };\n}\n\nconst nextTick = typeof process === 'object' && process !== null && process.nextTick || function nextTick(cb) {\n  setTimeout(cb, 0);\n};\n\nfunction isErrorHandlingMiddleware(post, numArgs) {\n  if (post.errorHandler) {\n    return true;\n  }\n  return post.fn.length === numArgs + 2;\n}\n\nmodule.exports = Kareem;\n", "\n/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     const mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * Error messages support basic templating. Mongoose will replace the following strings with the corresponding value.\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static\n * @memberOf MongooseError\n * @api public\n */\n\n'use strict';\n\nconst msg = module.exports = exports = {};\n\nmsg.DocumentNotFoundError = null;\n\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\n\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Number.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\n\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\n\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\nconst util = require('util');\n\nclass DocumentNotFoundError extends MongooseError {\n  /**\n   * OverwriteModel Error constructor.\n   * @api private\n   */\n  constructor(filter, model, numAffected, result) {\n    let msg;\n    const messages = MongooseError.messages;\n    if (messages.DocumentNotFoundError != null) {\n      msg = typeof messages.DocumentNotFoundError === 'function' ?\n        messages.DocumentNotFoundError(filter, model) :\n        messages.DocumentNotFoundError;\n    } else {\n      msg = 'No document found for query \"' + util.inspect(filter) +\n        '\" on model \"' + model + '\"';\n    }\n\n    super(msg);\n\n    this.result = result;\n    this.numAffected = numAffected;\n    this.filter = filter;\n    // Backwards compat\n    this.query = filter;\n  }\n}\n\nObject.defineProperty(DocumentNotFoundError.prototype, 'name', {\n  value: 'DocumentNotFoundError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = DocumentNotFoundError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./mongooseError');\nconst util = require('util');\n\n/**\n * Casting Error constructor.\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nclass CastError extends MongooseError {\n  constructor(type, value, path, reason, schemaType) {\n    // If no args, assume we'll `init()` later.\n    if (arguments.length > 0) {\n      const valueType = getValueType(value);\n      const messageFormat = getMessageFormat(schemaType);\n      const msg = formatMessage(null, type, value, path, messageFormat, valueType, reason);\n      super(msg);\n      this.init(type, value, path, reason, schemaType);\n    } else {\n      super(formatMessage());\n    }\n  }\n\n  toJSON() {\n    return {\n      stringValue: this.stringValue,\n      valueType: this.valueType,\n      kind: this.kind,\n      value: this.value,\n      path: this.path,\n      reason: this.reason,\n      name: this.name,\n      message: this.message\n    };\n  }\n  /*!\n   * ignore\n   */\n  init(type, value, path, reason, schemaType) {\n    this.stringValue = getStringValue(value);\n    this.messageFormat = getMessageFormat(schemaType);\n    this.kind = type;\n    this.value = value;\n    this.path = path;\n    this.reason = reason;\n    this.valueType = getValueType(value);\n  }\n\n  /**\n   * ignore\n   * @param {Readonly<CastError>} other\n   * @api private\n   */\n  copy(other) {\n    this.messageFormat = other.messageFormat;\n    this.stringValue = other.stringValue;\n    this.kind = other.kind;\n    this.value = other.value;\n    this.path = other.path;\n    this.reason = other.reason;\n    this.message = other.message;\n    this.valueType = other.valueType;\n  }\n\n  /*!\n   * ignore\n   */\n  setModel(model) {\n    this.model = model;\n    this.message = formatMessage(model, this.kind, this.value, this.path,\n      this.messageFormat, this.valueType);\n  }\n}\n\nObject.defineProperty(CastError.prototype, 'name', {\n  value: 'CastError'\n});\n\nfunction getStringValue(value) {\n  let stringValue = util.inspect(value);\n  stringValue = stringValue.replace(/^'|'$/g, '\"');\n  if (!stringValue.startsWith('\"')) {\n    stringValue = '\"' + stringValue + '\"';\n  }\n  return stringValue;\n}\n\nfunction getValueType(value) {\n  if (value == null) {\n    return '' + value;\n  }\n\n  const t = typeof value;\n  if (t !== 'object') {\n    return t;\n  }\n  if (typeof value.constructor !== 'function') {\n    return t;\n  }\n  return value.constructor.name;\n}\n\nfunction getMessageFormat(schemaType) {\n  const messageFormat = schemaType && schemaType._castErrorMessage || null;\n  if (typeof messageFormat === 'string' || typeof messageFormat === 'function') {\n    return messageFormat;\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction formatMessage(model, kind, value, path, messageFormat, valueType, reason) {\n  if (typeof messageFormat === 'string') {\n    const stringValue = getStringValue(value);\n    let ret = messageFormat.\n      replace('{KIND}', kind).\n      replace('{VALUE}', stringValue).\n      replace('{PATH}', path);\n    if (model != null) {\n      ret = ret.replace('{MODEL}', model.modelName);\n    }\n\n    return ret;\n  } else if (typeof messageFormat === 'function') {\n    return messageFormat(value, path, model, kind);\n  } else {\n    const stringValue = getStringValue(value);\n    const valueTypeMsg = valueType ? ' (type ' + valueType + ')' : '';\n    let ret = 'Cast to ' + kind + ' failed for value ' +\n      stringValue + valueTypeMsg + ' at path \"' + path + '\"';\n    if (model != null) {\n      ret += ' for model \"' + model.modelName + '\"';\n    }\n    if (reason != null &&\n        typeof reason.constructor === 'function' &&\n        reason.constructor.name !== 'AssertionError' &&\n        reason.constructor.name !== 'Error') {\n      ret += ' because of \"' + reason.constructor.name + '\"';\n    }\n    return ret;\n  }\n}\n\n/*!\n * exports\n */\n\nmodule.exports = CastError;\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function combinePathErrors(err) {\n  const keys = Object.keys(err.errors || {});\n  const len = keys.length;\n  const msgs = [];\n  let key;\n\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n    if (err === err.errors[key]) {\n      continue;\n    }\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n\n  return msgs.join(', ');\n};\n", "/*!\n * Module requirements\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst getConstructorName = require('../helpers/getConstructorName');\nconst util = require('util');\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\n\nclass ValidationError extends MongooseError {\n  /**\n   * Document Validation Error\n   *\n   * @api private\n   * @param {Document} [instance]\n   * @inherits MongooseError\n   */\n  constructor(instance) {\n    let _message;\n    if (getConstructorName(instance) === 'model') {\n      _message = instance.constructor.modelName + ' validation failed';\n    } else {\n      _message = 'Validation failed';\n    }\n\n    super(_message);\n\n    this.errors = {};\n    this._message = _message;\n\n    if (instance) {\n      instance.$errors = this.errors;\n    }\n  }\n\n  /**\n   * Console.log helper\n   */\n  toString() {\n    return this.name + ': ' + combinePathErrors(this);\n  }\n\n  /**\n   * inspect helper\n   * @api private\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /**\n  * add message\n  * @param {String} path\n  * @param {String|Error} error\n  * @api private\n  */\n  addError(path, error) {\n    if (error instanceof ValidationError) {\n      const { errors } = error;\n      for (const errorPath of Object.keys(errors)) {\n        this.addError(`${path}.${errorPath}`, errors[errorPath]);\n      }\n\n      return;\n    }\n\n    this.errors[path] = error;\n    this.message = this._message + ': ' + combinePathErrors(this);\n  }\n}\n\n\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  ValidationError.prototype[util.inspect.custom] = ValidationError.prototype.inspect;\n}\n\n/**\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n * @api private\n */\nObject.defineProperty(ValidationError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function() {\n    return Object.assign({}, this, { name: this.name, message: this.message });\n  }\n});\n\n\nObject.defineProperty(ValidationError.prototype, 'name', {\n  value: 'ValidationError'\n});\n\n/*!\n * Module exports\n */\n\nmodule.exports = ValidationError;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\nclass ValidatorError extends MongooseError {\n  /**\n   * Schema validator error\n   *\n   * @param {Object} properties\n   * @param {Document} doc\n   * @api private\n   */\n  constructor(properties, doc) {\n    let msg = properties.message;\n    if (!msg) {\n      msg = MongooseError.messages.general.default;\n    }\n\n    const message = formatMessage(msg, properties, doc);\n    super(message);\n\n    properties = Object.assign({}, properties, { message: message });\n    this.properties = properties;\n    this.kind = properties.type;\n    this.path = properties.path;\n    this.value = properties.value;\n    this.reason = properties.reason;\n  }\n\n  /**\n   * toString helper\n   * TODO remove? This defaults to `${this.name}: ${this.message}`\n   * @api private\n   */\n  toString() {\n    return this.message;\n  }\n\n  /**\n   * Ensure `name` and `message` show up in toJSON output re: gh-9296\n   * @api private\n   */\n\n  toJSON() {\n    return Object.assign({ name: this.name, message: this.message }, this);\n  }\n}\n\n\nObject.defineProperty(ValidatorError.prototype, 'name', {\n  value: 'ValidatorError'\n});\n\n/**\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n * @api private\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n\n// Exposed for testing\nValidatorError.prototype.formatMessage = formatMessage;\n\n/**\n * Formats error messages\n * @api private\n */\n\nfunction formatMessage(msg, properties, doc) {\n  if (typeof msg === 'function') {\n    return msg(properties, doc);\n  }\n\n  const propertyNames = Object.keys(properties);\n  for (const propertyName of propertyNames) {\n    if (propertyName === 'message') {\n      continue;\n    }\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n\n  return msg;\n}\n\n/*!\n * exports\n */\n\nmodule.exports = ValidatorError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\n\nclass VersionError extends MongooseError {\n  /**\n   * Version Error constructor.\n   *\n   * @param {Document} doc\n   * @param {Number} currentVersion\n   * @param {Array<String>} modifiedPaths\n   * @api private\n   */\n  constructor(doc, currentVersion, modifiedPaths) {\n    const modifiedPathsStr = modifiedPaths.join(', ');\n    super('No matching document found for id \"' + doc._id +\n      '\" version ' + currentVersion + ' modifiedPaths \"' + modifiedPathsStr + '\"');\n    this.version = currentVersion;\n    this.modifiedPaths = modifiedPaths;\n  }\n}\n\n\nObject.defineProperty(VersionError.prototype, 'name', {\n  value: 'VersionError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = VersionError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\n\nclass ParallelSaveError extends MongooseError {\n  /**\n   * ParallelSave Error constructor.\n   *\n   * @param {Document} doc\n   * @api private\n   */\n  constructor(doc) {\n    const msg = 'Can\\'t save() the same doc multiple times in parallel. Document: ';\n    super(msg + doc._id);\n  }\n}\n\nObject.defineProperty(ParallelSaveError.prototype, 'name', {\n  value: 'ParallelSaveError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = ParallelSaveError;\n", "\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\nclass OverwriteModelError extends MongooseError {\n  /**\n   * OverwriteModel Error constructor.\n   * @param {String} name\n   * @api private\n   */\n  constructor(name) {\n    super('Cannot overwrite `' + name + '` model once compiled.');\n  }\n}\n\nObject.defineProperty(OverwriteModelError.prototype, 'name', {\n  value: 'OverwriteModelError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = OverwriteModelError;\n", "\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass MissingSchemaError extends MongooseError {\n  /**\n   * MissingSchema Error constructor.\n   * @param {String} name\n   * @api private\n   */\n  constructor(name) {\n    const msg = 'Schema hasn\\'t been registered for model \"' + name + '\".\\n'\n            + 'Use mongoose.model(name, schema)';\n    super(msg);\n  }\n}\n\nObject.defineProperty(MissingSchemaError.prototype, 'name', {\n  value: 'MissingSchemaError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = MissingSchemaError;\n", "'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\nmodule.exports = function allServersUnknown(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  const servers = Array.from(topologyDescription.servers.values());\n  return servers.length > 0 && servers.every(server => server.type === 'Unknown');\n};\n", "'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\n/**\n * @typedef { import('mongodb').TopologyDescription } TopologyDescription\n */\n\n/**\n * Checks if topologyDescription contains servers connected to an atlas instance\n *\n * @param  {TopologyDescription} topologyDescription\n * @returns {boolean}\n */\nmodule.exports = function isAtlas(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  if (topologyDescription.servers.size === 0) {\n    return false;\n  }\n\n  for (const server of topologyDescription.servers.values()) {\n    if (server.host.endsWith('.mongodb.net') === false || server.port !== 27017) {\n      return false;\n    }\n  }\n\n  return true;\n};\n", "'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\nconst nonSSLMessage = 'Client network socket disconnected before secure TLS ' +\n  'connection was established';\n\nmodule.exports = function isSSLError(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  const descriptions = Array.from(topologyDescription.servers.values());\n  return descriptions.length > 0 &&\n    descriptions.every(descr => descr.error && descr.error.message.indexOf(nonSSLMessage) !== -1);\n};\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst allServersUnknown = require('../helpers/topology/allServersUnknown');\nconst isAtlas = require('../helpers/topology/isAtlas');\nconst isSSLError = require('../helpers/topology/isSSLError');\n\n/*!\n * ignore\n */\n\nconst atlasMessage = 'Could not connect to any servers in your MongoDB Atlas cluster. ' +\n  'One common reason is that you\\'re trying to access the database from ' +\n  'an IP that isn\\'t whitelisted. Make sure your current IP address is on your Atlas ' +\n  'cluster\\'s IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/';\n\nconst sslMessage = 'Mongoose is connecting with SSL enabled, but the server is ' +\n  'not accepting SSL connections. Please ensure that the MongoDB server you are ' +\n  'connecting to is configured to accept SSL connections. Learn more: ' +\n  'https://mongoosejs.com/docs/tutorials/ssl.html';\n\nclass MongooseServerSelectionError extends MongooseError {\n  /**\n   * MongooseServerSelectionError constructor\n   *\n   * @api private\n   */\n  assimilateError(err) {\n    const reason = err.reason;\n    // Special message for a case that is likely due to IP whitelisting issues.\n    const isAtlasWhitelistError = isAtlas(reason) &&\n      allServersUnknown(reason) &&\n      err.message.indexOf('bad auth') === -1 &&\n      err.message.indexOf('Authentication failed') === -1;\n\n    if (isAtlasWhitelistError) {\n      this.message = atlasMessage;\n    } else if (isSSLError(reason)) {\n      this.message = sslMessage;\n    } else {\n      this.message = err.message;\n    }\n    for (const key in err) {\n      if (key !== 'name') {\n        this[key] = err[key];\n      }\n    }\n\n    return this;\n  }\n}\n\nObject.defineProperty(MongooseServerSelectionError.prototype, 'name', {\n  value: 'MongooseServerSelectionError'\n});\n\nmodule.exports = MongooseServerSelectionError;\n", "\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass DivergentArrayError extends MongooseError {\n  /**\n   * DivergentArrayError constructor.\n   * @param {Array<String>} paths\n   * @api private\n   */\n  constructor(paths) {\n    const msg = 'For your own good, using `document.save()` to update an array '\n            + 'which was selected using an $elemMatch projection OR '\n            + 'populated using skip, limit, query conditions, or exclusion of '\n            + 'the _id field when the operation results in a $pop or $set of '\n            + 'the entire array is not supported. The following '\n            + 'path(s) would have been modified unsafely:\\n'\n            + '  ' + paths.join('\\n  ') + '\\n'\n            + 'Use Model.updateOne() to update these arrays instead.';\n    // TODO write up a docs page (FAQ) and link to it\n    super(msg);\n  }\n}\n\nObject.defineProperty(DivergentArrayError.prototype, 'name', {\n  value: 'DivergentArrayError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = DivergentArrayError;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\nclass StrictModeError extends MongooseError {\n  /**\n   * Strict mode error constructor\n   *\n   * @param {String} path\n   * @param {String} [msg]\n   * @param {Boolean} [immutable]\n   * @inherits MongooseError\n   * @api private\n   */\n  constructor(path, msg, immutable) {\n    msg = msg || 'Field `' + path + '` is not in schema and strict ' +\n      'mode is set to throw.';\n    super(msg);\n    this.isImmutableError = !!immutable;\n    this.path = path;\n  }\n}\n\nObject.defineProperty(StrictModeError.prototype, 'name', {\n  value: 'StrictModeError'\n});\n\nmodule.exports = StrictModeError;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass StrictPopulateError extends MongooseError {\n  /**\n   * Strict mode error constructor\n   *\n   * @param {String} path\n   * @param {String} [msg]\n   * @inherits MongooseError\n   * @api private\n   */\n  constructor(path, msg) {\n    msg = msg || 'Cannot populate path `' + path + '` because it is not in your schema. ' + 'Set the `strictPopulate` option to false to override.';\n    super(msg);\n    this.path = path;\n  }\n}\n\nObject.defineProperty(StrictPopulateError.prototype, 'name', {\n  value: 'StrictPopulateError'\n});\n\nmodule.exports = StrictPopulateError;\n", "'use strict';\n\n/**\n * MongooseError constructor. MongooseError is the base class for all\n * Mongoose-specific errors.\n *\n * #### Example:\n *\n *     const Model = mongoose.model('Test', new mongoose.Schema({ answer: Number }));\n *     const doc = new Model({ answer: 'not a number' });\n *     const err = doc.validateSync();\n *\n *     err instanceof mongoose.Error.ValidationError; // true\n *\n * @constructor Error\n * @param {String} msg Error message\n * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n */\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * The name of the error. The name uniquely identifies this Mongoose error. The\n * possible values are:\n *\n * - `MongooseError`: general Mongoose error\n * - `CastError`: Mongoose could not convert a value to the type defined in the schema path. May be in a `ValidationError` class' `errors` property.\n * - `DivergentArrayError`: You attempted to `save()` an array that was modified after you loaded it with a `$elemMatch` or similar projection\n * - `MissingSchemaError`: You tried to access a model with [`mongoose.model()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.model()) that was not defined\n * - `DocumentNotFoundError`: The document you tried to [`save()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.save()) was not found\n * - `ValidatorError`: error from an individual schema path's validator\n * - `ValidationError`: error returned from [`validate()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.validate()) or [`validateSync()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.validateSync()). Contains zero or more `ValidatorError` instances in `.errors` property.\n * - `MissingSchemaError`: You called `mongoose.Document()` without a schema\n * - `ObjectExpectedError`: Thrown when you set a nested path to a non-object value with [strict mode set](https://mongoosejs.com/docs/guide.html#strict).\n * - `ObjectParameterError`: Thrown when you pass a non-object value to a function which expects an object as a paramter\n * - `OverwriteModelError`: Thrown when you call [`mongoose.model()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.model()) to re-define a model that was already defined.\n * - `ParallelSaveError`: Thrown when you call [`save()`](https://mongoosejs.com/docs/api/model.html#Model.prototype.save()) on a document when the same document instance is already saving.\n * - `StrictModeError`: Thrown when you set a path that isn't the schema and [strict mode](https://mongoosejs.com/docs/guide.html#strict) is set to `throw`.\n * - `VersionError`: Thrown when the [document is out of sync](https://mongoosejs.com/docs/guide.html#versionKey)\n *\n * @api public\n * @property {String} name\n * @memberOf Error\n * @instance\n */\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseError;\n\n/**\n * The default built-in validator error messages.\n *\n * @see Error.messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.messages = require('./messages');\n\n// backward compat\nMongooseError.Messages = MongooseError.messages;\n\n/**\n * An instance of this error class will be returned when `save()` fails\n * because the underlying\n * document was not found. The constructor takes one parameter, the\n * conditions that mongoose passed to `updateOne()` when trying to update\n * the document.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.DocumentNotFoundError = require('./notFound');\n\n/**\n * An instance of this error class will be returned when mongoose failed to\n * cast a value.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.CastError = require('./cast');\n\n/**\n * An instance of this error class will be returned when [validation](https://mongoosejs.com/docs/validation.html) failed.\n * The `errors` property contains an object whose keys are the paths that failed and whose values are\n * instances of CastError or ValidationError.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.ValidationError = require('./validation');\n\n/**\n * A `ValidationError` has a hash of `errors` that contain individual\n * `ValidatorError` instances.\n *\n * #### Example:\n *\n *     const schema = Schema({ name: { type: String, required: true } });\n *     const Model = mongoose.model('Test', schema);\n *     const doc = new Model({});\n *\n *     // Top-level error is a ValidationError, **not** a ValidatorError\n *     const err = doc.validateSync();\n *     err instanceof mongoose.Error.ValidationError; // true\n *\n *     // A ValidationError `err` has 0 or more ValidatorErrors keyed by the\n *     // path in the `err.errors` property.\n *     err.errors['name'] instanceof mongoose.Error.ValidatorError;\n *\n *     err.errors['name'].kind; // 'required'\n *     err.errors['name'].path; // 'name'\n *     err.errors['name'].value; // undefined\n *\n * Instances of `ValidatorError` have the following properties:\n *\n * - `kind`: The validator's `type`, like `'required'` or `'regexp'`\n * - `path`: The path that failed validation\n * - `value`: The value that failed validation\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.ValidatorError = require('./validator');\n\n/**\n * An instance of this error class will be returned when you call `save()` after\n * the document in the database was changed in a potentially unsafe way. See\n * the [`versionKey` option](https://mongoosejs.com/docs/guide.html#versionKey) for more information.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.VersionError = require('./version');\n\n/**\n * An instance of this error class will be returned when you call `save()` multiple\n * times on the same document in parallel. See the [FAQ](https://mongoosejs.com/docs/faq.html) for more\n * information.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.ParallelSaveError = require('./parallelSave');\n\n/**\n * Thrown when a model with the given name was already registered on the connection.\n * See [the FAQ about `OverwriteModelError`](https://mongoosejs.com/docs/faq.html#overwrite-model-error).\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.OverwriteModelError = require('./overwriteModel');\n\n/**\n * Thrown when you try to access a model that has not been registered yet\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.MissingSchemaError = require('./missingSchema');\n\n/**\n * Thrown when the MongoDB Node driver can't connect to a valid server\n * to send an operation to.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.MongooseServerSelectionError = require('./serverSelection');\n\n/**\n * An instance of this error will be returned if you used an array projection\n * and then modified the array in an unsafe way.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.DivergentArrayError = require('./divergentArray');\n\n/**\n * Thrown when your try to pass values to model constructor that\n * were not specified in schema or change immutable properties when\n * `strict` mode is `\"throw\"`\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.StrictModeError = require('./strict');\n\n/**\n * An instance of this error class will be returned when mongoose failed to\n * populate with a path that is not existing.\n *\n * @api public\n * @memberOf Error\n * @static\n */\n\nMongooseError.StrictPopulateError = require('./strictPopulate');\n", "'use strict';\n\nmodule.exports = Object.freeze({\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: void 0\n});\n", "'use strict';\n\nconst clone = require('../helpers/clone');\n\n/**\n * The options defined on a schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String });\n *     schema.path('name').options instanceof mongoose.SchemaTypeOptions; // true\n *\n * @api public\n * @constructor SchemaTypeOptions\n */\n\nclass SchemaTypeOptions {\n  constructor(obj) {\n    if (obj == null) {\n      return this;\n    }\n    Object.assign(this, clone(obj));\n  }\n}\n\nconst opts = require('./propertyOptions');\n\n/**\n * The type to cast this path to.\n *\n * @api public\n * @property type\n * @memberOf SchemaTypeOptions\n * @type {Function|String|Object}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'type', opts);\n\n/**\n * Function or object describing how to validate this schematype.\n *\n * @api public\n * @property validate\n * @memberOf SchemaTypeOptions\n * @type {Function|Object}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'validate', opts);\n\n/**\n * Allows overriding casting logic for this individual path. If a string, the\n * given string overwrites Mongoose's default cast error message.\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       num: {\n *         type: Number,\n *         cast: '{VALUE} is not a valid number'\n *       }\n *     });\n *\n *     // Throws 'CastError: \"bad\" is not a valid number'\n *     schema.path('num').cast('bad');\n *\n *     const Model = mongoose.model('Test', schema);\n *     const doc = new Model({ num: 'fail' });\n *     const err = doc.validateSync();\n *\n *     err.errors['num']; // 'CastError: \"fail\" is not a valid number'\n *\n * @api public\n * @property cast\n * @memberOf SchemaTypeOptions\n * @type {String}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'cast', opts);\n\n/**\n * If true, attach a required validator to this path, which ensures this path\n * cannot be set to a nullish value. If a function, Mongoose calls the\n * function and only checks for nullish values if the function returns a truthy value.\n *\n * @api public\n * @property required\n * @memberOf SchemaTypeOptions\n * @type {Function|Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'required', opts);\n\n/**\n * The default value for this path. If a function, Mongoose executes the function\n * and uses the return value as the default.\n *\n * @api public\n * @property default\n * @memberOf SchemaTypeOptions\n * @type {Function|Any}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'default', opts);\n\n/**\n * The model that `populate()` should use if populating this path.\n *\n * @api public\n * @property ref\n * @memberOf SchemaTypeOptions\n * @type {Function|String}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'ref', opts);\n\n/**\n * The path in the document that `populate()` should use to find the model\n * to use.\n *\n * @api public\n * @property ref\n * @memberOf SchemaTypeOptions\n * @type {Function|String}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'refPath', opts);\n\n/**\n * Whether to include or exclude this path by default when loading documents\n * using `find()`, `findOne()`, etc.\n *\n * @api public\n * @property select\n * @memberOf SchemaTypeOptions\n * @type {Boolean|Number}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'select', opts);\n\n/**\n * If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), Mongoose will\n * build an index on this path when the model is compiled.\n *\n * @api public\n * @property index\n * @memberOf SchemaTypeOptions\n * @type {Boolean|Number|Object}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'index', opts);\n\n/**\n * If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), Mongoose\n * will build a unique index on this path when the\n * model is compiled. [The `unique` option is **not** a validator](https://mongoosejs.com/docs/validation.html#the-unique-option-is-not-a-validator).\n *\n * @api public\n * @property unique\n * @memberOf SchemaTypeOptions\n * @type {Boolean|Number}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'unique', opts);\n\n/**\n * If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), Mongoose will\n * disallow changes to this path once the document\n * is saved to the database for the first time. Read more about [immutability in Mongoose here](https://thecodebarbarian.com/whats-new-in-mongoose-5-6-immutable-properties.html).\n *\n * @api public\n * @property immutable\n * @memberOf SchemaTypeOptions\n * @type {Function|Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'immutable', opts);\n\n/**\n * If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), Mongoose will\n * build a sparse index on this path.\n *\n * @api public\n * @property sparse\n * @memberOf SchemaTypeOptions\n * @type {Boolean|Number}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'sparse', opts);\n\n/**\n * If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), Mongoose\n * will build a text index on this path.\n *\n * @api public\n * @property text\n * @memberOf SchemaTypeOptions\n * @type {Boolean|Number|Object}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'text', opts);\n\n/**\n * Define a transform function for this individual schema type.\n * Only called when calling `toJSON()` or `toObject()`.\n *\n * #### Example:\n *\n *     const schema = Schema({\n *       myDate: {\n *         type: Date,\n *         transform: v => v.getFullYear()\n *       }\n *     });\n *     const Model = mongoose.model('Test', schema);\n *\n *     const doc = new Model({ myDate: new Date('2019/06/01') });\n *     doc.myDate instanceof Date; // true\n *\n *     const res = doc.toObject({ transform: true });\n *     res.myDate; // 2019\n *\n * @api public\n * @property transform\n * @memberOf SchemaTypeOptions\n * @type {Function}\n * @instance\n */\n\nObject.defineProperty(SchemaTypeOptions.prototype, 'transform', opts);\n\nmodule.exports = SchemaTypeOptions;\n", "'use strict';\n\nconst CastError = require('../error/cast');\n\n/**\n * Given a value, cast it to a boolean, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {Boolean|null|undefined}\n * @throws {CastError} if `value` is not one of the allowed values\n * @api private\n */\n\nmodule.exports = function castBoolean(value, path) {\n  if (module.exports.convertToTrue.has(value)) {\n    return true;\n  }\n  if (module.exports.convertToFalse.has(value)) {\n    return false;\n  }\n\n  if (value == null) {\n    return value;\n  }\n\n  throw new CastError('boolean', value, path);\n};\n\nmodule.exports.convertToTrue = new Set([true, 'true', 1, '1', 'yes']);\nmodule.exports.convertToFalse = new Set([false, 'false', 0, '0', 'no']);\n", "'use strict';\n\nconst castBoolean = require('../../cast/boolean');\n\n/*!\n * ignore\n */\n\nmodule.exports = function(val) {\n  const path = this != null ? this.path : null;\n  return castBoolean(val, path);\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function(val) {\n  if (Array.isArray(val)) {\n    if (!val.every(v => typeof v === 'number' || typeof v === 'string')) {\n      throw new Error('$type array values must be strings or numbers');\n    }\n    return val;\n  }\n\n  if (typeof val !== 'number' && typeof val !== 'string') {\n    throw new Error('$type parameter must be number, string, or array of numbers and strings');\n  }\n\n  return val;\n};\n", "'use strict';\n\nconst StrictModeError = require('../../error/strict');\n\n/*!\n * ignore\n */\n\nmodule.exports = function(schematype) {\n  if (schematype.$immutable) {\n    schematype.$immutableSetter = createImmutableSetter(schematype.path,\n      schematype.options.immutable);\n    schematype.set(schematype.$immutableSetter);\n  } else if (schematype.$immutableSetter) {\n    schematype.setters = schematype.setters.\n      filter(fn => fn !== schematype.$immutableSetter);\n    delete schematype.$immutableSetter;\n  }\n};\n\nfunction createImmutableSetter(path, immutable) {\n  return function immutableSetter(v, _priorVal, _doc, options) {\n    if (this == null || this.$__ == null) {\n      return v;\n    }\n    if (this.isNew) {\n      return v;\n    }\n    if (options && options.overwriteImmutable) {\n      return v;\n    }\n\n    const _immutable = typeof immutable === 'function' ?\n      immutable.call(this, this) :\n      immutable;\n    if (!_immutable) {\n      return v;\n    }\n\n    const _value = this.$__.priorDoc != null ?\n      this.$__.priorDoc.$__getValue(path) :\n      this.$__getValue(path);\n    if (this.$__.strictMode === 'throw' && v !== _value) {\n      throw new StrictModeError(path, 'Path `' + path + '` is immutable ' +\n        'and strict mode is set to throw.', true);\n    }\n\n    return _value;\n  };\n}\n", "'use strict';\n\nmodule.exports = function isAsyncFunction(v) {\n  return (\n    typeof v === 'function' &&\n    v.constructor &&\n    v.constructor.name === 'AsyncFunction'\n  );\n};\n", "'use strict';\n\n/**\n * Determines if `arg` is a flat object.\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nmodule.exports = function isSimpleValidator(obj) {\n  const keys = Object.keys(obj);\n  let result = true;\n  for (let i = 0, len = keys.length; i < len; ++i) {\n    if (typeof obj[keys[i]] === 'object' && obj[keys[i]] !== null) {\n      result = false;\n      break;\n    }\n  }\n\n  return result;\n};\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "'use strict';\n\nmodule.exports = function stringToParts(str) {\n  const result = [];\n\n  let curPropertyName = '';\n  let state = 'DEFAULT';\n  for (let i = 0; i < str.length; ++i) {\n    // Fall back to treating as property name rather than bracket notation if\n    // square brackets contains something other than a number.\n    if (state === 'IN_SQUARE_BRACKETS' && !/\\d/.test(str[i]) && str[i] !== ']') {\n      state = 'DEFAULT';\n      curPropertyName = result[result.length - 1] + '[' + curPropertyName;\n      result.splice(result.length - 1, 1);\n    }\n\n    if (str[i] === '[') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'IN_SQUARE_BRACKETS';\n    } else if (str[i] === ']') {\n      if (state === 'IN_SQUARE_BRACKETS') {\n        state = 'IMMEDIATELY_AFTER_SQUARE_BRACKETS';\n        result.push(curPropertyName);\n        curPropertyName = '';\n      } else {\n        state = 'DEFAULT';\n        curPropertyName += str[i];\n      }\n    } else if (str[i] === '.') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'DEFAULT';\n    } else {\n      curPropertyName += str[i];\n    }\n  }\n\n  if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n    result.push(curPropertyName);\n  }\n\n  return result;\n};", "/* eslint strict:off */\n/* eslint no-var: off */\n/* eslint no-redeclare: off */\n\nvar stringToParts = require('./stringToParts');\n\n// These properties are special and can open client libraries to security\n// issues\nvar ignoreProperties = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function(path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o,\n      part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      // Need to `concat()` to avoid `map()` calling a constructor of an array\n      // subclass\n      return [].concat(obj).map(function(item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _from = special && obj[special] ? obj[special] : obj;\n      obj = _from instanceof Map ?\n        _from.get(part) :\n        _from[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n};\n\n/**\n * Returns true if `in` returns true for every piece of the path\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.has = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n    }\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    cur = cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Deletes the last piece of `path`\n *\n * @param {String} path\n * @param {Object} o\n */\n\nexports.unset = function(path, o) {\n  var parts = typeof path === 'string' ?\n    stringToParts(path) :\n    path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var len = parts.length;\n  var cur = o;\n  for (var i = 0; i < len; ++i) {\n    if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n      return false;\n    }\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Disallow any updates to __proto__ or special properties.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return false;\n    }\n    if (i === len - 1) {\n      delete cur[parts[i]];\n      return true;\n    }\n    cur = cur instanceof Map ? cur.get(parts[i]) : cur[parts[i]];\n  }\n\n  return true;\n};\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function(path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? stringToParts(path)\n    : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  for (var i = 0; i < parts.length; ++i) {\n    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n    }\n    // Silently ignore any updates to `__proto__`, these are potentially\n    // dangerous if using mpath with unsanitized data.\n    if (ignoreProperties.indexOf(parts[i]) !== -1) {\n      return;\n    }\n  }\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array. Unless the user explicitly opted out by passing\n  // false, see Automattic/mongoose#6273\n  var copy = _copying || (/\\$/.test(path) && _copying !== false),\n      obj = o,\n      part;\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      var _to = special && obj[special] ? obj[special] : obj;\n      obj = _to instanceof Map ?\n        _to.get(part) :\n        _to[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      _setArray(obj, val, part, lookup, special, map);\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        var item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else if (obj instanceof Map) {\n      obj.set(part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n};\n\n/*!\n * Split a string path into components delimited by '.' or\n * '[\\d+]'\n *\n * #### Example:\n *     stringToParts('foo[0].bar.1'); // ['foo', '0', 'bar', '1']\n */\n\nexports.stringToParts = stringToParts;\n\n/*!\n * Recursively set nested arrays\n */\n\nfunction _setArray(obj, val, part, lookup, special, map) {\n  for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n    item = obj[j];\n    if (Array.isArray(item) && Array.isArray(val[j])) {\n      _setArray(item, val[j], part, lookup, special, map);\n    } else if (item) {\n      if (lookup) {\n        lookup(item, part, map(val[j]));\n      } else {\n        if (item[special]) item = item[special];\n        item[part] = map(val[j]);\n      }\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K(v) {\n  return v;\n}\n", "'use strict';\n\nmodule.exports = exports = require('./lib');\n", "'use strict';\n\nconst clone = require('../helpers/clone');\n\nclass PopulateOptions {\n  constructor(obj) {\n    this._docs = {};\n    this._childDocs = [];\n\n    if (obj == null) {\n      return;\n    }\n    obj = clone(obj);\n    Object.assign(this, obj);\n    if (typeof obj.subPopulate === 'object') {\n      this.populate = obj.subPopulate;\n    }\n\n\n    if (obj.perDocumentLimit != null && obj.limit != null) {\n      throw new Error('Can not use `limit` and `perDocumentLimit` at the same time. Path: `' + obj.path + '`.');\n    }\n  }\n}\n\n/**\n * The connection used to look up models by name. If not specified, Mongoose\n * will default to using the connection associated with the model in\n * `PopulateOptions#model`.\n *\n * @memberOf PopulateOptions\n * @property {Connection} connection\n * @api public\n */\n\nmodule.exports = PopulateOptions;\n", "'use strict';\n\nexports.isMongooseDocumentArray = function(mongooseDocumentArray) {\n  return Array.isArray(mongooseDocumentArray) && mongooseDocumentArray.isMongooseDocumentArray;\n};\n", "'use strict';\n\nconst immediate = require('./immediate');\n\nconst emittedSymbol = Symbol('mongoose:emitted');\n\nmodule.exports = function promiseOrCallback(callback, fn, ee, Promise) {\n  if (typeof callback === 'function') {\n    try {\n      return fn(function(error) {\n        if (error != null) {\n          if (ee != null && ee.listeners != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {\n            error[emittedSymbol] = true;\n            ee.emit('error', error);\n          }\n          try {\n            callback(error);\n          } catch (error) {\n            return immediate(() => {\n              throw error;\n            });\n          }\n          return;\n        }\n        callback.apply(this, arguments);\n      });\n    } catch (error) {\n      if (ee != null && ee.listeners != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {\n        error[emittedSymbol] = true;\n        ee.emit('error', error);\n      }\n\n      return callback(error);\n    }\n  }\n\n  Promise = Promise || global.Promise;\n\n  return new Promise((resolve, reject) => {\n    fn(function(error, res) {\n      if (error != null) {\n        if (ee != null && ee.listeners != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {\n          error[emittedSymbol] = true;\n          ee.emit('error', error);\n        }\n        return reject(error);\n      }\n      if (arguments.length > 2) {\n        return resolve(Array.prototype.slice.call(arguments, 1));\n      }\n      resolve(res);\n    });\n  });\n};\n", "'use strict';\n\nmodule.exports = function merge(s1, s2, skipConflictingPaths) {\n  const paths = Object.keys(s2.tree);\n  const pathsToAdd = {};\n  for (const key of paths) {\n    if (skipConflictingPaths && (s1.paths[key] || s1.nested[key] || s1.singleNestedPaths[key])) {\n      continue;\n    }\n    pathsToAdd[key] = s2.tree[key];\n  }\n  s1.options._isMerging = true;\n  s1.add(pathsToAdd, null);\n  delete s1.options._isMerging;\n\n  s1.callQueue = s1.callQueue.concat(s2.callQueue);\n  s1.method(s2.methods);\n  s1.static(s2.statics);\n\n  for (const [option, value] of Object.entries(s2._userProvidedOptions)) {\n    if (!(option in s1._userProvidedOptions)) {\n      s1.set(option, value);\n    }\n  }\n\n  for (const query in s2.query) {\n    s1.query[query] = s2.query[query];\n  }\n\n  for (const virtual in s2.virtuals) {\n    s1.virtuals[virtual] = s2.virtuals[virtual].clone();\n  }\n\n  s1._indexes = s1._indexes.concat(s2._indexes || []);\n  s1.s.hooks.merge(s2.s.hooks, false);\n};\n", "\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst utils = require('./utils'); // eslint-disable-line no-unused-vars\n\n/**\n * StateMachine represents a minimal `interface` for the\n * constructors it builds via StateMachine.ctor(...).\n *\n * @api private\n */\n\nconst StateMachine = module.exports = exports = function StateMachine() {\n};\n\n/**\n * StateMachine.ctor('state1', 'state2', ...)\n * A factory method for subclassing StateMachine.\n * The arguments are a list of states. For each state,\n * the constructor's prototype gets state transition\n * methods named after each state. These transition methods\n * place their path argument into the given state.\n *\n * @param {String} state\n * @param {String} [state]\n * @return {Function} subclass constructor\n * @api private\n */\n\nStateMachine.ctor = function() {\n  const states = [...arguments];\n\n  const ctor = function() {\n    StateMachine.apply(this, arguments);\n    this.paths = {};\n    this.states = {};\n  };\n\n  ctor.prototype = new StateMachine();\n\n  ctor.prototype.stateNames = states;\n\n  states.forEach(function(state) {\n    // Changes the `path`'s state to `state`.\n    ctor.prototype[state] = function(path) {\n      this._changeState(path, state);\n    };\n  });\n\n  return ctor;\n};\n\n/**\n * This function is wrapped by the state change functions:\n *\n * - `require(path)`\n * - `modify(path)`\n * - `init(path)`\n *\n * @api private\n */\n\nStateMachine.prototype._changeState = function _changeState(path, nextState) {\n  const prevBucket = this.states[this.paths[path]];\n  if (prevBucket) delete prevBucket[path];\n\n  this.paths[path] = nextState;\n  this.states[nextState] = this.states[nextState] || {};\n  this.states[nextState][path] = true;\n};\n\n/*!\n * ignore\n */\n\nStateMachine.prototype.clear = function clear(state) {\n  if (this.states[state] == null) {\n    return;\n  }\n  const keys = Object.keys(this.states[state]);\n  let i = keys.length;\n  let path;\n\n  while (i--) {\n    path = keys[i];\n    delete this.states[state][path];\n    delete this.paths[path];\n  }\n};\n\n/*!\n * ignore\n */\n\nStateMachine.prototype.clearPath = function clearPath(path) {\n  const state = this.paths[path];\n  if (!state) {\n    return;\n  }\n  delete this.paths[path];\n  delete this.states[state][path];\n};\n\n/**\n * Gets the paths for the given state, or empty object `{}` if none.\n * @api private\n */\n\nStateMachine.prototype.getStatePaths = function getStatePaths(state) {\n  if (this.states[state] != null) {\n    return this.states[state];\n  }\n  return {};\n};\n\n/**\n * Checks to see if at least one path is in the states passed in via `arguments`\n * e.g., this.some('required', 'inited')\n *\n * @param {String} state that we want to check for.\n * @api private\n */\n\nStateMachine.prototype.some = function some() {\n  const _this = this;\n  const what = arguments.length ? arguments : this.stateNames;\n  return Array.prototype.some.call(what, function(state) {\n    if (_this.states[state] == null) {\n      return false;\n    }\n    return Object.keys(_this.states[state]).length;\n  });\n};\n\n/**\n * This function builds the functions that get assigned to `forEach` and `map`,\n * since both of those methods share a lot of the same logic.\n *\n * @param {String} iterMethod is either 'forEach' or 'map'\n * @return {Function}\n * @api private\n */\n\nStateMachine.prototype._iter = function _iter(iterMethod) {\n  return function() {\n    let states = [...arguments];\n    const callback = states.pop();\n\n    if (!states.length) states = this.stateNames;\n\n    const _this = this;\n\n    const paths = states.reduce(function(paths, state) {\n      if (_this.states[state] == null) {\n        return paths;\n      }\n      return paths.concat(Object.keys(_this.states[state]));\n    }, []);\n\n    return paths[iterMethod](function(path, i, paths) {\n      return callback(path, i, paths);\n    });\n  };\n};\n\n/**\n * Iterates over the paths that belong to one of the parameter states.\n *\n * The function profile can look like:\n * this.forEach(state1, fn);         // iterates over all paths in state1\n * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2\n * this.forEach(fn);                 // iterates over all paths in all states\n *\n * @param {String} [state]\n * @param {String} [state]\n * @param {Function} callback\n * @api private\n */\n\nStateMachine.prototype.forEach = function forEach() {\n  this.forEach = this._iter('forEach');\n  return this.forEach.apply(this, arguments);\n};\n\n/**\n * Maps over the paths that belong to one of the parameter states.\n *\n * The function profile can look like:\n * this.forEach(state1, fn);         // iterates over all paths in state1\n * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2\n * this.forEach(fn);                 // iterates over all paths in all states\n *\n * @param {String} [state]\n * @param {String} [state]\n * @param {Function} callback\n * @return {Array}\n * @api private\n */\n\nStateMachine.prototype.map = function map() {\n  this.map = this._iter('map');\n  return this.map.apply(this, arguments);\n};\n", "/*!\n * Dependencies\n */\n\n'use strict';\n\nconst StateMachine = require('./statemachine');\nconst ActiveRoster = StateMachine.ctor('require', 'modify', 'init', 'default', 'ignore');\n\nmodule.exports = exports = InternalCache;\n\nfunction InternalCache() {\n  this.activePaths = new ActiveRoster();\n}\n\nInternalCache.prototype.strictMode = true;\n\nInternalCache.prototype.fullPath = undefined;\nInternalCache.prototype.selected = undefined;\nInternalCache.prototype.shardval = undefined;\nInternalCache.prototype.saveError = undefined;\nInternalCache.prototype.validationError = undefined;\nInternalCache.prototype.adhocPaths = undefined;\nInternalCache.prototype.removing = undefined;\nInternalCache.prototype.inserting = undefined;\nInternalCache.prototype.saving = undefined;\nInternalCache.prototype.version = undefined;\nInternalCache.prototype._id = undefined;\nInternalCache.prototype.ownerDocument = undefined;\nInternalCache.prototype.populate = undefined; // what we want to populate in this doc\nInternalCache.prototype.populated = undefined;// the _ids that have been populated\nInternalCache.prototype.primitiveAtomics = undefined;\n\n/**\n * If `false`, this document was not the result of population.\n * If `true`, this document is a populated doc underneath another doc\n * If an object, this document is a populated doc and the `value` property of the\n * object contains the original depopulated value.\n */\nInternalCache.prototype.wasPopulated = false;\n\nInternalCache.prototype.scope = undefined;\n\nInternalCache.prototype.session = null;\nInternalCache.prototype.pathsToScopes = null;\nInternalCache.prototype.cachedRequired = null;\n", "'use strict';\n\nexports.schemaMixedSymbol = Symbol.for('mongoose:schema_mixed');\n\nexports.builtInMiddleware = Symbol.for('mongoose:built-in-middleware');\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst SchemaType = require('../schematype');\nconst symbols = require('./symbols');\nconst isObject = require('../helpers/isObject');\nconst utils = require('../utils');\n\n/**\n * Mixed SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Mixed(path, options) {\n  if (options && options.default) {\n    const def = options.default;\n    if (Array.isArray(def) && def.length === 0) {\n      // make sure empty array defaults are handled\n      options.default = Array;\n    } else if (!options.shared && isObject(def) && Object.keys(def).length === 0) {\n      // prevent odd \"shared\" objects between documents\n      options.default = function() {\n        return {};\n      };\n    }\n  }\n\n  SchemaType.call(this, path, options, 'Mixed');\n\n  this[symbols.schemaMixedSymbol] = true;\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nMixed.schemaName = 'Mixed';\n\nMixed.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nMixed.prototype = Object.create(SchemaType.prototype);\nMixed.prototype.constructor = Mixed;\n\n/**\n * Attaches a getter for all Mixed paths.\n *\n * #### Example:\n *\n *     // Hide the 'hidden' path\n *     mongoose.Schema.Mixed.get(v => Object.assign({}, v, { hidden: null }));\n *\n *     const Model = mongoose.model('Test', new Schema({ test: {} }));\n *     new Model({ test: { hidden: 'Secret!' } }).test.hidden; // null\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nMixed.get = SchemaType.get;\n\n/**\n * Sets a default option for all Mixed instances.\n *\n * #### Example:\n *\n *     // Make all mixed instances have `required` of true by default.\n *     mongoose.Schema.Mixed.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: mongoose.Mixed }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nMixed.set = SchemaType.set;\n\nMixed.setters = [];\n\n/**\n * Casts `val` for Mixed.\n *\n * _this is a no-op_\n *\n * @param {Object} value to cast\n * @api private\n */\n\nMixed.prototype.cast = function(val) {\n  if (val instanceof Error) {\n    return utils.errorToPOJO(val);\n  }\n  return val;\n};\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $cond\n * @param {any} [val]\n * @api private\n */\n\nMixed.prototype.castForQuery = function($cond, val) {\n  return val;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Mixed;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\nclass ObjectExpectedError extends MongooseError {\n  /**\n   * Strict mode error constructor\n   *\n   * @param {string} type\n   * @param {string} value\n   * @api private\n   */\n  constructor(path, val) {\n    const typeDescription = Array.isArray(val) ? 'array' : 'primitive value';\n    super('Tried to set nested object field `' + path +\n      `\\` to ${typeDescription} \\`` + val + '`');\n    this.path = path;\n  }\n}\n\nObject.defineProperty(ObjectExpectedError.prototype, 'name', {\n  value: 'ObjectExpectedError'\n});\n\nmodule.exports = ObjectExpectedError;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass ObjectParameterError extends MongooseError {\n  /**\n   * Constructor for errors that happen when a parameter that's expected to be\n   * an object isn't an object\n   *\n   * @param {Any} value\n   * @param {String} paramName\n   * @param {String} fnName\n   * @api private\n   */\n  constructor(value, paramName, fnName) {\n    super('Parameter \"' + paramName + '\" to ' + fnName +\n      '() must be an object, got \"' + value.toString() + '\" (type ' + typeof value + ')');\n  }\n}\n\n\nObject.defineProperty(ObjectParameterError.prototype, 'name', {\n  value: 'ObjectParameterError'\n});\n\nmodule.exports = ObjectParameterError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./mongooseError');\n\n\nclass ParallelValidateError extends MongooseError {\n  /**\n   * ParallelValidate Error constructor.\n   *\n   * @param {Document} doc\n   * @api private\n   */\n  constructor(doc) {\n    const msg = 'Can\\'t validate() the same doc multiple times in parallel. Document: ';\n    super(msg + doc._id);\n  }\n}\n\nObject.defineProperty(ParallelValidateError.prototype, 'name', {\n  value: 'ParallelValidateError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = ParallelValidateError;\n", "'use strict';\n\n/**\n * Creates an object that precomputes whether a given path has child fields in\n * the projection.\n *\n * #### Example:\n *\n *     const res = hasIncludedChildren({ 'a.b.c': 0 });\n *     res.a; // 1\n *     res['a.b']; // 1\n *     res['a.b.c']; // 1\n *     res['a.c']; // undefined\n *\n * @param {Object} fields\n * @api private\n */\n\nmodule.exports = function hasIncludedChildren(fields) {\n  const hasIncludedChildren = {};\n  const keys = Object.keys(fields);\n\n  for (const key of keys) {\n    if (key.indexOf('.') === -1) {\n      hasIncludedChildren[key] = 1;\n      continue;\n    }\n    const parts = key.split('.');\n    let c = parts[0];\n\n    for (let i = 0; i < parts.length; ++i) {\n      hasIncludedChildren[c] = 1;\n      if (i + 1 < parts.length) {\n        c = c + '.' + parts[i + 1];\n      }\n    }\n  }\n\n  return hasIncludedChildren;\n};\n", "'use strict';\n\nmodule.exports = function applyDefaults(doc, fields, exclude, hasIncludedChildren, isBeforeSetters, pathsToSkip) {\n  const paths = Object.keys(doc.$__schema.paths);\n  const plen = paths.length;\n\n  for (let i = 0; i < plen; ++i) {\n    let def;\n    let curPath = '';\n    const p = paths[i];\n\n    if (p === '_id' && doc.$__.skipId) {\n      continue;\n    }\n\n    const type = doc.$__schema.paths[p];\n    const path = type.splitPath();\n    const len = path.length;\n    let included = false;\n    let doc_ = doc._doc;\n    for (let j = 0; j < len; ++j) {\n      if (doc_ == null) {\n        break;\n      }\n\n      const piece = path[j];\n      curPath += (!curPath.length ? '' : '.') + piece;\n\n      if (exclude === true) {\n        if (curPath in fields) {\n          break;\n        }\n      } else if (exclude === false && fields && !included) {\n        const hasSubpaths = type.$isSingleNested || type.$isMongooseDocumentArray;\n        if (curPath in fields || (j === len - 1 && hasSubpaths && hasIncludedChildren != null && hasIncludedChildren[curPath])) {\n          included = true;\n        } else if (hasIncludedChildren != null && !hasIncludedChildren[curPath]) {\n          break;\n        }\n      }\n\n      if (j === len - 1) {\n        if (doc_[piece] !== void 0) {\n          break;\n        }\n\n        if (isBeforeSetters != null) {\n          if (typeof type.defaultValue === 'function') {\n            if (!type.defaultValue.$runBeforeSetters && isBeforeSetters) {\n              break;\n            }\n            if (type.defaultValue.$runBeforeSetters && !isBeforeSetters) {\n              break;\n            }\n          } else if (!isBeforeSetters) {\n            // Non-function defaults should always run **before** setters\n            continue;\n          }\n        }\n\n        if (pathsToSkip && pathsToSkip[curPath]) {\n          break;\n        }\n\n        if (fields && exclude !== null) {\n          if (exclude === true) {\n            // apply defaults to all non-excluded fields\n            if (p in fields) {\n              continue;\n            }\n\n            try {\n              def = type.getDefault(doc, false);\n            } catch (err) {\n              doc.invalidate(p, err);\n              break;\n            }\n\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              applyChangeTracking(doc, p);\n            }\n          } else if (included) {\n            // selected field\n            try {\n              def = type.getDefault(doc, false);\n            } catch (err) {\n              doc.invalidate(p, err);\n              break;\n            }\n\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              applyChangeTracking(doc, p);\n            }\n          }\n        } else {\n          try {\n            def = type.getDefault(doc, false);\n          } catch (err) {\n            doc.invalidate(p, err);\n            break;\n          }\n\n          if (typeof def !== 'undefined') {\n            doc_[piece] = def;\n            applyChangeTracking(doc, p);\n          }\n        }\n      } else {\n        doc_ = doc_[piece];\n      }\n    }\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction applyChangeTracking(doc, fullPath) {\n  doc.$__.activePaths.default(fullPath);\n  if (doc.$isSubdocument && doc.$isSingleNested && doc.$parent() != null) {\n    doc.$parent().$__.activePaths.default(doc.$__pathRelativeToParent(fullPath));\n  }\n}\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function cleanModifiedSubpaths(doc, path, options) {\n  options = options || {};\n  const skipDocArrays = options.skipDocArrays;\n\n  let deleted = 0;\n  if (!doc) {\n    return deleted;\n  }\n\n  for (const modifiedPath of Object.keys(doc.$__.activePaths.getStatePaths('modify'))) {\n    if (skipDocArrays) {\n      const schemaType = doc.$__schema.path(modifiedPath);\n      if (schemaType && schemaType.$isMongooseDocumentArray) {\n        continue;\n      }\n    }\n    if (modifiedPath.startsWith(path + '.')) {\n      doc.$__.activePaths.clearPath(modifiedPath);\n      ++deleted;\n\n      if (doc.$isSubdocument) {\n        const owner = doc.ownerDocument();\n        const fullPath = doc.$__fullPath(modifiedPath);\n        owner.$__.activePaths.clearPath(fullPath);\n      }\n    }\n  }\n  return deleted;\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nexports.internalToObjectOptions = {\n  transform: false,\n  virtuals: false,\n  getters: false,\n  _skipDepopulateTopLevel: true,\n  depopulate: true,\n  flattenDecimals: false,\n  useProjection: false\n};\n", "'use strict';\n\nconst clone = require('../../helpers/clone');\nconst documentSchemaSymbol = require('../../helpers/symbols').documentSchemaSymbol;\nconst internalToObjectOptions = require('../../options').internalToObjectOptions;\nconst utils = require('../../utils');\n\nlet Document;\nconst getSymbol = require('../../helpers/symbols').getSymbol;\nconst scopeSymbol = require('../../helpers/symbols').scopeSymbol;\n\nconst isPOJO = utils.isPOJO;\n\n/*!\n * exports\n */\n\nexports.compile = compile;\nexports.defineKey = defineKey;\n\nconst _isEmptyOptions = Object.freeze({\n  minimize: true,\n  virtuals: false,\n  getters: false,\n  transform: false\n});\n\nconst noDottedPathGetOptions = Object.freeze({\n  noDottedPath: true\n});\n\n/**\n * Compiles schemas.\n * @param {Object} tree\n * @param {Any} proto\n * @param {String} prefix\n * @param {Object} options\n * @api private\n */\n\nfunction compile(tree, proto, prefix, options) {\n  Document = Document || require('../../document');\n  const typeKey = options.typeKey;\n\n  for (const key of Object.keys(tree)) {\n    const limb = tree[key];\n\n    const hasSubprops = isPOJO(limb) &&\n      Object.keys(limb).length > 0 &&\n      (!limb[typeKey] || (typeKey === 'type' && isPOJO(limb.type) && limb.type.type));\n    const subprops = hasSubprops ? limb : null;\n\n    defineKey({ prop: key, subprops: subprops, prototype: proto, prefix: prefix, options: options });\n  }\n}\n\n/**\n * Defines the accessor named prop on the incoming prototype.\n * @param {Object} options\n * @param {String} options.prop\n * @param {Boolean} options.subprops\n * @param {Any} options.prototype\n * @param {String} [options.prefix]\n * @param {Object} options.options\n * @api private\n */\n\nfunction defineKey({ prop, subprops, prototype, prefix, options }) {\n  Document = Document || require('../../document');\n  const path = (prefix ? prefix + '.' : '') + prop;\n  prefix = prefix || '';\n  const useGetOptions = prefix ? Object.freeze({}) : noDottedPathGetOptions;\n\n  if (subprops) {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        const _this = this;\n        if (!this.$__.getters) {\n          this.$__.getters = {};\n        }\n\n        if (!this.$__.getters[path]) {\n          const nested = Object.create(Document.prototype, getOwnPropertyDescriptors(this));\n\n          // save scope for nested getters/setters\n          if (!prefix) {\n            nested.$__[scopeSymbol] = this;\n          }\n          nested.$__.nestedPath = path;\n\n          Object.defineProperty(nested, 'schema', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n\n          Object.defineProperty(nested, '$__schema', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n\n          Object.defineProperty(nested, documentSchemaSymbol, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n\n          Object.defineProperty(nested, 'toObject', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return clone(_this.get(path, null, {\n                virtuals: this &&\n                  this.schema &&\n                  this.schema.options &&\n                  this.schema.options.toObject &&\n                  this.schema.options.toObject.virtuals || null\n              }));\n            }\n          });\n\n          Object.defineProperty(nested, '$__get', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return _this.get(path, null, {\n                virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null\n              });\n            }\n          });\n\n          Object.defineProperty(nested, 'toJSON', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return _this.get(path, null, {\n                virtuals: this && this.schema && this.schema.options && this.schema.options.toJSON && this.schema.options.toJSON.virtuals || null\n              });\n            }\n          });\n\n          Object.defineProperty(nested, '$__isNested', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: true\n          });\n\n          Object.defineProperty(nested, '$isEmpty', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return Object.keys(this.get(path, null, _isEmptyOptions) || {}).length === 0;\n            }\n          });\n\n          Object.defineProperty(nested, '$__parent', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: this\n          });\n\n          compile(subprops, nested, path, options);\n          this.$__.getters[path] = nested;\n        }\n\n        return this.$__.getters[path];\n      },\n      set: function(v) {\n        if (v != null && v.$__isNested) {\n          // Convert top-level to POJO, but leave subdocs hydrated so `$set`\n          // can handle them. See gh-9293.\n          v = v.$__get();\n        } else if (v instanceof Document && !v.$__isNested) {\n          v = v.$toObject(internalToObjectOptions);\n        }\n        const doc = this.$__[scopeSymbol] || this;\n        doc.$set(path, v);\n      }\n    });\n  } else {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        return this[getSymbol].call(\n          this.$__[scopeSymbol] || this,\n          path,\n          null,\n          useGetOptions\n        );\n      },\n      set: function(v) {\n        this.$set.call(this.$__[scopeSymbol] || this, path, v);\n      }\n    });\n  }\n}\n\n// gets descriptors for all properties of `object`\n// makes all properties non-enumerable to match previous behavior to #2211\nfunction getOwnPropertyDescriptors(object) {\n  const result = {};\n\n  Object.getOwnPropertyNames(object).forEach(function(key) {\n    const skip = [\n      'isNew',\n      '$__',\n      '$errors',\n      'errors',\n      '_doc',\n      '$locals',\n      '$op',\n      '__parentArray',\n      '__index',\n      '$isDocumentArrayElement'\n    ].indexOf(key) === -1;\n    if (skip) {\n      return;\n    }\n\n    result[key] = Object.getOwnPropertyDescriptor(object, key);\n    result[key].enumerable = false;\n  });\n\n  return result;\n}\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst Binary = require('bson').Binary;\nconst isBsonType = require('./isBsonType');\nconst isMongooseObject = require('./isMongooseObject');\nconst MongooseError = require('../error');\nconst util = require('util');\n\nexports.flatten = flatten;\nexports.modifiedPaths = modifiedPaths;\n\n/*!\n * ignore\n */\n\nfunction flatten(update, path, options, schema) {\n  let keys;\n  if (update && isMongooseObject(update) && !Buffer.isBuffer(update)) {\n    keys = Object.keys(update.toObject({ transform: false, virtuals: false }) || {});\n  } else {\n    keys = Object.keys(update || {});\n  }\n\n  const numKeys = keys.length;\n  const result = {};\n  path = path ? path + '.' : '';\n\n  for (let i = 0; i < numKeys; ++i) {\n    const key = keys[i];\n    const val = update[key];\n    result[path + key] = val;\n\n    // Avoid going into mixed paths if schema is specified\n    const keySchema = schema && schema.path && schema.path(path + key);\n    const isNested = schema && schema.nested && schema.nested[path + key];\n    if (keySchema && keySchema.instance === 'Mixed') continue;\n\n    if (shouldFlatten(val)) {\n      if (options && options.skipArrays && Array.isArray(val)) {\n        continue;\n      }\n      const flat = flatten(val, path + key, options, schema);\n      for (const k in flat) {\n        result[k] = flat[k];\n      }\n      if (Array.isArray(val)) {\n        result[path + key] = val;\n      }\n    }\n\n    if (isNested) {\n      const paths = Object.keys(schema.paths);\n      for (const p of paths) {\n        if (p.startsWith(path + key + '.') && !result.hasOwnProperty(p)) {\n          result[p] = void 0;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\n/*!\n * ignore\n */\n\nfunction modifiedPaths(update, path, result, recursion = null) {\n  if (update == null || typeof update !== 'object') {\n    return;\n  }\n\n  if (recursion == null) {\n    recursion = {\n      raw: { update, path },\n      trace: new WeakSet()\n    };\n  }\n\n  if (recursion.trace.has(update)) {\n    throw new MongooseError(`a circular reference in the update value, updateValue:\n${util.inspect(recursion.raw.update, { showHidden: false, depth: 1 })}\nupdatePath: '${recursion.raw.path}'`);\n  }\n  recursion.trace.add(update);\n\n  const keys = Object.keys(update || {});\n  const numKeys = keys.length;\n  result = result || {};\n  path = path ? path + '.' : '';\n\n  for (let i = 0; i < numKeys; ++i) {\n    const key = keys[i];\n    let val = update[key];\n\n    const _path = path + key;\n    result[_path] = true;\n    if (!Buffer.isBuffer(val) && isMongooseObject(val)) {\n      val = val.toObject({ transform: false, virtuals: false });\n    }\n    if (shouldFlatten(val)) {\n      modifiedPaths(val, path + key, result, recursion);\n    }\n  }\n  recursion.trace.delete(update);\n\n  return result;\n}\n\n/*!\n * ignore\n */\n\nfunction shouldFlatten(val) {\n  return val &&\n      typeof val === 'object' &&\n      !(val instanceof Date) &&\n      !isBsonType(val, 'ObjectId') &&\n      (!Array.isArray(val) || val.length !== 0) &&\n      !(val instanceof Buffer) &&\n      !isBsonType(val, 'Decimal128') &&\n      !(val instanceof Binary);\n}\n", "'use strict';\n\n/**\n * Simplified lodash.get to work around the annoying null quirk. See:\n * https://github.com/lodash/lodash/issues/3659\n * @api private\n */\n\nmodule.exports = function get(obj, path, def) {\n  let parts;\n  let isPathArray = false;\n  if (typeof path === 'string') {\n    if (path.indexOf('.') === -1) {\n      const _v = getProperty(obj, path);\n      if (_v == null) {\n        return def;\n      }\n      return _v;\n    }\n\n    parts = path.split('.');\n  } else {\n    isPathArray = true;\n    parts = path;\n\n    if (parts.length === 1) {\n      const _v = getProperty(obj, parts[0]);\n      if (_v == null) {\n        return def;\n      }\n      return _v;\n    }\n  }\n  let rest = path;\n  let cur = obj;\n  for (const part of parts) {\n    if (cur == null) {\n      return def;\n    }\n\n    // `lib/cast.js` depends on being able to get dotted paths in updates,\n    // like `{ $set: { 'a.b': 42 } }`\n    if (!isPathArray && cur[rest] != null) {\n      return cur[rest];\n    }\n\n    cur = getProperty(cur, part);\n\n    if (!isPathArray) {\n      rest = rest.substr(part.length + 1);\n    }\n  }\n\n  return cur == null ? def : cur;\n};\n\nfunction getProperty(obj, prop) {\n  if (obj == null) {\n    return obj;\n  }\n  if (obj instanceof Map) {\n    return obj.get(prop);\n  }\n  return obj[prop];\n}\n", "'use strict';\n\nconst isBsonType = require('../isBsonType');\n\nmodule.exports = function areDiscriminatorValuesEqual(a, b) {\n  if (typeof a === 'string' && typeof b === 'string') {\n    return a === b;\n  }\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a === b;\n  }\n  if (isBsonType(a, 'ObjectId') && isBsonType(b, 'ObjectId')) {\n    return a.toString() === b.toString();\n  }\n  return false;\n};\n", "'use strict';\n\nconst areDiscriminatorValuesEqual = require('./areDiscriminatorValuesEqual');\n\n/**\n * returns discriminator by discriminatorMapping.value\n *\n * @param {Schema} schema\n * @param {string} value\n * @api private\n */\n\nmodule.exports = function getSchemaDiscriminatorByValue(schema, value) {\n  if (schema == null || schema.discriminators == null) {\n    return null;\n  }\n  for (const key of Object.keys(schema.discriminators)) {\n    const discriminatorSchema = schema.discriminators[key];\n    if (discriminatorSchema.discriminatorMapping == null) {\n      continue;\n    }\n    if (areDiscriminatorValuesEqual(discriminatorSchema.discriminatorMapping.value, value)) {\n      return discriminatorSchema;\n    }\n  }\n  return null;\n};\n", "'use strict';\n\nconst get = require('../get');\nconst getSchemaDiscriminatorByValue = require('../discriminator/getSchemaDiscriminatorByValue');\n\n/**\n * Like `schema.path()`, except with a document, because impossible to\n * determine path type without knowing the embedded discriminator key.\n *\n * @param {Document} doc\n * @param {String|String[]} path\n * @param {Object} [options]\n * @api private\n */\n\nmodule.exports = function getEmbeddedDiscriminatorPath(doc, path, options) {\n  options = options || {};\n  const typeOnly = options.typeOnly;\n  const parts = Array.isArray(path) ?\n    path :\n    (path.indexOf('.') === -1 ? [path] : path.split('.'));\n  let schemaType = null;\n  let type = 'adhocOrUndefined';\n\n  const schema = getSchemaDiscriminatorByValue(doc.schema, doc.get(doc.schema.options.discriminatorKey)) || doc.schema;\n\n  for (let i = 0; i < parts.length; ++i) {\n    const subpath = parts.slice(0, i + 1).join('.');\n    schemaType = schema.path(subpath);\n    if (schemaType == null) {\n      type = 'adhocOrUndefined';\n      continue;\n    }\n    if (schemaType.instance === 'Mixed') {\n      return typeOnly ? 'real' : schemaType;\n    }\n    type = schema.pathType(subpath);\n    if ((schemaType.$isSingleNested || schemaType.$isMongooseDocumentArrayElement) &&\n    schemaType.schema.discriminators != null) {\n      const discriminators = schemaType.schema.discriminators;\n      const discriminatorKey = doc.get(subpath + '.' +\n        get(schemaType, 'schema.options.discriminatorKey'));\n      if (discriminatorKey == null || discriminators[discriminatorKey] == null) {\n        continue;\n      }\n      const rest = parts.slice(i + 1).join('.');\n      return getEmbeddedDiscriminatorPath(doc.get(subpath), rest, options);\n    }\n  }\n\n  // Are we getting the whole schema or just the type, 'real', 'nested', etc.\n  return typeOnly ? type : schemaType;\n};\n", "'use strict';\n\nconst get = require('../get');\n\nmodule.exports = function getKeysInSchemaOrder(schema, val, path) {\n  const schemaKeys = path != null ? Object.keys(get(schema.tree, path, {})) : Object.keys(schema.tree);\n  const valKeys = new Set(Object.keys(val));\n\n  let keys;\n  if (valKeys.size > 1) {\n    keys = new Set();\n    for (const key of schemaKeys) {\n      if (valKeys.has(key)) {\n        keys.add(key);\n      }\n    }\n    for (const key of valKeys) {\n      if (!keys.has(key)) {\n        keys.add(key);\n      }\n    }\n    keys = Array.from(keys);\n  } else {\n    keys = Array.from(valKeys);\n  }\n\n  return keys;\n};\n", "'use strict';\n\n/**\n * Find the `strict` mode setting for the deepest subdocument along a given path\n * to ensure we have the correct default value for `strict`. When setting values\n * underneath a subdocument, we should use the subdocument's `strict` setting by\n * default, not the top-level document's.\n *\n * @param {Schema} schema\n * @param {String[]} parts\n * @returns {boolean | 'throw' | undefined}\n */\n\nmodule.exports = function getSubdocumentStrictValue(schema, parts) {\n  if (parts.length === 1) {\n    return undefined;\n  }\n  let cur = parts[0];\n  let strict = undefined;\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const curSchemaType = schema.path(cur);\n    if (curSchemaType && curSchemaType.schema) {\n      strict = curSchemaType.schema.options.strict;\n      schema = curSchemaType.schema;\n      cur = curSchemaType.$isMongooseDocumentArray && !isNaN(parts[i + 1]) ? '' : parts[i + 1];\n    } else {\n      cur += cur.length ? ('.' + parts[i + 1]) : parts[i + 1];\n    }\n  }\n\n  return strict;\n};\n", "'use strict';\n\nconst utils = require('../../utils');\n\nconst keysToSkip = new Set(['__index', '__parentArray', '_doc']);\n\n/**\n * Using spread operator on a Mongoose document gives you a\n * POJO that has a tendency to cause infinite recursion. So\n * we use this function on `set()` to prevent that.\n */\n\nmodule.exports = function handleSpreadDoc(v, includeExtraKeys) {\n  if (utils.isPOJO(v) && v.$__ != null && v._doc != null) {\n    if (includeExtraKeys) {\n      const extraKeys = {};\n      for (const key of Object.keys(v)) {\n        if (typeof key === 'symbol') {\n          continue;\n        }\n        if (key[0] === '$') {\n          continue;\n        }\n        if (keysToSkip.has(key)) {\n          continue;\n        }\n        extraKeys[key] = v[key];\n      }\n      return { ...v._doc, ...extraKeys };\n    }\n    return v._doc;\n  }\n\n  return v;\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function isDefiningProjection(val) {\n  if (val == null) {\n    // `undefined` or `null` become exclusive projections\n    return true;\n  }\n  if (typeof val === 'object') {\n    // Only cases where a value does **not** define whether the whole projection\n    // is inclusive or exclusive are `$meta` and `$slice`.\n    return !('$meta' in val) && !('$slice' in val);\n  }\n  return true;\n};\n", "'use strict';\n\nconst isDefiningProjection = require('./isDefiningProjection');\n\n/*!\n * ignore\n */\n\nmodule.exports = function isExclusive(projection) {\n  if (projection == null) {\n    return null;\n  }\n\n  const keys = Object.keys(projection);\n  let ki = keys.length;\n  let exclude = null;\n\n  if (ki === 1 && keys[0] === '_id') {\n    exclude = !projection._id;\n  } else {\n    while (ki--) {\n      // Does this projection explicitly define inclusion/exclusion?\n      // Explicitly avoid `$meta` and `$slice`\n      const key = keys[ki];\n      if (key !== '_id' && isDefiningProjection(projection[key])) {\n        exclude = (projection[key] != null && typeof projection[key] === 'object') ?\n          isExclusive(projection[key]) :\n          !projection[key];\n        break;\n      }\n    }\n  }\n\n  return exclude;\n};\n", "'use strict';\n\nconst utils = require('../../utils');\n\n/**\n * If populating a path within a document array, make sure each\n * subdoc within the array knows its subpaths are populated.\n *\n * #### Example:\n *\n *     const doc = await Article.findOne().populate('comments.author');\n *     doc.comments[0].populated('author'); // Should be set\n *\n * @param {Document} doc\n * @param {Object} [populated]\n * @api private\n */\n\nmodule.exports = function markArraySubdocsPopulated(doc, populated) {\n  if (doc._id == null || populated == null || populated.length === 0) {\n    return;\n  }\n\n  const id = String(doc._id);\n  for (const item of populated) {\n    if (item.isVirtual) {\n      continue;\n    }\n    const path = item.path;\n    const pieces = path.split('.');\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      const subpath = pieces.slice(0, i + 1).join('.');\n      const rest = pieces.slice(i + 1).join('.');\n      const val = doc.get(subpath);\n      if (val == null) {\n        continue;\n      }\n\n      if (utils.isMongooseDocumentArray(val)) {\n        for (let j = 0; j < val.length; ++j) {\n          val[j].populated(rest, item._docs[id] == null ? void 0 : item._docs[id][j], item);\n        }\n        break;\n      }\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = function checkEmbeddedDiscriminatorKeyProjection(userProjection, path, schema, selected, addedPaths) {\n  const userProjectedInPath = Object.keys(userProjection).\n    reduce((cur, key) => cur || key.startsWith(path + '.'), false);\n  const _discriminatorKey = path + '.' + schema.options.discriminatorKey;\n  if (!userProjectedInPath &&\n      addedPaths.length === 1 &&\n      addedPaths[0] === _discriminatorKey) {\n    selected.splice(selected.indexOf(_discriminatorKey), 1);\n  }\n};\n", "'use strict';\n\nconst areDiscriminatorValuesEqual = require('./areDiscriminatorValuesEqual');\n\n/**\n * returns discriminator by discriminatorMapping.value\n *\n * @param {Object} discriminators\n * @param {string} value\n * @api private\n */\n\nmodule.exports = function getDiscriminatorByValue(discriminators, value) {\n  if (discriminators == null) {\n    return null;\n  }\n  for (const name of Object.keys(discriminators)) {\n    const it = discriminators[name];\n    if (\n      it.schema &&\n      it.schema.discriminatorMapping &&\n      areDiscriminatorValuesEqual(it.schema.discriminatorMapping.value, value)\n    ) {\n      return it;\n    }\n  }\n  return null;\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function isPathSelectedInclusive(fields, path) {\n  const chunks = path.split('.');\n  let cur = '';\n  let j;\n  let keys;\n  let numKeys;\n  for (let i = 0; i < chunks.length; ++i) {\n    cur += cur.length ? '.' : '' + chunks[i];\n    if (fields[cur]) {\n      keys = Object.keys(fields);\n      numKeys = keys.length;\n      for (j = 0; j < numKeys; ++j) {\n        if (keys[i].indexOf(cur + '.') === 0 && keys[i].indexOf(path) !== 0) {\n          continue;\n        }\n      }\n      return true;\n    }\n  }\n\n  return false;\n};\n", "'use strict';\n\n/*!\n * Module dependencies\n */\n\nconst checkEmbeddedDiscriminatorKeyProjection =\n  require('./helpers/discriminator/checkEmbeddedDiscriminatorKeyProjection');\nconst get = require('./helpers/get');\nconst getDiscriminatorByValue =\n  require('./helpers/discriminator/getDiscriminatorByValue');\nconst isDefiningProjection = require('./helpers/projection/isDefiningProjection');\nconst clone = require('./helpers/clone');\nconst isPathSelectedInclusive = require('./helpers/projection/isPathSelectedInclusive');\n\n/**\n * Prepare a set of path options for query population.\n *\n * @param {Query} query\n * @param {Object} options\n * @return {Array}\n */\n\nexports.preparePopulationOptions = function preparePopulationOptions(query, options) {\n  const _populate = query.options.populate;\n  const pop = Object.keys(_populate).reduce((vals, key) => vals.concat([_populate[key]]), []);\n\n  // lean options should trickle through all queries\n  if (options.lean != null) {\n    pop\n      .filter(p => (p && p.options && p.options.lean) == null)\n      .forEach(makeLean(options.lean));\n  }\n\n  pop.forEach(opts => {\n    opts._localModel = query.model;\n  });\n\n  return pop;\n};\n\n/**\n * Prepare a set of path options for query population. This is the MongooseQuery\n * version\n *\n * @param {Query} query\n * @param {Object} options\n * @return {Array}\n */\n\nexports.preparePopulationOptionsMQ = function preparePopulationOptionsMQ(query, options) {\n  const _populate = query._mongooseOptions.populate;\n  const pop = Object.keys(_populate).reduce((vals, key) => vals.concat([_populate[key]]), []);\n\n  // lean options should trickle through all queries\n  if (options.lean != null) {\n    pop\n      .filter(p => (p && p.options && p.options.lean) == null)\n      .forEach(makeLean(options.lean));\n  }\n\n  const session = query && query.options && query.options.session || null;\n  if (session != null) {\n    pop.forEach(path => {\n      if (path.options == null) {\n        path.options = { session: session };\n        return;\n      }\n      if (!('session' in path.options)) {\n        path.options.session = session;\n      }\n    });\n  }\n\n  const projection = query._fieldsForExec();\n  pop.forEach(p => {\n    p._queryProjection = projection;\n  });\n  pop.forEach(opts => {\n    opts._localModel = query.model;\n  });\n\n  return pop;\n};\n\n/**\n * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,\n * it returns an instance of the given model.\n *\n * @param {Model}  model\n * @param {Object} doc\n * @param {Object} fields\n *\n * @return {Document}\n */\nexports.createModel = function createModel(model, doc, fields, userProvidedFields, options) {\n  model.hooks.execPreSync('createModel', doc);\n  const discriminatorMapping = model.schema ?\n    model.schema.discriminatorMapping :\n    null;\n\n  const key = discriminatorMapping && discriminatorMapping.isRoot ?\n    discriminatorMapping.key :\n    null;\n\n  const value = doc[key];\n  if (key && value && model.discriminators) {\n    const discriminator = model.discriminators[value] || getDiscriminatorByValue(model.discriminators, value);\n    if (discriminator) {\n      const _fields = clone(userProvidedFields);\n      exports.applyPaths(_fields, discriminator.schema);\n      return new discriminator(undefined, _fields, true);\n    }\n  }\n\n  const _opts = {\n    skipId: true,\n    isNew: false,\n    willInit: true\n  };\n  if (options != null && 'defaults' in options) {\n    _opts.defaults = options.defaults;\n  }\n  return new model(undefined, fields, _opts);\n};\n\n/*!\n * ignore\n */\n\nexports.createModelAndInit = function createModelAndInit(model, doc, fields, userProvidedFields, options, populatedIds, callback) {\n  const initOpts = populatedIds ?\n    { populated: populatedIds } :\n    undefined;\n\n  const casted = exports.createModel(model, doc, fields, userProvidedFields, options);\n  try {\n    casted.$init(doc, initOpts, callback);\n  } catch (error) {\n    callback(error, casted);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.applyPaths = function applyPaths(fields, schema) {\n  // determine if query is selecting or excluding fields\n  let exclude;\n  let keys;\n  const minusPathsToSkip = new Set();\n\n  if (fields) {\n    keys = Object.keys(fields);\n\n    // Collapse minus paths\n    const minusPaths = [];\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (keys[i][0] !== '-') {\n        continue;\n      }\n\n      delete fields[key];\n      if (key === '-_id') {\n        fields['_id'] = 0;\n      } else {\n        minusPaths.push(key.slice(1));\n      }\n    }\n\n    keys = Object.keys(fields);\n    for (let keyIndex = 0; keyIndex < keys.length; ++keyIndex) {\n      if (keys[keyIndex][0] === '+') {\n        continue;\n      }\n      const field = fields[keys[keyIndex]];\n      // Skip `$meta` and `$slice`\n      if (!isDefiningProjection(field)) {\n        continue;\n      }\n      // `_id: 1, name: 0` is a mixed inclusive/exclusive projection in\n      // MongoDB 4.0 and earlier, but not in later versions.\n      if (keys[keyIndex] === '_id' && keys.length > 1) {\n        continue;\n      }\n      exclude = !field;\n      break;\n    }\n\n    // Potentially add back minus paths based on schema-level path config\n    // and whether the projection is inclusive\n    for (const path of minusPaths) {\n      const type = schema.path(path);\n      // If the path isn't selected by default or the projection is not\n      // inclusive, minus path is treated as equivalent to `key: 0`.\n      // But we also allow using `-name` to remove `name` from an inclusive\n      // projection if `name` has schema-level `select: true`.\n      if ((!type || !type.selected) || exclude !== false) {\n        fields[path] = 0;\n      } else if (type && type.selected && exclude === false) {\n        // Make a note of minus paths that are overwriting paths that are\n        // included by default.\n        minusPathsToSkip.add(path);\n      }\n    }\n  }\n\n  // if selecting, apply default schematype select:true fields\n  // if excluding, apply schematype select:false fields\n  const selected = [];\n  const excluded = [];\n  const stack = [];\n\n  analyzeSchema(schema);\n  switch (exclude) {\n    case true:\n      for (const fieldName of excluded) {\n        fields[fieldName] = 0;\n      }\n      break;\n    case false:\n      if (schema &&\n          schema.paths['_id'] &&\n          schema.paths['_id'].options &&\n          schema.paths['_id'].options.select === false) {\n        fields._id = 0;\n      }\n\n      for (const fieldName of selected) {\n        if (minusPathsToSkip.has(fieldName)) {\n          continue;\n        }\n        if (isPathSelectedInclusive(fields, fieldName)) {\n          continue;\n        }\n        fields[fieldName] = fields[fieldName] || 1;\n      }\n      break;\n    case undefined:\n      if (fields == null) {\n        break;\n      }\n      // Any leftover plus paths must in the schema, so delete them (gh-7017)\n      for (const key of Object.keys(fields || {})) {\n        if (key.startsWith('+')) {\n          delete fields[key];\n        }\n      }\n\n      // user didn't specify fields, implies returning all fields.\n      // only need to apply excluded fields and delete any plus paths\n      for (const fieldName of excluded) {\n        if (fields[fieldName] != null) {\n          // Skip applying default projections to fields with non-defining\n          // projections, like `$slice`\n          continue;\n        }\n        fields[fieldName] = 0;\n      }\n      break;\n  }\n\n  function analyzeSchema(schema, prefix) {\n    prefix || (prefix = '');\n\n    // avoid recursion\n    if (stack.indexOf(schema) !== -1) {\n      return [];\n    }\n    stack.push(schema);\n\n    const addedPaths = [];\n    schema.eachPath(function(path, type) {\n      if (prefix) path = prefix + '.' + path;\n      if (type.$isSchemaMap || path.endsWith('.$*')) {\n        const plusPath = '+' + path;\n        const hasPlusPath = fields && plusPath in fields;\n        if (type.options && type.options.select === false && !hasPlusPath) {\n          excluded.push(path);\n        }\n        return;\n      }\n      let addedPath = analyzePath(path, type);\n      // arrays\n      if (addedPath == null && !Array.isArray(type) && type.$isMongooseArray && !type.$isMongooseDocumentArray) {\n        addedPath = analyzePath(path, type.caster);\n      }\n      if (addedPath != null) {\n        addedPaths.push(addedPath);\n      }\n\n      // nested schemas\n      if (type.schema) {\n        const _addedPaths = analyzeSchema(type.schema, path);\n\n        // Special case: if discriminator key is the only field that would\n        // be projected in, remove it.\n        if (exclude === false) {\n          checkEmbeddedDiscriminatorKeyProjection(fields, path, type.schema,\n            selected, _addedPaths);\n        }\n      }\n    });\n    stack.pop();\n    return addedPaths;\n  }\n\n  function analyzePath(path, type) {\n    if (fields == null) {\n      return;\n    }\n\n    // If schema-level selected not set, nothing to do\n    if (typeof type.selected !== 'boolean') {\n      return;\n    }\n\n    // User overwriting default exclusion\n    if (type.selected === false && fields[path]) {\n      return;\n    }\n\n    // If set to 0, we're explicitly excluding the discriminator key. Can't do this for all fields,\n    // because we have tests that assert that using `-path` to exclude schema-level `select: true`\n    // fields counts as an exclusive projection. See gh-11546\n    if (!exclude && type.selected && path === schema.options.discriminatorKey && fields[path] != null && !fields[path]) {\n      delete fields[path];\n      return;\n    }\n\n    if (exclude === false && type.selected && fields[path] != null && !fields[path]) {\n      delete fields[path];\n      return;\n    }\n\n    const plusPath = '+' + path;\n    const hasPlusPath = fields && plusPath in fields;\n    if (hasPlusPath) {\n      // forced inclusion\n      delete fields[plusPath];\n\n      // if there are other fields being included, add this one\n      // if no other included fields, leave this out (implied inclusion)\n      if (exclude === false && keys.length > 1 && !~keys.indexOf(path)) {\n        fields[path] = 1;\n      }\n\n      return;\n    }\n\n    // check for parent exclusions\n    const pieces = path.split('.');\n    let cur = '';\n    for (let i = 0; i < pieces.length; ++i) {\n      cur += cur.length ? '.' + pieces[i] : pieces[i];\n      if (excluded.indexOf(cur) !== -1) {\n        return;\n      }\n    }\n\n    // Special case: if user has included a parent path of a discriminator key,\n    // don't explicitly project in the discriminator key because that will\n    // project out everything else under the parent path\n    if (!exclude && (type && type.options && type.options.$skipDiscriminatorCheck || false)) {\n      let cur = '';\n      for (let i = 0; i < pieces.length; ++i) {\n        cur += (cur.length === 0 ? '' : '.') + pieces[i];\n        const projection = get(fields, cur, false) || get(fields, cur + '.$', false);\n        if (projection && typeof projection !== 'object') {\n          return;\n        }\n      }\n    }\n\n    (type.selected ? selected : excluded).push(path);\n    return path;\n  }\n};\n\n/**\n * Set each path query option to lean\n *\n * @param {Object} option\n */\n\nfunction makeLean(val) {\n  return function(option) {\n    option.options || (option.options = {});\n\n    if (val != null && Array.isArray(val.virtuals)) {\n      val = Object.assign({}, val);\n      val.virtuals = val.virtuals.\n        filter(path => typeof path === 'string' && path.startsWith(option.path + '.')).\n        map(path => path.slice(option.path.length + 1));\n    }\n\n    option.options.lean = val;\n  };\n}\n", "'use strict';\nfunction isPromise(val) {\n  return !!val && (typeof val === 'object' || typeof val === 'function') && typeof val.then === 'function';\n}\n\nmodule.exports = isPromise;\n", "'use strict';\n\nconst dotRE = /\\./g;\nmodule.exports = function parentPaths(path) {\n  if (path.indexOf('.') === -1) {\n    return [path];\n  }\n  const pieces = path.split(dotRE);\n  const len = pieces.length;\n  const ret = new Array(len);\n  let cur = '';\n  for (let i = 0; i < len; ++i) {\n    cur += (cur.length !== 0) ? '.' + pieces[i] : pieces[i];\n    ret[i] = cur;\n  }\n\n  return ret;\n};\n", "'use strict';\n\n/**\n * Find the deepest subdocument along a given path to ensure setter functions run\n * with the correct subdocument as `this`. If no subdocuments, returns the top-level\n * document.\n *\n * @param {Document} doc\n * @param {String[]} parts\n * @param {Schema} schema\n * @returns Document\n */\n\nmodule.exports = function getDeepestSubdocumentForPath(doc, parts, schema) {\n  let curPath = parts[0];\n  let curSchema = schema;\n  let subdoc = doc;\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const curSchemaType = curSchema.path(curPath);\n    if (curSchemaType && curSchemaType.schema) {\n      let newSubdoc = subdoc.get(curPath);\n      curSchema = curSchemaType.schema;\n      curPath = parts[i + 1];\n      if (Array.isArray(newSubdoc) && !isNaN(curPath)) {\n        newSubdoc = newSubdoc[curPath];\n        curPath = '';\n      }\n      if (newSubdoc == null) {\n        break;\n      }\n      subdoc = newSubdoc;\n    } else {\n      curPath += curPath.length ? '.' + parts[i + 1] : parts[i + 1];\n    }\n  }\n\n  return subdoc;\n};\n", "'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst util = require('util');\nconst utils = require('../utils');\n\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  if (typeof skipId === 'object' && skipId != null && options == null) {\n    options = skipId;\n    skipId = undefined;\n  }\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    const parentOptions = { isNew: parent.isNew };\n    if ('defaults' in parent.$__) {\n      parentOptions.defaults = parent.$__.defaults;\n    }\n    options = Object.assign(parentOptions, options);\n  }\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n  Document.call(this, value, fields, skipId, options);\n\n  delete this.$__.priorDoc;\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nObject.defineProperty(Subdocument.prototype, '$isSubdocument', {\n  configurable: false,\n  writable: false,\n  value: true\n});\n\nObject.defineProperty(Subdocument.prototype, '$isSingleNested', {\n  configurable: false,\n  writable: false,\n  value: true\n});\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * #### Note:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = async function save(options) {\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    utils.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return new Promise((resolve, reject) => {\n    this.$__save((err) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(this);\n    });\n  });\n};\n\n/**\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n * @param {String} path\n * @method $__fullPath\n * @memberOf Subdocument\n * @instance\n * @returns {String}\n * @api private\n */\n\nSubdocument.prototype.$__fullPath = function(path) {\n  if (!this.$__.fullPath) {\n    this.ownerDocument();\n  }\n\n  return path ?\n    this.$__.fullPath + '.' + path :\n    this.$__.fullPath;\n};\n\n/**\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n * @param {String} p\n * @returns {String}\n * @method $__pathRelativeToParent\n * @memberOf Subdocument\n * @instance\n * @api private\n */\n\nSubdocument.prototype.$__pathRelativeToParent = function(p) {\n  if (p == null) {\n    return this.$basePath;\n  }\n  return [this.$basePath, p].join('.');\n};\n\n/**\n * Used as a stub for middleware\n *\n * #### Note:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$isValid = function(path) {\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    return parent.$isValid(fullPath);\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.markModified = function(path) {\n  Document.prototype.markModified.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent == null || fullPath == null) {\n    return;\n  }\n\n  const myPath = this.$__pathRelativeToParent().replace(/\\.$/, '');\n  if (parent.isDirectModified(myPath) || this.isNew) {\n    return;\n  }\n  this.$__parent.markModified(fullPath, this);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.isModified = function(paths, modifiedPaths) {\n  const parent = this.$parent();\n  if (parent != null) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = (Array.isArray(paths) ? paths : paths.split(' '));\n      paths = paths.map(p => this.$__pathRelativeToParent(p)).filter(p => p != null);\n    } else if (!paths) {\n      paths = this.$__pathRelativeToParent();\n    }\n\n    return parent.$isModified(paths, modifiedPaths);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @memberOf Subdocument\n */\n\nSubdocument.prototype.$markValid = function(path) {\n  Document.prototype.$markValid.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.$markValid(fullPath);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function(path, err, val) {\n  Document.prototype.invalidate.call(this, path, err, val);\n\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.invalidate(fullPath, err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError' || fullPath == null) {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.$ignore(fullPath);\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this; // eslint-disable-line consistent-this\n  const paths = [];\n  const seenDocs = new Set([parent]);\n\n  while (true) {\n    if (typeof parent.$__pathRelativeToParent !== 'function') {\n      break;\n    }\n    paths.unshift(parent.$__pathRelativeToParent(void 0, true));\n    const _parent = parent.$parent();\n    if (_parent == null) {\n      break;\n    }\n    parent = _parent;\n    if (seenDocs.has(parent)) {\n      throw new Error('Infinite subdocument loop: subdoc with _id ' + parent._id + ' is a parent of itself');\n    }\n\n    seenDocs.add(parent);\n  }\n\n  this.$__.fullPath = paths.join('.');\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$__fullPathWithIndexes = function() {\n  let parent = this; // eslint-disable-line consistent-this\n  const paths = [];\n  const seenDocs = new Set([parent]);\n\n  while (true) {\n    if (typeof parent.$__pathRelativeToParent !== 'function') {\n      break;\n    }\n    paths.unshift(parent.$__pathRelativeToParent(void 0, false));\n    const _parent = parent.$parent();\n    if (_parent == null) {\n      break;\n    }\n    parent = _parent;\n    if (seenDocs.has(parent)) {\n      throw new Error('Infinite subdocument loop: subdoc with _id ' + parent._id + ' is a parent of itself');\n    }\n\n    seenDocs.add(parent);\n  }\n\n  return paths.join('.');\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function() {\n  return this.$__parent;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n * @method $parent\n */\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n\n/**\n * no-op for hooks\n * @param {Function} cb\n * @method $__deleteOne\n * @memberOf Subdocument\n * @instance\n * @api private\n */\n\nSubdocument.prototype.$__deleteOne = function(cb) {\n  if (cb == null) {\n    return;\n  }\n  return cb(null, this);\n};\n\n/**\n * ignore\n * @method $__removeFromParent\n * @memberOf Subdocument\n * @instance\n * @api private\n */\n\nSubdocument.prototype.$__removeFromParent = function() {\n  this.$__parent.set(this.$basePath, null);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.deleteOne = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$__removeFromParent();\n  }\n\n  return this.$__deleteOne(callback);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +\n    '`doc.populate(\"nested.path\")`');\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n */\n\nSubdocument.prototype.inspect = function() {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  Subdocument.prototype[util.inspect.custom] = Subdocument.prototype.inspect;\n}\n\n/**\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.$removeListener('save', emitRemove);\n    owner.$removeListener('deleteOne', emitRemove);\n    sub.emit('deleteOne', sub);\n    sub.constructor.emit('deleteOne', sub);\n    owner = sub = null;\n  }\n\n  owner.$on('save', emitRemove);\n  owner.$on('deleteOne', emitRemove);\n}\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst Subdocument = require('./subdocument');\nconst utils = require('../utils');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\n/**\n * A constructor.\n *\n * @param {Object} obj js object returned from the db\n * @param {MongooseDocumentArray} parentArr the parent array of this document\n * @param {Boolean} skipId\n * @param {Object} fields\n * @param {Number} index\n * @inherits Document\n * @api private\n */\n\nfunction ArraySubdocument(obj, parentArr, skipId, fields, index) {\n  if (utils.isMongooseDocumentArray(parentArr)) {\n    this.__parentArray = parentArr;\n    this[documentArrayParent] = parentArr.$parent();\n  } else {\n    this.__parentArray = undefined;\n    this[documentArrayParent] = undefined;\n  }\n  this.$setIndex(index);\n  this.$__parent = this[documentArrayParent];\n\n  let options;\n  if (typeof skipId === 'object' && skipId != null) {\n    options = { isNew: true, ...skipId };\n    skipId = undefined;\n  } else {\n    options = { isNew: true };\n  }\n\n  Subdocument.call(this, obj, fields, this[documentArrayParent], skipId, options);\n}\n\n/*!\n * Inherit from Subdocument\n */\nArraySubdocument.prototype = Object.create(Subdocument.prototype);\nArraySubdocument.prototype.constructor = ArraySubdocument;\n\nObject.defineProperty(ArraySubdocument.prototype, '$isSingleNested', {\n  configurable: false,\n  writable: false,\n  value: false\n});\n\nObject.defineProperty(ArraySubdocument.prototype, '$isDocumentArrayElement', {\n  configurable: false,\n  writable: false,\n  value: true\n});\n\nfor (const i in EventEmitter.prototype) {\n  ArraySubdocument[i] = EventEmitter.prototype[i];\n}\n\n/*!\n * ignore\n */\n\nArraySubdocument.prototype.$setIndex = function(index) {\n  this.__index = index;\n\n  if (this.$__ != null && this.$__.validationError != null) {\n    const keys = Object.keys(this.$__.validationError.errors);\n    for (const key of keys) {\n      this.invalidate(key, this.$__.validationError.errors[key]);\n    }\n  }\n};\n\n/*!\n * ignore\n */\n\nArraySubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' +\n    '`doc.populate(\"arr.0.path\")`');\n};\n\n/*!\n * ignore\n */\n\nArraySubdocument.prototype.$__removeFromParent = function() {\n  const _id = this._doc._id;\n  if (!_id) {\n    throw new Error('For your own good, Mongoose does not know ' +\n      'how to remove an ArraySubdocument that has no _id');\n  }\n  this.__parentArray.pull({ _id: _id });\n};\n\n/**\n * Returns the full path to this document. If optional `path` is passed, it is appended to the full path.\n *\n * @param {String} [path]\n * @param {Boolean} [skipIndex] Skip adding the array index. For example `arr.foo` instead of `arr.0.foo`.\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf ArraySubdocument\n * @instance\n */\n\nArraySubdocument.prototype.$__fullPath = function(path, skipIndex) {\n  if (this.__index == null) {\n    return null;\n  }\n  if (!this.$__.fullPath) {\n    this.ownerDocument();\n  }\n\n  if (skipIndex) {\n    return path ?\n      this.$__.fullPath + '.' + path :\n      this.$__.fullPath;\n  }\n\n  return path ?\n    this.$__.fullPath + '.' + this.__index + '.' + path :\n    this.$__.fullPath + '.' + this.__index;\n};\n\n/**\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n * @method $__pathRelativeToParent\n * @memberOf ArraySubdocument\n * @instance\n * @api private\n */\n\nArraySubdocument.prototype.$__pathRelativeToParent = function(path, skipIndex) {\n  if (this.__index == null) {\n    return null;\n  }\n  if (skipIndex) {\n    return path == null ? this.__parentArray.$path() : this.__parentArray.$path() + '.' + path;\n  }\n  if (path == null) {\n    return this.__parentArray.$path() + '.' + this.__index;\n  }\n  return this.__parentArray.$path() + '.' + this.__index + '.' + path;\n};\n\n/**\n * Returns this sub-documents parent document.\n * @method $parent\n * @memberOf ArraySubdocument\n * @instance\n * @api public\n */\n\nArraySubdocument.prototype.$parent = function() {\n  return this[documentArrayParent];\n};\n\n/**\n * Returns this subdocument's parent array.\n *\n * #### Example:\n *\n *     const Test = mongoose.model('Test', new Schema({\n *       docArr: [{ name: String }]\n *     }));\n *     const doc = new Test({ docArr: [{ name: 'test subdoc' }] });\n *\n *     doc.docArr[0].parentArray() === doc.docArr; // true\n *\n * @api public\n * @method parentArray\n * @returns DocumentArray\n */\n\nArraySubdocument.prototype.parentArray = function() {\n  return this.__parentArray;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ArraySubdocument;\n", "'use strict';\n\nconst Document = require('../../../document');\nconst ArraySubdocument = require('../../ArraySubdocument');\nconst MongooseError = require('../../../error/mongooseError');\nconst cleanModifiedSubpaths = require('../../../helpers/document/cleanModifiedSubpaths');\nconst clone = require('../../../helpers/clone');\nconst internalToObjectOptions = require('../../../options').internalToObjectOptions;\nconst mpath = require('mpath');\nconst utils = require('../../../utils');\nconst isBsonType = require('../../../helpers/isBsonType');\n\nconst arrayAtomicsSymbol = require('../../../helpers/symbols').arrayAtomicsSymbol;\nconst arrayParentSymbol = require('../../../helpers/symbols').arrayParentSymbol;\nconst arrayPathSymbol = require('../../../helpers/symbols').arrayPathSymbol;\nconst arraySchemaSymbol = require('../../../helpers/symbols').arraySchemaSymbol;\nconst populateModelSymbol = require('../../../helpers/symbols').populateModelSymbol;\nconst slicedSymbol = Symbol('mongoose#Array#sliced');\n\nconst _basePush = Array.prototype.push;\n\n/*!\n * ignore\n */\n\nconst methods = {\n  /**\n   * Depopulates stored atomic operation values as necessary for direct insertion to MongoDB.\n   *\n   * If no atomics exist, we return all array values after conversion.\n   *\n   * @return {Array}\n   * @method $__getAtomics\n   * @memberOf MongooseArray\n   * @instance\n   * @api private\n   */\n\n  $__getAtomics() {\n    const ret = [];\n    const keys = Object.keys(this[arrayAtomicsSymbol] || {});\n    let i = keys.length;\n\n    const opts = Object.assign({}, internalToObjectOptions, { _isNested: true });\n\n    if (i === 0) {\n      ret[0] = ['$set', this.toObject(opts)];\n      return ret;\n    }\n\n    while (i--) {\n      const op = keys[i];\n      let val = this[arrayAtomicsSymbol][op];\n\n      // the atomic values which are arrays are not MongooseArrays. we\n      // need to convert their elements as if they were MongooseArrays\n      // to handle populated arrays versus DocumentArrays properly.\n      if (utils.isMongooseObject(val)) {\n        val = val.toObject(opts);\n      } else if (Array.isArray(val)) {\n        val = this.toObject.call(val, opts);\n      } else if (val != null && Array.isArray(val.$each)) {\n        val.$each = this.toObject.call(val.$each, opts);\n      } else if (val != null && typeof val.valueOf === 'function') {\n        val = val.valueOf();\n      }\n\n      if (op === '$addToSet') {\n        val = { $each: val };\n      }\n\n      ret.push([op, val]);\n    }\n\n    return ret;\n  },\n\n  /*!\n   * ignore\n   */\n\n  $atomics() {\n    return this[arrayAtomicsSymbol];\n  },\n\n  /*!\n   * ignore\n   */\n\n  $parent() {\n    return this[arrayParentSymbol];\n  },\n\n  /*!\n   * ignore\n   */\n\n  $path() {\n    return this[arrayPathSymbol];\n  },\n\n  /**\n   * Atomically shifts the array at most one time per document `save()`.\n   *\n   * #### Note:\n   *\n   * _Calling this multiple times on an array before saving sends the same command as calling it once._\n   * _This update is implemented using the MongoDB [$pop](https://www.mongodb.com/docs/manual/reference/operator/update/pop/) method which enforces this restriction._\n   *\n   *      doc.array = [1,2,3];\n   *\n   *      const shifted = doc.array.$shift();\n   *      console.log(shifted); // 1\n   *      console.log(doc.array); // [2,3]\n   *\n   *      // no affect\n   *      shifted = doc.array.$shift();\n   *      console.log(doc.array); // [2,3]\n   *\n   *      doc.save(function (err) {\n   *        if (err) return handleError(err);\n   *\n   *        // we saved, now $shift works again\n   *        shifted = doc.array.$shift();\n   *        console.log(shifted ); // 2\n   *        console.log(doc.array); // [3]\n   *      })\n   *\n   * @api public\n   * @memberOf MongooseArray\n   * @instance\n   * @method $shift\n   * @see mongodb https://www.mongodb.com/docs/manual/reference/operator/update/pop/\n   */\n\n  $shift() {\n    this._registerAtomic('$pop', -1);\n    this._markModified();\n\n    // only allow shifting once\n    const __array = this.__array;\n    if (__array._shifted) {\n      return;\n    }\n    __array._shifted = true;\n\n    return [].shift.call(__array);\n  },\n\n  /**\n   * Pops the array atomically at most one time per document `save()`.\n   *\n   * #### NOTE:\n   *\n   * _Calling this multiple times on an array before saving sends the same command as calling it once._\n   * _This update is implemented using the MongoDB [$pop](https://www.mongodb.com/docs/manual/reference/operator/update/pop/) method which enforces this restriction._\n   *\n   *      doc.array = [1,2,3];\n   *\n   *      const popped = doc.array.$pop();\n   *      console.log(popped); // 3\n   *      console.log(doc.array); // [1,2]\n   *\n   *      // no affect\n   *      popped = doc.array.$pop();\n   *      console.log(doc.array); // [1,2]\n   *\n   *      doc.save(function (err) {\n   *        if (err) return handleError(err);\n   *\n   *        // we saved, now $pop works again\n   *        popped = doc.array.$pop();\n   *        console.log(popped); // 2\n   *        console.log(doc.array); // [1]\n   *      })\n   *\n   * @api public\n   * @method $pop\n   * @memberOf MongooseArray\n   * @instance\n   * @see mongodb https://www.mongodb.com/docs/manual/reference/operator/update/pop/\n   * @method $pop\n   * @memberOf MongooseArray\n   */\n\n  $pop() {\n    this._registerAtomic('$pop', 1);\n    this._markModified();\n\n    // only allow popping once\n    if (this._popped) {\n      return;\n    }\n    this._popped = true;\n\n    return [].pop.call(this);\n  },\n\n  /*!\n   * ignore\n   */\n\n  $schema() {\n    return this[arraySchemaSymbol];\n  },\n\n  /**\n   * Casts a member based on this arrays schema.\n   *\n   * @param {any} value\n   * @return value the casted value\n   * @method _cast\n   * @api private\n   * @memberOf MongooseArray\n   */\n\n  _cast(value) {\n    let populated = false;\n    let Model;\n\n    const parent = this[arrayParentSymbol];\n    if (parent) {\n      populated = parent.$populated(this[arrayPathSymbol], true);\n    }\n\n    if (populated && value !== null && value !== undefined) {\n      // cast to the populated Models schema\n      Model = populated.options[populateModelSymbol];\n      if (Model == null) {\n        throw new MongooseError('No populated model found for path `' + this[arrayPathSymbol] + '`. This is likely a bug in Mongoose, please report an issue on github.com/Automattic/mongoose.');\n      }\n\n      // only objects are permitted so we can safely assume that\n      // non-objects are to be interpreted as _id\n      if (Buffer.isBuffer(value) ||\n          isBsonType(value, 'ObjectId') || !utils.isObject(value)) {\n        value = { _id: value };\n      }\n\n      // gh-2399\n      // we should cast model only when it's not a discriminator\n      const isDisc = value.schema && value.schema.discriminatorMapping &&\n          value.schema.discriminatorMapping.key !== undefined;\n      if (!isDisc) {\n        value = new Model(value);\n      }\n      return this[arraySchemaSymbol].caster.applySetters(value, parent, true);\n    }\n\n    return this[arraySchemaSymbol].caster.applySetters(value, parent, false);\n  },\n\n  /**\n   * Internal helper for .map()\n   *\n   * @api private\n   * @return {Number}\n   * @method _mapCast\n   * @memberOf MongooseArray\n   */\n\n  _mapCast(val, index) {\n    return this._cast(val, this.length + index);\n  },\n\n  /**\n   * Marks this array as modified.\n   *\n   * If it bubbles up from an embedded document change, then it takes the following arguments (otherwise, takes 0 arguments)\n   *\n   * @param {ArraySubdocument} subdoc the embedded doc that invoked this method on the Array\n   * @param {String} embeddedPath the path which changed in the subdoc\n   * @method _markModified\n   * @api private\n   * @memberOf MongooseArray\n   */\n\n  _markModified(elem) {\n    const parent = this[arrayParentSymbol];\n    let dirtyPath;\n\n    if (parent) {\n      dirtyPath = this[arrayPathSymbol];\n\n      if (arguments.length) {\n        dirtyPath = dirtyPath + '.' + elem;\n      }\n\n      if (dirtyPath != null && dirtyPath.endsWith('.$')) {\n        return this;\n      }\n\n      parent.markModified(dirtyPath, arguments.length !== 0 ? elem : parent);\n    }\n\n    return this;\n  },\n\n  /**\n   * Register an atomic operation with the parent.\n   *\n   * @param {Array} op operation\n   * @param {any} val\n   * @method _registerAtomic\n   * @api private\n   * @memberOf MongooseArray\n   */\n\n  _registerAtomic(op, val) {\n    if (this[slicedSymbol]) {\n      return;\n    }\n    if (op === '$set') {\n      // $set takes precedence over all other ops.\n      // mark entire array modified.\n      this[arrayAtomicsSymbol] = { $set: val };\n      cleanModifiedSubpaths(this[arrayParentSymbol], this[arrayPathSymbol]);\n      this._markModified();\n      return this;\n    }\n\n    const atomics = this[arrayAtomicsSymbol];\n\n    // reset pop/shift after save\n    if (op === '$pop' && !('$pop' in atomics)) {\n      const _this = this;\n      this[arrayParentSymbol].once('save', function() {\n        _this._popped = _this._shifted = null;\n      });\n    }\n\n    // check for impossible $atomic combos (Mongo denies more than one\n    // $atomic op on a single path\n    if (atomics.$set || Object.keys(atomics).length && !(op in atomics)) {\n      // a different op was previously registered.\n      // save the entire thing.\n      this[arrayAtomicsSymbol] = { $set: this };\n      return this;\n    }\n\n    let selector;\n\n    if (op === '$pullAll' || op === '$addToSet') {\n      atomics[op] || (atomics[op] = []);\n      atomics[op] = atomics[op].concat(val);\n    } else if (op === '$pullDocs') {\n      const pullOp = atomics['$pull'] || (atomics['$pull'] = {});\n      if (val[0] instanceof ArraySubdocument) {\n        selector = pullOp['$or'] || (pullOp['$or'] = []);\n        Array.prototype.push.apply(selector, val.map(v => {\n          return v.toObject({\n            transform: (doc, ret) => {\n              if (v == null || v.$__ == null) {\n                return ret;\n              }\n\n              Object.keys(v.$__.activePaths.getStatePaths('default')).forEach(path => {\n                mpath.unset(path, ret);\n\n                _minimizePath(ret, path);\n              });\n\n              return ret;\n            },\n            virtuals: false\n          });\n        }));\n      } else {\n        selector = pullOp['_id'] || (pullOp['_id'] = { $in: [] });\n        selector['$in'] = selector['$in'].concat(val);\n      }\n    } else if (op === '$push') {\n      atomics.$push = atomics.$push || { $each: [] };\n      if (val != null && utils.hasUserDefinedProperty(val, '$each')) {\n        atomics.$push = val;\n      } else {\n        atomics.$push.$each = atomics.$push.$each.concat(val);\n      }\n    } else {\n      atomics[op] = val;\n    }\n\n    return this;\n  },\n\n  /**\n   * Adds values to the array if not already present.\n   *\n   * #### Example:\n   *\n   *     console.log(doc.array) // [2,3,4]\n   *     const added = doc.array.addToSet(4,5);\n   *     console.log(doc.array) // [2,3,4,5]\n   *     console.log(added)     // [5]\n   *\n   * @param {...any} [args]\n   * @return {Array} the values that were added\n   * @memberOf MongooseArray\n   * @api public\n   * @method addToSet\n   */\n\n  addToSet() {\n    _checkManualPopulation(this, arguments);\n\n    let values = [].map.call(arguments, this._mapCast, this);\n    values = this[arraySchemaSymbol].applySetters(values, this[arrayParentSymbol]);\n    const added = [];\n    let type = '';\n    if (values[0] instanceof ArraySubdocument) {\n      type = 'doc';\n    } else if (values[0] instanceof Date) {\n      type = 'date';\n    } else if (isBsonType(values[0], 'ObjectId')) {\n      type = 'ObjectId';\n    }\n\n    const rawValues = utils.isMongooseArray(values) ? values.__array : this;\n    const rawArray = utils.isMongooseArray(this) ? this.__array : this;\n\n    rawValues.forEach(function(v) {\n      let found;\n      const val = +v;\n      switch (type) {\n        case 'doc':\n          found = this.some(function(doc) {\n            return doc.equals(v);\n          });\n          break;\n        case 'date':\n          found = this.some(function(d) {\n            return +d === val;\n          });\n          break;\n        case 'ObjectId':\n          found = this.find(o => o.toString() === v.toString());\n          break;\n        default:\n          found = ~this.indexOf(v);\n          break;\n      }\n\n      if (!found) {\n        this._markModified();\n        rawArray.push(v);\n        this._registerAtomic('$addToSet', v);\n        [].push.call(added, v);\n      }\n    }, this);\n\n    return added;\n  },\n\n  /**\n   * Returns the number of pending atomic operations to send to the db for this array.\n   *\n   * @api private\n   * @return {Number}\n   * @method hasAtomics\n   * @memberOf MongooseArray\n   */\n\n  hasAtomics() {\n    if (!utils.isPOJO(this[arrayAtomicsSymbol])) {\n      return 0;\n    }\n\n    return Object.keys(this[arrayAtomicsSymbol]).length;\n  },\n\n  /**\n   * Return whether or not the `obj` is included in the array.\n   *\n   * @param {Object} obj the item to check\n   * @param {Number} fromIndex\n   * @return {Boolean}\n   * @api public\n   * @method includes\n   * @memberOf MongooseArray\n   */\n\n  includes(obj, fromIndex) {\n    const ret = this.indexOf(obj, fromIndex);\n    return ret !== -1;\n  },\n\n  /**\n   * Return the index of `obj` or `-1` if not found.\n   *\n   * @param {Object} obj the item to look for\n   * @param {Number} fromIndex\n   * @return {Number}\n   * @api public\n   * @method indexOf\n   * @memberOf MongooseArray\n   */\n\n  indexOf(obj, fromIndex) {\n    if (isBsonType(obj, 'ObjectId')) {\n      obj = obj.toString();\n    }\n\n    fromIndex = fromIndex == null ? 0 : fromIndex;\n    const len = this.length;\n    for (let i = fromIndex; i < len; ++i) {\n      if (obj == this[i]) {\n        return i;\n      }\n    }\n    return -1;\n  },\n\n  /**\n   * Helper for console.log\n   *\n   * @api public\n   * @method inspect\n   * @memberOf MongooseArray\n   */\n\n  inspect() {\n    return JSON.stringify(this);\n  },\n\n  /**\n   * Pushes items to the array non-atomically.\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @param {...any} [args]\n   * @api public\n   * @method nonAtomicPush\n   * @memberOf MongooseArray\n   */\n\n  nonAtomicPush() {\n    const values = [].map.call(arguments, this._mapCast, this);\n    this._markModified();\n    const ret = [].push.apply(this, values);\n    this._registerAtomic('$set', this);\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#pop`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop) with proper change tracking.\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified which will pass the entire thing to $set potentially overwriting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @see MongooseArray#$pop https://mongoosejs.com/docs/api/array.html#MongooseArray.prototype.$pop()\n   * @api public\n   * @method pop\n   * @memberOf MongooseArray\n   */\n\n  pop() {\n    this._markModified();\n    const ret = [].pop.call(this);\n    this._registerAtomic('$set', this);\n    return ret;\n  },\n\n  /**\n   * Pulls items from the array atomically. Equality is determined by casting\n   * the provided value to an embedded document and comparing using\n   * [the `Document.equals()` function.](https://mongoosejs.com/docs/api/document.html#Document.prototype.equals())\n   *\n   * #### Example:\n   *\n   *     doc.array.pull(ObjectId)\n   *     doc.array.pull({ _id: 'someId' })\n   *     doc.array.pull(36)\n   *     doc.array.pull('tag 1', 'tag 2')\n   *\n   * To remove a document from a subdocument array we may pass an object with a matching `_id`.\n   *\n   *     doc.subdocs.push({ _id: 4815162342 })\n   *     doc.subdocs.pull({ _id: 4815162342 }) // removed\n   *\n   * Or we may passing the _id directly and let mongoose take care of it.\n   *\n   *     doc.subdocs.push({ _id: 4815162342 })\n   *     doc.subdocs.pull(4815162342); // works\n   *\n   * The first pull call will result in a atomic operation on the database, if pull is called repeatedly without saving the document, a $set operation is used on the complete array instead, overwriting possible changes that happened on the database in the meantime.\n   *\n   * @param {...any} [args]\n   * @see mongodb https://www.mongodb.com/docs/manual/reference/operator/update/pull/\n   * @api public\n   * @method pull\n   * @memberOf MongooseArray\n   */\n\n  pull() {\n    const values = [].map.call(arguments, (v, i) => this._cast(v, i, { defaults: false }), this);\n    const cur = this[arrayParentSymbol].get(this[arrayPathSymbol]);\n    let i = cur.length;\n    let mem;\n    this._markModified();\n\n    while (i--) {\n      mem = cur[i];\n      if (mem instanceof Document) {\n        const some = values.some(function(v) {\n          return mem.equals(v);\n        });\n        if (some) {\n          [].splice.call(cur, i, 1);\n        }\n      } else if (~cur.indexOf.call(values, mem)) {\n        [].splice.call(cur, i, 1);\n      }\n    }\n\n    if (values[0] instanceof ArraySubdocument) {\n      this._registerAtomic('$pullDocs', values.map(function(v) {\n        const _id = v.$__getValue('_id');\n        if (_id === undefined || v.$isDefault('_id')) {\n          return v;\n        }\n        return _id;\n      }));\n    } else {\n      this._registerAtomic('$pullAll', values);\n    }\n\n\n    // Might have modified child paths and then pulled, like\n    // `doc.children[1].name = 'test';` followed by\n    // `doc.children.remove(doc.children[0]);`. In this case we fall back\n    // to a `$set` on the whole array. See #3511\n    if (cleanModifiedSubpaths(this[arrayParentSymbol], this[arrayPathSymbol]) > 0) {\n      this._registerAtomic('$set', this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Wraps [`Array#push`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push) with proper change tracking.\n   *\n   * #### Example:\n   *\n   *     const schema = Schema({ nums: [Number] });\n   *     const Model = mongoose.model('Test', schema);\n   *\n   *     const doc = await Model.create({ nums: [3, 4] });\n   *     doc.nums.push(5); // Add 5 to the end of the array\n   *     await doc.save();\n   *\n   *     // You can also pass an object with `$each` as the\n   *     // first parameter to use MongoDB's `$position`\n   *     doc.nums.push({\n   *       $each: [1, 2],\n   *       $position: 0\n   *     });\n   *     doc.nums; // [1, 2, 3, 4, 5]\n   *\n   * @param {...Object} [args]\n   * @api public\n   * @method push\n   * @memberOf MongooseArray\n   */\n\n  push() {\n    let values = arguments;\n    let atomic = values;\n    const isOverwrite = values[0] != null &&\n      utils.hasUserDefinedProperty(values[0], '$each');\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n    if (isOverwrite) {\n      atomic = values[0];\n      values = values[0].$each;\n    }\n\n    if (this[arraySchemaSymbol] == null) {\n      return _basePush.apply(this, values);\n    }\n\n    _checkManualPopulation(this, values);\n\n    const parent = this[arrayParentSymbol];\n    values = [].map.call(values, this._mapCast, this);\n    values = this[arraySchemaSymbol].applySetters(values, parent, undefined,\n      undefined, { skipDocumentArrayCast: true });\n    let ret;\n    const atomics = this[arrayAtomicsSymbol];\n    this._markModified();\n    if (isOverwrite) {\n      atomic.$each = values;\n\n      if ((atomics.$push && atomics.$push.$each && atomics.$push.$each.length || 0) !== 0 &&\n          atomics.$push.$position != atomic.$position) {\n        throw new MongooseError('Cannot call `Array#push()` multiple times ' +\n          'with different `$position`');\n      }\n\n      if (atomic.$position != null) {\n        [].splice.apply(arr, [atomic.$position, 0].concat(values));\n        ret = this.length;\n      } else {\n        ret = [].push.apply(arr, values);\n      }\n    } else {\n      if ((atomics.$push && atomics.$push.$each && atomics.$push.$each.length || 0) !== 0 &&\n          atomics.$push.$position != null) {\n        throw new MongooseError('Cannot call `Array#push()` multiple times ' +\n          'with different `$position`');\n      }\n      atomic = values;\n      ret = [].push.apply(arr, values);\n    }\n\n    this._registerAtomic('$push', atomic);\n    return ret;\n  },\n\n  /**\n   * Alias of [pull](https://mongoosejs.com/docs/api/array.html#MongooseArray.prototype.pull())\n   *\n   * @see MongooseArray#pull https://mongoosejs.com/docs/api/array.html#MongooseArray.prototype.pull()\n   * @see mongodb https://www.mongodb.com/docs/manual/reference/operator/update/pull/\n   * @api public\n   * @memberOf MongooseArray\n   * @instance\n   * @method remove\n   */\n\n  remove() {\n    return this.pull.apply(this, arguments);\n  },\n\n  /**\n   * Sets the casted `val` at index `i` and marks the array modified.\n   *\n   * #### Example:\n   *\n   *     // given documents based on the following\n   *     const Doc = mongoose.model('Doc', new Schema({ array: [Number] }));\n   *\n   *     const doc = new Doc({ array: [2,3,4] })\n   *\n   *     console.log(doc.array) // [2,3,4]\n   *\n   *     doc.array.set(1,\"5\");\n   *     console.log(doc.array); // [2,5,4] // properly cast to number\n   *     doc.save() // the change is saved\n   *\n   *     // VS not using array#set\n   *     doc.array[1] = \"5\";\n   *     console.log(doc.array); // [2,\"5\",4] // no casting\n   *     doc.save() // change is not saved\n   *\n   * @return {Array} this\n   * @api public\n   * @method set\n   * @memberOf MongooseArray\n   */\n\n  set(i, val, skipModified) {\n    const arr = this.__array;\n    if (skipModified) {\n      arr[i] = val;\n      return this;\n    }\n    const value = methods._cast.call(this, val, i);\n    methods._markModified.call(this, i);\n    arr[i] = value;\n    return this;\n  },\n\n  /**\n   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.\n   *\n   * #### Example:\n   *\n   *     doc.array = [2,3];\n   *     const res = doc.array.shift();\n   *     console.log(res) // 2\n   *     console.log(doc.array) // [3]\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method shift\n   * @memberOf MongooseArray\n   */\n\n  shift() {\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n    this._markModified();\n    const ret = [].shift.call(arr);\n    this._registerAtomic('$set', this);\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#sort`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort) with proper change tracking.\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method sort\n   * @memberOf MongooseArray\n   * @see MasteringJS: Array sort https://masteringjs.io/tutorials/fundamentals/array-sort\n   */\n\n  sort() {\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n    const ret = [].sort.apply(arr, arguments);\n    this._registerAtomic('$set', this);\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method splice\n   * @memberOf MongooseArray\n   * @see MasteringJS: Array splice https://masteringjs.io/tutorials/fundamentals/array-splice\n   */\n\n  splice() {\n    let ret;\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n\n    this._markModified();\n    _checkManualPopulation(this, Array.prototype.slice.call(arguments, 2));\n\n    if (arguments.length) {\n      let vals;\n      if (this[arraySchemaSymbol] == null) {\n        vals = arguments;\n      } else {\n        vals = [];\n        for (let i = 0; i < arguments.length; ++i) {\n          vals[i] = i < 2 ?\n            arguments[i] :\n            this._cast(arguments[i], arguments[0] + (i - 2));\n        }\n      }\n\n      ret = [].splice.apply(arr, vals);\n      this._registerAtomic('$set', this);\n    }\n\n    return ret;\n  },\n\n  /*!\n   * ignore\n   */\n\n  toBSON() {\n    return this.toObject(internalToObjectOptions);\n  },\n\n  /**\n   * Returns a native js Array.\n   *\n   * @param {Object} options\n   * @return {Array}\n   * @api public\n   * @method toObject\n   * @memberOf MongooseArray\n   */\n\n  toObject(options) {\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n    if (options && options.depopulate) {\n      options = clone(options);\n      options._isNested = true;\n      // Ensure return value is a vanilla array, because in Node.js 6+ `map()`\n      // is smart enough to use the inherited array's constructor.\n      return [].concat(arr).map(function(doc) {\n        return doc instanceof Document\n          ? doc.toObject(options)\n          : doc;\n      });\n    }\n\n    return [].concat(arr);\n  },\n\n  $toObject() {\n    return this.constructor.prototype.toObject.apply(this, arguments);\n  },\n  /**\n   * Wraps [`Array#unshift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.\n   *\n   * #### Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwriting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method unshift\n   * @memberOf MongooseArray\n   */\n\n  unshift() {\n    _checkManualPopulation(this, arguments);\n\n    let values;\n    if (this[arraySchemaSymbol] == null) {\n      values = arguments;\n    } else {\n      values = [].map.call(arguments, this._cast, this);\n      values = this[arraySchemaSymbol].applySetters(values, this[arrayParentSymbol]);\n    }\n\n    const arr = utils.isMongooseArray(this) ? this.__array : this;\n    this._markModified();\n    [].unshift.apply(arr, values);\n    this._registerAtomic('$set', this);\n    return this.length;\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction _isAllSubdocs(docs, ref) {\n  if (!ref) {\n    return false;\n  }\n\n  for (const arg of docs) {\n    if (arg == null) {\n      return false;\n    }\n    const model = arg.constructor;\n    if (!(arg instanceof Document) ||\n      (model.modelName !== ref && model.baseModelName !== ref)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/*!\n * Minimize _just_ empty objects along the path chain specified\n * by `parts`, ignoring all other paths. Useful in cases where\n * you want to minimize after unsetting a path.\n *\n * #### Example:\n *\n *     const obj = { foo: { bar: { baz: {} } }, a: {} };\n *     _minimizePath(obj, 'foo.bar.baz');\n *     obj; // { a: {} }\n */\n\nfunction _minimizePath(obj, parts, i) {\n  if (typeof parts === 'string') {\n    if (parts.indexOf('.') === -1) {\n      return;\n    }\n\n    parts = mpath.stringToParts(parts);\n  }\n  i = i || 0;\n  if (i >= parts.length) {\n    return;\n  }\n  if (obj == null || typeof obj !== 'object') {\n    return;\n  }\n\n  _minimizePath(obj[parts[0]], parts, i + 1);\n  if (obj[parts[0]] != null && typeof obj[parts[0]] === 'object' && Object.keys(obj[parts[0]]).length === 0) {\n    delete obj[parts[0]];\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _checkManualPopulation(arr, docs) {\n  const ref = arr == null ?\n    null :\n    arr[arraySchemaSymbol] && arr[arraySchemaSymbol].caster && arr[arraySchemaSymbol].caster.options && arr[arraySchemaSymbol].caster.options.ref || null;\n  if (arr.length === 0 &&\n      docs.length !== 0) {\n    if (_isAllSubdocs(docs, ref)) {\n      arr[arrayParentSymbol].$populated(arr[arrayPathSymbol], [], {\n        [populateModelSymbol]: docs[0].constructor\n      });\n    }\n  }\n}\n\nconst returnVanillaArrayMethods = [\n  'filter',\n  'flat',\n  'flatMap',\n  'map',\n  'slice'\n];\nfor (const method of returnVanillaArrayMethods) {\n  if (Array.prototype[method] == null) {\n    continue;\n  }\n\n  methods[method] = function() {\n    const _arr = utils.isMongooseArray(this) ? this.__array : this;\n    const arr = [].concat(_arr);\n\n    return arr[method].apply(arr, arguments);\n  };\n}\n\nmodule.exports = methods;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst Document = require('../../document');\nconst mongooseArrayMethods = require('./methods');\n\nconst arrayAtomicsSymbol = require('../../helpers/symbols').arrayAtomicsSymbol;\nconst arrayAtomicsBackupSymbol = require('../../helpers/symbols').arrayAtomicsBackupSymbol;\nconst arrayParentSymbol = require('../../helpers/symbols').arrayParentSymbol;\nconst arrayPathSymbol = require('../../helpers/symbols').arrayPathSymbol;\nconst arraySchemaSymbol = require('../../helpers/symbols').arraySchemaSymbol;\n\n/**\n * Mongoose Array constructor.\n *\n * #### Note:\n *\n * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._\n *\n * @param {Array} values\n * @param {String} path\n * @param {Document} doc parent document\n * @api private\n * @inherits Array https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\n * @see https://bit.ly/f6CnZU\n */\nconst _basePush = Array.prototype.push;\nconst numberRE = /^\\d+$/;\n\nfunction MongooseArray(values, path, doc, schematype) {\n  let __array;\n\n  if (Array.isArray(values)) {\n    const len = values.length;\n\n    // Perf optimizations for small arrays: much faster to use `...` than `for` + `push`,\n    // but large arrays may cause stack overflows. And for arrays of length 0/1, just\n    // modifying the array is faster. Seems small, but adds up when you have a document\n    // with thousands of nested arrays.\n    if (len === 0) {\n      __array = new Array();\n    } else if (len === 1) {\n      __array = new Array(1);\n      __array[0] = values[0];\n    } else if (len < 10000) {\n      __array = new Array();\n      _basePush.apply(__array, values);\n    } else {\n      __array = new Array();\n      for (let i = 0; i < len; ++i) {\n        _basePush.call(__array, values[i]);\n      }\n    }\n  } else {\n    __array = [];\n  }\n\n  const internals = {\n    [arrayAtomicsSymbol]: {},\n    [arrayAtomicsBackupSymbol]: void 0,\n    [arrayPathSymbol]: path,\n    [arraySchemaSymbol]: schematype,\n    [arrayParentSymbol]: void 0,\n    isMongooseArray: true,\n    isMongooseArrayProxy: true,\n    __array: __array\n  };\n\n  if (values && values[arrayAtomicsSymbol] != null) {\n    internals[arrayAtomicsSymbol] = values[arrayAtomicsSymbol];\n  }\n\n  // Because doc comes from the context of another function, doc === global\n  // can happen if there was a null somewhere up the chain (see #3020)\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\n  // to make more proof against unusual node environments\n  if (doc != null && doc instanceof Document) {\n    internals[arrayParentSymbol] = doc;\n    internals[arraySchemaSymbol] = schematype || doc.schema.path(path);\n  }\n\n  const proxy = new Proxy(__array, {\n    get: function(target, prop) {\n      if (internals.hasOwnProperty(prop)) {\n        return internals[prop];\n      }\n      if (mongooseArrayMethods.hasOwnProperty(prop)) {\n        return mongooseArrayMethods[prop];\n      }\n\n      return __array[prop];\n    },\n    set: function(target, prop, value) {\n      if (typeof prop === 'string' && numberRE.test(prop)) {\n        mongooseArrayMethods.set.call(proxy, prop, value, false);\n      } else if (internals.hasOwnProperty(prop)) {\n        internals[prop] = value;\n      } else {\n        __array[prop] = value;\n      }\n\n      return true;\n    }\n  });\n\n  return proxy;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseArray;\n", "'use strict';\n\nconst isBsonType = require('../helpers/isBsonType');\nconst ObjectId = require('../types/objectid');\n\nmodule.exports = function castObjectId(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (isBsonType(value, 'ObjectId')) {\n    return value;\n  }\n\n  if (value._id) {\n    if (isBsonType(value._id, 'ObjectId')) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      return new ObjectId(value._id.toString());\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    return new ObjectId(value.toString());\n  }\n\n  return new ObjectId(value);\n};\n", "'use strict';\n\nconst ArrayMethods = require('../../array/methods');\nconst Document = require('../../../document');\nconst castObjectId = require('../../../cast/objectid');\nconst getDiscriminatorByValue = require('../../../helpers/discriminator/getDiscriminatorByValue');\nconst internalToObjectOptions = require('../../../options').internalToObjectOptions;\nconst utils = require('../../../utils');\nconst isBsonType = require('../../../helpers/isBsonType');\n\nconst arrayParentSymbol = require('../../../helpers/symbols').arrayParentSymbol;\nconst arrayPathSymbol = require('../../../helpers/symbols').arrayPathSymbol;\nconst arraySchemaSymbol = require('../../../helpers/symbols').arraySchemaSymbol;\nconst documentArrayParent = require('../../../helpers/symbols').documentArrayParent;\n\nconst methods = {\n  /*!\n   * ignore\n   */\n\n  toBSON() {\n    return this.toObject(internalToObjectOptions);\n  },\n\n  /*!\n   * ignore\n   */\n\n  getArrayParent() {\n    return this[arrayParentSymbol];\n  },\n\n  /**\n   * Overrides MongooseArray#cast\n   *\n   * @method _cast\n   * @api private\n   * @memberOf MongooseDocumentArray\n   */\n\n  _cast(value, index, options) {\n    if (this[arraySchemaSymbol] == null) {\n      return value;\n    }\n    let Constructor = this[arraySchemaSymbol].casterConstructor;\n    const isInstance = Constructor.$isMongooseDocumentArray ?\n      utils.isMongooseDocumentArray(value) :\n      value instanceof Constructor;\n    if (isInstance ||\n        // Hack re: #5001, see #5005\n        (value && value.constructor && value.constructor.baseCasterConstructor === Constructor)) {\n      if (!(value[documentArrayParent] && value.__parentArray)) {\n        // value may have been created using array.create()\n        value[documentArrayParent] = this[arrayParentSymbol];\n        value.__parentArray = this;\n      }\n      value.$setIndex(index);\n      return value;\n    }\n\n    if (value === undefined || value === null) {\n      return null;\n    }\n\n    // handle cast('string') or cast(ObjectId) etc.\n    // only objects are permitted so we can safely assume that\n    // non-objects are to be interpreted as _id\n    if (Buffer.isBuffer(value) ||\n        isBsonType(value, 'ObjectId') || !utils.isObject(value)) {\n      value = { _id: value };\n    }\n\n    if (value &&\n        Constructor.discriminators &&\n        Constructor.schema &&\n        Constructor.schema.options &&\n        Constructor.schema.options.discriminatorKey) {\n      if (typeof value[Constructor.schema.options.discriminatorKey] === 'string' &&\n          Constructor.discriminators[value[Constructor.schema.options.discriminatorKey]]) {\n        Constructor = Constructor.discriminators[value[Constructor.schema.options.discriminatorKey]];\n      } else {\n        const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, value[Constructor.schema.options.discriminatorKey]);\n        if (constructorByValue) {\n          Constructor = constructorByValue;\n        }\n      }\n    }\n\n    if (Constructor.$isMongooseDocumentArray) {\n      return Constructor.cast(value, this, undefined, undefined, index);\n    }\n    const ret = new Constructor(value, this, options, undefined, index);\n    ret.isNew = true;\n    return ret;\n  },\n\n  /**\n   * Searches array items for the first document with a matching _id.\n   *\n   * #### Example:\n   *\n   *     const embeddedDoc = m.array.id(some_id);\n   *\n   * @return {EmbeddedDocument|null} the subdocument or null if not found.\n   * @param {ObjectId|String|Number|Buffer} id\n   * @TODO cast to the _id based on schema for proper comparison\n   * @method id\n   * @api public\n   * @memberOf MongooseDocumentArray\n   */\n\n  id(id) {\n    let casted;\n    let sid;\n    let _id;\n\n    try {\n      casted = castObjectId(id).toString();\n    } catch (e) {\n      casted = null;\n    }\n\n    for (const val of this) {\n      if (!val) {\n        continue;\n      }\n\n      _id = val.get('_id');\n\n      if (_id === null || typeof _id === 'undefined') {\n        continue;\n      } else if (_id instanceof Document) {\n        sid || (sid = String(id));\n        if (sid == _id._id) {\n          return val;\n        }\n      } else if (!isBsonType(id, 'ObjectId') && !isBsonType(_id, 'ObjectId')) {\n        if (id == _id || utils.deepEqual(id, _id)) {\n          return val;\n        }\n      } else if (casted == _id) {\n        return val;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Returns a native js Array of plain js objects\n   *\n   * #### Note:\n   *\n   * _Each sub-document is converted to a plain object by calling its `#toObject` method._\n   *\n   * @param {Object} [options] optional options to pass to each documents `toObject` method call during conversion\n   * @return {Array}\n   * @method toObject\n   * @api public\n   * @memberOf MongooseDocumentArray\n   */\n\n  toObject(options) {\n    // `[].concat` coerces the return value into a vanilla JS array, rather\n    // than a Mongoose array.\n    return [].concat(this.map(function(doc) {\n      if (doc == null) {\n        return null;\n      }\n      if (typeof doc.toObject !== 'function') {\n        return doc;\n      }\n      return doc.toObject(options);\n    }));\n  },\n\n  $toObject() {\n    return this.constructor.prototype.toObject.apply(this, arguments);\n  },\n\n  /**\n   * Wraps [`Array#push`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push) with proper change tracking.\n   *\n   * @param {...Object} [args]\n   * @api public\n   * @method push\n   * @memberOf MongooseDocumentArray\n   */\n\n  push() {\n    const ret = ArrayMethods.push.apply(this, arguments);\n\n    _updateParentPopulated(this);\n\n    return ret;\n  },\n\n  /**\n   * Pulls items from the array atomically.\n   *\n   * @param {...Object} [args]\n   * @api public\n   * @method pull\n   * @memberOf MongooseDocumentArray\n   */\n\n  pull() {\n    const ret = ArrayMethods.pull.apply(this, arguments);\n\n    _updateParentPopulated(this);\n\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.\n   * @api private\n   */\n\n  shift() {\n    const ret = ArrayMethods.shift.apply(this, arguments);\n\n    _updateParentPopulated(this);\n\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.\n   * @api private\n   */\n\n  splice() {\n    const ret = ArrayMethods.splice.apply(this, arguments);\n\n    _updateParentPopulated(this);\n\n    return ret;\n  },\n\n  /**\n   * Helper for console.log\n   *\n   * @method inspect\n   * @api public\n   * @memberOf MongooseDocumentArray\n   */\n\n  inspect() {\n    return this.toObject();\n  },\n\n  /**\n   * Creates a subdocument casted to this schema.\n   *\n   * This is the same subdocument constructor used for casting.\n   *\n   * @param {Object} obj the value to cast to this arrays SubDocument schema\n   * @method create\n   * @api public\n   * @memberOf MongooseDocumentArray\n   */\n\n  create(obj) {\n    let Constructor = this[arraySchemaSymbol].casterConstructor;\n    if (obj &&\n        Constructor.discriminators &&\n        Constructor.schema &&\n        Constructor.schema.options &&\n        Constructor.schema.options.discriminatorKey) {\n      if (typeof obj[Constructor.schema.options.discriminatorKey] === 'string' &&\n          Constructor.discriminators[obj[Constructor.schema.options.discriminatorKey]]) {\n        Constructor = Constructor.discriminators[obj[Constructor.schema.options.discriminatorKey]];\n      } else {\n        const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, obj[Constructor.schema.options.discriminatorKey]);\n        if (constructorByValue) {\n          Constructor = constructorByValue;\n        }\n      }\n    }\n\n    return new Constructor(obj, this);\n  },\n\n  /*!\n   * ignore\n   */\n\n  notify(event) {\n    const _this = this;\n    return function notify(val, _arr) {\n      _arr = _arr || _this;\n      let i = _arr.length;\n      while (i--) {\n        if (_arr[i] == null) {\n          continue;\n        }\n        switch (event) {\n          // only swap for save event for now, we may change this to all event types later\n          case 'save':\n            val = _this[i];\n            break;\n          default:\n            // NO-OP\n            break;\n        }\n\n        if (utils.isMongooseArray(_arr[i])) {\n          notify(val, _arr[i]);\n        } else if (_arr[i]) {\n          _arr[i].emit(event, val);\n        }\n      }\n    };\n  },\n\n  set(i, val, skipModified) {\n    const arr = this.__array;\n    if (skipModified) {\n      arr[i] = val;\n      return this;\n    }\n    const value = methods._cast.call(this, val, i);\n    methods._markModified.call(this, i);\n    arr[i] = value;\n    return this;\n  },\n\n  _markModified(elem, embeddedPath) {\n    const parent = this[arrayParentSymbol];\n    let dirtyPath;\n\n    if (parent) {\n      dirtyPath = this[arrayPathSymbol];\n\n      if (arguments.length) {\n        if (embeddedPath != null) {\n          // an embedded doc bubbled up the change\n          const index = elem.__index;\n          dirtyPath = dirtyPath + '.' + index + '.' + embeddedPath;\n        } else {\n          // directly set an index\n          dirtyPath = dirtyPath + '.' + elem;\n        }\n      }\n\n      if (dirtyPath != null && dirtyPath.endsWith('.$')) {\n        return this;\n      }\n\n      parent.markModified(dirtyPath, arguments.length !== 0 ? elem : parent);\n    }\n\n    return this;\n  }\n};\n\nmodule.exports = methods;\n\n/**\n * If this is a document array, each element may contain single\n * populated paths, so we need to modify the top-level document's\n * populated cache. See gh-8247, gh-8265.\n * @param {Array} arr\n * @api private\n */\n\nfunction _updateParentPopulated(arr) {\n  const parent = arr[arrayParentSymbol];\n  if (!parent || parent.$__.populated == null) return;\n\n  const populatedPaths = Object.keys(parent.$__.populated).\n    filter(p => p.startsWith(arr[arrayPathSymbol] + '.'));\n\n  for (const path of populatedPaths) {\n    const remnant = path.slice((arr[arrayPathSymbol] + '.').length);\n    if (!Array.isArray(parent.$__.populated[path].value)) {\n      continue;\n    }\n\n    parent.$__.populated[path].value = arr.map(val => val.$populated(remnant));\n  }\n}\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ArrayMethods = require('../array/methods');\nconst DocumentArrayMethods = require('./methods');\nconst Document = require('../../document');\n\nconst arrayAtomicsSymbol = require('../../helpers/symbols').arrayAtomicsSymbol;\nconst arrayAtomicsBackupSymbol = require('../../helpers/symbols').arrayAtomicsBackupSymbol;\nconst arrayParentSymbol = require('../../helpers/symbols').arrayParentSymbol;\nconst arrayPathSymbol = require('../../helpers/symbols').arrayPathSymbol;\nconst arraySchemaSymbol = require('../../helpers/symbols').arraySchemaSymbol;\n\nconst _basePush = Array.prototype.push;\nconst numberRE = /^\\d+$/;\n/**\n * DocumentArray constructor\n *\n * @param {Array} values\n * @param {String} path the path to this array\n * @param {Document} doc parent document\n * @api private\n * @return {MongooseDocumentArray}\n * @inherits MongooseArray\n * @see https://bit.ly/f6CnZU\n */\n\nfunction MongooseDocumentArray(values, path, doc) {\n  const __array = [];\n\n  const internals = {\n    [arrayAtomicsSymbol]: {},\n    [arrayAtomicsBackupSymbol]: void 0,\n    [arrayPathSymbol]: path,\n    [arraySchemaSymbol]: void 0,\n    [arrayParentSymbol]: void 0\n  };\n\n  if (Array.isArray(values)) {\n    if (values[arrayPathSymbol] === path &&\n        values[arrayParentSymbol] === doc) {\n      internals[arrayAtomicsSymbol] = Object.assign({}, values[arrayAtomicsSymbol]);\n    }\n    values.forEach(v => {\n      _basePush.call(__array, v);\n    });\n  }\n  internals[arrayPathSymbol] = path;\n  internals.__array = __array;\n\n  // Because doc comes from the context of another function, doc === global\n  // can happen if there was a null somewhere up the chain (see #3020 && #3034)\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\n  // to make more proof against unusual node environments\n  if (doc && doc instanceof Document) {\n    internals[arrayParentSymbol] = doc;\n    internals[arraySchemaSymbol] = doc.$__schema.path(path);\n\n    // `schema.path()` doesn't drill into nested arrays properly yet, see\n    // gh-6398, gh-6602. This is a workaround because nested arrays are\n    // always plain non-document arrays, so once you get to a document array\n    // nesting is done. Matryoshka code.\n    while (internals[arraySchemaSymbol] != null &&\n        internals[arraySchemaSymbol].$isMongooseArray &&\n        !internals[arraySchemaSymbol].$isMongooseDocumentArray) {\n      internals[arraySchemaSymbol] = internals[arraySchemaSymbol].casterConstructor;\n    }\n  }\n\n  const proxy = new Proxy(__array, {\n    get: function(target, prop) {\n      if (prop === 'isMongooseArray' ||\n          prop === 'isMongooseArrayProxy' ||\n          prop === 'isMongooseDocumentArray' ||\n          prop === 'isMongooseDocumentArrayProxy') {\n        return true;\n      }\n      if (internals.hasOwnProperty(prop)) {\n        return internals[prop];\n      }\n      if (DocumentArrayMethods.hasOwnProperty(prop)) {\n        return DocumentArrayMethods[prop];\n      }\n      if (ArrayMethods.hasOwnProperty(prop)) {\n        return ArrayMethods[prop];\n      }\n\n      return __array[prop];\n    },\n    set: function(target, prop, value) {\n      if (typeof prop === 'string' && numberRE.test(prop)) {\n        DocumentArrayMethods.set.call(proxy, prop, value, false);\n      } else if (internals.hasOwnProperty(prop)) {\n        internals[prop] = value;\n      } else {\n        __array[prop] = value;\n      }\n\n      return true;\n    }\n  });\n\n  return proxy;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = MongooseDocumentArray;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\nconst InternalCache = require('./internal');\nconst MongooseError = require('./error/index');\nconst MixedSchema = require('./schema/mixed');\nconst ObjectExpectedError = require('./error/objectExpected');\nconst ObjectParameterError = require('./error/objectParameter');\nconst ParallelValidateError = require('./error/parallelValidate');\nconst Schema = require('./schema');\nconst StrictModeError = require('./error/strict');\nconst ValidationError = require('./error/validation');\nconst ValidatorError = require('./error/validator');\nconst $__hasIncludedChildren = require('./helpers/projection/hasIncludedChildren');\nconst applyDefaults = require('./helpers/document/applyDefaults');\nconst cleanModifiedSubpaths = require('./helpers/document/cleanModifiedSubpaths');\nconst clone = require('./helpers/clone');\nconst compile = require('./helpers/document/compile').compile;\nconst defineKey = require('./helpers/document/compile').defineKey;\nconst flatten = require('./helpers/common').flatten;\nconst get = require('./helpers/get');\nconst getEmbeddedDiscriminatorPath = require('./helpers/document/getEmbeddedDiscriminatorPath');\nconst getKeysInSchemaOrder = require('./helpers/schema/getKeysInSchemaOrder');\nconst getSubdocumentStrictValue = require('./helpers/schema/getSubdocumentStrictValue');\nconst handleSpreadDoc = require('./helpers/document/handleSpreadDoc');\nconst immediate = require('./helpers/immediate');\nconst isDefiningProjection = require('./helpers/projection/isDefiningProjection');\nconst isExclusive = require('./helpers/projection/isExclusive');\nconst inspect = require('util').inspect;\nconst internalToObjectOptions = require('./options').internalToObjectOptions;\nconst markArraySubdocsPopulated = require('./helpers/populate/markArraySubdocsPopulated');\nconst mpath = require('mpath');\nconst queryhelpers = require('./queryhelpers');\nconst utils = require('./utils');\nconst isPromise = require('./helpers/isPromise');\n\nconst deepEqual = utils.deepEqual;\nconst isMongooseObject = utils.isMongooseObject;\n\nconst arrayAtomicsBackupSymbol = require('./helpers/symbols').arrayAtomicsBackupSymbol;\nconst arrayAtomicsSymbol = require('./helpers/symbols').arrayAtomicsSymbol;\nconst documentArrayParent = require('./helpers/symbols').documentArrayParent;\nconst documentIsModified = require('./helpers/symbols').documentIsModified;\nconst documentModifiedPaths = require('./helpers/symbols').documentModifiedPaths;\nconst documentSchemaSymbol = require('./helpers/symbols').documentSchemaSymbol;\nconst getSymbol = require('./helpers/symbols').getSymbol;\nconst populateModelSymbol = require('./helpers/symbols').populateModelSymbol;\nconst scopeSymbol = require('./helpers/symbols').scopeSymbol;\nconst schemaMixedSymbol = require('./schema/symbols').schemaMixedSymbol;\nconst parentPaths = require('./helpers/path/parentPaths');\nconst getDeepestSubdocumentForPath = require('./helpers/document/getDeepestSubdocumentForPath');\n\nlet DocumentArray;\nlet MongooseArray;\nlet Embedded;\n\nconst specialProperties = utils.specialProperties;\n\n/**\n * The core Mongoose document constructor. You should not call this directly,\n * the Mongoose [Model constructor](./api/model.html#Model) calls this for you.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Object} [options] various configuration options for the document\n * @param {Boolean} [options.defaults=true] if `false`, skip applying default values to this document.\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\n * @event `init`: Emitted on a document after it has been retrieved from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document(obj, fields, skipId, options) {\n  if (typeof skipId === 'object' && skipId != null) {\n    options = skipId;\n    skipId = options.skipId;\n  }\n  options = Object.assign({}, options);\n\n  // Support `browserDocument.js` syntax\n  if (this.$__schema == null) {\n    const _schema = utils.isObject(fields) && !fields.instanceOfSchema ?\n      new Schema(fields) :\n      fields;\n    this.$__setSchema(_schema);\n    fields = skipId;\n    skipId = options;\n    options = arguments[4] || {};\n  }\n\n  this.$__ = new InternalCache();\n\n  // Avoid setting `isNew` to `true`, because it is `true` by default\n  if (options.isNew != null && options.isNew !== true) {\n    this.$isNew = options.isNew;\n  }\n\n  if (options.priorDoc != null) {\n    this.$__.priorDoc = options.priorDoc;\n  }\n\n  if (skipId) {\n    this.$__.skipId = skipId;\n  }\n\n  if (obj != null && typeof obj !== 'object') {\n    throw new ObjectParameterError(obj, 'obj', 'Document');\n  }\n\n  let defaults = true;\n  if (options.defaults !== undefined) {\n    this.$__.defaults = options.defaults;\n    defaults = options.defaults;\n  }\n\n  const schema = this.$__schema;\n\n  if (typeof fields === 'boolean' || fields === 'throw') {\n    if (fields !== true) {\n      this.$__.strictMode = fields;\n    }\n    fields = undefined;\n  } else if (schema.options.strict !== true) {\n    this.$__.strictMode = schema.options.strict;\n  }\n\n  const requiredPaths = schema.requiredPaths(true);\n  for (const path of requiredPaths) {\n    this.$__.activePaths.require(path);\n  }\n\n  let exclude = null;\n\n  // determine if this doc is a result of a query with\n  // excluded fields\n  if (utils.isPOJO(fields) && Object.keys(fields).length > 0) {\n    exclude = isExclusive(fields);\n    this.$__.selected = fields;\n    this.$__.exclude = exclude;\n  }\n\n  const hasIncludedChildren = exclude === false && fields ?\n    $__hasIncludedChildren(fields) :\n    null;\n\n  if (this._doc == null) {\n    this.$__buildDoc(obj, fields, skipId, exclude, hasIncludedChildren, false);\n\n    // By default, defaults get applied **before** setting initial values\n    // Re: gh-6155\n    if (defaults) {\n      applyDefaults(this, fields, exclude, hasIncludedChildren, true, null);\n    }\n  }\n  if (obj) {\n    // Skip set hooks\n    if (this.$__original_set) {\n      this.$__original_set(obj, undefined, true, options);\n    } else {\n      this.$set(obj, undefined, true, options);\n    }\n\n    if (obj instanceof Document) {\n      this.$isNew = obj.$isNew;\n    }\n  }\n\n  // Function defaults get applied **after** setting initial values so they\n  // see the full doc rather than an empty one, unless they opt out.\n  // Re: gh-3781, gh-6155\n  if (options.willInit && defaults) {\n    if (options.skipDefaults) {\n      this.$__.skipDefaults = options.skipDefaults;\n    }\n  } else if (defaults) {\n    applyDefaults(this, fields, exclude, hasIncludedChildren, false, options.skipDefaults);\n  }\n\n  if (!this.$__.strictMode && obj) {\n    const _this = this;\n    const keys = Object.keys(this._doc);\n\n    keys.forEach(function(key) {\n      // Avoid methods, virtuals, existing fields, and `$` keys. The latter is to avoid overwriting\n      // Mongoose internals.\n      if (!(key in schema.tree) && !(key in schema.methods) && !(key in schema.virtuals) && !key.startsWith('$')) {\n        defineKey({ prop: key, subprops: null, prototype: _this });\n      }\n    });\n  }\n\n  applyQueue(this);\n}\n\nDocument.prototype.$isMongooseDocumentPrototype = true;\n\n/**\n * Boolean flag specifying if the document is new. If you create a document\n * using `new`, this document will be considered \"new\". `$isNew` is how\n * Mongoose determines whether `save()` should use `insertOne()` to create\n * a new document or `updateOne()` to update an existing document.\n *\n * #### Example:\n *\n *     const user = new User({ name: 'John Smith' });\n *     user.$isNew; // true\n *\n *     await user.save(); // Sends an `insertOne` to MongoDB\n *\n * On the other hand, if you load an existing document from the database\n * using `findOne()` or another [query operation](https://mongoosejs.com/docs/queries.html),\n * `$isNew` will be false.\n *\n * #### Example:\n *\n *     const user = await User.findOne({ name: 'John Smith' });\n *     user.$isNew; // false\n *\n * Mongoose sets `$isNew` to `false` immediately after `save()` succeeds.\n * That means Mongoose sets `$isNew` to false **before** `post('save')` hooks run.\n * In `post('save')` hooks, `$isNew` will be `false` if `save()` succeeded.\n *\n * #### Example:\n *\n *     userSchema.post('save', function() {\n *       this.$isNew; // false\n *     });\n *     await User.create({ name: 'John Smith' });\n *\n * For subdocuments, `$isNew` is true if either the parent has `$isNew` set,\n * or if you create a new subdocument.\n *\n * #### Example:\n *\n *     // Assume `Group` has a document array `users`\n *     const group = await Group.findOne();\n *     group.users[0].$isNew; // false\n *\n *     group.users.push({ name: 'John Smith' });\n *     group.users[1].$isNew; // true\n *\n * @api public\n * @property $isNew\n * @memberOf Document\n * @instance\n */\n\nObject.defineProperty(Document.prototype, 'isNew', {\n  get: function() {\n    return this.$isNew;\n  },\n  set: function(value) {\n    this.$isNew = value;\n  }\n});\n\n/**\n * Hash containing current validation errors.\n *\n * @api public\n * @property errors\n * @memberOf Document\n * @instance\n */\n\nObject.defineProperty(Document.prototype, 'errors', {\n  get: function() {\n    return this.$errors;\n  },\n  set: function(value) {\n    this.$errors = value;\n  }\n});\n\n/*!\n * ignore\n */\n\nDocument.prototype.$isNew = true;\n\n/*!\n * Document exposes the NodeJS event emitter API, so you can use\n * `on`, `once`, etc.\n */\nutils.each(\n  ['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',\n    'removeAllListeners', 'addListener'],\n  function(emitterFn) {\n    Document.prototype[emitterFn] = function() {\n      // Delay creating emitter until necessary because emitters take up a lot of memory,\n      // especially for subdocuments.\n      if (!this.$__.emitter) {\n        if (emitterFn === 'emit') {\n          return;\n        }\n        this.$__.emitter = new EventEmitter();\n        this.$__.emitter.setMaxListeners(0);\n      }\n      return this.$__.emitter[emitterFn].apply(this.$__.emitter, arguments);\n    };\n    Document.prototype[`$${emitterFn}`] = Document.prototype[emitterFn];\n  });\n\nDocument.prototype.constructor = Document;\n\nfor (const i in EventEmitter.prototype) {\n  Document[i] = EventEmitter.prototype[i];\n}\n\n/**\n * The document's internal schema.\n *\n * @api private\n * @property schema\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__schema;\n\n/**\n * The document's schema.\n *\n * @api public\n * @property schema\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.schema;\n\n/**\n * Empty object that you can use for storing properties on the document. This\n * is handy for passing data to middleware without conflicting with Mongoose\n * internals.\n *\n * #### Example:\n *\n *     schema.pre('save', function() {\n *       // Mongoose will set `isNew` to `false` if `save()` succeeds\n *       this.$locals.wasNew = this.isNew;\n *     });\n *\n *     schema.post('save', function() {\n *       // Prints true if `isNew` was set before `save()`\n *       console.log(this.$locals.wasNew);\n *     });\n *\n * @api public\n * @property $locals\n * @memberOf Document\n * @instance\n */\n\nObject.defineProperty(Document.prototype, '$locals', {\n  configurable: false,\n  enumerable: false,\n  get: function() {\n    if (this.$__.locals == null) {\n      this.$__.locals = {};\n    }\n    return this.$__.locals;\n  },\n  set: function(v) {\n    this.$__.locals = v;\n  }\n});\n\n/**\n * Legacy alias for `$isNew`.\n *\n * @api public\n * @property isNew\n * @memberOf Document\n * @see $isNew https://mongoosejs.com/docs/api/document.html#Document.prototype.$isNew\n * @instance\n */\n\nDocument.prototype.isNew;\n\n/**\n * Set this property to add additional query filters when Mongoose saves this document and `isNew` is false.\n *\n * #### Example:\n *\n *     // Make sure `save()` never updates a soft deleted document.\n *     schema.pre('save', function() {\n *       this.$where = { isDeleted: false };\n *     });\n *\n * @api public\n * @property $where\n * @memberOf Document\n * @instance\n */\n\nObject.defineProperty(Document.prototype, '$where', {\n  configurable: false,\n  enumerable: false,\n  writable: true\n});\n\n/**\n * The string version of this documents _id.\n *\n * #### Note:\n *\n * This getter exists on all documents by default. The getter can be disabled by setting the `id` [option](https://mongoosejs.com/docs/guide.html#id) of its `Schema` to false at construction time.\n *\n *     new Schema({ name: String }, { id: false });\n *\n * @api public\n * @see Schema options https://mongoosejs.com/docs/guide.html#options\n * @property id\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.id;\n\n/**\n * Hash containing current validation $errors.\n *\n * @api public\n * @property $errors\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$errors;\n\n/**\n * A string containing the current operation that Mongoose is executing\n * on this document. May be `null`, `'save'`, `'validate'`, or `'remove'`.\n *\n * #### Example:\n *\n *     const doc = new Model({ name: 'test' });\n *     doc.$op; // null\n *\n *     const promise = doc.save();\n *     doc.$op; // 'save'\n *\n *     await promise;\n *     doc.$op; // null\n *\n * @api public\n * @property $op\n * @memberOf Document\n * @instance\n */\n\nObject.defineProperty(Document.prototype, '$op', {\n  get: function() {\n    return this.$__.op || null;\n  },\n  set: function(value) {\n    this.$__.op = value;\n  }\n});\n\n/*!\n * ignore\n */\n\nfunction $applyDefaultsToNested(val, path, doc) {\n  if (val == null) {\n    return;\n  }\n\n  const paths = Object.keys(doc.$__schema.paths);\n  const plen = paths.length;\n\n  const pathPieces = path.indexOf('.') === -1 ? [path] : path.split('.');\n\n  for (let i = 0; i < plen; ++i) {\n    let curPath = '';\n    const p = paths[i];\n\n    if (!p.startsWith(path + '.')) {\n      continue;\n    }\n\n    const type = doc.$__schema.paths[p];\n    const pieces = type.splitPath().slice(pathPieces.length);\n    const len = pieces.length;\n\n    if (type.defaultValue === void 0) {\n      continue;\n    }\n\n    let cur = val;\n\n    for (let j = 0; j < len; ++j) {\n      if (cur == null) {\n        break;\n      }\n\n      const piece = pieces[j];\n\n      if (j === len - 1) {\n        if (cur[piece] !== void 0) {\n          break;\n        }\n\n        try {\n          const def = type.getDefault(doc, false);\n          if (def !== void 0) {\n            cur[piece] = def;\n          }\n        } catch (err) {\n          doc.invalidate(path + '.' + curPath, err);\n          break;\n        }\n\n        break;\n      }\n\n      curPath += (!curPath.length ? '' : '.') + piece;\n\n      cur[piece] = cur[piece] || {};\n      cur = cur[piece];\n    }\n  }\n}\n\n/**\n * Builds the default doc structure\n *\n * @param {Object} obj\n * @param {Object} [fields]\n * @param {Boolean} [skipId]\n * @param {Boolean} [exclude]\n * @param {Object} [hasIncludedChildren]\n * @api private\n * @method $__buildDoc\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__buildDoc = function(obj, fields, skipId, exclude, hasIncludedChildren) {\n  const doc = {};\n\n  const paths = Object.keys(this.$__schema.paths).\n    // Don't build up any paths that are underneath a map, we don't know\n    // what the keys will be\n    filter(p => !p.includes('$*'));\n  const plen = paths.length;\n  let ii = 0;\n\n  for (; ii < plen; ++ii) {\n    const p = paths[ii];\n\n    if (p === '_id') {\n      if (skipId) {\n        continue;\n      }\n      if (obj && '_id' in obj) {\n        continue;\n      }\n    }\n\n    const path = this.$__schema.paths[p].splitPath();\n    const len = path.length;\n    const last = len - 1;\n    let curPath = '';\n    let doc_ = doc;\n    let included = false;\n\n    for (let i = 0; i < len; ++i) {\n      const piece = path[i];\n\n      if (!curPath.length) {\n        curPath = piece;\n      } else {\n        curPath += '.' + piece;\n      }\n\n      // support excluding intermediary levels\n      if (exclude === true) {\n        if (curPath in fields) {\n          break;\n        }\n      } else if (exclude === false && fields && !included) {\n        if (curPath in fields) {\n          included = true;\n        } else if (!hasIncludedChildren[curPath]) {\n          break;\n        }\n      }\n\n      if (i < last) {\n        doc_ = doc_[piece] || (doc_[piece] = {});\n      }\n    }\n  }\n\n  this._doc = doc;\n};\n\n/*!\n * Converts to POJO when you use the document for querying\n */\n\nDocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Initializes the document without setters or marking anything modified.\n *\n * Called internally after a document is returned from mongodb. Normally,\n * you do **not** need to call this function on your own.\n *\n * This function triggers `init` [middleware](https://mongoosejs.com/docs/middleware.html).\n * Note that `init` hooks are [synchronous](https://mongoosejs.com/docs/middleware.html#synchronous).\n *\n * @param {Object} doc document returned by mongo\n * @param {Object} [opts]\n * @param {Function} [fn]\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.init = function(doc, opts, fn) {\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = null;\n  }\n\n  this.$__init(doc, opts);\n\n  if (fn) {\n    fn(null, this);\n  }\n\n  return this;\n};\n\n/**\n * Alias for [`.init`](https://mongoosejs.com/docs/api/document.html#Document.prototype.init())\n *\n * @api public\n */\n\nDocument.prototype.$init = function() {\n  return this.constructor.prototype.init.apply(this, arguments);\n};\n\n/**\n * Internal \"init\" function\n *\n * @param {Document} doc\n * @param {Object} [opts]\n * @returns {Document} this\n * @api private\n */\n\nDocument.prototype.$__init = function(doc, opts) {\n  this.$isNew = false;\n  opts = opts || {};\n\n  // handle docs with populated paths\n  // If doc._id is not null or undefined\n  if (doc._id != null && opts.populated && opts.populated.length) {\n    const id = String(doc._id);\n    for (const item of opts.populated) {\n      if (item.isVirtual) {\n        this.$populated(item.path, utils.getValue(item.path, doc), item);\n      } else {\n        this.$populated(item.path, item._docs[id], item);\n      }\n\n      if (item._childDocs == null) {\n        continue;\n      }\n      for (const child of item._childDocs) {\n        if (child == null || child.$__ == null) {\n          continue;\n        }\n        child.$__.parent = this;\n      }\n      item._childDocs = [];\n    }\n  }\n\n  init(this, doc, this._doc, opts);\n\n  markArraySubdocsPopulated(this, opts.populated);\n\n  this.$emit('init', this);\n  this.constructor.emit('init', this);\n\n  const hasIncludedChildren = this.$__.exclude === false && this.$__.selected ?\n    $__hasIncludedChildren(this.$__.selected) :\n    null;\n\n  applyDefaults(this, this.$__.selected, this.$__.exclude, hasIncludedChildren, false, this.$__.skipDefaults);\n\n  return this;\n};\n\n/**\n * Init helper.\n *\n * @param {Object} self document instance\n * @param {Object} obj raw mongodb doc\n * @param {Object} doc object we are initializing\n * @param {Object} [opts] Optional Options\n * @param {Boolean} [opts.setters] Call `applySetters` instead of `cast`\n * @param {String} [prefix] Prefix to add to each path\n * @api private\n */\n\nfunction init(self, obj, doc, opts, prefix) {\n  prefix = prefix || '';\n\n  if (obj.$__ != null) {\n    obj = obj._doc;\n  }\n  const keys = Object.keys(obj);\n  const len = keys.length;\n  let schemaType;\n  let path;\n  let i;\n  let index = 0;\n  const strict = self.$__.strictMode;\n  const docSchema = self.$__schema;\n\n  while (index < len) {\n    _init(index++);\n  }\n\n  function _init(index) {\n    i = keys[index];\n    // avoid prototype pollution\n    if (i === '__proto__' || i === 'constructor') {\n      return;\n    }\n    path = prefix + i;\n    schemaType = docSchema.path(path);\n\n    // Should still work if not a model-level discriminator, but should not be\n    // necessary. This is *only* to catch the case where we queried using the\n    // base model and the discriminated model has a projection\n    if (docSchema.$isRootDiscriminator && !self.$__isSelected(path)) {\n      return;\n    }\n\n    if (!schemaType && utils.isPOJO(obj[i])) {\n      // assume nested object\n      if (!doc[i]) {\n        doc[i] = {};\n        if (!strict && !(i in docSchema.tree) && !(i in docSchema.methods) && !(i in docSchema.virtuals)) {\n          self[i] = doc[i];\n        }\n      }\n      init(self, obj[i], doc[i], opts, path + '.');\n    } else if (!schemaType) {\n      doc[i] = obj[i];\n      if (!strict && !prefix) {\n        self[i] = obj[i];\n      }\n    } else {\n      // Retain order when overwriting defaults\n      if (doc.hasOwnProperty(i) && obj[i] !== void 0) {\n        delete doc[i];\n      }\n      if (obj[i] === null) {\n        doc[i] = schemaType._castNullish(null);\n      } else if (obj[i] !== undefined) {\n        const wasPopulated = obj[i].$__ == null ? null : obj[i].$__.wasPopulated;\n\n        if (schemaType && !wasPopulated) {\n          try {\n            if (opts && opts.setters) {\n              // Call applySetters with `init = false` because otherwise setters are a noop\n              const overrideInit = false;\n              doc[i] = schemaType.applySetters(obj[i], self, overrideInit);\n            } else {\n              doc[i] = schemaType.cast(obj[i], self, true);\n            }\n          } catch (e) {\n            self.invalidate(e.path, new ValidatorError({\n              path: e.path,\n              message: e.message,\n              type: 'cast',\n              value: e.value,\n              reason: e\n            }));\n          }\n        } else {\n          doc[i] = obj[i];\n        }\n      }\n      // mark as hydrated\n      if (!self.$isModified(path)) {\n        self.$__.activePaths.init(path);\n      }\n    }\n  }\n}\n\n/**\n * Sends an updateOne command with this document `_id` as the query selector.\n *\n * #### Example:\n *\n *     weirdCar.updateOne({$inc: {wheels:1}}, { w: 1 }, callback);\n *\n * #### Valid options:\n *\n *  - same as in [Model.updateOne](https://mongoosejs.com/docs/api/model.html#Model.updateOne)\n *\n * @see Model.updateOne https://mongoosejs.com/docs/api/model.html#Model.updateOne\n * @param {Object} doc\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and the [Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Function} [callback]\n * @return {Query}\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.updateOne = function updateOne(doc, options, callback) {\n  const query = this.constructor.updateOne({ _id: this._id }, doc, options);\n  const self = this;\n  query.pre(function queryPreUpdateOne(cb) {\n    self.constructor._middleware.execPre('updateOne', self, [self], cb);\n  });\n  query.post(function queryPostUpdateOne(cb) {\n    self.constructor._middleware.execPost('updateOne', self, [self], {}, cb);\n  });\n\n  if (this.$session() != null) {\n    if (!('session' in query.options)) {\n      query.options.session = this.$session();\n    }\n  }\n\n  if (callback != null) {\n    return query.exec(callback);\n  }\n\n  return query;\n};\n\n/**\n * Sends a replaceOne command with this document `_id` as the query selector.\n *\n * #### Valid options:\n *\n *  - same as in [Model.replaceOne](https://mongoosejs.com/docs/api/model.html#Model.replaceOne())\n *\n * @see Model.replaceOne https://mongoosejs.com/docs/api/model.html#Model.replaceOne()\n * @param {Object} doc\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.replaceOne = function replaceOne() {\n  const args = [...arguments];\n  args.unshift({ _id: this._id });\n  return this.constructor.replaceOne.apply(this.constructor, args);\n};\n\n/**\n * Getter/setter around the session associated with this document. Used to\n * automatically set `session` if you `save()` a doc that you got from a\n * query with an associated session.\n *\n * #### Example:\n *\n *     const session = MyModel.startSession();\n *     const doc = await MyModel.findOne().session(session);\n *     doc.$session() === session; // true\n *     doc.$session(null);\n *     doc.$session() === null; // true\n *\n * If this is a top-level document, setting the session propagates to all child\n * docs.\n *\n * @param {ClientSession} [session] overwrite the current session\n * @return {ClientSession}\n * @method $session\n * @api public\n * @memberOf Document\n */\n\nDocument.prototype.$session = function $session(session) {\n  if (arguments.length === 0) {\n    if (this.$__.session != null && this.$__.session.hasEnded) {\n      this.$__.session = null;\n      return null;\n    }\n    return this.$__.session;\n  }\n\n  if (session != null && session.hasEnded) {\n    throw new MongooseError('Cannot set a document\\'s session to a session that has ended. Make sure you haven\\'t ' +\n      'called `endSession()` on the session you are passing to `$session()`.');\n  }\n\n  if (session == null && this.$__.session == null) {\n    return;\n  }\n\n  this.$__.session = session;\n\n  if (!this.$isSubdocument) {\n    const subdocs = this.$getAllSubdocs();\n    for (const child of subdocs) {\n      child.$session(session);\n    }\n  }\n\n  return session;\n};\n\n/**\n * Getter/setter around whether this document will apply timestamps by\n * default when using `save()` and `bulkSave()`.\n *\n * #### Example:\n *\n *     const TestModel = mongoose.model('Test', new Schema({ name: String }, { timestamps: true }));\n *     const doc = new TestModel({ name: 'John Smith' });\n *\n *     doc.$timestamps(); // true\n *\n *     doc.$timestamps(false);\n *     await doc.save(); // Does **not** apply timestamps\n *\n * @param {Boolean} [value] overwrite the current session\n * @return {Document|boolean|undefined} When used as a getter (no argument), a boolean will be returned indicating the timestamps option state or if unset \"undefined\" will be used, otherwise will return \"this\"\n * @method $timestamps\n * @api public\n * @memberOf Document\n */\n\nDocument.prototype.$timestamps = function $timestamps(value) {\n  if (arguments.length === 0) {\n    if (this.$__.timestamps != null) {\n      return this.$__.timestamps;\n    }\n\n    if (this.$__schema) {\n      return this.$__schema.options.timestamps;\n    }\n\n    return undefined;\n  }\n\n  const currentValue = this.$timestamps();\n  if (value !== currentValue) {\n    this.$__.timestamps = value;\n  }\n\n  return this;\n};\n\n/**\n * Overwrite all values in this document with the values of `obj`, except\n * for immutable properties. Behaves similarly to `set()`, except for it\n * unsets all properties that aren't in `obj`.\n *\n * @param {Object} obj the object to overwrite this document with\n * @method overwrite\n * @memberOf Document\n * @instance\n * @api public\n * @return {Document} this\n */\n\nDocument.prototype.overwrite = function overwrite(obj) {\n  const keys = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(obj))));\n\n  for (const key of keys) {\n    if (key === '_id') {\n      continue;\n    }\n    // Explicitly skip version key\n    if (this.$__schema.options.versionKey && key === this.$__schema.options.versionKey) {\n      continue;\n    }\n    if (this.$__schema.options.discriminatorKey && key === this.$__schema.options.discriminatorKey) {\n      continue;\n    }\n    this.$set(key, obj[key]);\n  }\n\n  return this;\n};\n\n/**\n * Alias for `set()`, used internally to avoid conflicts\n *\n * @param {String|Object} path path or object of key/vals to set\n * @param {Any} val the value to set\n * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for \"on-the-fly\" attributes\n * @param {Object} [options] optionally specify options that modify the behavior of the set\n * @param {Boolean} [options.merge=false] if true, setting a [nested path](https://mongoosejs.com/docs/subdocs.html#subdocuments-versus-nested-paths) will merge existing values rather than overwrite the whole object. So `doc.set('nested', { a: 1, b: 2 })` becomes `doc.set('nested.a', 1); doc.set('nested.b', 2);`\n * @return {Document} this\n * @method $set\n * @memberOf Document\n * @instance\n * @api public\n */\n\nDocument.prototype.$set = function $set(path, val, type, options) {\n  if (utils.isPOJO(type)) {\n    options = type;\n    type = undefined;\n  }\n\n  const merge = options && options.merge;\n  const adhoc = type && type !== true;\n  const constructing = type === true;\n  let adhocs;\n  let keys;\n  let i = 0;\n  let pathtype;\n  let key;\n  let prefix;\n\n  const userSpecifiedStrict = options && 'strict' in options;\n  let strict = userSpecifiedStrict\n    ? options.strict\n    : this.$__.strictMode;\n\n  if (adhoc) {\n    adhocs = this.$__.adhocPaths || (this.$__.adhocPaths = {});\n    adhocs[path] = this.$__schema.interpretAsType(path, type, this.$__schema.options);\n  }\n\n  if (path == null) {\n    [path, val] = [val, path];\n  } else if (typeof path !== 'string') {\n    // new Document({ key: val })\n    if (path instanceof Document) {\n      if (path.$__isNested) {\n        path = path.toObject();\n      } else {\n        path = path._doc;\n      }\n    }\n    if (path == null) {\n      [path, val] = [val, path];\n    }\n\n    prefix = val ? val + '.' : '';\n    keys = getKeysInSchemaOrder(this.$__schema, path);\n\n    const len = keys.length;\n\n    // `_skipMinimizeTopLevel` is because we may have deleted the top-level\n    // nested key to ensure key order.\n    const _skipMinimizeTopLevel = options && options._skipMinimizeTopLevel || false;\n    if (len === 0 && _skipMinimizeTopLevel) {\n      delete options._skipMinimizeTopLevel;\n      if (val) {\n        this.$set(val, {});\n      }\n      return this;\n    }\n\n    options = Object.assign({}, options, { _skipMinimizeTopLevel: false });\n\n    for (let i = 0; i < len; ++i) {\n      key = keys[i];\n      const pathName = prefix ? prefix + key : key;\n      pathtype = this.$__schema.pathType(pathName);\n      const valForKey = path[key];\n\n      // On initial set, delete any nested keys if we're going to overwrite\n      // them to ensure we keep the user's key order.\n      if (type === true &&\n          !prefix &&\n          valForKey != null &&\n          pathtype === 'nested' &&\n          this._doc[key] != null) {\n        delete this._doc[key];\n      }\n\n      if (utils.isNonBuiltinObject(valForKey) && pathtype === 'nested') {\n        this.$set(pathName, valForKey, constructing, Object.assign({}, options, { _skipMarkModified: true }));\n        $applyDefaultsToNested(this.$get(pathName), pathName, this);\n        continue;\n      } else if (strict) {\n        // Don't overwrite defaults with undefined keys (gh-3981) (gh-9039)\n        if (constructing && valForKey === void 0 &&\n            this.$get(pathName) !== void 0) {\n          continue;\n        }\n\n        if (pathtype === 'adhocOrUndefined') {\n          pathtype = getEmbeddedDiscriminatorPath(this, pathName, { typeOnly: true });\n        }\n\n        if (pathtype === 'real' || pathtype === 'virtual') {\n          this.$set(pathName, valForKey, constructing, options);\n        } else if (pathtype === 'nested' && valForKey instanceof Document) {\n          this.$set(pathName,\n            valForKey.toObject({ transform: false }), constructing, options);\n        } else if (strict === 'throw') {\n          if (pathtype === 'nested') {\n            throw new ObjectExpectedError(key, valForKey);\n          } else {\n            throw new StrictModeError(key);\n          }\n        }\n      } else if (valForKey !== void 0) {\n        this.$set(pathName, valForKey, constructing, options);\n      }\n    }\n\n    // Ensure all properties are in correct order\n    const orderedDoc = {};\n    const orderedKeys = Object.keys(this.$__schema.tree);\n    for (let i = 0, len = orderedKeys.length; i < len; ++i) {\n      (key = orderedKeys[i]) &&\n      (this._doc.hasOwnProperty(key)) &&\n      (orderedDoc[key] = undefined);\n    }\n    this._doc = Object.assign(orderedDoc, this._doc);\n\n    return this;\n  }\n\n  let pathType = this.$__schema.pathType(path);\n  let parts = null;\n  if (pathType === 'adhocOrUndefined') {\n    parts = path.indexOf('.') === -1 ? [path] : path.split('.');\n    pathType = getEmbeddedDiscriminatorPath(this, parts, { typeOnly: true });\n  }\n  if (pathType === 'adhocOrUndefined' && !userSpecifiedStrict) {\n    // May be path underneath non-strict schema\n    if (parts == null) {\n      parts = path.indexOf('.') === -1 ? [path] : path.split('.');\n    }\n    const subdocStrict = getSubdocumentStrictValue(this.$__schema, parts);\n    if (subdocStrict !== undefined) {\n      strict = subdocStrict;\n    }\n  }\n\n  // Assume this is a Mongoose document that was copied into a POJO using\n  // `Object.assign()` or `{...doc}`\n  val = handleSpreadDoc(val);\n\n  // if this doc is being constructed we should not trigger getters\n  const priorVal = (() => {\n    if (this.$__.priorDoc != null) {\n      return this.$__.priorDoc.$__getValue(path);\n    }\n    if (constructing) {\n      return void 0;\n    }\n    return this.$__getValue(path);\n  })();\n\n  if (pathType === 'nested' && val) {\n    if (typeof val === 'object' && val != null) {\n      if (val.$__ != null) {\n        val = val.toObject(internalToObjectOptions);\n      }\n      if (val == null) {\n        this.invalidate(path, new MongooseError.CastError('Object', val, path));\n        return this;\n      }\n      const hasInitialVal = this.$__.savedState != null && this.$__.savedState.hasOwnProperty(path);\n      if (this.$__.savedState != null && !this.$isNew && !this.$__.savedState.hasOwnProperty(path)) {\n        const initialVal = this.$__getValue(path);\n        this.$__.savedState[path] = initialVal;\n\n        const keys = Object.keys(initialVal || {});\n        for (const key of keys) {\n          this.$__.savedState[path + '.' + key] = initialVal[key];\n        }\n      }\n\n      if (!merge) {\n        this.$__setValue(path, null);\n        cleanModifiedSubpaths(this, path);\n      } else {\n        return this.$set(val, path, constructing);\n      }\n\n      const keys = getKeysInSchemaOrder(this.$__schema, val, path);\n\n      this.$__setValue(path, {});\n      for (const key of keys) {\n        this.$set(path + '.' + key, val[key], constructing, options);\n      }\n      if (priorVal != null && utils.deepEqual(hasInitialVal ? this.$__.savedState[path] : priorVal, val)) {\n        this.unmarkModified(path);\n      } else {\n        this.markModified(path);\n      }\n      return this;\n    }\n    this.invalidate(path, new MongooseError.CastError('Object', val, path));\n    return this;\n  }\n\n  let schema;\n  if (parts == null) {\n    parts = path.indexOf('.') === -1 ? [path] : path.split('.');\n  }\n\n  // Might need to change path for top-level alias\n  if (typeof this.$__schema.aliases[parts[0]] === 'string') {\n    parts[0] = this.$__schema.aliases[parts[0]];\n  }\n\n  if (pathType === 'adhocOrUndefined' && strict) {\n    // check for roots that are Mixed types\n    let mixed;\n\n    for (i = 0; i < parts.length; ++i) {\n      const subpath = parts.slice(0, i + 1).join('.');\n\n      // If path is underneath a virtual, bypass everything and just set it.\n      if (i + 1 < parts.length && this.$__schema.pathType(subpath) === 'virtual') {\n        mpath.set(path, val, this);\n        return this;\n      }\n\n      schema = this.$__schema.path(subpath);\n      if (schema == null) {\n        continue;\n      }\n\n      if (schema instanceof MixedSchema) {\n        // allow changes to sub paths of mixed types\n        mixed = true;\n        break;\n      } else if (schema.$isSchemaMap && schema.$__schemaType instanceof MixedSchema && i < parts.length - 1) {\n        // Map of mixed and not the last element in the path resolves to mixed\n        mixed = true;\n        schema = schema.$__schemaType;\n        break;\n      }\n    }\n\n    if (schema == null) {\n      // Check for embedded discriminators\n      schema = getEmbeddedDiscriminatorPath(this, path);\n    }\n\n    if (!mixed && !schema) {\n      if (strict === 'throw') {\n        throw new StrictModeError(path);\n      }\n      return this;\n    }\n  } else if (pathType === 'virtual') {\n    schema = this.$__schema.virtualpath(path);\n    schema.applySetters(val, this);\n    return this;\n  } else {\n    schema = this.$__path(path);\n  }\n\n  // gh-4578, if setting a deeply nested path that doesn't exist yet, create it\n  let cur = this._doc;\n  let curPath = '';\n  for (i = 0; i < parts.length - 1; ++i) {\n    cur = cur[parts[i]];\n    curPath += (curPath.length !== 0 ? '.' : '') + parts[i];\n    if (!cur) {\n      this.$set(curPath, {});\n      // Hack re: gh-5800. If nested field is not selected, it probably exists\n      // so `MongoServerError: cannot use the part (nested of nested.num) to\n      // traverse the element ({nested: null})` is not likely. If user gets\n      // that error, its their fault for now. We should reconsider disallowing\n      // modifying not selected paths for 6.x\n      if (!this.$__isSelected(curPath)) {\n        this.unmarkModified(curPath);\n      }\n      cur = this.$__getValue(curPath);\n    }\n  }\n\n  let pathToMark;\n\n  // When using the $set operator the path to the field must already exist.\n  // Else mongodb throws: \"LEFT_SUBFIELD only supports Object\"\n\n  if (parts.length <= 1) {\n    pathToMark = path;\n  } else {\n    const len = parts.length;\n    for (i = 0; i < len; ++i) {\n      const subpath = parts.slice(0, i + 1).join('.');\n      if (this.$get(subpath, null, { getters: false }) === null) {\n        pathToMark = subpath;\n        break;\n      }\n    }\n\n    if (!pathToMark) {\n      pathToMark = path;\n    }\n  }\n\n  if (!schema) {\n    this.$__set(pathToMark, path, options, constructing, parts, schema, val, priorVal);\n\n    if (pathType === 'nested' && val == null) {\n      cleanModifiedSubpaths(this, path);\n    }\n    return this;\n  }\n\n  // If overwriting a subdocument path, make sure to clear out\n  // any errors _before_ setting, so new errors that happen\n  // get persisted. Re: #9080\n  if (schema.$isSingleNested || schema.$isMongooseArray) {\n    _markValidSubpaths(this, path);\n  }\n\n  if (val != null && merge && schema.$isSingleNested) {\n    if (val instanceof Document) {\n      val = val.toObject({ virtuals: false, transform: false });\n    }\n    const keys = Object.keys(val);\n    for (const key of keys) {\n      this.$set(path + '.' + key, val[key], constructing, options);\n    }\n\n    return this;\n  }\n\n  let shouldSet = true;\n  try {\n    // If the user is trying to set a ref path to a document with\n    // the correct model name, treat it as populated\n    const refMatches = (() => {\n      if (schema.options == null) {\n        return false;\n      }\n      if (!(val instanceof Document)) {\n        return false;\n      }\n      const model = val.constructor;\n\n      // Check ref\n      const ref = schema.options.ref;\n      if (ref != null && (ref === model.modelName || ref === model.baseModelName)) {\n        return true;\n      }\n\n      // Check refPath\n      const refPath = schema.options.refPath;\n      if (refPath == null) {\n        return false;\n      }\n      const modelName = val.get(refPath);\n      return modelName === model.modelName || modelName === model.baseModelName;\n    })();\n\n    let didPopulate = false;\n    if (refMatches && val instanceof Document && (!val.$__.wasPopulated || utils.deepEqual(val.$__.wasPopulated.value, val._id))) {\n      const unpopulatedValue = (schema && schema.$isSingleNested) ? schema.cast(val, this) : val._id;\n      this.$populated(path, unpopulatedValue, { [populateModelSymbol]: val.constructor });\n      val.$__.wasPopulated = { value: unpopulatedValue };\n      didPopulate = true;\n    }\n\n    let popOpts;\n    const typeKey = this.$__schema.options.typeKey;\n    if (schema.options &&\n        Array.isArray(schema.options[typeKey]) &&\n        schema.options[typeKey].length &&\n        schema.options[typeKey][0].ref &&\n        _isManuallyPopulatedArray(val, schema.options[typeKey][0].ref)) {\n      popOpts = { [populateModelSymbol]: val[0].constructor };\n      this.$populated(path, val.map(function(v) { return v._id; }), popOpts);\n\n      for (const doc of val) {\n        doc.$__.wasPopulated = { value: doc._id };\n      }\n      didPopulate = true;\n    }\n\n    if (!refMatches || !schema.$isSingleNested || !val.$__) {\n      // If this path is underneath a single nested schema, we'll call the setter\n      // later in `$__set()` because we don't take `_doc` when we iterate through\n      // a single nested doc. That's to make sure we get the correct context.\n      // Otherwise we would double-call the setter, see gh-7196.\n      let setterContext = this;\n      if (this.$__schema.singleNestedPaths[path] != null && parts.length > 1) {\n        setterContext = getDeepestSubdocumentForPath(this, parts, this.schema);\n      }\n      if (options != null && options.overwriteImmutable) {\n        val = schema.applySetters(val, setterContext, false, priorVal, { overwriteImmutable: true });\n      } else {\n        val = schema.applySetters(val, setterContext, false, priorVal);\n      }\n    }\n\n    if (Array.isArray(val) &&\n        !Array.isArray(schema) &&\n        schema.$isMongooseDocumentArray &&\n        val.length !== 0 &&\n        val[0] != null &&\n        val[0].$__ != null &&\n        val[0].$__.populated != null) {\n      const populatedPaths = Object.keys(val[0].$__.populated);\n      for (const populatedPath of populatedPaths) {\n        this.$populated(path + '.' + populatedPath,\n          val.map(v => v.$populated(populatedPath)),\n          val[0].$__.populated[populatedPath].options);\n      }\n      didPopulate = true;\n    }\n\n    if (!didPopulate && this.$__.populated) {\n      // If this array partially contains populated documents, convert them\n      // all to ObjectIds re: #8443\n      if (Array.isArray(val) && this.$__.populated[path]) {\n        for (let i = 0; i < val.length; ++i) {\n          if (val[i] instanceof Document) {\n            val.set(i, val[i]._id, true);\n          }\n        }\n      }\n      delete this.$__.populated[path];\n    }\n\n    if (val != null && schema.$isSingleNested) {\n      _checkImmutableSubpaths(val, schema, priorVal);\n    }\n\n    this.$markValid(path);\n  } catch (e) {\n    if (e instanceof MongooseError.StrictModeError && e.isImmutableError) {\n      this.invalidate(path, e);\n    } else if (e instanceof MongooseError.CastError) {\n      this.invalidate(e.path, e);\n      if (e.$originalErrorPath) {\n        this.invalidate(path,\n          new MongooseError.CastError(schema.instance, val, path, e.$originalErrorPath));\n      }\n    } else {\n      this.invalidate(path,\n        new MongooseError.CastError(schema.instance, val, path, e));\n    }\n    shouldSet = false;\n  }\n\n  if (shouldSet) {\n    let savedState = null;\n    let savedStatePath = null;\n    if (!constructing) {\n      const doc = this.$isSubdocument ? this.ownerDocument() : this;\n      savedState = doc.$__.savedState;\n      savedStatePath = this.$isSubdocument ? this.$__.fullPath + '.' + path : path;\n      doc.$__saveInitialState(savedStatePath);\n    }\n\n    this.$__set(pathToMark, path, options, constructing, parts, schema, val, priorVal);\n\n    if (savedState != null && savedState.hasOwnProperty(savedStatePath) && utils.deepEqual(val, savedState[savedStatePath])) {\n      this.unmarkModified(path);\n    }\n  }\n\n  if (schema.$isSingleNested && (this.isDirectModified(path) || val == null)) {\n    cleanModifiedSubpaths(this, path);\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _isManuallyPopulatedArray(val, ref) {\n  if (!Array.isArray(val)) {\n    return false;\n  }\n  if (val.length === 0) {\n    return false;\n  }\n\n  for (const el of val) {\n    if (!(el instanceof Document)) {\n      return false;\n    }\n    const modelName = el.constructor.modelName;\n    if (modelName == null) {\n      return false;\n    }\n    if (el.constructor.modelName != ref && el.constructor.baseModelName != ref) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Sets the value of a path, or many paths.\n * Alias for [`.$set`](https://mongoosejs.com/docs/api/document.html#Document.prototype.$set()).\n *\n * #### Example:\n *\n *     // path, value\n *     doc.set(path, value)\n *\n *     // object\n *     doc.set({\n *         path  : value\n *       , path2 : {\n *            path  : value\n *         }\n *     })\n *\n *     // on-the-fly cast to number\n *     doc.set(path, value, Number)\n *\n *     // on-the-fly cast to string\n *     doc.set(path, value, String)\n *\n *     // changing strict mode behavior\n *     doc.set(path, value, { strict: false });\n *\n * @param {String|Object} path path or object of key/vals to set\n * @param {Any} val the value to set\n * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for \"on-the-fly\" attributes\n * @param {Object} [options] optionally specify options that modify the behavior of the set\n * @return {Document} this\n * @api public\n * @method set\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.set = Document.prototype.$set;\n\n/**\n * Determine if we should mark this change as modified.\n *\n * @param {never} pathToMark UNUSED\n * @param {String|Symbol} path\n * @param {Object} options\n * @param {Any} constructing\n * @param {never} parts UNUSED\n * @param {Schema} schema\n * @param {Any} val\n * @param {Any} priorVal\n * @return {Boolean}\n * @api private\n * @method $__shouldModify\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__shouldModify = function(pathToMark, path, options, constructing, parts, schema, val, priorVal) {\n  if (options && options._skipMarkModified) {\n    return false;\n  }\n  if (this.$isNew) {\n    return true;\n  }\n  // Is path already modified? If so, always modify. We may unmark modified later.\n  if (path in this.$__.activePaths.getStatePaths('modify')) {\n    return true;\n  }\n\n  if (val === void 0 && !this.$__isSelected(path)) {\n    // when a path is not selected in a query, its initial\n    // value will be undefined.\n    return true;\n  }\n\n  if (val === void 0 && path in this.$__.activePaths.getStatePaths('default')) {\n    // we're just unsetting the default value which was never saved\n    return false;\n  }\n\n  // gh-3992: if setting a populated field to a doc, don't mark modified\n  // if they have the same _id\n  if (this.$populated(path) &&\n      val instanceof Document &&\n      deepEqual(val._id, priorVal)) {\n    return false;\n  }\n\n  if (!deepEqual(val, priorVal !== undefined ? priorVal : utils.getValue(path, this))) {\n    return true;\n  }\n\n  if (!constructing &&\n      val !== null &&\n      val !== undefined &&\n      path in this.$__.activePaths.getStatePaths('default') &&\n      deepEqual(val, schema.getDefault(this, constructing))) {\n    // a path with a default was $unset on the server\n    // and the user is setting it to the same value again\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles the actual setting of the value and marking the path modified if appropriate.\n *\n * @param {String} pathToMark\n * @param {String|Symbol} path\n * @param {Object} options\n * @param {Any} constructing\n * @param {Array} parts\n * @param {Schema} schema\n * @param {Any} val\n * @param {Any} priorVal\n * @api private\n * @method $__set\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__set = function(pathToMark, path, options, constructing, parts, schema, val, priorVal) {\n  Embedded = Embedded || require('./types/ArraySubdocument');\n\n  const shouldModify = this.$__shouldModify(pathToMark, path, options, constructing, parts,\n    schema, val, priorVal);\n\n  if (shouldModify) {\n    if (this.$__.primitiveAtomics && this.$__.primitiveAtomics[path]) {\n      delete this.$__.primitiveAtomics[path];\n      if (Object.keys(this.$__.primitiveAtomics).length === 0) {\n        delete this.$__.primitiveAtomics;\n      }\n    }\n    this.markModified(pathToMark);\n\n    // handle directly setting arrays (gh-1126)\n    MongooseArray || (MongooseArray = require('./types/array'));\n    if (val && utils.isMongooseArray(val)) {\n      val._registerAtomic('$set', val);\n\n      // Update embedded document parent references (gh-5189)\n      if (utils.isMongooseDocumentArray(val)) {\n        val.forEach(function(item) {\n          item && item.__parentArray && (item.__parentArray = val);\n        });\n      }\n    }\n  } else if (Array.isArray(val) && Array.isArray(priorVal) && utils.isMongooseArray(val) && utils.isMongooseArray(priorVal)) {\n    val[arrayAtomicsSymbol] = priorVal[arrayAtomicsSymbol];\n    val[arrayAtomicsBackupSymbol] = priorVal[arrayAtomicsBackupSymbol];\n    if (utils.isMongooseDocumentArray(val)) {\n      val.forEach(doc => { doc.isNew = false; });\n    }\n  }\n\n  let obj = this._doc;\n  let i = 0;\n  const l = parts.length;\n  let cur = '';\n\n  for (; i < l; i++) {\n    const next = i + 1;\n    const last = next === l;\n    cur += (cur ? '.' + parts[i] : parts[i]);\n    if (specialProperties.has(parts[i])) {\n      return;\n    }\n\n    if (last) {\n      if (obj instanceof Map) {\n        obj.set(parts[i], val);\n      } else {\n        obj[parts[i]] = val;\n      }\n    } else {\n      const isMap = obj instanceof Map;\n      let value = isMap ? obj.get(parts[i]) : obj[parts[i]];\n      if (utils.isPOJO(value)) {\n        obj = value;\n      } else if (value && value instanceof Embedded) {\n        obj = value;\n      } else if (value && !Array.isArray(value) && value.$isSingleNested) {\n        obj = value._doc;\n      } else if (value && Array.isArray(value)) {\n        obj = value;\n      } else if (value == null) {\n        value = {};\n        if (isMap) {\n          obj.set(parts[i], value);\n        } else {\n          obj[parts[i]] = value;\n        }\n        obj = value;\n      } else {\n        obj = value;\n      }\n    }\n  }\n};\n\n/**\n * Gets a raw value from a path (no getters)\n *\n * @param {String} path\n * @return {Any} Returns the value from the given `path`.\n * @api private\n */\n\nDocument.prototype.$__getValue = function(path) {\n  return utils.getValue(path, this._doc);\n};\n\n/**\n * Increments the numeric value at `path` by the given `val`.\n * When you call `save()` on this document, Mongoose will send a\n * [`$inc`](https://www.mongodb.com/docs/manual/reference/operator/update/inc/)\n * as opposed to a `$set`.\n *\n * #### Example:\n *\n *     const schema = new Schema({ counter: Number });\n *     const Test = db.model('Test', schema);\n *\n *     const doc = await Test.create({ counter: 0 });\n *     doc.$inc('counter', 2);\n *     await doc.save(); // Sends a `{ $inc: { counter: 2 } }` to MongoDB\n *     doc.counter; // 2\n *\n *     doc.counter += 2;\n *     await doc.save(); // Sends a `{ $set: { counter: 2 } }` to MongoDB\n *\n * @param {String|Array} path path or paths to update\n * @param {Number} val increment `path` by this value\n * @return {Document} this\n */\n\nDocument.prototype.$inc = function $inc(path, val) {\n  if (val == null) {\n    val = 1;\n  }\n\n  if (Array.isArray(path)) {\n    path.forEach((p) => this.$inc(p, val));\n    return this;\n  }\n\n  const schemaType = this.$__path(path);\n  if (schemaType == null) {\n    if (this.$__.strictMode === 'throw') {\n      throw new StrictModeError(path);\n    } else if (this.$__.strictMode === true) {\n      return this;\n    }\n  } else if (schemaType.instance !== 'Number') {\n    this.invalidate(path, new MongooseError.CastError(schemaType.instance, val, path));\n    return this;\n  }\n\n  const currentValue = this.$__getValue(path) || 0;\n  let shouldSet = false;\n  let valToSet = null;\n  let valToInc = val;\n\n  try {\n    val = schemaType.cast(val);\n    valToSet = schemaType.applySetters(currentValue + val, this);\n    valToInc = valToSet - currentValue;\n    shouldSet = true;\n  } catch (err) {\n    this.invalidate(path, new MongooseError.CastError('number', val, path, err));\n  }\n\n  if (shouldSet) {\n    this.$__.primitiveAtomics = this.$__.primitiveAtomics || {};\n    if (this.$__.primitiveAtomics[path] == null) {\n      this.$__.primitiveAtomics[path] = { $inc: valToInc };\n    } else {\n      this.$__.primitiveAtomics[path].$inc += valToInc;\n    }\n    this.markModified(path);\n    this.$__setValue(path, valToSet);\n  }\n\n  return this;\n};\n\n/**\n * Sets a raw value for a path (no casting, setters, transformations)\n *\n * @param {String} path\n * @param {Object} value\n * @return {Document} this\n * @api private\n */\n\nDocument.prototype.$__setValue = function(path, val) {\n  utils.setValue(path, val, this._doc);\n  return this;\n};\n\n/**\n * Returns the value of a path.\n *\n * #### Example:\n *\n *     // path\n *     doc.get('age') // 47\n *\n *     // dynamic casting to a string\n *     doc.get('age', String) // \"47\"\n *\n * @param {String} path\n * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for on-the-fly attributes\n * @param {Object} [options]\n * @param {Boolean} [options.virtuals=false] Apply virtuals before getting this path\n * @param {Boolean} [options.getters=true] If false, skip applying getters and just get the raw value\n * @return {Any}\n * @api public\n */\n\nDocument.prototype.get = function(path, type, options) {\n  let adhoc;\n  if (options == null) {\n    options = {};\n  }\n  if (type) {\n    adhoc = this.$__schema.interpretAsType(path, type, this.$__schema.options);\n  }\n  const noDottedPath = options.noDottedPath;\n\n  // Fast path if we know we're just accessing top-level path on the document:\n  // just get the schema path, avoid `$__path()` because that does string manipulation\n  let schema = noDottedPath ? this.$__schema.paths[path] : this.$__path(path);\n  if (schema == null) {\n    schema = this.$__schema.virtualpath(path);\n\n    if (schema != null) {\n      return schema.applyGetters(void 0, this);\n    }\n  }\n\n  if (noDottedPath) {\n    let obj = this._doc[path];\n    if (adhoc) {\n      obj = adhoc.cast(obj);\n    }\n    if (schema != null && options.getters !== false) {\n      return schema.applyGetters(obj, this);\n    }\n    return obj;\n  }\n\n  if (schema != null && schema.instance === 'Mixed') {\n    const virtual = this.$__schema.virtualpath(path);\n    if (virtual != null) {\n      schema = virtual;\n    }\n  }\n\n  const hasDot = path.indexOf('.') !== -1;\n  let obj = this._doc;\n\n  const pieces = hasDot ? path.split('.') : [path];\n  // Might need to change path for top-level alias\n  if (typeof this.$__schema.aliases[pieces[0]] === 'string') {\n    pieces[0] = this.$__schema.aliases[pieces[0]];\n  }\n\n  for (let i = 0, l = pieces.length; i < l; i++) {\n    if (obj && obj._doc) {\n      obj = obj._doc;\n    }\n\n    if (obj == null) {\n      obj = void 0;\n    } else if (obj instanceof Map) {\n      obj = obj.get(pieces[i], { getters: false });\n    } else if (i === l - 1) {\n      obj = utils.getValue(pieces[i], obj);\n    } else {\n      obj = obj[pieces[i]];\n    }\n  }\n\n  if (adhoc) {\n    obj = adhoc.cast(obj);\n  }\n\n  if (schema != null && options.getters !== false) {\n    obj = schema.applyGetters(obj, this);\n  } else if (this.$__schema.nested[path] && options.virtuals) {\n    // Might need to apply virtuals if this is a nested path\n    return applyVirtuals(this, clone(obj) || {}, { path: path });\n  }\n\n  return obj;\n};\n\n/*!\n * ignore\n */\n\nDocument.prototype[getSymbol] = Document.prototype.get;\nDocument.prototype.$get = Document.prototype.get;\n\n/**\n * Returns the schematype for the given `path`.\n *\n * @param {String} path\n * @return {SchemaPath}\n * @api private\n * @method $__path\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__path = function(path) {\n  const adhocs = this.$__.adhocPaths;\n  const adhocType = adhocs && adhocs.hasOwnProperty(path) ? adhocs[path] : null;\n\n  if (adhocType) {\n    return adhocType;\n  }\n  return this.$__schema.path(path);\n};\n\n/**\n * Marks the path as having pending changes to write to the db.\n *\n * _Very helpful when using [Mixed](https://mongoosejs.com/docs/schematypes.html#mixed) types._\n *\n * #### Example:\n *\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *     doc.save() // changes to mixed.type are now persisted\n *\n * @param {String} path the path to mark modified\n * @param {Document} [scope] the scope to run validators with\n * @api public\n */\n\nDocument.prototype.markModified = function(path, scope) {\n  this.$__saveInitialState(path);\n\n  this.$__.activePaths.modify(path);\n  if (scope != null && !this.$isSubdocument) {\n    this.$__.pathsToScopes = this.$__pathsToScopes || {};\n    this.$__.pathsToScopes[path] = scope;\n  }\n};\n\n/*!\n * ignore\n */\n\nDocument.prototype.$__saveInitialState = function $__saveInitialState(path) {\n  const savedState = this.$__.savedState;\n  const savedStatePath = path;\n  if (savedState != null) {\n    const firstDot = savedStatePath.indexOf('.');\n    const topLevelPath = firstDot === -1 ? savedStatePath : savedStatePath.slice(0, firstDot);\n    if (!savedState.hasOwnProperty(topLevelPath)) {\n      savedState[topLevelPath] = clone(this.$__getValue(topLevelPath));\n    }\n  }\n};\n\n/**\n * Clears the modified state on the specified path.\n *\n * #### Example:\n *\n *     doc.foo = 'bar';\n *     doc.unmarkModified('foo');\n *     doc.save(); // changes to foo will not be persisted\n *\n * @param {String} path the path to unmark modified\n * @api public\n */\n\nDocument.prototype.unmarkModified = function(path) {\n  this.$__.activePaths.init(path);\n  if (this.$__.pathsToScopes != null) {\n    delete this.$__.pathsToScopes[path];\n  }\n};\n\n/**\n * Don't run validation on this path or persist changes to this path.\n *\n * #### Example:\n *\n *     doc.foo = null;\n *     doc.$ignore('foo');\n *     doc.save(); // changes to foo will not be persisted and validators won't be run\n *\n * @memberOf Document\n * @instance\n * @method $ignore\n * @param {String} path the path to ignore\n * @api public\n */\n\nDocument.prototype.$ignore = function(path) {\n  this.$__.activePaths.ignore(path);\n};\n\n/**\n * Returns the list of paths that have been directly modified. A direct\n * modified path is a path that you explicitly set, whether via `doc.foo = 'bar'`,\n * `Object.assign(doc, { foo: 'bar' })`, or `doc.set('foo', 'bar')`.\n *\n * A path `a` may be in `modifiedPaths()` but not in `directModifiedPaths()`\n * because a child of `a` was directly modified.\n *\n * #### Example:\n *\n *     const schema = new Schema({ foo: String, nested: { bar: String } });\n *     const Model = mongoose.model('Test', schema);\n *     await Model.create({ foo: 'original', nested: { bar: 'original' } });\n *\n *     const doc = await Model.findOne();\n *     doc.nested.bar = 'modified';\n *     doc.directModifiedPaths(); // ['nested.bar']\n *     doc.modifiedPaths(); // ['nested', 'nested.bar']\n *\n * @return {String[]}\n * @api public\n */\n\nDocument.prototype.directModifiedPaths = function() {\n  return Object.keys(this.$__.activePaths.getStatePaths('modify'));\n};\n\n/**\n * Returns true if the given path is nullish or only contains empty objects.\n * Useful for determining whether this subdoc will get stripped out by the\n * [minimize option](https://mongoosejs.com/docs/guide.html#minimize).\n *\n * #### Example:\n *\n *     const schema = new Schema({ nested: { foo: String } });\n *     const Model = mongoose.model('Test', schema);\n *     const doc = new Model({});\n *     doc.$isEmpty('nested'); // true\n *     doc.nested.$isEmpty(); // true\n *\n *     doc.nested.foo = 'bar';\n *     doc.$isEmpty('nested'); // false\n *     doc.nested.$isEmpty(); // false\n *\n * @param {String} [path]\n * @memberOf Document\n * @instance\n * @api public\n * @method $isEmpty\n * @return {Boolean}\n */\n\nDocument.prototype.$isEmpty = function(path) {\n  const isEmptyOptions = {\n    minimize: true,\n    virtuals: false,\n    getters: false,\n    transform: false\n  };\n\n  if (arguments.length !== 0) {\n    const v = this.$get(path);\n    if (v == null) {\n      return true;\n    }\n    if (typeof v !== 'object') {\n      return false;\n    }\n    if (utils.isPOJO(v)) {\n      return _isEmpty(v);\n    }\n    return Object.keys(v.toObject(isEmptyOptions)).length === 0;\n  }\n\n  return Object.keys(this.toObject(isEmptyOptions)).length === 0;\n};\n\n/*!\n * ignore\n */\n\nfunction _isEmpty(v) {\n  if (v == null) {\n    return true;\n  }\n  if (typeof v !== 'object' || Array.isArray(v)) {\n    return false;\n  }\n  for (const key of Object.keys(v)) {\n    if (!_isEmpty(v[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns the list of paths that have been modified.\n *\n * @param {Object} [options]\n * @param {Boolean} [options.includeChildren=false] if true, returns children of modified paths as well. For example, if false, the list of modified paths for `doc.colors = { primary: 'blue' };` will **not** contain `colors.primary`. If true, `modifiedPaths()` will return an array that contains `colors.primary`.\n * @return {String[]}\n * @api public\n */\n\nDocument.prototype.modifiedPaths = function(options) {\n  options = options || {};\n\n  const directModifiedPaths = Object.keys(this.$__.activePaths.getStatePaths('modify'));\n  const result = new Set();\n\n  let i = 0;\n  let j = 0;\n  const len = directModifiedPaths.length;\n\n  for (i = 0; i < len; ++i) {\n    const path = directModifiedPaths[i];\n    const parts = parentPaths(path);\n    const pLen = parts.length;\n\n    for (j = 0; j < pLen; ++j) {\n      result.add(parts[j]);\n    }\n\n    if (!options.includeChildren) {\n      continue;\n    }\n\n    let ii = 0;\n    let cur = this.$get(path);\n    if (typeof cur === 'object' && cur !== null) {\n      if (cur._doc) {\n        cur = cur._doc;\n      }\n      const len = cur.length;\n      if (Array.isArray(cur)) {\n        for (ii = 0; ii < len; ++ii) {\n          const subPath = path + '.' + ii;\n          if (!result.has(subPath)) {\n            result.add(subPath);\n            if (cur[ii] != null && cur[ii].$__) {\n              const modified = cur[ii].modifiedPaths();\n              let iii = 0;\n              const iiiLen = modified.length;\n              for (iii = 0; iii < iiiLen; ++iii) {\n                result.add(subPath + '.' + modified[iii]);\n              }\n            }\n          }\n        }\n      } else {\n        const keys = Object.keys(cur);\n        let ii = 0;\n        const len = keys.length;\n        for (ii = 0; ii < len; ++ii) {\n          result.add(path + '.' + keys[ii]);\n        }\n      }\n    }\n  }\n  return Array.from(result);\n};\n\nDocument.prototype[documentModifiedPaths] = Document.prototype.modifiedPaths;\n\n/**\n * Returns true if any of the given paths is modified, else false. If no arguments, returns `true` if any path\n * in this document is modified.\n *\n * If `path` is given, checks if a path or any full path containing `path` as part of its path chain has been modified.\n *\n * #### Example:\n *\n *     doc.set('documents.0.title', 'changed');\n *     doc.isModified()                      // true\n *     doc.isModified('documents')           // true\n *     doc.isModified('documents.0.title')   // true\n *     doc.isModified('documents otherProp') // true\n *     doc.isDirectModified('documents')     // false\n *\n * @param {String} [path] optional\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isModified = function(paths, modifiedPaths) {\n  if (paths) {\n    const directModifiedPathsObj = this.$__.activePaths.states.modify;\n    if (directModifiedPathsObj == null) {\n      return false;\n    }\n\n    if (typeof paths === 'string') {\n      paths = paths.indexOf(' ') === -1 ? [paths] : paths.split(' ');\n    }\n\n    for (const path of paths) {\n      if (directModifiedPathsObj[path] != null) {\n        return true;\n      }\n    }\n\n    const modified = modifiedPaths || this[documentModifiedPaths]();\n    const isModifiedChild = paths.some(function(path) {\n      return !!~modified.indexOf(path);\n    });\n\n    const directModifiedPaths = Object.keys(directModifiedPathsObj);\n    return isModifiedChild || paths.some(function(path) {\n      return directModifiedPaths.some(function(mod) {\n        return mod === path || path.startsWith(mod + '.');\n      });\n    });\n  }\n\n  return this.$__.activePaths.some('modify');\n};\n\n/**\n * Alias of [`.isModified`](https://mongoosejs.com/docs/api/document.html#Document.prototype.isModified())\n *\n * @method $isModified\n * @memberOf Document\n * @api public\n */\n\nDocument.prototype.$isModified = Document.prototype.isModified;\n\nDocument.prototype[documentIsModified] = Document.prototype.isModified;\n\n/**\n * Checks if a path is set to its default.\n *\n * #### Example:\n *\n *     MyModel = mongoose.model('test', { name: { type: String, default: 'Val '} });\n *     const m = new MyModel();\n *     m.$isDefault('name'); // true\n *\n * @memberOf Document\n * @instance\n * @method $isDefault\n * @param {String} [path]\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.$isDefault = function(path) {\n  if (path == null) {\n    return this.$__.activePaths.some('default');\n  }\n\n  if (typeof path === 'string' && path.indexOf(' ') === -1) {\n    return this.$__.activePaths.getStatePaths('default').hasOwnProperty(path);\n  }\n\n  let paths = path;\n  if (!Array.isArray(paths)) {\n    paths = paths.split(' ');\n  }\n\n  return paths.some(path => this.$__.activePaths.getStatePaths('default').hasOwnProperty(path));\n};\n\n/**\n * Getter/setter, determines whether the document was removed or not.\n *\n * #### Example:\n *\n *     const product = await product.remove();\n *     product.$isDeleted(); // true\n *     product.remove(); // no-op, doesn't send anything to the db\n *\n *     product.$isDeleted(false);\n *     product.$isDeleted(); // false\n *     product.remove(); // will execute a remove against the db\n *\n *\n * @param {Boolean} [val] optional, overrides whether mongoose thinks the doc is deleted\n * @return {Boolean|Document} whether mongoose thinks this doc is deleted.\n * @method $isDeleted\n * @memberOf Document\n * @instance\n * @api public\n */\n\nDocument.prototype.$isDeleted = function(val) {\n  if (arguments.length === 0) {\n    return !!this.$__.isDeleted;\n  }\n\n  this.$__.isDeleted = !!val;\n  return this;\n};\n\n/**\n * Returns true if `path` was directly set and modified, else false.\n *\n * #### Example:\n *\n *     doc.set('documents.0.title', 'changed');\n *     doc.isDirectModified('documents.0.title') // true\n *     doc.isDirectModified('documents') // false\n *\n * @param {String|String[]} [path]\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isDirectModified = function(path) {\n  if (path == null) {\n    return this.$__.activePaths.some('modify');\n  }\n\n  if (typeof path === 'string' && path.indexOf(' ') === -1) {\n    return this.$__.activePaths.getStatePaths('modify').hasOwnProperty(path);\n  }\n\n  let paths = path;\n  if (!Array.isArray(paths)) {\n    paths = paths.split(' ');\n  }\n\n  return paths.some(path => this.$__.activePaths.getStatePaths('modify').hasOwnProperty(path));\n};\n\n/**\n * Checks if `path` is in the `init` state, that is, it was set by `Document#init()` and not modified since.\n *\n * @param {String} [path]\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isInit = function(path) {\n  if (path == null) {\n    return this.$__.activePaths.some('init');\n  }\n\n  if (typeof path === 'string' && path.indexOf(' ') === -1) {\n    return this.$__.activePaths.getStatePaths('init').hasOwnProperty(path);\n  }\n\n  let paths = path;\n  if (!Array.isArray(paths)) {\n    paths = paths.split(' ');\n  }\n\n  return paths.some(path => this.$__.activePaths.getStatePaths('init').hasOwnProperty(path));\n};\n\n/**\n * Checks if `path` was selected in the source query which initialized this document.\n *\n * #### Example:\n *\n *     const doc = await Thing.findOne().select('name');\n *     doc.isSelected('name') // true\n *     doc.isSelected('age')  // false\n *\n * @param {String|String[]} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isSelected = function isSelected(path) {\n  if (this.$__.selected == null) {\n    return true;\n  }\n  if (!path) {\n    return false;\n  }\n  if (path === '_id') {\n    return this.$__.selected._id !== 0;\n  }\n\n  if (path.indexOf(' ') !== -1) {\n    path = path.split(' ');\n  }\n  if (Array.isArray(path)) {\n    return path.some(p => this.$__isSelected(p));\n  }\n\n  const paths = Object.keys(this.$__.selected);\n  let inclusive = null;\n\n  if (paths.length === 1 && paths[0] === '_id') {\n    // only _id was selected.\n    return this.$__.selected._id === 0;\n  }\n\n  for (const cur of paths) {\n    if (cur === '_id') {\n      continue;\n    }\n    if (!isDefiningProjection(this.$__.selected[cur])) {\n      continue;\n    }\n    inclusive = !!this.$__.selected[cur];\n    break;\n  }\n\n  if (inclusive === null) {\n    return true;\n  }\n\n  if (path in this.$__.selected) {\n    return inclusive;\n  }\n\n  const pathDot = path + '.';\n\n  for (const cur of paths) {\n    if (cur === '_id') {\n      continue;\n    }\n\n    if (cur.startsWith(pathDot)) {\n      return inclusive || cur !== pathDot;\n    }\n\n    if (pathDot.startsWith(cur + '.')) {\n      return inclusive;\n    }\n  }\n  return !inclusive;\n};\n\nDocument.prototype.$__isSelected = Document.prototype.isSelected;\n\n/**\n * Checks if `path` was explicitly selected. If no projection, always returns\n * true.\n *\n * #### Example:\n *\n *     Thing.findOne().select('nested.name').exec(function (err, doc) {\n *        doc.isDirectSelected('nested.name') // true\n *        doc.isDirectSelected('nested.otherName') // false\n *        doc.isDirectSelected('nested')  // false\n *     })\n *\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isDirectSelected = function isDirectSelected(path) {\n  if (this.$__.selected == null) {\n    return true;\n  }\n\n  if (path === '_id') {\n    return this.$__.selected._id !== 0;\n  }\n\n  if (path.indexOf(' ') !== -1) {\n    path = path.split(' ');\n  }\n  if (Array.isArray(path)) {\n    return path.some(p => this.isDirectSelected(p));\n  }\n\n  const paths = Object.keys(this.$__.selected);\n  let inclusive = null;\n\n  if (paths.length === 1 && paths[0] === '_id') {\n    // only _id was selected.\n    return this.$__.selected._id === 0;\n  }\n\n  for (const cur of paths) {\n    if (cur === '_id') {\n      continue;\n    }\n    if (!isDefiningProjection(this.$__.selected[cur])) {\n      continue;\n    }\n    inclusive = !!this.$__.selected[cur];\n    break;\n  }\n\n  if (inclusive === null) {\n    return true;\n  }\n\n  if (this.$__.selected.hasOwnProperty(path)) {\n    return inclusive;\n  }\n\n  return !inclusive;\n};\n\n/**\n * Executes registered validation rules for this document.\n *\n * #### Note:\n *\n * This method is called `pre` save and if a validation rule is violated, [save](https://mongoosejs.com/docs/api/model.html#Model.prototype.save()) is aborted and the error is thrown.\n *\n * #### Example:\n *\n *     await doc.validate({ validateModifiedOnly: false, pathsToSkip: ['name', 'email']});\n *\n * @param {Array|String} [pathsToValidate] list of paths to validate. If set, Mongoose will validate only the modified paths that are in the given list.\n * @param {Object} [options] internal options\n * @param {Boolean} [options.validateModifiedOnly=false] if `true` mongoose validates only modified paths.\n * @param {Array|string} [options.pathsToSkip] list of paths to skip. If set, Mongoose will validate every modified path that is not in this list.\n * @return {Promise} Returns a Promise.\n * @api public\n */\n\nDocument.prototype.validate = async function validate(pathsToValidate, options) {\n  if (typeof pathsToValidate === 'function' || typeof options === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Document.prototype.validate() no longer accepts a callback');\n  }\n  let parallelValidate;\n  this.$op = 'validate';\n\n  if (this.$isSubdocument != null) {\n    // Skip parallel validate check for subdocuments\n  } else if (this.$__.validating) {\n    parallelValidate = new ParallelValidateError(this, {\n      parentStack: options && options.parentStack,\n      conflictStack: this.$__.validating.stack\n    });\n  } else {\n    this.$__.validating = new ParallelValidateError(this, { parentStack: options && options.parentStack });\n  }\n\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'object' && !Array.isArray(arguments[0])) {\n      options = arguments[0];\n      pathsToValidate = null;\n    }\n  }\n  if (options && typeof options.pathsToSkip === 'string') {\n    const isOnePathOnly = options.pathsToSkip.indexOf(' ') === -1;\n    options.pathsToSkip = isOnePathOnly ? [options.pathsToSkip] : options.pathsToSkip.split(' ');\n  }\n\n  if (parallelValidate != null) {\n    throw parallelValidate;\n  }\n\n  return new Promise((resolve, reject) => {\n    this.$__validate(pathsToValidate, options, (error) => {\n      this.$op = null;\n      this.$__.validating = null;\n      if (error != null) {\n        return reject(error);\n      }\n      resolve();\n    });\n  });\n};\n\n/**\n * Alias of [`.validate`](https://mongoosejs.com/docs/api/document.html#Document.prototype.validate())\n *\n * @method $validate\n * @memberOf Document\n * @api public\n */\n\nDocument.prototype.$validate = Document.prototype.validate;\n\n/*!\n * ignore\n */\n\nfunction _evaluateRequiredFunctions(doc) {\n  const requiredFields = Object.keys(doc.$__.activePaths.getStatePaths('require'));\n  let i = 0;\n  const len = requiredFields.length;\n  for (i = 0; i < len; ++i) {\n    const path = requiredFields[i];\n\n    const p = doc.$__schema.path(path);\n\n    if (p != null && typeof p.originalRequiredValue === 'function') {\n      doc.$__.cachedRequired = doc.$__.cachedRequired || {};\n      try {\n        doc.$__.cachedRequired[path] = p.originalRequiredValue.call(doc, doc);\n      } catch (err) {\n        doc.invalidate(path, err);\n      }\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _getPathsToValidate(doc, pathsToValidate, pathsToSkip) {\n  const doValidateOptions = {};\n\n  _evaluateRequiredFunctions(doc);\n  // only validate required fields when necessary\n  let paths = new Set(Object.keys(doc.$__.activePaths.getStatePaths('require')).filter(function(path) {\n    if (!doc.$__isSelected(path) && !doc.$isModified(path)) {\n      return false;\n    }\n    if (doc.$__.cachedRequired != null && path in doc.$__.cachedRequired) {\n      return doc.$__.cachedRequired[path];\n    }\n    return true;\n  }));\n\n  Object.keys(doc.$__.activePaths.getStatePaths('init')).forEach(addToPaths);\n  Object.keys(doc.$__.activePaths.getStatePaths('modify')).forEach(addToPaths);\n  Object.keys(doc.$__.activePaths.getStatePaths('default')).forEach(addToPaths);\n  function addToPaths(p) { paths.add(p); }\n\n  const subdocs = doc.$getAllSubdocs();\n  const modifiedPaths = doc.modifiedPaths();\n  for (const subdoc of subdocs) {\n    if (subdoc.$basePath) {\n      const fullPathToSubdoc = subdoc.$__fullPathWithIndexes();\n\n      // Remove child paths for now, because we'll be validating the whole\n      // subdoc.\n      // The following is a faster take on looping through every path in `paths`\n      // and checking if the path starts with `fullPathToSubdoc` re: gh-13191\n      for (const modifiedPath of subdoc.modifiedPaths()) {\n        paths.delete(fullPathToSubdoc + '.' + modifiedPath);\n      }\n\n      if (doc.$isModified(fullPathToSubdoc, modifiedPaths) &&\n            !doc.isDirectModified(fullPathToSubdoc) &&\n            !doc.$isDefault(fullPathToSubdoc)) {\n        paths.add(fullPathToSubdoc);\n        if (doc.$__.pathsToScopes == null) {\n          doc.$__.pathsToScopes = {};\n        }\n        doc.$__.pathsToScopes[fullPathToSubdoc] = subdoc.$isDocumentArrayElement ?\n          subdoc.__parentArray :\n          subdoc.$parent();\n\n        doValidateOptions[fullPathToSubdoc] = { skipSchemaValidators: true };\n        if (subdoc.$isDocumentArrayElement && subdoc.__index != null) {\n          doValidateOptions[fullPathToSubdoc].index = subdoc.__index;\n        }\n      }\n    }\n  }\n\n  for (const path of paths) {\n    const _pathType = doc.$__schema.path(path);\n    if (!_pathType) {\n      continue;\n    }\n\n    if (_pathType.$isMongooseDocumentArray) {\n      for (const p of paths) {\n        if (p == null || p.startsWith(_pathType.path + '.')) {\n          paths.delete(p);\n        }\n      }\n    }\n\n    // Optimization: if primitive path with no validators, or array of primitives\n    // with no validators, skip validating this path entirely.\n    if (!_pathType.caster && _pathType.validators.length === 0 && !_pathType.$parentSchemaDocArray) {\n      paths.delete(path);\n    } else if (_pathType.$isMongooseArray &&\n      !_pathType.$isMongooseDocumentArray && // Skip document arrays...\n      !_pathType.$embeddedSchemaType.$isMongooseArray && // and arrays of arrays\n      _pathType.validators.length === 0 && // and arrays with top-level validators\n      _pathType.$embeddedSchemaType.validators.length === 0) {\n      paths.delete(path);\n    }\n  }\n\n  for (const path of paths) {\n    // Single nested paths (paths embedded under single nested subdocs) will\n    // be validated on their own when we call `validate()` on the subdoc itself.\n    // Re: gh-8468\n    if (doc.$__schema.singleNestedPaths.hasOwnProperty(path)) {\n      paths.delete(path);\n      continue;\n    }\n  }\n\n  if (Array.isArray(pathsToValidate)) {\n    paths = _handlePathsToValidate(paths, pathsToValidate);\n  } else if (Array.isArray(pathsToSkip)) {\n    paths = _handlePathsToSkip(paths, pathsToSkip);\n  }\n\n  // from here on we're not removing items from paths\n\n  // gh-661: if a whole array is modified, make sure to run validation on all\n  // the children as well\n  for (const path of paths) {\n    const _pathType = doc.$__schema.path(path);\n    if (!_pathType) {\n      continue;\n    }\n\n    if (!_pathType.$isMongooseArray ||\n        // To avoid potential performance issues, skip doc arrays whose children\n        // are not required. `getPositionalPathType()` may be slow, so avoid\n        // it unless we have a case of #6364\n        (!Array.isArray(_pathType) &&\n          _pathType.$isMongooseDocumentArray &&\n          !(_pathType && _pathType.schemaOptions && _pathType.schemaOptions.required))) {\n      continue;\n    }\n\n    // gh-11380: optimization. If the array isn't a document array and there's no validators\n    // on the array type, there's no need to run validation on the individual array elements.\n    if (_pathType.$isMongooseArray &&\n        !_pathType.$isMongooseDocumentArray && // Skip document arrays...\n        !_pathType.$embeddedSchemaType.$isMongooseArray && // and arrays of arrays\n        _pathType.$embeddedSchemaType.validators.length === 0) {\n      continue;\n    }\n\n    const val = doc.$__getValue(path);\n    _pushNestedArrayPaths(val, paths, path);\n  }\n\n  function _pushNestedArrayPaths(val, paths, path) {\n    if (val != null) {\n      const numElements = val.length;\n      for (let j = 0; j < numElements; ++j) {\n        if (Array.isArray(val[j])) {\n          _pushNestedArrayPaths(val[j], paths, path + '.' + j);\n        } else {\n          paths.add(path + '.' + j);\n        }\n      }\n    }\n  }\n\n  const flattenOptions = { skipArrays: true };\n  for (const pathToCheck of paths) {\n    if (doc.$__schema.nested[pathToCheck]) {\n      let _v = doc.$__getValue(pathToCheck);\n      if (isMongooseObject(_v)) {\n        _v = _v.toObject({ transform: false });\n      }\n      const flat = flatten(_v, pathToCheck, flattenOptions, doc.$__schema);\n      Object.keys(flat).forEach(addToPaths);\n    }\n  }\n\n  for (const path of paths) {\n    const _pathType = doc.$__schema.path(path);\n\n    if (!_pathType) {\n      continue;\n    }\n\n    // If underneath a document array, may need to re-validate the parent\n    // array re: gh-6818. Do this _after_ adding subpaths, because\n    // we don't want to add every array subpath.\n    if (_pathType.$parentSchemaDocArray && typeof _pathType.$parentSchemaDocArray.path === 'string') {\n      paths.add(_pathType.$parentSchemaDocArray.path);\n    }\n\n    if (!_pathType.$isSchemaMap) {\n      continue;\n    }\n\n    const val = doc.$__getValue(path);\n    if (val == null) {\n      continue;\n    }\n    for (const key of val.keys()) {\n      paths.add(path + '.' + key);\n    }\n  }\n\n  paths = Array.from(paths);\n  return [paths, doValidateOptions];\n}\n\n/*!\n * ignore\n */\n\nDocument.prototype.$__validate = function(pathsToValidate, options, callback) {\n  if (typeof pathsToValidate === 'function') {\n    callback = pathsToValidate;\n    options = null;\n    pathsToValidate = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  const hasValidateModifiedOnlyOption = options &&\n      (typeof options === 'object') &&\n      ('validateModifiedOnly' in options);\n\n  const pathsToSkip = (options && options.pathsToSkip) || null;\n\n  let shouldValidateModifiedOnly;\n  if (hasValidateModifiedOnlyOption) {\n    shouldValidateModifiedOnly = !!options.validateModifiedOnly;\n  } else {\n    shouldValidateModifiedOnly = this.$__schema.options.validateModifiedOnly;\n  }\n\n  const _this = this;\n  const _complete = () => {\n    let validationError = this.$__.validationError;\n    this.$__.validationError = null;\n    this.$__.validating = null;\n\n    if (shouldValidateModifiedOnly && validationError != null) {\n      // Remove any validation errors that aren't from modified paths\n      const errors = Object.keys(validationError.errors);\n      for (const errPath of errors) {\n        if (!this.$isModified(errPath)) {\n          delete validationError.errors[errPath];\n        }\n      }\n      if (Object.keys(validationError.errors).length === 0) {\n        validationError = void 0;\n      }\n    }\n\n    this.$__.cachedRequired = {};\n    this.$emit('validate', _this);\n    this.constructor.emit('validate', _this);\n\n    if (validationError) {\n      for (const key in validationError.errors) {\n        // Make sure cast errors persist\n        if (!this[documentArrayParent] &&\n            validationError.errors[key] instanceof MongooseError.CastError) {\n          this.invalidate(key, validationError.errors[key]);\n        }\n      }\n\n      return validationError;\n    }\n  };\n\n  // only validate required fields when necessary\n  const pathDetails = _getPathsToValidate(this, pathsToValidate, pathsToSkip);\n  const paths = shouldValidateModifiedOnly ?\n    pathDetails[0].filter((path) => this.$isModified(path)) :\n    pathDetails[0];\n  const doValidateOptionsByPath = pathDetails[1];\n  if (typeof pathsToValidate === 'string') {\n    pathsToValidate = pathsToValidate.split(' ');\n  }\n\n  if (paths.length === 0) {\n    return immediate(function() {\n      const error = _complete();\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('validate:error', _this, [_this], { error: error }, function(error) {\n          callback(error);\n        });\n      }\n      callback(null, _this);\n    });\n  }\n\n  const validated = {};\n  let total = 0;\n\n  for (const path of paths) {\n    validatePath(path);\n  }\n\n  function validatePath(path) {\n    if (path == null || validated[path]) {\n      return;\n    }\n\n    validated[path] = true;\n    total++;\n\n    immediate(function() {\n      const schemaType = _this.$__schema.path(path);\n\n      if (!schemaType) {\n        return --total || complete();\n      }\n\n      // If user marked as invalid or there was a cast error, don't validate\n      if (!_this.$isValid(path)) {\n        --total || complete();\n        return;\n      }\n\n      // If setting a path under a mixed path, avoid using the mixed path validator (gh-10141)\n      if (schemaType[schemaMixedSymbol] != null && path !== schemaType.path) {\n        return --total || complete();\n      }\n\n      let val = _this.$__getValue(path);\n\n      // If you `populate()` and get back a null value, required validators\n      // shouldn't fail (gh-8018). We should always fall back to the populated\n      // value.\n      let pop;\n      if ((pop = _this.$populated(path))) {\n        val = pop;\n      } else if (val != null && val.$__ != null && val.$__.wasPopulated) {\n        // Array paths, like `somearray.1`, do not show up as populated with `$populated()`,\n        // so in that case pull out the document's id\n        val = val._id;\n      }\n      const scope = _this.$__.pathsToScopes != null && path in _this.$__.pathsToScopes ?\n        _this.$__.pathsToScopes[path] :\n        _this;\n\n      const doValidateOptions = {\n        ...doValidateOptionsByPath[path],\n        path: path,\n        validateModifiedOnly: shouldValidateModifiedOnly\n      };\n\n      schemaType.doValidate(val, function(err) {\n        if (err) {\n          const isSubdoc = schemaType.$isSingleNested ||\n              schemaType.$isArraySubdocument ||\n              schemaType.$isMongooseDocumentArray;\n          if (isSubdoc && err instanceof ValidationError) {\n            return --total || complete();\n          }\n          _this.invalidate(path, err, undefined, true);\n        }\n        --total || complete();\n      }, scope, doValidateOptions);\n    });\n  }\n\n  function complete() {\n    const error = _complete();\n    if (error) {\n      return _this.$__schema.s.hooks.execPost('validate:error', _this, [_this], { error: error }, function(error) {\n        callback(error);\n      });\n    }\n    callback(null, _this);\n  }\n\n};\n\n/*!\n * ignore\n */\n\nfunction _handlePathsToValidate(paths, pathsToValidate) {\n  const _pathsToValidate = new Set(pathsToValidate);\n  const parentPaths = new Map([]);\n  for (const path of pathsToValidate) {\n    if (path.indexOf('.') === -1) {\n      continue;\n    }\n    const pieces = path.split('.');\n    let cur = pieces[0];\n    for (let i = 1; i < pieces.length; ++i) {\n      // Since we skip subpaths under single nested subdocs to\n      // avoid double validation, we need to add back the\n      // single nested subpath if the user asked for it (gh-8626)\n      parentPaths.set(cur, path);\n      cur = cur + '.' + pieces[i];\n    }\n  }\n\n  const ret = new Set();\n  for (const path of paths) {\n    if (_pathsToValidate.has(path)) {\n      ret.add(path);\n    } else if (parentPaths.has(path)) {\n      ret.add(parentPaths.get(path));\n    }\n  }\n  return ret;\n}\n\n/*!\n * ignore\n */\n\nfunction _handlePathsToSkip(paths, pathsToSkip) {\n  pathsToSkip = new Set(pathsToSkip);\n  paths = Array.from(paths).filter(p => !pathsToSkip.has(p));\n  return new Set(paths);\n}\n\n/**\n * Executes registered validation rules (skipping asynchronous validators) for this document.\n *\n * #### Note:\n *\n * This method is useful if you need synchronous validation.\n *\n * #### Example:\n *\n *     const err = doc.validateSync();\n *     if (err) {\n *       handleError(err);\n *     } else {\n *       // validation passed\n *     }\n *\n * @param {Array|string} [pathsToValidate] only validate the given paths\n * @param {Object} [options] options for validation\n * @param {Boolean} [options.validateModifiedOnly=false] If `true`, Mongoose will only validate modified paths, as opposed to modified paths and `required` paths.\n * @param {Array|string} [options.pathsToSkip] list of paths to skip. If set, Mongoose will validate every modified path that is not in this list.\n * @return {ValidationError|undefined} ValidationError if there are errors during validation, or undefined if there is no error.\n * @api public\n */\n\nDocument.prototype.validateSync = function(pathsToValidate, options) {\n  const _this = this;\n\n  if (arguments.length === 1 && typeof arguments[0] === 'object' && !Array.isArray(arguments[0])) {\n    options = arguments[0];\n    pathsToValidate = null;\n  }\n\n  const hasValidateModifiedOnlyOption = options &&\n      (typeof options === 'object') &&\n      ('validateModifiedOnly' in options);\n\n  let shouldValidateModifiedOnly;\n  if (hasValidateModifiedOnlyOption) {\n    shouldValidateModifiedOnly = !!options.validateModifiedOnly;\n  } else {\n    shouldValidateModifiedOnly = this.$__schema.options.validateModifiedOnly;\n  }\n\n  let pathsToSkip = options && options.pathsToSkip;\n\n  if (typeof pathsToValidate === 'string') {\n    const isOnePathOnly = pathsToValidate.indexOf(' ') === -1;\n    pathsToValidate = isOnePathOnly ? [pathsToValidate] : pathsToValidate.split(' ');\n  } else if (typeof pathsToSkip === 'string' && pathsToSkip.indexOf(' ') !== -1) {\n    pathsToSkip = pathsToSkip.split(' ');\n  }\n\n  // only validate required fields when necessary\n  const pathDetails = _getPathsToValidate(this, pathsToValidate, pathsToSkip);\n  const paths = shouldValidateModifiedOnly ?\n    pathDetails[0].filter((path) => this.$isModified(path)) :\n    pathDetails[0];\n  const skipSchemaValidators = pathDetails[1];\n\n  const validating = {};\n\n  for (let i = 0, len = paths.length; i < len; ++i) {\n    const path = paths[i];\n\n    if (validating[path]) {\n      continue;\n    }\n\n    validating[path] = true;\n\n    const p = _this.$__schema.path(path);\n    if (!p) {\n      continue;\n    }\n    if (!_this.$isValid(path)) {\n      continue;\n    }\n\n    const val = _this.$__getValue(path);\n    const err = p.doValidateSync(val, _this, {\n      skipSchemaValidators: skipSchemaValidators[path],\n      path: path,\n      validateModifiedOnly: shouldValidateModifiedOnly\n    });\n    if (err) {\n      const isSubdoc = p.$isSingleNested ||\n        p.$isArraySubdocument ||\n        p.$isMongooseDocumentArray;\n      if (isSubdoc && err instanceof ValidationError) {\n        continue;\n      }\n      _this.invalidate(path, err, undefined, true);\n    }\n  }\n\n  const err = _this.$__.validationError;\n  _this.$__.validationError = undefined;\n  _this.$emit('validate', _this);\n  _this.constructor.emit('validate', _this);\n\n  if (err) {\n    for (const key in err.errors) {\n      // Make sure cast errors persist\n      if (err.errors[key] instanceof MongooseError.CastError) {\n        _this.invalidate(key, err.errors[key]);\n      }\n    }\n  }\n\n  return err;\n};\n\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * The `errorMsg` argument will become the message of the `ValidationError`.\n *\n * The `value` argument (if passed) will be available through the `ValidationError.value` property.\n *\n *     doc.invalidate('size', 'must be less than 20', 14);\n *\n *     doc.validate(function (err) {\n *       console.log(err)\n *       // prints\n *       { message: 'Validation failed',\n *         name: 'ValidationError',\n *         errors:\n *          { size:\n *             { message: 'must be less than 20',\n *               name: 'ValidatorError',\n *               path: 'size',\n *               type: 'user defined',\n *               value: 14 } } }\n *     })\n *\n * @param {String} path the field to invalidate. For array elements, use the `array.i.field` syntax, where `i` is the 0-based index in the array.\n * @param {String|Error} err the error which states the reason `path` was invalid\n * @param {Object|String|Number|any} val optional invalid value\n * @param {String} [kind] optional `kind` property for the error\n * @return {ValidationError} the current ValidationError, with all currently invalidated paths\n * @api public\n */\n\nDocument.prototype.invalidate = function(path, err, val, kind) {\n  if (!this.$__.validationError) {\n    this.$__.validationError = new ValidationError(this);\n  }\n\n  if (this.$__.validationError.errors[path]) {\n    return;\n  }\n\n  if (!err || typeof err === 'string') {\n    err = new ValidatorError({\n      path: path,\n      message: err,\n      type: kind || 'user defined',\n      value: val\n    });\n  }\n\n  if (this.$__.validationError === err) {\n    return this.$__.validationError;\n  }\n\n  this.$__.validationError.addError(path, err);\n  return this.$__.validationError;\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api public\n * @memberOf Document\n * @instance\n * @method $markValid\n */\n\nDocument.prototype.$markValid = function(path) {\n  if (!this.$__.validationError || !this.$__.validationError.errors[path]) {\n    return;\n  }\n\n  delete this.$__.validationError.errors[path];\n  if (Object.keys(this.$__.validationError.errors).length === 0) {\n    this.$__.validationError = null;\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction _markValidSubpaths(doc, path) {\n  if (!doc.$__.validationError) {\n    return;\n  }\n\n  const keys = Object.keys(doc.$__.validationError.errors);\n  for (const key of keys) {\n    if (key.startsWith(path + '.')) {\n      delete doc.$__.validationError.errors[key];\n    }\n  }\n  if (Object.keys(doc.$__.validationError.errors).length === 0) {\n    doc.$__.validationError = null;\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _checkImmutableSubpaths(subdoc, schematype, priorVal) {\n  const schema = schematype.schema;\n  if (schema == null) {\n    return;\n  }\n\n  for (const key of Object.keys(schema.paths)) {\n    const path = schema.paths[key];\n    if (path.$immutableSetter == null) {\n      continue;\n    }\n    const oldVal = priorVal == null ? void 0 : priorVal.$__getValue(key);\n    // Calling immutableSetter with `oldVal` even though it expects `newVal`\n    // is intentional. That's because `$immutableSetter` compares its param\n    // to the current value.\n    path.$immutableSetter.call(subdoc, oldVal);\n  }\n}\n\n/**\n * Saves this document by inserting a new document into the database if [document.isNew](https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew()) is `true`,\n * or sends an [updateOne](https://mongoosejs.com/docs/api/document.html#Document.prototype.updateOne()) operation **only** with the modifications to the database, it does not replace the whole document in the latter case.\n *\n * #### Example:\n *\n *     product.sold = Date.now();\n *     product = await product.save();\n *\n * If save is successful, the returned promise will fulfill with the document\n * saved.\n *\n * #### Example:\n *\n *     const newProduct = await product.save();\n *     newProduct === product; // true\n *\n * @param {Object} [options] options optional options\n * @param {Session} [options.session=null] the [session](https://www.mongodb.com/docs/manual/reference/server-sessions/) associated with this save operation. If not specified, defaults to the [document's associated session](https://mongoosejs.com/docs/api/document.html#Document.prototype.$session()).\n * @param {Object} [options.safe] (DEPRECATED) overrides [schema's safe option](https://mongoosejs.com/docs/guide.html#safe). Use the `w` option instead.\n * @param {Boolean} [options.validateBeforeSave] set to false to save without validating.\n * @param {Boolean} [options.validateModifiedOnly=false] If `true`, Mongoose will only validate modified paths, as opposed to modified paths and `required` paths.\n * @param {Number|String} [options.w] set the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/#w-option). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.j] set to true for MongoDB to wait until this `save()` has been [journaled before resolving the returned promise](https://www.mongodb.com/docs/manual/reference/write-concern/#j-option). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Number} [options.wtimeout] sets a [timeout for the write concern](https://www.mongodb.com/docs/manual/reference/write-concern/#wtimeout). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern).\n * @param {Boolean} [options.checkKeys=true] the MongoDB driver prevents you from saving keys that start with '$' or contain '.' by default. Set this option to `false` to skip that check. See [restrictions on field names](https://www.mongodb.com/docs/manual/reference/limits/#Restrictions-on-Field-Names)\n * @param {Boolean} [options.timestamps=true] if `false` and [timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this `save()`.\n * @param {Function} [fn] optional callback\n * @method save\n * @memberOf Document\n * @instance\n * @throws {DocumentNotFoundError} if this [save updates an existing document](https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew()) but the document doesn't exist in the database. For example, you will get this error if the document is [deleted between when you retrieved the document and when you saved it](documents.html#updating).\n * @return {Promise|undefined} Returns undefined if used with callback or a Promise otherwise.\n * @api public\n * @see middleware https://mongoosejs.com/docs/middleware.html\n */\n\n/**\n * Checks if a path is invalid\n *\n * @param {String|String[]} [path] the field to check. If unset will always return \"false\"\n * @method $isValid\n * @memberOf Document\n * @instance\n * @api private\n */\n\nDocument.prototype.$isValid = function(path) {\n  if (this.$__.validationError == null || Object.keys(this.$__.validationError.errors).length === 0) {\n    return true;\n  }\n  if (path == null) {\n    return false;\n  }\n\n  if (path.indexOf(' ') !== -1) {\n    path = path.split(' ');\n  }\n  if (Array.isArray(path)) {\n    return path.some(p => this.$__.validationError.errors[p] == null);\n  }\n\n  return this.$__.validationError.errors[path] == null;\n};\n\n/**\n * Resets the internal modified state of this document.\n *\n * @api private\n * @return {Document} this\n * @method $__reset\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__reset = function reset() {\n  let _this = this;\n\n  // Skip for subdocuments\n  const subdocs = this.$parent() === this ? this.$getAllSubdocs() : [];\n  const resetArrays = new Set();\n  for (const subdoc of subdocs) {\n    const fullPathWithIndexes = subdoc.$__fullPathWithIndexes();\n    subdoc.$__reset();\n    if (this.isModified(fullPathWithIndexes) || isParentInit(fullPathWithIndexes)) {\n      if (subdoc.$isDocumentArrayElement) {\n        resetArrays.add(subdoc.parentArray());\n      } else {\n        const parent = subdoc.$parent();\n        if (parent === this) {\n          this.$__.activePaths.clearPath(subdoc.$basePath);\n        } else if (parent != null && parent.$isSubdocument) {\n          // If map path underneath subdocument, may end up with a case where\n          // map path is modified but parent still needs to be reset. See gh-10295\n          parent.$__reset();\n        }\n      }\n    }\n  }\n\n  for (const array of resetArrays) {\n    this.$__.activePaths.clearPath(array.$path());\n    array[arrayAtomicsBackupSymbol] = array[arrayAtomicsSymbol];\n    array[arrayAtomicsSymbol] = {};\n  }\n\n  function isParentInit(path) {\n    path = path.indexOf('.') === -1 ? [path] : path.split('.');\n    let cur = '';\n    for (let i = 0; i < path.length; ++i) {\n      cur += (cur.length ? '.' : '') + path[i];\n      if (_this.$__.activePaths[cur] === 'init') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // clear atomics\n  this.$__dirty().forEach(function(dirt) {\n    const type = dirt.value;\n\n    if (type && type[arrayAtomicsSymbol]) {\n      type[arrayAtomicsBackupSymbol] = type[arrayAtomicsSymbol];\n      type[arrayAtomicsSymbol] = {};\n    }\n  });\n\n  this.$__.backup = {};\n  this.$__.backup.activePaths = {\n    modify: Object.assign({}, this.$__.activePaths.getStatePaths('modify')),\n    default: Object.assign({}, this.$__.activePaths.getStatePaths('default'))\n  };\n  this.$__.backup.validationError = this.$__.validationError;\n  this.$__.backup.errors = this.$errors;\n\n  // Clear 'dirty' cache\n  this.$__.activePaths.clear('modify');\n  this.$__.activePaths.clear('default');\n  this.$__.validationError = undefined;\n  this.$errors = undefined;\n  _this = this;\n  this.$__schema.requiredPaths().forEach(function(path) {\n    _this.$__.activePaths.require(path);\n  });\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nDocument.prototype.$__undoReset = function $__undoReset() {\n  if (this.$__.backup == null || this.$__.backup.activePaths == null) {\n    return;\n  }\n\n  this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify;\n  this.$__.activePaths.states.default = this.$__.backup.activePaths.default;\n\n  this.$__.validationError = this.$__.backup.validationError;\n  this.$errors = this.$__.backup.errors;\n\n  for (const dirt of this.$__dirty()) {\n    const type = dirt.value;\n\n    if (type && type[arrayAtomicsSymbol] && type[arrayAtomicsBackupSymbol]) {\n      type[arrayAtomicsSymbol] = type[arrayAtomicsBackupSymbol];\n    }\n  }\n\n  for (const subdoc of this.$getAllSubdocs()) {\n    subdoc.$__undoReset();\n  }\n};\n\n/**\n * Returns this documents dirty paths / vals.\n *\n * @return {Array}\n * @api private\n * @method $__dirty\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__dirty = function() {\n  const _this = this;\n  let all = this.$__.activePaths.map('modify', function(path) {\n    return {\n      path: path,\n      value: _this.$__getValue(path),\n      schema: _this.$__path(path)\n    };\n  });\n\n  // gh-2558: if we had to set a default and the value is not undefined,\n  // we have to save as well\n  all = all.concat(this.$__.activePaths.map('default', function(path) {\n    if (path === '_id' || _this.$__getValue(path) == null) {\n      return;\n    }\n    return {\n      path: path,\n      value: _this.$__getValue(path),\n      schema: _this.$__path(path)\n    };\n  }));\n\n  const allPaths = new Map(all.filter((el) => el != null).map((el) => [el.path, el.value]));\n  // Ignore \"foo.a\" if \"foo\" is dirty already.\n  const minimal = [];\n\n  all.forEach(function(item) {\n    if (!item) {\n      return;\n    }\n\n    let top = null;\n\n    const array = parentPaths(item.path);\n    for (let i = 0; i < array.length - 1; i++) {\n      if (allPaths.has(array[i])) {\n        top = allPaths.get(array[i]);\n        break;\n      }\n    }\n    if (top == null) {\n      minimal.push(item);\n    } else if (top != null &&\n        top[arrayAtomicsSymbol] != null &&\n        top.hasAtomics()) {\n      // special case for top level MongooseArrays\n      // the `top` array itself and a sub path of `top` are being set.\n      // the only way to honor all of both modifications is through a $set\n      // of entire array.\n      top[arrayAtomicsSymbol] = {};\n      top[arrayAtomicsSymbol].$set = top;\n    }\n  });\n  return minimal;\n};\n\n/**\n * Assigns/compiles `schema` into this documents prototype.\n *\n * @param {Schema} schema\n * @api private\n * @method $__setSchema\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__setSchema = function(schema) {\n  compile(schema.tree, this, undefined, schema.options);\n\n  // Apply default getters if virtual doesn't have any (gh-6262)\n  for (const key of Object.keys(schema.virtuals)) {\n    schema.virtuals[key]._applyDefaultGetters();\n  }\n  if (schema.path('schema') == null) {\n    this.schema = schema;\n  }\n  this.$__schema = schema;\n  this[documentSchemaSymbol] = schema;\n};\n\n\n/**\n * Get active path that were changed and are arrays\n *\n * @return {Array}\n * @api private\n * @method $__getArrayPathsToValidate\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__getArrayPathsToValidate = function() {\n  DocumentArray || (DocumentArray = require('./types/DocumentArray'));\n\n  // validate all document arrays.\n  return this.$__.activePaths\n    .map('init', 'modify', function(i) {\n      return this.$__getValue(i);\n    }.bind(this))\n    .filter(function(val) {\n      return val && Array.isArray(val) && utils.isMongooseDocumentArray(val) && val.length;\n    }).reduce(function(seed, array) {\n      return seed.concat(array);\n    }, [])\n    .filter(function(doc) {\n      return doc;\n    });\n};\n\n\n/**\n * Get all subdocs (by bfs)\n *\n * @return {Array}\n * @api public\n * @method $getAllSubdocs\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$getAllSubdocs = function() {\n  DocumentArray || (DocumentArray = require('./types/DocumentArray'));\n  Embedded = Embedded || require('./types/ArraySubdocument');\n\n  function docReducer(doc, seed, path) {\n    let val = doc;\n    let isNested = false;\n    if (path) {\n      if (doc instanceof Document && doc[documentSchemaSymbol].paths[path]) {\n        val = doc._doc[path];\n      } else if (doc instanceof Document && doc[documentSchemaSymbol].nested[path]) {\n        val = doc._doc[path];\n        isNested = true;\n      } else {\n        val = doc[path];\n      }\n    }\n    if (val instanceof Embedded) {\n      seed.push(val);\n    } else if (val instanceof Map) {\n      seed = Array.from(val.keys()).reduce(function(seed, path) {\n        return docReducer(val.get(path), seed, null);\n      }, seed);\n    } else if (val && !Array.isArray(val) && val.$isSingleNested) {\n      seed = Object.keys(val._doc).reduce(function(seed, path) {\n        return docReducer(val, seed, path);\n      }, seed);\n      seed.push(val);\n    } else if (val && utils.isMongooseDocumentArray(val)) {\n      val.forEach(function _docReduce(doc) {\n        if (!doc || !doc._doc) {\n          return;\n        }\n        seed = Object.keys(doc._doc).reduce(function(seed, path) {\n          return docReducer(doc._doc, seed, path);\n        }, seed);\n        if (doc instanceof Embedded) {\n          seed.push(doc);\n        }\n      });\n    } else if (isNested && val != null) {\n      for (const path of Object.keys(val)) {\n        docReducer(val, seed, path);\n      }\n    }\n    return seed;\n  }\n\n  const subDocs = [];\n  for (const path of Object.keys(this._doc)) {\n    docReducer(this, subDocs, path);\n  }\n\n  return subDocs;\n};\n\n/*!\n * Runs queued functions\n */\n\nfunction applyQueue(doc) {\n  const q = doc.$__schema && doc.$__schema.callQueue;\n  if (!q.length) {\n    return;\n  }\n\n  for (const pair of q) {\n    if (pair[0] !== 'pre' && pair[0] !== 'post' && pair[0] !== 'on') {\n      doc[pair[0]].apply(doc, pair[1]);\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nDocument.prototype.$__handleReject = function handleReject(err) {\n  // emit on the Model if listening\n  if (this.$listeners('error').length) {\n    this.$emit('error', err);\n  } else if (this.constructor.listeners && this.constructor.listeners('error').length) {\n    this.constructor.emit('error', err);\n  }\n};\n\n/**\n * Internal helper for toObject() and toJSON() that doesn't manipulate options\n *\n * @return {Object}\n * @api private\n * @method $toObject\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$toObject = function(options, json) {\n  let defaultOptions = {\n    transform: true,\n    flattenDecimals: true\n  };\n\n  const path = json ? 'toJSON' : 'toObject';\n  const baseOptions = this.constructor &&\n    this.constructor.base &&\n    this.constructor.base.options &&\n    get(this.constructor.base.options, path) || {};\n  const schemaOptions = this.$__schema && this.$__schema.options || {};\n  // merge base default options with Schema's set default options if available.\n  // `clone` is necessary here because `utils.options` directly modifies the second input.\n  defaultOptions = utils.options(defaultOptions, clone(baseOptions));\n  defaultOptions = utils.options(defaultOptions, clone(schemaOptions[path] || {}));\n\n  // If options do not exist or is not an object, set it to empty object\n  options = utils.isPOJO(options) ? { ...options } : {};\n  options._calledWithOptions = options._calledWithOptions || { ...options };\n\n  let _minimize;\n  if (options._calledWithOptions.minimize != null) {\n    _minimize = options.minimize;\n  } else if (defaultOptions.minimize != null) {\n    _minimize = defaultOptions.minimize;\n  } else {\n    _minimize = schemaOptions.minimize;\n  }\n\n  let flattenMaps;\n  if (options._calledWithOptions.flattenMaps != null) {\n    flattenMaps = options.flattenMaps;\n  } else if (defaultOptions.flattenMaps != null) {\n    flattenMaps = defaultOptions.flattenMaps;\n  } else {\n    flattenMaps = schemaOptions.flattenMaps;\n  }\n\n  let flattenObjectIds;\n  if (options._calledWithOptions.flattenObjectIds != null) {\n    flattenObjectIds = options.flattenObjectIds;\n  } else if (defaultOptions.flattenObjectIds != null) {\n    flattenObjectIds = defaultOptions.flattenObjectIds;\n  } else {\n    flattenObjectIds = schemaOptions.flattenObjectIds;\n  }\n\n  // The original options that will be passed to `clone()`. Important because\n  // `clone()` will recursively call `$toObject()` on embedded docs, so we\n  // need the original options the user passed in, plus `_isNested` and\n  // `_parentOptions` for checking whether we need to depopulate.\n  const cloneOptions = Object.assign({}, options, {\n    _isNested: true,\n    json: json,\n    minimize: _minimize,\n    flattenMaps: flattenMaps,\n    flattenObjectIds: flattenObjectIds,\n    _seen: (options && options._seen) || new Map()\n  });\n\n  if (utils.hasUserDefinedProperty(options, 'getters')) {\n    cloneOptions.getters = options.getters;\n  }\n  if (utils.hasUserDefinedProperty(options, 'virtuals')) {\n    cloneOptions.virtuals = options.virtuals;\n  }\n\n  const depopulate = options.depopulate ||\n    (options._parentOptions && options._parentOptions.depopulate || false);\n  // _isNested will only be true if this is not the top level document, we\n  // should never depopulate the top-level document\n  if (depopulate && options._isNested && this.$__.wasPopulated) {\n    return clone(this.$__.wasPopulated.value || this._id, cloneOptions);\n  }\n\n  // merge default options with input options.\n  options = utils.options(defaultOptions, options);\n  options._isNested = true;\n  options.json = json;\n  options.minimize = _minimize;\n\n  cloneOptions._parentOptions = options;\n  cloneOptions._skipSingleNestedGetters = false;\n\n  const gettersOptions = Object.assign({}, cloneOptions);\n  gettersOptions._skipSingleNestedGetters = true;\n\n  // remember the root transform function\n  // to save it from being overwritten by sub-transform functions\n  const originalTransform = options.transform;\n\n  let ret = clone(this._doc, cloneOptions) || {};\n\n  if (options.getters) {\n    applyGetters(this, ret, gettersOptions);\n\n    if (options.minimize) {\n      ret = minimize(ret) || {};\n    }\n  }\n\n  if (options.virtuals || (options.getters && options.virtuals !== false)) {\n    applyVirtuals(this, ret, gettersOptions, options);\n  }\n\n  if (options.versionKey === false && this.$__schema.options.versionKey) {\n    delete ret[this.$__schema.options.versionKey];\n  }\n\n  let transform = options.transform;\n\n  // In the case where a subdocument has its own transform function, we need to\n  // check and see if the parent has a transform (options.transform) and if the\n  // child schema has a transform (this.schema.options.toObject) In this case,\n  // we need to adjust options.transform to be the child schema's transform and\n  // not the parent schema's\n  if (transform) {\n    applySchemaTypeTransforms(this, ret);\n  }\n\n  if (options.useProjection) {\n    omitDeselectedFields(this, ret);\n  }\n\n  if (transform === true || (schemaOptions.toObject && transform)) {\n    const opts = options.json ? schemaOptions.toJSON : schemaOptions.toObject;\n\n    if (opts) {\n      transform = (typeof options.transform === 'function' ? options.transform : opts.transform);\n    }\n  } else {\n    options.transform = originalTransform;\n  }\n\n  if (typeof transform === 'function') {\n    const xformed = transform(this, ret, options);\n    if (typeof xformed !== 'undefined') {\n      ret = xformed;\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Converts this document into a plain-old JavaScript object ([POJO](https://masteringjs.io/tutorials/fundamentals/pojo)).\n *\n * Buffers are converted to instances of [mongodb.Binary](https://mongodb.github.io/node-mongodb-native/4.9/classes/Binary.html) for proper storage.\n *\n * #### Getters/Virtuals\n *\n * Example of only applying path getters\n *\n *     doc.toObject({ getters: true, virtuals: false })\n *\n * Example of only applying virtual getters\n *\n *     doc.toObject({ virtuals: true })\n *\n * Example of applying both path and virtual getters\n *\n *     doc.toObject({ getters: true })\n *\n * To apply these options to every document of your schema by default, set your [schemas](https://mongoosejs.com/docs/api/schema.html#Schema()) `toObject` option to the same argument.\n *\n *     schema.set('toObject', { virtuals: true })\n *\n * #### Transform:\n *\n * We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional `transform` function.\n *\n * Transform functions receive three arguments\n *\n *     function (doc, ret, options) {}\n *\n * - `doc` The mongoose document which is being converted\n * - `ret` The plain object representation which has been converted\n * - `options` The options in use (either schema options or the options passed inline)\n *\n * #### Example:\n *\n *     // specify the transform schema option\n *     if (!schema.options.toObject) schema.options.toObject = {};\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       // remove the _id of every document before returning the result\n *       delete ret._id;\n *       return ret;\n *     }\n *\n *     // without the transformation in the schema\n *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }\n *\n *     // with the transformation\n *     doc.toObject(); // { name: 'Wreck-it Ralph' }\n *\n * With transformations we can do a lot more than remove properties. We can even return completely new customized objects:\n *\n *     if (!schema.options.toObject) schema.options.toObject = {};\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       return { movie: ret.name }\n *     }\n *\n *     // without the transformation in the schema\n *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }\n *\n *     // with the transformation\n *     doc.toObject(); // { movie: 'Wreck-it Ralph' }\n *\n * _Note: if a transform function returns `undefined`, the return value will be ignored._\n *\n * Transformations may also be applied inline, overridding any transform set in the options:\n *\n *     function xform (doc, ret, options) {\n *       return { inline: ret.name, custom: true }\n *     }\n *\n *     // pass the transform as an inline option\n *     doc.toObject({ transform: xform }); // { inline: 'Wreck-it Ralph', custom: true }\n *\n * If you want to skip transformations, use `transform: false`:\n *\n *     schema.options.toObject.hide = '_id';\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       if (options.hide) {\n *         options.hide.split(' ').forEach(function (prop) {\n *           delete ret[prop];\n *         });\n *       }\n *       return ret;\n *     }\n *\n *     const doc = new Doc({ _id: 'anId', secret: 47, name: 'Wreck-it Ralph' });\n *     doc.toObject();                                        // { secret: 47, name: 'Wreck-it Ralph' }\n *     doc.toObject({ hide: 'secret _id', transform: false });// { _id: 'anId', secret: 47, name: 'Wreck-it Ralph' }\n *     doc.toObject({ hide: 'secret _id', transform: true }); // { name: 'Wreck-it Ralph' }\n *\n * If you pass a transform in `toObject()` options, Mongoose will apply the transform\n * to [subdocuments](https://mongoosejs.com/docs/subdocs.html) in addition to the top-level document.\n * Similarly, `transform: false` skips transforms for all subdocuments.\n * Note that this behavior is different for transforms defined in the schema:\n * if you define a transform in `schema.options.toObject.transform`, that transform\n * will **not** apply to subdocuments.\n *\n *     const memberSchema = new Schema({ name: String, email: String });\n *     const groupSchema = new Schema({ members: [memberSchema], name: String, email });\n *     const Group = mongoose.model('Group', groupSchema);\n *\n *     const doc = new Group({\n *       name: 'Engineering',\n *       email: 'dev@mongoosejs.io',\n *       members: [{ name: 'Val', email: 'val@mongoosejs.io' }]\n *     });\n *\n *     // Removes `email` from both top-level document **and** array elements\n *     // { name: 'Engineering', members: [{ name: 'Val' }] }\n *     doc.toObject({ transform: (doc, ret) => { delete ret.email; return ret; } });\n *\n * Transforms, like all of these options, are also available for `toJSON`. See [this guide to `JSON.stringify()`](https://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript.html) to learn why `toJSON()` and `toObject()` are separate functions.\n *\n * See [schema options](https://mongoosejs.com/docs/guide.html#toObject) for some more details.\n *\n * _During save, no custom options are applied to the document before being sent to the database._\n *\n * @param {Object} [options]\n * @param {Boolean} [options.getters=false] if true, apply all getters, including virtuals\n * @param {Boolean} [options.virtuals=false] if true, apply virtuals, including aliases. Use `{ getters: true, virtuals: false }` to just apply getters, not virtuals\n * @param {Boolean} [options.aliases=true] if `options.virtuals = true`, you can set `options.aliases = false` to skip applying aliases. This option is a no-op if `options.virtuals = false`.\n * @param {Boolean} [options.minimize=true] if true, omit any empty objects from the output\n * @param {Function|null} [options.transform=null] if set, mongoose will call this function to allow you to transform the returned object\n * @param {Boolean} [options.depopulate=false] if true, replace any conventionally populated paths with the original id in the output. Has no affect on virtual populated paths.\n * @param {Boolean} [options.versionKey=true] if false, exclude the version key (`__v` by default) from the output\n * @param {Boolean} [options.flattenMaps=false] if true, convert Maps to POJOs. Useful if you want to `JSON.stringify()` the result of `toObject()`.\n * @param {Boolean} [options.flattenObjectIds=false] if true, convert any ObjectIds in the result to 24 character hex strings.\n * @param {Boolean} [options.useProjection=false] - If true, omits fields that are excluded in this document's projection. Unless you specified a projection, this will omit any field that has `select: false` in the schema.\n * @return {Object} js object (not a POJO)\n * @see mongodb.Binary https://mongodb.github.io/node-mongodb-native/4.9/classes/Binary.html\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.toObject = function(options) {\n  return this.$toObject(options);\n};\n\n/**\n * Minimizes an object, removing undefined values and empty objects\n *\n * @param {Object} object to minimize\n * @return {Object}\n * @api private\n */\n\nfunction minimize(obj) {\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let hasKeys;\n  let key;\n  let val;\n\n  while (i--) {\n    key = keys[i];\n    val = obj[key];\n\n    if (utils.isPOJO(val)) {\n      obj[key] = minimize(val);\n    }\n\n    if (undefined === obj[key]) {\n      delete obj[key];\n      continue;\n    }\n\n    hasKeys = true;\n  }\n\n  return hasKeys\n    ? obj\n    : undefined;\n}\n\n/*!\n * Applies virtuals properties to `json`.\n */\n\nfunction applyVirtuals(self, json, options, toObjectOptions) {\n  const schema = self.$__schema;\n  const paths = Object.keys(schema.virtuals);\n  let i = paths.length;\n  const numPaths = i;\n  let path;\n  let assignPath;\n  let cur = self._doc;\n  let v;\n  const aliases = typeof (toObjectOptions && toObjectOptions.aliases) === 'boolean'\n    ? toObjectOptions.aliases\n    : true;\n\n  let virtualsToApply = null;\n  if (Array.isArray(options.virtuals)) {\n    virtualsToApply = new Set(options.virtuals);\n  } else if (options.virtuals && options.virtuals.pathsToSkip) {\n    virtualsToApply = new Set(paths);\n    for (let i = 0; i < options.virtuals.pathsToSkip.length; i++) {\n      if (virtualsToApply.has(options.virtuals.pathsToSkip[i])) {\n        virtualsToApply.delete(options.virtuals.pathsToSkip[i]);\n      }\n    }\n  }\n\n  if (!cur) {\n    return json;\n  }\n\n  options = options || {};\n  for (i = 0; i < numPaths; ++i) {\n    path = paths[i];\n\n    if (virtualsToApply != null && !virtualsToApply.has(path)) {\n      continue;\n    }\n\n    // Allow skipping aliases with `toObject({ virtuals: true, aliases: false })`\n    if (!aliases && schema.aliases.hasOwnProperty(path)) {\n      continue;\n    }\n\n    // We may be applying virtuals to a nested object, for example if calling\n    // `doc.nestedProp.toJSON()`. If so, the path we assign to, `assignPath`,\n    // will be a trailing substring of the `path`.\n    assignPath = path;\n    if (options.path != null) {\n      if (!path.startsWith(options.path + '.')) {\n        continue;\n      }\n      assignPath = path.substring(options.path.length + 1);\n    }\n    const parts = assignPath.split('.');\n    v = clone(self.get(path), options);\n    if (v === void 0) {\n      continue;\n    }\n    const plen = parts.length;\n    cur = json;\n    for (let j = 0; j < plen - 1; ++j) {\n      cur[parts[j]] = cur[parts[j]] || {};\n      cur = cur[parts[j]];\n    }\n    cur[parts[plen - 1]] = v;\n  }\n\n  return json;\n}\n\n\n/**\n * Applies virtuals properties to `json`.\n *\n * @param {Document} self\n * @param {Object} json\n * @param {Object} [options]\n * @return {Object} `json`\n * @api private\n */\n\nfunction applyGetters(self, json, options) {\n  const schema = self.$__schema;\n  const paths = Object.keys(schema.paths);\n  let i = paths.length;\n  let path;\n  let cur = self._doc;\n  let v;\n\n  if (!cur) {\n    return json;\n  }\n\n  while (i--) {\n    path = paths[i];\n\n    const parts = path.split('.');\n\n    const plen = parts.length;\n    const last = plen - 1;\n    let branch = json;\n    let part;\n    cur = self._doc;\n\n    if (!self.$__isSelected(path)) {\n      continue;\n    }\n\n    for (let ii = 0; ii < plen; ++ii) {\n      part = parts[ii];\n      v = cur[part];\n      if (ii === last) {\n        const val = self.$get(path);\n        branch[part] = clone(val, options);\n      } else if (v == null) {\n        if (part in cur) {\n          branch[part] = v;\n        }\n        break;\n      } else {\n        branch = branch[part] || (branch[part] = {});\n      }\n      cur = v;\n    }\n  }\n\n  return json;\n}\n\n/**\n * Applies schema type transforms to `json`.\n *\n * @param {Document} self\n * @param {Object} json\n * @return {Object} `json`\n * @api private\n */\n\nfunction applySchemaTypeTransforms(self, json) {\n  const schema = self.$__schema;\n  const paths = Object.keys(schema.paths || {});\n  const cur = self._doc;\n\n  if (!cur) {\n    return json;\n  }\n\n  for (const path of paths) {\n    const schematype = schema.paths[path];\n    if (typeof schematype.options.transform === 'function') {\n      const val = self.$get(path);\n      if (val === undefined) {\n        continue;\n      }\n      const transformedValue = schematype.options.transform.call(self, val);\n      throwErrorIfPromise(path, transformedValue);\n      utils.setValue(path, transformedValue, json);\n    } else if (schematype.$embeddedSchemaType != null &&\n        typeof schematype.$embeddedSchemaType.options.transform === 'function') {\n      const val = self.$get(path);\n      if (val === undefined) {\n        continue;\n      }\n      const vals = [].concat(val);\n      const transform = schematype.$embeddedSchemaType.options.transform;\n      for (let i = 0; i < vals.length; ++i) {\n        const transformedValue = transform.call(self, vals[i]);\n        vals[i] = transformedValue;\n        throwErrorIfPromise(path, transformedValue);\n      }\n\n      json[path] = vals;\n    }\n  }\n\n  return json;\n}\n\nfunction throwErrorIfPromise(path, transformedValue) {\n  if (isPromise(transformedValue)) {\n    throw new Error('`transform` function must be synchronous, but the transform on path `' + path + '` returned a promise.');\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction omitDeselectedFields(self, json) {\n  const schema = self.$__schema;\n  const paths = Object.keys(schema.paths || {});\n  const cur = self._doc;\n\n  if (!cur) {\n    return json;\n  }\n\n  let selected = self.$__.selected;\n  if (selected === void 0) {\n    selected = {};\n    queryhelpers.applyPaths(selected, schema);\n  }\n  if (selected == null || Object.keys(selected).length === 0) {\n    return json;\n  }\n\n  for (const path of paths) {\n    if (selected[path] != null && !selected[path]) {\n      delete json[path];\n    }\n  }\n\n  return json;\n}\n\n/**\n * The return value of this method is used in calls to [`JSON.stringify(doc)`](https://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript#the-tojson-function).\n *\n * This method accepts the same options as [Document#toObject](https://mongoosejs.com/docs/api/document.html#Document.prototype.toObject()). To apply the options to every document of your schema by default, set your [schemas](https://mongoosejs.com/docs/api/schema.html#Schema()) `toJSON` option to the same argument.\n *\n *     schema.set('toJSON', { virtuals: true });\n *\n * There is one difference between `toJSON()` and `toObject()` options.\n * When you call `toJSON()`, the [`flattenMaps` option](https://mongoosejs.com/docs/api/document.html#Document.prototype.toObject()) defaults to `true`, because `JSON.stringify()` doesn't convert maps to objects by default.\n * When you call `toObject()`, the `flattenMaps` option is `false` by default.\n *\n * See [schema options](https://mongoosejs.com/docs/guide.html#toJSON) for more information on setting `toJSON` option defaults.\n *\n * @param {Object} options\n * @param {Boolean} [options.flattenMaps=true] if true, convert Maps to [POJOs](https://masteringjs.io/tutorials/fundamentals/pojo). Useful if you want to `JSON.stringify()` the result.\n * @param {Boolean} [options.flattenObjectIds=false] if true, convert any ObjectIds in the result to 24 character hex strings.\n * @return {Object}\n * @see Document#toObject https://mongoosejs.com/docs/api/document.html#Document.prototype.toObject()\n * @see JSON.stringify() in JavaScript https://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript.html\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.toJSON = function(options) {\n  return this.$toObject(options, true);\n};\n\n/*!\n * ignore\n */\n\nDocument.prototype.ownerDocument = function() {\n  return this;\n};\n\n\n/**\n * If this document is a subdocument or populated document, returns the document's\n * parent. Returns the original document if there is no parent.\n *\n * @return {Document}\n * @api public\n * @method parent\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.parent = function() {\n  if (this.$isSubdocument || this.$__.wasPopulated) {\n    return this.$__.parent;\n  }\n  return this;\n};\n\n/**\n * Alias for [`parent()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.parent()). If this document is a subdocument or populated\n * document, returns the document's parent. Returns `undefined` otherwise.\n *\n * @return {Document}\n * @api public\n * @method $parent\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$parent = Document.prototype.parent;\n\n/**\n * Helper for console.log\n *\n * @return {String}\n * @api public\n * @method inspect\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.inspect = function(options) {\n  const isPOJO = utils.isPOJO(options);\n  let opts;\n  if (isPOJO) {\n    opts = options;\n    opts.minimize = false;\n  }\n  const ret = this.toObject(opts);\n\n  if (ret == null) {\n    // If `toObject()` returns null, `this` is still an object, so if `inspect()`\n    // prints out null this can cause some serious confusion. See gh-7942.\n    return 'MongooseDocument { ' + ret + ' }';\n  }\n\n  return ret;\n};\n\nif (inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  Document.prototype[inspect.custom] = Document.prototype.inspect;\n}\n\n/**\n * Helper for console.log\n *\n * @return {String}\n * @api public\n * @method toString\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.toString = function() {\n  const ret = this.inspect();\n  if (typeof ret === 'string') {\n    return ret;\n  }\n  return inspect(ret);\n};\n\n/**\n * Returns true if this document is equal to another document.\n *\n * Documents are considered equal when they have matching `_id`s, unless neither\n * document has an `_id`, in which case this function falls back to using\n * `deepEqual()`.\n *\n * @param {Document} [doc] a document to compare. If falsy, will always return \"false\".\n * @return {Boolean}\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.equals = function(doc) {\n  if (!doc) {\n    return false;\n  }\n\n  const tid = this.$__getValue('_id');\n  const docid = doc.$__ != null ? doc.$__getValue('_id') : doc;\n  if (!tid && !docid) {\n    return deepEqual(this, doc);\n  }\n  return tid && tid.equals\n    ? tid.equals(docid)\n    : tid === docid;\n};\n\n/**\n * Populates paths on an existing document.\n *\n * #### Example:\n *\n *     // Given a document, `populate()` lets you pull in referenced docs\n *     await doc.populate([\n *       'stories',\n *       { path: 'fans', sort: { name: -1 } }\n *     ]);\n *     doc.populated('stories'); // Array of ObjectIds\n *     doc.stories[0].title; // 'Casino Royale'\n *     doc.populated('fans'); // Array of ObjectIds\n *\n *     // If the referenced doc has been deleted, `populate()` will\n *     // remove that entry from the array.\n *     await Story.delete({ title: 'Casino Royale' });\n *     await doc.populate('stories'); // Empty array\n *\n *     // You can also pass additional query options to `populate()`,\n *     // like projections:\n *     await doc.populate('fans', '-email');\n *     doc.fans[0].email // undefined because of 2nd param `select`\n *\n * @param {String|Object|Array} path either the path to populate or an object specifying all parameters, or either an array of those\n * @param {Object|String} [select] Field selection for the population query\n * @param {Model} [model] The model you wish to use for population. If not specified, populate will look up the model by the name in the Schema's `ref` field.\n * @param {Object} [match] Conditions for the population query\n * @param {Object} [options] Options for the population query (sort, etc)\n * @param {String} [options.path=null] The path to populate.\n * @param {string|PopulateOptions} [options.populate=null] Recursively populate paths in the populated documents. See [deep populate docs](https://mongoosejs.com/docs/populate.html#deep-populate).\n * @param {boolean} [options.retainNullValues=false] by default, Mongoose removes null and undefined values from populated arrays. Use this option to make `populate()` retain `null` and `undefined` array entries.\n * @param {boolean} [options.getters=false] if true, Mongoose will call any getters defined on the `localField`. By default, Mongoose gets the raw value of `localField`. For example, you would need to set this option to `true` if you wanted to [add a `lowercase` getter to your `localField`](https://mongoosejs.com/docs/schematypes.html#schematype-options).\n * @param {boolean} [options.clone=false] When you do `BlogPost.find().populate('author')`, blog posts with the same author will share 1 copy of an `author` doc. Enable this option to make Mongoose clone populated docs before assigning them.\n * @param {Object|Function} [options.match=null] Add an additional filter to the populate query. Can be a filter object containing [MongoDB query syntax](https://www.mongodb.com/docs/manual/tutorial/query-documents/), or a function that returns a filter object.\n * @param {Function} [options.transform=null] Function that Mongoose will call on every populated document that allows you to transform the populated document.\n * @param {Object} [options.options=null] Additional options like `limit` and `lean`.\n * @param {Function} [callback] Callback\n * @see population https://mongoosejs.com/docs/populate.html\n * @see Query#select https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @see Model.populate https://mongoosejs.com/docs/api/model.html#Model.populate()\n * @memberOf Document\n * @instance\n * @return {Promise|null} Returns a Promise if no `callback` is given.\n * @api public\n */\n\nDocument.prototype.populate = async function populate() {\n  const pop = {};\n  const args = [...arguments];\n  if (typeof args[args.length - 1] === 'function') {\n    throw new MongooseError('Document.prototype.populate() no longer accepts a callback');\n  }\n\n  if (args.length !== 0) {\n    // use hash to remove duplicate paths\n    const res = utils.populate.apply(null, args);\n    for (const populateOptions of res) {\n      pop[populateOptions.path] = populateOptions;\n    }\n  }\n\n  const paths = utils.object.vals(pop);\n  let topLevelModel = this.constructor;\n  if (this.$__isNested) {\n    topLevelModel = this.$__[scopeSymbol].constructor;\n    const nestedPath = this.$__.nestedPath;\n    paths.forEach(function(populateOptions) {\n      populateOptions.path = nestedPath + '.' + populateOptions.path;\n    });\n  }\n\n  // Use `$session()` by default if the document has an associated session\n  // See gh-6754\n  if (this.$session() != null) {\n    const session = this.$session();\n    paths.forEach(path => {\n      if (path.options == null) {\n        path.options = { session: session };\n        return;\n      }\n      if (!('session' in path.options)) {\n        path.options.session = session;\n      }\n    });\n  }\n\n  paths.forEach(p => {\n    p._localModel = topLevelModel;\n  });\n\n  return topLevelModel.populate(this, paths);\n};\n\n/**\n * Gets all populated documents associated with this document.\n *\n * @api public\n * @return {Document[]} array of populated documents. Empty array if there are no populated documents associated with this document.\n * @memberOf Document\n * @method $getPopulatedDocs\n * @instance\n */\n\nDocument.prototype.$getPopulatedDocs = function $getPopulatedDocs() {\n  let keys = [];\n  if (this.$__.populated != null) {\n    keys = keys.concat(Object.keys(this.$__.populated));\n  }\n  let result = [];\n  for (const key of keys) {\n    const value = this.$get(key);\n    if (Array.isArray(value)) {\n      result = result.concat(value);\n    } else if (value instanceof Document) {\n      result.push(value);\n    }\n  }\n  return result;\n};\n\n/**\n * Gets _id(s) used during population of the given `path`.\n *\n * #### Example:\n *\n *     const doc = await Model.findOne().populate('author');\n *\n *     console.log(doc.author.name); // Dr.Seuss\n *     console.log(doc.populated('author')); // '5144cf8050f071d979c118a7'\n *\n * If the path was not populated, returns `undefined`.\n *\n * @param {String} path\n * @param {Any} [val]\n * @param {Object} [options]\n * @return {Array|ObjectId|Number|Buffer|String|undefined}\n * @memberOf Document\n * @instance\n * @api public\n */\n\nDocument.prototype.populated = function(path, val, options) {\n  // val and options are internal\n  if (val == null || val === true) {\n    if (!this.$__.populated) {\n      return undefined;\n    }\n    if (typeof path !== 'string') {\n      return undefined;\n    }\n\n    // Map paths can be populated with either `path.$*` or just `path`\n    const _path = path.endsWith('.$*') ? path.replace(/\\.\\$\\*$/, '') : path;\n\n    const v = this.$__.populated[_path];\n    if (v) {\n      return val === true ? v : v.value;\n    }\n    return undefined;\n  }\n\n  this.$__.populated || (this.$__.populated = {});\n  this.$__.populated[path] = { value: val, options: options };\n\n  // If this was a nested populate, make sure each populated doc knows\n  // about its populated children (gh-7685)\n  const pieces = path.split('.');\n  for (let i = 0; i < pieces.length - 1; ++i) {\n    const subpath = pieces.slice(0, i + 1).join('.');\n    const subdoc = this.$get(subpath);\n    if (subdoc != null && subdoc.$__ != null && this.$populated(subpath)) {\n      const rest = pieces.slice(i + 1).join('.');\n      subdoc.$populated(rest, val, options);\n      // No need to continue because the above recursion should take care of\n      // marking the rest of the docs as populated\n      break;\n    }\n  }\n\n  return val;\n};\n\n/**\n * Alias of [`.populated`](https://mongoosejs.com/docs/api/document.html#Document.prototype.populated()).\n *\n * @method $populated\n * @memberOf Document\n * @api public\n */\n\nDocument.prototype.$populated = Document.prototype.populated;\n\n/**\n * Throws an error if a given path is not populated\n *\n * #### Example:\n *\n *     const doc = await Model.findOne().populate('author');\n *\n *     doc.$assertPopulated('author'); // does not throw\n *     doc.$assertPopulated('other path'); // throws an error\n *\n *     // Manually populate and assert in one call. The following does\n *     // `doc.$set({ likes })` before asserting.\n *     doc.$assertPopulated('likes', { likes });\n *\n *\n * @param {String|String[]} path path or array of paths to check. `$assertPopulated` throws if any of the given paths is not populated.\n * @param {Object} [values] optional values to `$set()`. Convenient if you want to manually populate a path and assert that the path was populated in 1 call.\n * @return {Document} this\n * @memberOf Document\n * @method $assertPopulated\n * @instance\n * @api public\n */\n\nDocument.prototype.$assertPopulated = function $assertPopulated(path, values) {\n  if (Array.isArray(path)) {\n    path.forEach(p => this.$assertPopulated(p, values));\n    return this;\n  }\n\n  if (arguments.length > 1) {\n    this.$set(values);\n  }\n\n  if (!this.$populated(path)) {\n    throw new MongooseError(`Expected path \"${path}\" to be populated`);\n  }\n\n  return this;\n};\n\n/**\n * Takes a populated field and returns it to its unpopulated state.\n *\n * #### Example:\n *\n *     Model.findOne().populate('author').exec(function (err, doc) {\n *       console.log(doc.author.name); // Dr.Seuss\n *       console.log(doc.depopulate('author'));\n *       console.log(doc.author); // '5144cf8050f071d979c118a7'\n *     })\n *\n * If the path was not provided, then all populated fields are returned to their unpopulated state.\n *\n * @param {String|String[]} [path] Specific Path to depopulate. If unset, will depopulate all paths on the Document. Or multiple space-delimited paths.\n * @return {Document} this\n * @see Document.populate https://mongoosejs.com/docs/api/document.html#Document.prototype.populate()\n * @api public\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.depopulate = function(path) {\n  if (typeof path === 'string') {\n    path = path.indexOf(' ') === -1 ? [path] : path.split(' ');\n  }\n\n  let populatedIds;\n  const virtualKeys = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [];\n  const populated = this.$__ && this.$__.populated || {};\n\n  if (arguments.length === 0) {\n    // Depopulate all\n    for (const virtualKey of virtualKeys) {\n      delete this.$$populatedVirtuals[virtualKey];\n      delete this._doc[virtualKey];\n      delete populated[virtualKey];\n    }\n\n    const keys = Object.keys(populated);\n\n    for (const key of keys) {\n      populatedIds = this.$populated(key);\n      if (!populatedIds) {\n        continue;\n      }\n      delete populated[key];\n      utils.setValue(key, populatedIds, this._doc);\n    }\n    return this;\n  }\n\n  for (const singlePath of path) {\n    populatedIds = this.$populated(singlePath);\n    delete populated[singlePath];\n\n    if (virtualKeys.indexOf(singlePath) !== -1) {\n      delete this.$$populatedVirtuals[singlePath];\n      delete this._doc[singlePath];\n    } else if (populatedIds) {\n      utils.setValue(singlePath, populatedIds, this._doc);\n    }\n  }\n  return this;\n};\n\n\n/**\n * Returns the full path to this document.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$__fullPath = function(path) {\n  // overridden in SubDocuments\n  return path || '';\n};\n\n/**\n * Returns the changes that happened to the document\n * in the format that will be sent to MongoDB.\n *\n * #### Example:\n *\n *     const userSchema = new Schema({\n *       name: String,\n *       age: Number,\n *       country: String\n *     });\n *     const User = mongoose.model('User', userSchema);\n *     const user = await User.create({\n *       name: 'Hafez',\n *       age: 25,\n *       country: 'Egypt'\n *     });\n *\n *     // returns an empty object, no changes happened yet\n *     user.getChanges(); // { }\n *\n *     user.country = undefined;\n *     user.age = 26;\n *\n *     user.getChanges(); // { $set: { age: 26 }, { $unset: { country: 1 } } }\n *\n *     await user.save();\n *\n *     user.getChanges(); // { }\n *\n * Modifying the object that `getChanges()` returns does not affect the document's\n * change tracking state. Even if you `delete user.getChanges().$set`, Mongoose\n * will still send a `$set` to the server.\n *\n * @return {Object}\n * @api public\n * @method getChanges\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.getChanges = function() {\n  const delta = this.$__delta();\n  const changes = delta ? delta[1] : {};\n  return changes;\n};\n\n/**\n * Returns a copy of this document with a deep clone of `_doc` and `$__`.\n *\n * @return {Document} a copy of this document\n * @api public\n * @method $clone\n * @memberOf Document\n * @instance\n */\n\nDocument.prototype.$clone = function() {\n  const Model = this.constructor;\n  const clonedDoc = new Model();\n  clonedDoc.$isNew = this.$isNew;\n  if (this._doc) {\n    clonedDoc._doc = clone(this._doc);\n  }\n  if (this.$__) {\n    const Cache = this.$__.constructor;\n    const clonedCache = new Cache();\n    for (const key of Object.getOwnPropertyNames(this.$__)) {\n      if (key === 'activePaths') {\n        continue;\n      }\n      clonedCache[key] = clone(this.$__[key]);\n    }\n    Object.assign(clonedCache.activePaths, clone({ ...this.$__.activePaths }));\n    clonedDoc.$__ = clonedCache;\n  }\n  return clonedDoc;\n};\n\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst UUID = require('bson').UUID;\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/PopulateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isMongooseArray = require('./types/array/isMongooseArray');\nconst isMongooseDocumentArray = require('./types/DocumentArray/isMongooseDocumentArray');\nconst isBsonType = require('./helpers/isBsonType');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\nconst { trustedSymbol } = require('./helpers/query/trusted');\n\nlet Document;\n\nexports.specialProperties = specialProperties;\n\nexports.isMongooseArray = isMongooseArray.isMongooseArray;\nexports.isMongooseDocumentArray = isMongooseDocumentArray.isMongooseDocumentArray;\nexports.registerMongooseArray = isMongooseArray.registerMongooseArray;\nexports.registerMongooseDocumentArray = isMongooseDocumentArray.registerMongooseDocumentArray;\n\n/**\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function(name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n  return name;\n};\n\n/**\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if ((isBsonType(a, 'ObjectId') && isBsonType(b, 'ObjectId')) ||\n      (isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128'))) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source &&\n        a.ignoreCase === b.ignoreCase &&\n        a.multiline === b.multiline &&\n        a.global === b.global &&\n        a.dotAll === b.dotAll &&\n        a.unicode === b.unicode &&\n        a.sticky === b.sticky &&\n        a.hasIndices === b.hasIndices;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map || b instanceof Map) {\n    if (!(a instanceof Map) || !(b instanceof Map)) {\n      return false;\n    }\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) &&\n      deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Get the last element of an array\n * @param {Array} arr\n */\n\nexports.last = function(arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.cloneArrays = function cloneArrays(arr) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return arr.map(el => exports.cloneArrays(el));\n};\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n\n/**\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} [options]\n * @return {Object} the merged object\n * @api private\n */\n\nexports.options = function(defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @param {Object} [options]\n * @param {String} [path]\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  if (from[trustedSymbol]) {\n    to[trustedSymbol] = from[trustedSymbol];\n  }\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge &&\n            (from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n            (from[key].$isMongooseDocumentArray && to[key].$isSingleNested)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (isBsonType(from[key], 'ObjectId')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n\n/**\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    if (obj[trustedSymbol]) {\n      ret[trustedSymbol] = obj[trustedSymbol];\n    }\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n\n/**\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = require('./helpers/isPOJO');\n\n/**\n * Determines if `arg` is an object that isn't an instance of a built-in value\n * class, like Array, Buffer, ObjectId, etc.\n * @param {Any} val\n */\n\nexports.isNonBuiltinObject = function isNonBuiltinObject(val) {\n  return typeof val === 'object' &&\n    !exports.isNativeObject(val) &&\n    !exports.isMongooseType(val) &&\n    !(val instanceof UUID) &&\n    val != null;\n};\n\n/**\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n * @param {Any} arg\n */\n\nexports.isNativeObject = function(arg) {\n  return Array.isArray(arg) ||\n    arg instanceof Date ||\n    arg instanceof Boolean ||\n    arg instanceof Number ||\n    arg instanceof String;\n};\n\n/**\n * Determines if `val` is an object that has no own keys\n * @param {Any} val\n */\n\nexports.isEmptyObject = function(val) {\n  return val != null &&\n    typeof val === 'object' &&\n    Object.keys(val).length === 0;\n};\n\n/**\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n * @param {Object} obj\n * @param {String} key\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function() {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function() {\n        throw err;\n      });\n    }\n  };\n};\n\n/**\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n * @param {Any} v\n */\n\nexports.isMongooseType = function(v) {\n  return isBsonType(v, 'ObjectId') || isBsonType(v, 'Decimal128') || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n\n/**\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n\n  object.expireAfterSeconds = (typeof object.expires !== 'string')\n    ? object.expires\n    : Math.round(ms(object.expires) / 1000);\n  delete object.expires;\n};\n\n/**\n * populate helper\n * @param {String} path\n * @param {String} select\n * @param {Model} model\n * @param {Object} match\n * @param {Object} options\n * @param {Any} subPopulate\n * @param {Boolean} justOne\n * @param {Boolean} count\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      // If reusing old populate docs, avoid reusing `_docs` because that may\n      // lead to bugs and memory leaks. See gh-11641\n      path._docs = [];\n      path._childDocs = [];\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = { path: path };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function(p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function(p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n  if (obj.options != null) {\n    obj.options = clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, { path: path })));\n  }\n\n  return ret;\n}\n\n/**\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Any} map\n */\n\nexports.getValue = function(path, obj, map) {\n  return mpath.get(path, obj, getValueLookup, map);\n};\n\n/*!\n * ignore\n */\n\nconst mapGetterOptions = Object.freeze({ getters: false });\n\nfunction getValueLookup(obj, part) {\n  const _from = obj?._doc || obj;\n  return _from instanceof Map ?\n    _from.get(part, mapGetterOptions) :\n    _from[part];\n}\n\n/**\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n * @param {Any} map\n * @param {Any} _copying\n */\n\nexports.setValue = function(path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/**\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @api private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n\n/**\n * @see exports.options\n */\n\nexports.object.shallowCopy = exports.options;\n\nconst hop = Object.prototype.hasOwnProperty;\n\n/**\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nexports.object.hasOwnProperty = function(obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/**\n * Determine if `val` is null or undefined\n *\n * @param {Any} val\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function(val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/**\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @param {Array} ret\n * @return {Array}\n * @api private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n\n  arr.forEach(function(item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function(obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function(val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n\n/**\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.array.unique = function(arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (isBsonType(item, 'ObjectId')) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n\nexports.buffer = {};\n\n/**\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer.areEqual = function(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n\n/**\n * Decorate buffers\n * @param {Object} destination\n * @param {Object} source\n */\n\nexports.decorate = function(destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function(to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function(arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function(name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source == null) {\n      continue;\n    }\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function() {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nexports.warn = function warn(message) {\n  return process.emitWarning(message, { code: 'MONGOOSE' });\n};\n\n\nexports.injectTimestampsOption = function injectTimestampsOption(writeOperation, timestampsOption) {\n  if (timestampsOption == null) {\n    return;\n  }\n  writeOperation.timestamps = timestampsOption;\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./error/index');\nconst SchemaTypeOptions = require('./options/SchemaTypeOptions');\nconst $exists = require('./schema/operators/exists');\nconst $type = require('./schema/operators/type');\nconst clone = require('./helpers/clone');\nconst handleImmutable = require('./helpers/schematype/handleImmutable');\nconst isAsyncFunction = require('./helpers/isAsyncFunction');\nconst isSimpleValidator = require('./helpers/isSimpleValidator');\nconst immediate = require('./helpers/immediate');\nconst schemaTypeSymbol = require('./helpers/symbols').schemaTypeSymbol;\nconst utils = require('./utils');\nconst validatorErrorSymbol = require('./helpers/symbols').validatorErrorSymbol;\nconst documentIsModified = require('./helpers/symbols').documentIsModified;\n\nconst populateModelSymbol = require('./helpers/symbols').populateModelSymbol;\n\nconst CastError = MongooseError.CastError;\nconst ValidatorError = MongooseError.ValidatorError;\n\nconst setOptionsForDefaults = { _skipMarkModified: true };\n\n/**\n * SchemaType constructor. Do **not** instantiate `SchemaType` directly.\n * Mongoose converts your schema paths into SchemaTypes automatically.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String });\n *     schema.path('name') instanceof SchemaType; // true\n *\n * @param {String} path\n * @param {SchemaTypeOptions} [options] See [SchemaTypeOptions docs](https://mongoosejs.com/docs/api/schematypeoptions.html)\n * @param {String} [instance]\n * @api public\n */\n\nfunction SchemaType(path, options, instance) {\n  this[schemaTypeSymbol] = true;\n  this.path = path;\n  this.instance = instance;\n  this.validators = [];\n  this.getters = this.constructor.hasOwnProperty('getters') ?\n    this.constructor.getters.slice() :\n    [];\n  this.setters = this.constructor.hasOwnProperty('setters') ?\n    this.constructor.setters.slice() :\n    [];\n\n  this.splitPath();\n\n  options = options || {};\n  const defaultOptions = this.constructor.defaultOptions || {};\n  const defaultOptionsKeys = Object.keys(defaultOptions);\n\n  for (const option of defaultOptionsKeys) {\n    if (defaultOptions.hasOwnProperty(option) && !Object.prototype.hasOwnProperty.call(options, option)) {\n      options[option] = defaultOptions[option];\n    }\n  }\n\n  if (options.select == null) {\n    delete options.select;\n  }\n\n  const Options = this.OptionsConstructor || SchemaTypeOptions;\n  this.options = new Options(options);\n  this._index = null;\n\n\n  if (utils.hasUserDefinedProperty(this.options, 'immutable')) {\n    this.$immutable = this.options.immutable;\n\n    handleImmutable(this);\n  }\n\n  const keys = Object.keys(this.options);\n  for (const prop of keys) {\n    if (prop === 'cast') {\n      if (Array.isArray(this.options[prop])) {\n        this.castFunction.apply(this, this.options[prop]);\n      } else {\n        this.castFunction(this.options[prop]);\n      }\n      continue;\n    }\n    if (utils.hasUserDefinedProperty(this.options, prop) && typeof this[prop] === 'function') {\n      // { unique: true, index: true }\n      if (prop === 'index' && this._index) {\n        if (options.index === false) {\n          const index = this._index;\n          if (typeof index === 'object' && index != null) {\n            if (index.unique) {\n              throw new Error('Path \"' + this.path + '\" may not have `index` ' +\n                'set to false and `unique` set to true');\n            }\n            if (index.sparse) {\n              throw new Error('Path \"' + this.path + '\" may not have `index` ' +\n                'set to false and `sparse` set to true');\n            }\n          }\n\n          this._index = false;\n        }\n        continue;\n      }\n\n      const val = options[prop];\n      // Special case so we don't screw up array defaults, see gh-5780\n      if (prop === 'default') {\n        this.default(val);\n        continue;\n      }\n\n      const opts = Array.isArray(val) ? val : [val];\n\n      this[prop].apply(this, opts);\n    }\n  }\n\n  Object.defineProperty(this, '$$context', {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value: null\n  });\n}\n\n/**\n * The class that Mongoose uses internally to instantiate this SchemaType's `options` property.\n * @memberOf SchemaType\n * @instance\n * @api private\n */\n\nSchemaType.prototype.OptionsConstructor = SchemaTypeOptions;\n\n/**\n * The path to this SchemaType in a Schema.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String });\n *     schema.path('name').path; // 'name'\n *\n * @property path\n * @api public\n * @memberOf SchemaType\n */\n\nSchemaType.prototype.path;\n\n/**\n * The validators that Mongoose should run to validate properties at this SchemaType's path.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: { type: String, required: true } });\n *     schema.path('name').validators.length; // 1, the `required` validator\n *\n * @property validators\n * @api public\n * @memberOf SchemaType\n */\n\nSchemaType.prototype.validators;\n\n/**\n * True if this SchemaType has a required validator. False otherwise.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: { type: String, required: true } });\n *     schema.path('name').isRequired; // true\n *\n *     schema.path('name').required(false);\n *     schema.path('name').isRequired; // false\n *\n * @property isRequired\n * @api public\n * @memberOf SchemaType\n */\n\nSchemaType.prototype.isRequired;\n\n/**\n * Split the current dottet path into segments\n *\n * @return {String[]|undefined}\n * @api private\n */\n\nSchemaType.prototype.splitPath = function() {\n  if (this._presplitPath != null) {\n    return this._presplitPath;\n  }\n  if (this.path == null) {\n    return undefined;\n  }\n\n  this._presplitPath = this.path.indexOf('.') === -1 ? [this.path] : this.path.split('.');\n  return this._presplitPath;\n};\n\n/**\n * Get/set the function used to cast arbitrary values to this type.\n *\n * #### Example:\n *\n *     // Disallow `null` for numbers, and don't try to cast any values to\n *     // numbers, so even strings like '123' will cause a CastError.\n *     mongoose.Number.cast(function(v) {\n *       assert.ok(v === undefined || typeof v === 'number');\n *       return v;\n *     });\n *\n * @param {Function|false} caster Function that casts arbitrary values to this type, or throws an error if casting failed\n * @return {Function}\n * @static\n * @memberOf SchemaType\n * @function cast\n * @api public\n */\n\nSchemaType.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = v => v;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/**\n * Get/set the function used to cast arbitrary values to this particular schematype instance.\n * Overrides `SchemaType.cast()`.\n *\n * #### Example:\n *\n *     // Disallow `null` for numbers, and don't try to cast any values to\n *     // numbers, so even strings like '123' will cause a CastError.\n *     const number = new mongoose.Number('mypath', {});\n *     number.cast(function(v) {\n *       assert.ok(v === undefined || typeof v === 'number');\n *       return v;\n *     });\n *\n * @param {Function|false} caster Function that casts arbitrary values to this type, or throws an error if casting failed\n * @return {Function}\n * @memberOf SchemaType\n * @api public\n */\n\nSchemaType.prototype.castFunction = function castFunction(caster, message) {\n  if (arguments.length === 0) {\n    return this._castFunction;\n  }\n\n  if (caster === false) {\n    caster = this.constructor._defaultCaster || (v => v);\n  }\n  if (typeof caster === 'string') {\n    this._castErrorMessage = caster;\n    return this._castFunction;\n  }\n  if (caster != null) {\n    this._castFunction = caster;\n  }\n  if (message != null) {\n    this._castErrorMessage = message;\n  }\n\n  return this._castFunction;\n};\n\n/**\n * The function that Mongoose calls to cast arbitrary values to this SchemaType.\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api public\n */\n\nSchemaType.prototype.cast = function cast() {\n  throw new Error('Base SchemaType class does not implement a `cast()` function');\n};\n\n/**\n * Sets a default option for this schema type.\n *\n * #### Example:\n *\n *     // Make all strings be trimmed by default\n *     mongoose.SchemaTypes.String.set('trim', true);\n *\n * @param {String} option The name of the option you'd like to set (e.g. trim, lowercase, etc...)\n * @param {Any} value The value of the option you'd like to set.\n * @return {void}\n * @static\n * @memberOf SchemaType\n * @function set\n * @api public\n */\n\nSchemaType.set = function set(option, value) {\n  if (!this.hasOwnProperty('defaultOptions')) {\n    this.defaultOptions = Object.assign({}, this.defaultOptions);\n  }\n  this.defaultOptions[option] = value;\n};\n\n/**\n * Attaches a getter for all instances of this schema type.\n *\n * #### Example:\n *\n *     // Make all numbers round down\n *     mongoose.Number.get(function(v) { return Math.floor(v); });\n *\n * @param {Function} getter\n * @return {this}\n * @static\n * @memberOf SchemaType\n * @function get\n * @api public\n */\n\nSchemaType.get = function(getter) {\n  this.getters = this.hasOwnProperty('getters') ? this.getters : [];\n  this.getters.push(getter);\n};\n\n/**\n * Sets a default value for this SchemaType.\n *\n * #### Example:\n *\n *     const schema = new Schema({ n: { type: Number, default: 10 })\n *     const M = db.model('M', schema)\n *     const m = new M;\n *     console.log(m.n) // 10\n *\n * Defaults can be either `functions` which return the value to use as the default or the literal value itself. Either way, the value will be cast based on its schema type before being set during document creation.\n *\n * #### Example:\n *\n *     // values are cast:\n *     const schema = new Schema({ aNumber: { type: Number, default: 4.815162342 }})\n *     const M = db.model('M', schema)\n *     const m = new M;\n *     console.log(m.aNumber) // 4.815162342\n *\n *     // default unique objects for Mixed types:\n *     const schema = new Schema({ mixed: Schema.Types.Mixed });\n *     schema.path('mixed').default(function () {\n *       return {};\n *     });\n *\n *     // if we don't use a function to return object literals for Mixed defaults,\n *     // each document will receive a reference to the same object literal creating\n *     // a \"shared\" object instance:\n *     const schema = new Schema({ mixed: Schema.Types.Mixed });\n *     schema.path('mixed').default({});\n *     const M = db.model('M', schema);\n *     const m1 = new M;\n *     m1.mixed.added = 1;\n *     console.log(m1.mixed); // { added: 1 }\n *     const m2 = new M;\n *     console.log(m2.mixed); // { added: 1 }\n *\n * @param {Function|any} val The default value to set\n * @return {Any|undefined} Returns the set default value.\n * @api public\n */\n\nSchemaType.prototype.default = function(val) {\n  if (arguments.length === 1) {\n    if (val === void 0) {\n      this.defaultValue = void 0;\n      return void 0;\n    }\n\n    if (val != null && val.instanceOfSchema) {\n      throw new MongooseError('Cannot set default value of path `' + this.path +\n        '` to a mongoose Schema instance.');\n    }\n\n    this.defaultValue = val;\n    return this.defaultValue;\n  } else if (arguments.length > 1) {\n    this.defaultValue = [...arguments];\n  }\n  return this.defaultValue;\n};\n\n/**\n * Declares the index options for this schematype.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: { type: String, index: true })\n *     const s = new Schema({ name: { type: String, index: -1 })\n *     const s = new Schema({ loc: { type: [Number], index: 'hashed' })\n *     const s = new Schema({ loc: { type: [Number], index: '2d', sparse: true })\n *     const s = new Schema({ loc: { type: [Number], index: { type: '2dsphere', sparse: true }})\n *     const s = new Schema({ date: { type: Date, index: { unique: true, expires: '1d' }})\n *     s.path('my.path').index(true);\n *     s.path('my.date').index({ expires: 60 });\n *     s.path('my.path').index({ unique: true, sparse: true });\n *\n * #### Note:\n *\n * _Indexes are created [in the background](https://www.mongodb.com/docs/manual/core/index-creation/#index-creation-background)\n * by default. If `background` is set to `false`, MongoDB will not execute any\n * read/write operations you send until the index build.\n * Specify `background: false` to override Mongoose's default._\n *\n * @param {Object|Boolean|String|Number} options\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.index = function(options) {\n  this._index = options;\n  utils.expires(this._index);\n  return this;\n};\n\n/**\n * Declares an unique index.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: { type: String, unique: true } });\n *     s.path('name').index({ unique: true });\n *\n * _NOTE: violating the constraint returns an `E11000` error from MongoDB when saving, not a Mongoose validation error._\n *\n * @param {Boolean} bool\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.unique = function(bool) {\n  if (this._index === false) {\n    if (!bool) {\n      return;\n    }\n    throw new Error('Path \"' + this.path + '\" may not have `index` set to ' +\n      'false and `unique` set to true');\n  }\n\n  if (!this.options.hasOwnProperty('index') && bool === false) {\n    return this;\n  }\n\n  if (this._index == null || this._index === true) {\n    this._index = {};\n  } else if (typeof this._index === 'string') {\n    this._index = { type: this._index };\n  }\n\n  this._index.unique = bool;\n  return this;\n};\n\n/**\n * Declares a full text index.\n *\n * ### Example:\n *\n *      const s = new Schema({ name : { type: String, text : true } })\n *      s.path('name').index({ text : true });\n *\n * @param {Boolean} bool\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.text = function(bool) {\n  if (this._index === false) {\n    if (!bool) {\n      return this;\n    }\n    throw new Error('Path \"' + this.path + '\" may not have `index` set to ' +\n      'false and `text` set to true');\n  }\n\n  if (!this.options.hasOwnProperty('index') && bool === false) {\n    return this;\n  }\n\n  if (this._index === null || this._index === undefined ||\n    typeof this._index === 'boolean') {\n    this._index = {};\n  } else if (typeof this._index === 'string') {\n    this._index = { type: this._index };\n  }\n\n  this._index.text = bool;\n  return this;\n};\n\n/**\n * Declares a sparse index.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: { type: String, sparse: true } });\n *     s.path('name').index({ sparse: true });\n *\n * @param {Boolean} bool\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.sparse = function(bool) {\n  if (this._index === false) {\n    if (!bool) {\n      return this;\n    }\n    throw new Error('Path \"' + this.path + '\" may not have `index` set to ' +\n      'false and `sparse` set to true');\n  }\n\n  if (!this.options.hasOwnProperty('index') && bool === false) {\n    return this;\n  }\n\n  if (this._index == null || typeof this._index === 'boolean') {\n    this._index = {};\n  } else if (typeof this._index === 'string') {\n    this._index = { type: this._index };\n  }\n\n  this._index.sparse = bool;\n  return this;\n};\n\n/**\n * Defines this path as immutable. Mongoose prevents you from changing\n * immutable paths unless the parent document has [`isNew: true`](https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew()).\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       name: { type: String, immutable: true },\n *       age: Number\n *     });\n *     const Model = mongoose.model('Test', schema);\n *\n *     await Model.create({ name: 'test' });\n *     const doc = await Model.findOne();\n *\n *     doc.isNew; // false\n *     doc.name = 'new name';\n *     doc.name; // 'test', because `name` is immutable\n *\n * Mongoose also prevents changing immutable properties using `updateOne()`\n * and `updateMany()` based on [strict mode](https://mongoosejs.com/docs/guide.html#strict).\n *\n * #### Example:\n *\n *     // Mongoose will strip out the `name` update, because `name` is immutable\n *     Model.updateOne({}, { $set: { name: 'test2' }, $inc: { age: 1 } });\n *\n *     // If `strict` is set to 'throw', Mongoose will throw an error if you\n *     // update `name`\n *     const err = await Model.updateOne({}, { name: 'test2' }, { strict: 'throw' }).\n *       then(() => null, err => err);\n *     err.name; // StrictModeError\n *\n *     // If `strict` is `false`, Mongoose allows updating `name` even though\n *     // the property is immutable.\n *     Model.updateOne({}, { name: 'test2' }, { strict: false });\n *\n * @param {Boolean} bool\n * @return {SchemaType} this\n * @see isNew https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew()\n * @api public\n */\n\nSchemaType.prototype.immutable = function(bool) {\n  this.$immutable = bool;\n  handleImmutable(this);\n\n  return this;\n};\n\n/**\n * Defines a custom function for transforming this path when converting a document to JSON.\n *\n * Mongoose calls this function with one parameter: the current `value` of the path. Mongoose\n * then uses the return value in the JSON output.\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       date: { type: Date, transform: v => v.getFullYear() }\n *     });\n *     const Model = mongoose.model('Test', schema);\n *\n *     await Model.create({ date: new Date('2016-06-01') });\n *     const doc = await Model.findOne();\n *\n *     doc.date instanceof Date; // true\n *\n *     doc.toJSON().date; // 2016 as a number\n *     JSON.stringify(doc); // '{\"_id\":...,\"date\":2016}'\n *\n * @param {Function} fn\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.transform = function(fn) {\n  this.options.transform = fn;\n\n  return this;\n};\n\n/**\n * Adds a setter to this schematype.\n *\n * #### Example:\n *\n *     function capitalize (val) {\n *       if (typeof val !== 'string') val = '';\n *       return val.charAt(0).toUpperCase() + val.substring(1);\n *     }\n *\n *     // defining within the schema\n *     const s = new Schema({ name: { type: String, set: capitalize }});\n *\n *     // or with the SchemaType\n *     const s = new Schema({ name: String })\n *     s.path('name').set(capitalize);\n *\n * Setters allow you to transform the data before it gets to the raw mongodb\n * document or query.\n *\n * Suppose you are implementing user registration for a website. Users provide\n * an email and password, which gets saved to mongodb. The email is a string\n * that you will want to normalize to lower case, in order to avoid one email\n * having more than one account -- e.g., otherwise, avenue@q.com can be registered for 2 accounts via avenue@q.com and AvEnUe@Q.CoM.\n *\n * You can set up email lower case normalization easily via a Mongoose setter.\n *\n *     function toLower(v) {\n *       return v.toLowerCase();\n *     }\n *\n *     const UserSchema = new Schema({\n *       email: { type: String, set: toLower }\n *     });\n *\n *     const User = db.model('User', UserSchema);\n *\n *     const user = new User({email: 'AVENUE@Q.COM'});\n *     console.log(user.email); // 'avenue@q.com'\n *\n *     // or\n *     const user = new User();\n *     user.email = 'Avenue@Q.com';\n *     console.log(user.email); // 'avenue@q.com'\n *     User.updateOne({ _id: _id }, { $set: { email: 'AVENUE@Q.COM' } }); // update to 'avenue@q.com'\n *\n * As you can see above, setters allow you to transform the data before it\n * stored in MongoDB, or before executing a query.\n *\n * _NOTE: we could have also just used the built-in `lowercase: true` SchemaType option instead of defining our own function._\n *\n *     new Schema({ email: { type: String, lowercase: true }})\n *\n * Setters are also passed a second argument, the schematype on which the setter was defined. This allows for tailored behavior based on options passed in the schema.\n *\n *     function inspector (val, priorValue, schematype) {\n *       if (schematype.options.required) {\n *         return schematype.path + ' is required';\n *       } else {\n *         return val;\n *       }\n *     }\n *\n *     const VirusSchema = new Schema({\n *       name: { type: String, required: true, set: inspector },\n *       taxonomy: { type: String, set: inspector }\n *     })\n *\n *     const Virus = db.model('Virus', VirusSchema);\n *     const v = new Virus({ name: 'Parvoviridae', taxonomy: 'Parvovirinae' });\n *\n *     console.log(v.name);     // name is required\n *     console.log(v.taxonomy); // Parvovirinae\n *\n * You can also use setters to modify other properties on the document. If\n * you're setting a property `name` on a document, the setter will run with\n * `this` as the document. Be careful, in mongoose 5 setters will also run\n * when querying by `name` with `this` as the query.\n *\n *     const nameSchema = new Schema({ name: String, keywords: [String] });\n *     nameSchema.path('name').set(function(v) {\n *       // Need to check if `this` is a document, because in mongoose 5\n *       // setters will also run on queries, in which case `this` will be a\n *       // mongoose query object.\n *       if (this instanceof Document && v != null) {\n *         this.keywords = v.split(' ');\n *       }\n *       return v;\n *     });\n *\n * @param {Function} fn\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.set = function(fn) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('A setter must be a function.');\n  }\n  this.setters.push(fn);\n  return this;\n};\n\n/**\n * Adds a getter to this schematype.\n *\n * #### Example:\n *\n *     function dob (val) {\n *       if (!val) return val;\n *       return (val.getMonth() + 1) + \"/\" + val.getDate() + \"/\" + val.getFullYear();\n *     }\n *\n *     // defining within the schema\n *     const s = new Schema({ born: { type: Date, get: dob })\n *\n *     // or by retreiving its SchemaType\n *     const s = new Schema({ born: Date })\n *     s.path('born').get(dob)\n *\n * Getters allow you to transform the representation of the data as it travels from the raw mongodb document to the value that you see.\n *\n * Suppose you are storing credit card numbers and you want to hide everything except the last 4 digits to the mongoose user. You can do so by defining a getter in the following way:\n *\n *     function obfuscate (cc) {\n *       return '****-****-****-' + cc.slice(cc.length-4, cc.length);\n *     }\n *\n *     const AccountSchema = new Schema({\n *       creditCardNumber: { type: String, get: obfuscate }\n *     });\n *\n *     const Account = db.model('Account', AccountSchema);\n *\n *     Account.findById(id, function (err, found) {\n *       console.log(found.creditCardNumber); // '****-****-****-1234'\n *     });\n *\n * Getters are also passed a second argument, the schematype on which the getter was defined. This allows for tailored behavior based on options passed in the schema.\n *\n *     function inspector (val, priorValue, schematype) {\n *       if (schematype.options.required) {\n *         return schematype.path + ' is required';\n *       } else {\n *         return schematype.path + ' is not';\n *       }\n *     }\n *\n *     const VirusSchema = new Schema({\n *       name: { type: String, required: true, get: inspector },\n *       taxonomy: { type: String, get: inspector }\n *     })\n *\n *     const Virus = db.model('Virus', VirusSchema);\n *\n *     Virus.findById(id, function (err, virus) {\n *       console.log(virus.name);     // name is required\n *       console.log(virus.taxonomy); // taxonomy is not\n *     })\n *\n * @param {Function} fn\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.get = function(fn) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('A getter must be a function.');\n  }\n  this.getters.push(fn);\n  return this;\n};\n\n/**\n * Adds validator(s) for this document path.\n *\n * Validators always receive the value to validate as their first argument and\n * must return `Boolean`. Returning `false` or throwing an error means\n * validation failed.\n *\n * The error message argument is optional. If not passed, the [default generic error message template](https://mongoosejs.com/docs/api/error.html#Error.messages) will be used.\n *\n * #### Example:\n *\n *     // make sure every value is equal to \"something\"\n *     function validator (val) {\n *       return val === 'something';\n *     }\n *     new Schema({ name: { type: String, validate: validator }});\n *\n *     // with a custom error message\n *\n *     const custom = [validator, 'Uh oh, {PATH} does not equal \"something\".']\n *     new Schema({ name: { type: String, validate: custom }});\n *\n *     // adding many validators at a time\n *\n *     const many = [\n *         { validator: validator, message: 'uh oh' }\n *       , { validator: anotherValidator, message: 'failed' }\n *     ]\n *     new Schema({ name: { type: String, validate: many }});\n *\n *     // or utilizing SchemaType methods directly:\n *\n *     const schema = new Schema({ name: 'string' });\n *     schema.path('name').validate(validator, 'validation of `{PATH}` failed with value `{VALUE}`');\n *\n * #### Error message templates:\n *\n * Below is a list of supported template keywords:\n *\n * - PATH: The schema path where the error is being triggered.\n * - VALUE: The value assigned to the PATH that is triggering the error.\n * - KIND: The validation property that triggered the error i.e. required.\n * - REASON: The error object that caused this error if there was one.\n *\n * If Mongoose's built-in error message templating isn't enough, Mongoose\n * supports setting the `message` property to a function.\n *\n *     schema.path('name').validate({\n *       validator: function(v) { return v.length > 5; },\n *       // `errors['name']` will be \"name must have length 5, got 'foo'\"\n *       message: function(props) {\n *         return `${props.path} must have length 5, got '${props.value}'`;\n *       }\n *     });\n *\n * To bypass Mongoose's error messages and just copy the error message that\n * the validator throws, do this:\n *\n *     schema.path('name').validate({\n *       validator: function() { throw new Error('Oops!'); },\n *       // `errors['name']` will be \"Oops!\"\n *       message: function(props) { return props.reason.message; }\n *     });\n *\n * #### Asynchronous validation:\n *\n * Mongoose supports validators that return a promise. A validator that returns\n * a promise is called an _async validator_. Async validators run in\n * parallel, and `validate()` will wait until all async validators have settled.\n *\n *     schema.path('name').validate({\n *       validator: function (value) {\n *         return new Promise(function (resolve, reject) {\n *           resolve(false); // validation failed\n *         });\n *       }\n *     });\n *\n * You might use asynchronous validators to retreive other documents from the database to validate against or to meet other I/O bound validation needs.\n *\n * Validation occurs `pre('save')` or whenever you manually execute [document#validate](https://mongoosejs.com/docs/api/document.html#Document.prototype.validate()).\n *\n * If validation fails during `pre('save')` and no callback was passed to receive the error, an `error` event will be emitted on your Models associated db [connection](https://mongoosejs.com/docs/api/connection.html#Connection()), passing the validation error object along.\n *\n *     const conn = mongoose.createConnection(..);\n *     conn.on('error', handleError);\n *\n *     const Product = conn.model('Product', yourSchema);\n *     const dvd = new Product(..);\n *     dvd.save(); // emits error on the `conn` above\n *\n * If you want to handle these errors at the Model level, add an `error`\n * listener to your Model as shown below.\n *\n *     // registering an error listener on the Model lets us handle errors more locally\n *     Product.on('error', handleError);\n *\n * @param {RegExp|Function|Object} obj validator function, or hash describing options\n * @param {Function} [obj.validator] validator function. If the validator function returns `undefined` or a truthy value, validation succeeds. If it returns [falsy](https://masteringjs.io/tutorials/fundamentals/falsy) (except `undefined`) or throws an error, validation fails.\n * @param {String|Function} [obj.message] optional error message. If function, should return the error message as a string\n * @param {Boolean} [obj.propsParameter=false] If true, Mongoose will pass the validator properties object (with the `validator` function, `message`, etc.) as the 2nd arg to the validator function. This is disabled by default because many validators [rely on positional args](https://github.com/chriso/validator.js#validators), so turning this on may cause unpredictable behavior in external validators.\n * @param {String|Function} [errorMsg] optional error message. If function, should return the error message as a string\n * @param {String} [type] optional validator type\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.validate = function(obj, message, type) {\n  if (typeof obj === 'function' || obj && utils.getFunctionName(obj.constructor) === 'RegExp') {\n    let properties;\n    if (typeof message === 'function') {\n      properties = { validator: obj, message: message };\n      properties.type = type || 'user defined';\n    } else if (message instanceof Object && !type) {\n      properties = isSimpleValidator(message) ? Object.assign({}, message) : clone(message);\n      if (!properties.message) {\n        properties.message = properties.msg;\n      }\n      properties.validator = obj;\n      properties.type = properties.type || 'user defined';\n    } else {\n      if (message == null) {\n        message = MongooseError.messages.general.default;\n      }\n      if (!type) {\n        type = 'user defined';\n      }\n      properties = { message: message, type: type, validator: obj };\n    }\n\n    this.validators.push(properties);\n    return this;\n  }\n\n  let i;\n  let length;\n  let arg;\n\n  for (i = 0, length = arguments.length; i < length; i++) {\n    arg = arguments[i];\n    if (!utils.isPOJO(arg)) {\n      const msg = 'Invalid validator. Received (' + typeof arg + ') '\n        + arg\n        + '. See https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.validate()';\n\n      throw new Error(msg);\n    }\n    this.validate(arg.validator, arg);\n  }\n\n  return this;\n};\n\n/**\n * Adds a required validator to this SchemaType. The validator gets added\n * to the front of this SchemaType's validators array using `unshift()`.\n *\n * #### Example:\n *\n *     const s = new Schema({ born: { type: Date, required: true })\n *\n *     // or with custom error message\n *\n *     const s = new Schema({ born: { type: Date, required: '{PATH} is required!' })\n *\n *     // or with a function\n *\n *     const s = new Schema({\n *       userId: ObjectId,\n *       username: {\n *         type: String,\n *         required: function() { return this.userId != null; }\n *       }\n *     })\n *\n *     // or with a function and a custom message\n *     const s = new Schema({\n *       userId: ObjectId,\n *       username: {\n *         type: String,\n *         required: [\n *           function() { return this.userId != null; },\n *           'username is required if id is specified'\n *         ]\n *       }\n *     })\n *\n *     // or through the path API\n *\n *     s.path('name').required(true);\n *\n *     // with custom error messaging\n *\n *     s.path('name').required(true, 'grrr :( ');\n *\n *     // or make a path conditionally required based on a function\n *     const isOver18 = function() { return this.age >= 18; };\n *     s.path('voterRegistrationId').required(isOver18);\n *\n * The required validator uses the SchemaType's `checkRequired` function to\n * determine whether a given value satisfies the required validator. By default,\n * a value satisfies the required validator if `val != null` (that is, if\n * the value is not null nor undefined). However, most built-in mongoose schema\n * types override the default `checkRequired` function:\n *\n * @param {Boolean|Function|Object} required enable/disable the validator, or function that returns required boolean, or options object\n * @param {Boolean|Function} [options.isRequired] enable/disable the validator, or function that returns required boolean\n * @param {Function} [options.ErrorConstructor] custom error constructor. The constructor receives 1 parameter, an object containing the validator properties.\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @see SchemaArray#checkRequired https://mongoosejs.com/docs/api/schemaarray.html#SchemaArray.prototype.checkRequired()\n * @see SchemaBoolean#checkRequired https://mongoosejs.com/docs/api/schemaboolean.html#SchemaBoolean.prototype.checkRequired()\n * @see SchemaBuffer#checkRequired https://mongoosejs.com/docs/api/schemabuffer.html#SchemaBuffer.prototype.checkRequired()\n * @see SchemaNumber#checkRequired https://mongoosejs.com/docs/api/schemanumber.html#SchemaNumber.prototype.checkRequired()\n * @see SchemaObjectId#checkRequired https://mongoosejs.com/docs/api/schemaobjectid.html#ObjectId.prototype.checkRequired()\n * @see SchemaString#checkRequired https://mongoosejs.com/docs/api/schemastring.html#SchemaString.prototype.checkRequired()\n * @api public\n */\n\nSchemaType.prototype.required = function(required, message) {\n  let customOptions = {};\n\n  if (arguments.length > 0 && required == null) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.requiredValidator;\n    }, this);\n\n    this.isRequired = false;\n    delete this.originalRequiredValue;\n    return this;\n  }\n\n  if (typeof required === 'object') {\n    customOptions = required;\n    message = customOptions.message || message;\n    required = required.isRequired;\n  }\n\n  if (required === false) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.requiredValidator;\n    }, this);\n\n    this.isRequired = false;\n    delete this.originalRequiredValue;\n    return this;\n  }\n\n  const _this = this;\n  this.isRequired = true;\n\n  this.requiredValidator = function(v) {\n    const cachedRequired = this && this.$__ && this.$__.cachedRequired;\n\n    // no validation when this path wasn't selected in the query.\n    if (cachedRequired != null && !this.$__isSelected(_this.path) && !this[documentIsModified](_this.path)) {\n      return true;\n    }\n\n    // `$cachedRequired` gets set in `_evaluateRequiredFunctions()` so we\n    // don't call required functions multiple times in one validate call\n    // See gh-6801\n    if (cachedRequired != null && _this.path in cachedRequired) {\n      const res = cachedRequired[_this.path] ?\n        _this.checkRequired(v, this) :\n        true;\n      delete cachedRequired[_this.path];\n      return res;\n    } else if (typeof required === 'function') {\n      return required.apply(this) ? _this.checkRequired(v, this) : true;\n    }\n\n    return _this.checkRequired(v, this);\n  };\n  this.originalRequiredValue = required;\n\n  if (typeof required === 'string') {\n    message = required;\n    required = undefined;\n  }\n\n  const msg = message || MongooseError.messages.general.required;\n  this.validators.unshift(Object.assign({}, customOptions, {\n    validator: this.requiredValidator,\n    message: msg,\n    type: 'required'\n  }));\n\n  return this;\n};\n\n/**\n * Set the model that this path refers to. This is the option that [populate](https://mongoosejs.com/docs/populate.html)\n * looks at to determine the foreign collection it should query.\n *\n * #### Example:\n *\n *     const userSchema = new Schema({ name: String });\n *     const User = mongoose.model('User', userSchema);\n *\n *     const postSchema = new Schema({ user: mongoose.ObjectId });\n *     postSchema.path('user').ref('User'); // Can set ref to a model name\n *     postSchema.path('user').ref(User); // Or a model class\n *     postSchema.path('user').ref(() => 'User'); // Or a function that returns the model name\n *     postSchema.path('user').ref(() => User); // Or a function that returns the model class\n *\n *     // Or you can just declare the `ref` inline in your schema\n *     const postSchema2 = new Schema({\n *       user: { type: mongoose.ObjectId, ref: User }\n *     });\n *\n * @param {String|Model|Function} ref either a model name, a [Model](https://mongoosejs.com/docs/models.html), or a function that returns a model name or model.\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.ref = function(ref) {\n  this.options.ref = ref;\n  return this;\n};\n\n/**\n * Gets the default value\n *\n * @param {Object} scope the scope which callback are executed\n * @param {Boolean} init\n * @return {Any} The Stored default value.\n * @api private\n */\n\nSchemaType.prototype.getDefault = function(scope, init, options) {\n  let ret;\n  if (typeof this.defaultValue === 'function') {\n    if (\n      this.defaultValue === Date.now ||\n      this.defaultValue === Array ||\n      this.defaultValue.name.toLowerCase() === 'objectid'\n    ) {\n      ret = this.defaultValue.call(scope);\n    } else {\n      ret = this.defaultValue.call(scope, scope);\n    }\n  } else {\n    ret = this.defaultValue;\n  }\n\n  if (ret !== null && ret !== undefined) {\n    if (typeof ret === 'object' && (!this.options || !this.options.shared)) {\n      ret = clone(ret);\n    }\n\n    if (options && options.skipCast) {\n      return this._applySetters(ret, scope);\n    }\n\n    const casted = this.applySetters(ret, scope, init, undefined, setOptionsForDefaults);\n    if (casted && !Array.isArray(casted) && casted.$isSingleNested) {\n      casted.$__parent = scope;\n    }\n    return casted;\n  }\n  return ret;\n};\n\n/**\n * Applies setters without casting\n *\n * @param {Any} value\n * @param {Any} scope\n * @param {Boolean} init\n * @param {Any} priorVal\n * @param {Object} [options]\n * @instance\n * @api private\n */\n\nSchemaType.prototype._applySetters = function(value, scope, init, priorVal, options) {\n  let v = value;\n  if (init) {\n    return v;\n  }\n  const setters = this.setters;\n\n  for (let i = setters.length - 1; i >= 0; i--) {\n    v = setters[i].call(scope, v, priorVal, this, options);\n  }\n\n  return v;\n};\n\n/*!\n * ignore\n */\n\nSchemaType.prototype._castNullish = function _castNullish(v) {\n  return v;\n};\n\n/**\n * Applies setters\n *\n * @param {Object} value\n * @param {Object} scope\n * @param {Boolean} init\n * @return {Any}\n * @api private\n */\n\nSchemaType.prototype.applySetters = function(value, scope, init, priorVal, options) {\n  let v = this._applySetters(value, scope, init, priorVal, options);\n  if (v == null) {\n    return this._castNullish(v);\n  }\n\n  // do not cast until all setters are applied #665\n  v = this.cast(v, scope, init, priorVal, options);\n\n  return v;\n};\n\n/**\n * Applies getters to a value\n *\n * @param {Object} value\n * @param {Object} scope\n * @return {Any}\n * @api private\n */\n\nSchemaType.prototype.applyGetters = function(value, scope) {\n  let v = value;\n  const getters = this.getters;\n  const len = getters.length;\n\n  if (len === 0) {\n    return v;\n  }\n\n  for (let i = 0; i < len; ++i) {\n    v = getters[i].call(scope, v, this);\n  }\n\n  return v;\n};\n\n/**\n * Sets default `select()` behavior for this path.\n *\n * Set to `true` if this path should always be included in the results, `false` if it should be excluded by default. This setting can be overridden at the query level.\n *\n * #### Example:\n *\n *     T = db.model('T', new Schema({ x: { type: String, select: true }}));\n *     T.find(..); // field x will always be selected ..\n *     // .. unless overridden;\n *     T.find().select('-x').exec(callback);\n *\n * @param {Boolean} val\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaType.prototype.select = function select(val) {\n  this.selected = !!val;\n  return this;\n};\n\n/**\n * Performs a validation of `value` using the validators declared for this SchemaType.\n *\n * @param {Any} value\n * @param {Function} callback\n * @param {Object} scope\n * @param {Object} [options]\n * @param {String} [options.path]\n * @return {Any} If no validators, returns the output from calling `fn`, otherwise no return\n * @api public\n */\n\nSchemaType.prototype.doValidate = function(value, fn, scope, options) {\n  let err = false;\n  const path = this.path;\n\n  // Avoid non-object `validators`\n  const validators = this.validators.\n    filter(v => typeof v === 'object' && v !== null);\n\n  let count = validators.length;\n\n  if (!count) {\n    return fn(null);\n  }\n\n  for (let i = 0, len = validators.length; i < len; ++i) {\n    if (err) {\n      break;\n    }\n\n    const v = validators[i];\n    const validator = v.validator;\n    let ok;\n\n    const validatorProperties = isSimpleValidator(v) ? Object.assign({}, v) : clone(v);\n    validatorProperties.path = options && options.path ? options.path : path;\n    validatorProperties.value = value;\n\n    if (validator instanceof RegExp) {\n      validate(validator.test(value), validatorProperties, scope);\n      continue;\n    }\n\n    if (typeof validator !== 'function') {\n      continue;\n    }\n\n    if (value === undefined && validator !== this.requiredValidator) {\n      validate(true, validatorProperties, scope);\n      continue;\n    }\n\n    try {\n      if (validatorProperties.propsParameter) {\n        ok = validator.call(scope, value, validatorProperties);\n      } else {\n        ok = validator.call(scope, value);\n      }\n    } catch (error) {\n      ok = false;\n      validatorProperties.reason = error;\n      if (error.message) {\n        validatorProperties.message = error.message;\n      }\n    }\n\n    if (ok != null && typeof ok.then === 'function') {\n      ok.then(\n        function(ok) { validate(ok, validatorProperties, scope); },\n        function(error) {\n          validatorProperties.reason = error;\n          validatorProperties.message = error.message;\n          ok = false;\n          validate(ok, validatorProperties, scope);\n        });\n    } else {\n      validate(ok, validatorProperties, scope);\n    }\n  }\n\n  function validate(ok, validatorProperties, scope) {\n    if (err) {\n      return;\n    }\n    if (ok === undefined || ok) {\n      if (--count <= 0) {\n        immediate(function() {\n          fn(null);\n        });\n      }\n    } else {\n      const ErrorConstructor = validatorProperties.ErrorConstructor || ValidatorError;\n      err = new ErrorConstructor(validatorProperties, scope);\n      err[validatorErrorSymbol] = true;\n      immediate(function() {\n        fn(err);\n      });\n    }\n  }\n};\n\n\nfunction _validate(ok, validatorProperties) {\n  if (ok !== undefined && !ok) {\n    const ErrorConstructor = validatorProperties.ErrorConstructor || ValidatorError;\n    const err = new ErrorConstructor(validatorProperties);\n    err[validatorErrorSymbol] = true;\n    return err;\n  }\n}\n\n/**\n * Performs a validation of `value` using the validators declared for this SchemaType.\n *\n * #### Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @param {Any} value\n * @param {Object} scope\n * @param {Object} [options]\n * @param {Object} [options.path]\n * @return {MongooseError|null}\n * @api private\n */\n\nSchemaType.prototype.doValidateSync = function(value, scope, options) {\n  const path = this.path;\n  const count = this.validators.length;\n\n  if (!count) {\n    return null;\n  }\n\n  let validators = this.validators;\n  if (value === void 0) {\n    if (this.validators.length !== 0 && this.validators[0].type === 'required') {\n      validators = [this.validators[0]];\n    } else {\n      return null;\n    }\n  }\n\n  let err = null;\n  let i = 0;\n  const len = validators.length;\n  for (i = 0; i < len; ++i) {\n\n    const v = validators[i];\n\n    if (v === null || typeof v !== 'object') {\n      continue;\n    }\n\n    const validator = v.validator;\n    const validatorProperties = isSimpleValidator(v) ? Object.assign({}, v) : clone(v);\n    validatorProperties.path = options && options.path ? options.path : path;\n    validatorProperties.value = value;\n    let ok = false;\n\n    // Skip any explicit async validators. Validators that return a promise\n    // will still run, but won't trigger any errors.\n    if (isAsyncFunction(validator)) {\n      continue;\n    }\n\n    if (validator instanceof RegExp) {\n      err = _validate(validator.test(value), validatorProperties);\n      continue;\n    }\n\n    if (typeof validator !== 'function') {\n      continue;\n    }\n\n    try {\n      if (validatorProperties.propsParameter) {\n        ok = validator.call(scope, value, validatorProperties);\n      } else {\n        ok = validator.call(scope, value);\n      }\n    } catch (error) {\n      ok = false;\n      validatorProperties.reason = error;\n    }\n\n    // Skip any validators that return a promise, we can't handle those\n    // synchronously\n    if (ok != null && typeof ok.then === 'function') {\n      continue;\n    }\n    err = _validate(ok, validatorProperties);\n    if (err) {\n      break;\n    }\n  }\n\n  return err;\n};\n\n/**\n * Determines if value is a valid Reference.\n *\n * @param {SchemaType} self\n * @param {Object} value\n * @param {Document} doc\n * @param {Boolean} init\n * @return {Boolean}\n * @api private\n */\n\nSchemaType._isRef = function(self, value, doc, init) {\n  // fast path\n  let ref = init && self.options && (self.options.ref || self.options.refPath);\n\n  if (!ref && doc && doc.$__ != null) {\n    // checks for\n    // - this populated with adhoc model and no ref was set in schema OR\n    // - setting / pushing values after population\n    const path = doc.$__fullPath(self.path, true);\n\n    const owner = doc.ownerDocument();\n    ref = (path != null && owner.$populated(path)) || doc.$populated(self.path);\n  }\n\n  if (ref) {\n    if (value == null) {\n      return true;\n    }\n    if (!Buffer.isBuffer(value) && // buffers are objects too\n      value._bsontype !== 'Binary' // raw binary value from the db\n      && utils.isObject(value) // might have deselected _id in population query\n    ) {\n      return true;\n    }\n\n    return init;\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nSchemaType.prototype._castRef = function _castRef(value, doc, init) {\n  if (value == null) {\n    return value;\n  }\n\n  if (value.$__ != null) {\n    value.$__.wasPopulated = value.$__.wasPopulated || true;\n    return value;\n  }\n\n  // setting a populated path\n  if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n    if (init) {\n      return value;\n    }\n    throw new CastError(this.instance, value, this.path, null, this);\n  }\n\n  // Handle the case where user directly sets a populated\n  // path to a plain object; cast to the Model used in\n  // the population query.\n  const path = doc.$__fullPath(this.path, true);\n  const owner = doc.ownerDocument();\n  const pop = owner.$populated(path, true);\n\n  let ret = value;\n  if (!doc.$__.populated ||\n    !doc.$__.populated[path] ||\n    !doc.$__.populated[path].options ||\n    !doc.$__.populated[path].options.options ||\n    !doc.$__.populated[path].options.options.lean) {\n    ret = new pop.options[populateModelSymbol](value);\n    ret.$__.wasPopulated = true;\n  }\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val, context) {\n  return this.castForQuery(null, val, context);\n}\n\n/*!\n * ignore\n */\n\nfunction handleArray(val, context) {\n  const _this = this;\n  if (!Array.isArray(val)) {\n    return [this.castForQuery(null, val, context)];\n  }\n  return val.map(function(m) {\n    return _this.castForQuery(null, m, context);\n  });\n}\n\n/**\n * Just like handleArray, except also allows `[]` because surprisingly\n * `$in: [1, []]` works fine\n * @api private\n */\n\nfunction handle$in(val, context) {\n  const _this = this;\n  if (!Array.isArray(val)) {\n    return [this.castForQuery(null, val, context)];\n  }\n  return val.map(function(m) {\n    if (Array.isArray(m) && m.length === 0) {\n      return m;\n    }\n    return _this.castForQuery(null, m, context);\n  });\n}\n\n/*!\n * ignore\n */\n\nSchemaType.prototype.$conditionalHandlers = {\n  $all: handleArray,\n  $eq: handleSingle,\n  $in: handle$in,\n  $ne: handleSingle,\n  $nin: handle$in,\n  $exists: $exists,\n  $type: $type\n};\n\n/**\n * Cast the given value with the given optional query operator.\n *\n * @param {String} [$conditional] query operator, like `$eq` or `$in`\n * @param {Any} val\n * @param {Query} context\n * @return {Any}\n * @api private\n */\n\nSchemaType.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val, context);\n  }\n\n  return this.applySetters(val, context);\n};\n\n/**\n * Set & Get the `checkRequired` function\n * Override the function the required validator uses to check whether a value\n * passes the `required` check. Override this on the individual SchemaType.\n *\n * #### Example:\n *\n *     // Use this to allow empty strings to pass the `required` validator\n *     mongoose.Schema.Types.String.checkRequired(v => typeof v === 'string');\n *\n * @param {Function} [fn] If set, will overwrite the current set function\n * @return {Function} The input `fn` or the already set function\n * @static\n * @memberOf SchemaType\n * @function checkRequired\n * @api public\n */\n\nSchemaType.checkRequired = function(fn) {\n  if (arguments.length !== 0) {\n    this._checkRequired = fn;\n  }\n\n  return this._checkRequired;\n};\n\n/**\n * Default check for if this path satisfies the `required` validator.\n *\n * @param {Any} val\n * @return {Boolean} `true` when the value is not `null`, `false` otherwise\n * @api private\n */\n\nSchemaType.prototype.checkRequired = function(val) {\n  return val != null;\n};\n\n/**\n * Clone the current SchemaType\n *\n * @return {SchemaType} The cloned SchemaType instance\n * @api private\n */\n\nSchemaType.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.path, options, this.instance);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) schematype.requiredValidator = this.requiredValidator;\n  if (this.defaultValue !== undefined) schematype.defaultValue = this.defaultValue;\n  if (this.$immutable !== undefined && this.options.immutable === undefined) {\n    schematype.$immutable = this.$immutable;\n\n    handleImmutable(schematype);\n  }\n  if (this._index !== undefined) schematype._index = this._index;\n  if (this.selected !== undefined) schematype.selected = this.selected;\n  if (this.isRequired !== undefined) schematype.isRequired = this.isRequired;\n  if (this.originalRequiredValue !== undefined) schematype.originalRequiredValue = this.originalRequiredValue;\n  schematype.getters = this.getters.slice();\n  schematype.setters = this.setters.slice();\n  return schematype;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = SchemaType;\n\nexports.CastError = CastError;\n\nexports.ValidatorError = ValidatorError;\n", "'use strict';\n\nconst opts = require('./propertyOptions');\n\nclass VirtualOptions {\n  constructor(obj) {\n    Object.assign(this, obj);\n\n    if (obj != null && obj.options != null) {\n      this.options = Object.assign({}, obj.options);\n    }\n  }\n}\n\n/**\n * Marks this virtual as a populate virtual, and specifies the model to\n * use for populate.\n *\n * @api public\n * @property ref\n * @memberOf VirtualOptions\n * @type {String|Model|Function}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'ref', opts);\n\n/**\n * Marks this virtual as a populate virtual, and specifies the path that\n * contains the name of the model to populate\n *\n * @api public\n * @property refPath\n * @memberOf VirtualOptions\n * @type {String|Function}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'refPath', opts);\n\n/**\n * The name of the property in the local model to match to `foreignField`\n * in the foreign model.\n *\n * @api public\n * @property localField\n * @memberOf VirtualOptions\n * @type {String|Function}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'localField', opts);\n\n/**\n * The name of the property in the foreign model to match to `localField`\n * in the local model.\n *\n * @api public\n * @property foreignField\n * @memberOf VirtualOptions\n * @type {String|Function}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'foreignField', opts);\n\n/**\n * Whether to populate this virtual as a single document (true) or an\n * array of documents (false).\n *\n * @api public\n * @property justOne\n * @memberOf VirtualOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'justOne', opts);\n\n/**\n * If true, populate just the number of documents where `localField`\n * matches `foreignField`, as opposed to the documents themselves.\n *\n * If `count` is set, it overrides `justOne`.\n *\n * @api public\n * @property count\n * @memberOf VirtualOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'count', opts);\n\n/**\n * Add an additional filter to populate, in addition to `localField`\n * matches `foreignField`.\n *\n * @api public\n * @property match\n * @memberOf VirtualOptions\n * @type {Object|Function}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'match', opts);\n\n/**\n * Additional options to pass to the query used to `populate()`:\n *\n * - `sort`\n * - `skip`\n * - `limit`\n *\n * @api public\n * @property options\n * @memberOf VirtualOptions\n * @type {Object}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'options', opts);\n\n/**\n * If true, add a `skip` to the query used to `populate()`.\n *\n * @api public\n * @property skip\n * @memberOf VirtualOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'skip', opts);\n\n/**\n * If true, add a `limit` to the query used to `populate()`.\n *\n * @api public\n * @property limit\n * @memberOf VirtualOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'limit', opts);\n\n/**\n * The `limit` option for `populate()` has [some unfortunate edge cases](https://mongoosejs.com/docs/populate.html#query-conditions)\n * when working with multiple documents, like `.find().populate()`. The\n * `perDocumentLimit` option makes `populate()` execute a separate query\n * for each document returned from `find()` to ensure each document\n * gets up to `perDocumentLimit` populated docs if possible.\n *\n * @api public\n * @property perDocumentLimit\n * @memberOf VirtualOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(VirtualOptions.prototype, 'perDocumentLimit', opts);\n\nmodule.exports = VirtualOptions;\n", "'use strict';\n\nconst utils = require('./utils');\n\n/**\n * VirtualType constructor\n *\n * This is what mongoose uses to define virtual attributes via `Schema.prototype.virtual`.\n *\n * #### Example:\n *\n *     const fullname = schema.virtual('fullname');\n *     fullname instanceof mongoose.VirtualType // true\n *\n * @param {Object} options\n * @param {String|Function} [options.ref] if `ref` is not nullish, this becomes a [populated virtual](https://mongoosejs.com/docs/populate.html#populate-virtuals)\n * @param {String|Function} [options.localField] the local field to populate on if this is a populated virtual.\n * @param {String|Function} [options.foreignField] the foreign field to populate on if this is a populated virtual.\n * @param {Boolean} [options.justOne=false] by default, a populated virtual is an array. If you set `justOne`, the populated virtual will be a single doc or `null`.\n * @param {Boolean} [options.getters=false] if you set this to `true`, Mongoose will call any custom getters you defined on this virtual\n * @param {Boolean} [options.count=false] if you set this to `true`, `populate()` will set this virtual to the number of populated documents, as opposed to the documents themselves, using [`Query#countDocuments()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.countDocuments())\n * @param {Object|Function} [options.match=null] add an extra match condition to `populate()`\n * @param {Number} [options.limit=null] add a default `limit` to the `populate()` query\n * @param {Number} [options.skip=null] add a default `skip` to the `populate()` query\n * @param {Number} [options.perDocumentLimit=null] For legacy reasons, `limit` with `populate()` may give incorrect results because it only executes a single query for every document being populated. If you set `perDocumentLimit`, Mongoose will ensure correct `limit` per document by executing a separate query for each document to `populate()`. For example, `.find().populate({ path: 'test', perDocumentLimit: 2 })` will execute 2 additional queries if `.find()` returns 2 documents.\n * @param {Object} [options.options=null] Additional options like `limit` and `lean`.\n * @param {String} name\n * @api public\n */\n\nfunction VirtualType(options, name) {\n  this.path = name;\n  this.getters = [];\n  this.setters = [];\n  this.options = Object.assign({}, options);\n}\n\n/**\n * If no getters/setters, add a default\n *\n * @api private\n */\n\nVirtualType.prototype._applyDefaultGetters = function() {\n  if (this.getters.length > 0 || this.setters.length > 0) {\n    return;\n  }\n\n  const path = this.path;\n  const internalProperty = '$' + path;\n  this.getters.push(function() {\n    return this.$locals[internalProperty];\n  });\n  this.setters.push(function(v) {\n    this.$locals[internalProperty] = v;\n  });\n};\n\n/*!\n * ignore\n */\n\nVirtualType.prototype.clone = function() {\n  const clone = new VirtualType(this.options, this.path);\n  clone.getters = [].concat(this.getters);\n  clone.setters = [].concat(this.setters);\n  return clone;\n};\n\n/**\n * Adds a custom getter to this virtual.\n *\n * Mongoose calls the getter function with the below 3 parameters.\n *\n * - `value`: the value returned by the previous getter. If there is only one getter, `value` will be `undefined`.\n * - `virtual`: the virtual object you called `.get()` on.\n * - `doc`: the document this virtual is attached to. Equivalent to `this`.\n *\n * #### Example:\n *\n *     const virtual = schema.virtual('fullname');\n *     virtual.get(function(value, virtual, doc) {\n *       return this.name.first + ' ' + this.name.last;\n *     });\n *\n * @param {Function} fn\n * @return {VirtualType} this\n * @api public\n */\n\nVirtualType.prototype.get = function(fn) {\n  this.getters.push(fn);\n  return this;\n};\n\n/**\n * Adds a custom setter to this virtual.\n *\n * Mongoose calls the setter function with the below 3 parameters.\n *\n * - `value`: the value being set.\n * - `virtual`: the virtual object you're calling `.set()` on.\n * - `doc`: the document this virtual is attached to. Equivalent to `this`.\n *\n * #### Example:\n *\n *     const virtual = schema.virtual('fullname');\n *     virtual.set(function(value, virtual, doc) {\n *       const parts = value.split(' ');\n *       this.name.first = parts[0];\n *       this.name.last = parts[1];\n *     });\n *\n *     const Model = mongoose.model('Test', schema);\n *     const doc = new Model();\n *     // Calls the setter with `value = 'Jean-Luc Picard'`\n *     doc.fullname = 'Jean-Luc Picard';\n *     doc.name.first; // 'Jean-Luc'\n *     doc.name.last; // 'Picard'\n *\n * @param {Function} fn\n * @return {VirtualType} this\n * @api public\n */\n\nVirtualType.prototype.set = function(fn) {\n  this.setters.push(fn);\n  return this;\n};\n\n/**\n * Applies getters to `value`.\n *\n * @param {Object} value\n * @param {Document} doc The document this virtual is attached to\n * @return {Any} the value after applying all getters\n * @api public\n */\n\nVirtualType.prototype.applyGetters = function(value, doc) {\n  if (utils.hasUserDefinedProperty(this.options, ['ref', 'refPath']) &&\n      doc.$$populatedVirtuals &&\n      doc.$$populatedVirtuals.hasOwnProperty(this.path)) {\n    value = doc.$$populatedVirtuals[this.path];\n  }\n\n  let v = value;\n  for (const getter of this.getters) {\n    v = getter.call(doc, v, this, doc);\n  }\n  return v;\n};\n\n/**\n * Applies setters to `value`.\n *\n * @param {Object} value\n * @param {Document} doc\n * @return {Any} the value after applying all setters\n * @api public\n */\n\nVirtualType.prototype.applySetters = function(value, doc) {\n  let v = value;\n  for (const setter of this.setters) {\n    v = setter.call(doc, v, this, doc);\n  }\n  return v;\n};\n\n/*!\n * exports\n */\n\nmodule.exports = VirtualType;\n", "'use strict';\n\nmodule.exports = function addAutoId(schema) {\n  const _obj = { _id: { auto: true } };\n  _obj._id[schema.options.typeKey] = 'ObjectId';\n  schema.add(_obj);\n};\n", "'use strict';\n\nmodule.exports = function decorateDiscriminatorIndexOptions(schema, indexOptions) {\n  // If the model is a discriminator and has an index, add a\n  // partialFilterExpression by default so the index will only apply\n  // to that discriminator.\n  const discriminatorName = schema.discriminatorMapping && schema.discriminatorMapping.value;\n  if (discriminatorName && !('sparse' in indexOptions)) {\n    const discriminatorKey = schema.options.discriminatorKey;\n    indexOptions.partialFilterExpression = indexOptions.partialFilterExpression || {};\n    indexOptions.partialFilterExpression[discriminatorKey] = discriminatorName;\n  }\n  return indexOptions;\n};\n", "'use strict';\n\nconst get = require('../get');\nconst helperIsObject = require('../isObject');\nconst decorateDiscriminatorIndexOptions = require('../indexes/decorateDiscriminatorIndexOptions');\n\n/**\n * Gather all indexes defined in the schema, including single nested,\n * document arrays, and embedded discriminators.\n * @param {Schema} schema\n * @api private\n */\n\nmodule.exports = function getIndexes(schema) {\n  let indexes = [];\n  const schemaStack = new WeakMap();\n  const indexTypes = schema.constructor.indexTypes;\n  const indexByName = new Map();\n\n  collectIndexes(schema);\n  return indexes;\n\n  function collectIndexes(schema, prefix, baseSchema) {\n    // Ignore infinitely nested schemas, if we've already seen this schema\n    // along this path there must be a cycle\n    if (schemaStack.has(schema)) {\n      return;\n    }\n    schemaStack.set(schema, true);\n\n    prefix = prefix || '';\n    const keys = Object.keys(schema.paths);\n\n    for (const key of keys) {\n      const path = schema.paths[key];\n      if (baseSchema != null && baseSchema.paths[key]) {\n        // If looking at an embedded discriminator schema, don't look at paths\n        // that the\n        continue;\n      }\n\n      if (path.$isMongooseDocumentArray || path.$isSingleNested) {\n        if (get(path, 'options.excludeIndexes') !== true &&\n            get(path, 'schemaOptions.excludeIndexes') !== true &&\n            get(path, 'schema.options.excludeIndexes') !== true) {\n          collectIndexes(path.schema, prefix + key + '.');\n        }\n\n        if (path.schema.discriminators != null) {\n          const discriminators = path.schema.discriminators;\n          const discriminatorKeys = Object.keys(discriminators);\n          for (const discriminatorKey of discriminatorKeys) {\n            collectIndexes(discriminators[discriminatorKey],\n              prefix + key + '.', path.schema);\n          }\n        }\n\n        // Retained to minimize risk of backwards breaking changes due to\n        // gh-6113\n        if (path.$isMongooseDocumentArray) {\n          continue;\n        }\n      }\n\n      const index = path._index || (path.caster && path.caster._index);\n\n      if (index !== false && index !== null && index !== undefined) {\n        const field = {};\n        const isObject = helperIsObject(index);\n        const options = isObject ? index : {};\n        const type = typeof index === 'string' ? index :\n          isObject ? index.type :\n            false;\n\n        if (type && indexTypes.indexOf(type) !== -1) {\n          field[prefix + key] = type;\n        } else if (options.text) {\n          field[prefix + key] = 'text';\n          delete options.text;\n        } else {\n          const isDescendingIndex = Number(index) === -1;\n          field[prefix + key] = isDescendingIndex ? -1 : 1;\n        }\n\n        delete options.type;\n        if (!('background' in options)) {\n          options.background = true;\n        }\n        if (schema.options.autoIndex != null) {\n          options._autoIndex = schema.options.autoIndex;\n        }\n\n        const indexName = options && options.name;\n\n        if (typeof indexName === 'string') {\n          if (indexByName.has(indexName)) {\n            Object.assign(indexByName.get(indexName), field);\n          } else {\n            indexes.push([field, options]);\n            indexByName.set(indexName, field);\n          }\n        } else {\n          indexes.push([field, options]);\n          indexByName.set(indexName, field);\n        }\n      }\n    }\n\n    schemaStack.delete(schema);\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        const options = index[1];\n        if (!('background' in options)) {\n          options.background = true;\n        }\n        decorateDiscriminatorIndexOptions(schema, options);\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n  }\n\n  /**\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   * @param {Schema} schema\n   * @param {String} prefix\n   * @api private\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    const subindexes = schema._indexes;\n    const len = subindexes.length;\n    for (let i = 0; i < len; ++i) {\n      const indexObj = subindexes[i][0];\n      const indexOptions = subindexes[i][1];\n      const keys = Object.keys(indexObj);\n      const klen = keys.length;\n      const newindex = {};\n\n      // use forward iteration, order matters\n      for (let j = 0; j < klen; ++j) {\n        const key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      const newIndexOptions = Object.assign({}, indexOptions);\n      if (indexOptions != null && indexOptions.partialFilterExpression != null) {\n        newIndexOptions.partialFilterExpression = {};\n        const partialFilterExpression = indexOptions.partialFilterExpression;\n        for (const key of Object.keys(partialFilterExpression)) {\n          newIndexOptions.partialFilterExpression[prefix + key] =\n            partialFilterExpression[key];\n        }\n      }\n\n      indexes.push([newindex, newIndexOptions]);\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = function handleReadPreferenceAliases(pref) {\n  switch (pref) {\n    case 'p':\n      pref = 'primary';\n      break;\n    case 'pp':\n      pref = 'primaryPreferred';\n      break;\n    case 's':\n      pref = 'secondary';\n      break;\n    case 'sp':\n      pref = 'secondaryPreferred';\n      break;\n    case 'n':\n      pref = 'nearest';\n      break;\n  }\n\n  return pref;\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function addIdGetter(schema) {\n  // ensure the documents receive an id getter unless disabled\n  const autoIdGetter = !schema.paths['id'] &&\n    schema.paths['_id'] &&\n    schema.options.id;\n  if (!autoIdGetter) {\n    return schema;\n  }\n  if (schema.aliases && schema.aliases.id) {\n    return schema;\n  }\n  schema.virtual('id').get(idGetter);\n  schema.virtual('id').set(idSetter);\n\n  return schema;\n};\n\n/**\n * Returns this documents _id cast to a string.\n * @api private\n */\n\nfunction idGetter() {\n  if (this._id != null) {\n    return String(this._id);\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {String} v the id to set\n * @api private\n */\n\nfunction idSetter(v) {\n  this._id = v;\n  return v;\n}\n", "'use strict';\n\n/**\n * For consistency's sake, we replace positional operator `$` and array filters\n * `$[]` and `$[foo]` with `0` when looking up schema paths.\n */\n\nmodule.exports = function cleanPositionalOperators(path) {\n  return path.\n    replace(/\\.\\$(\\[[^\\]]*\\])?(?=\\.)/g, '.0').\n    replace(/\\.\\$(\\[[^\\]]*\\])?$/g, '.0');\n};\n", "'use strict';\n\nmodule.exports = handleTimestampOption;\n\n/*!\n * ignore\n */\n\nfunction handleTimestampOption(arg, prop) {\n  if (arg == null) {\n    return null;\n  }\n\n  if (typeof arg === 'boolean') {\n    return prop;\n  }\n  if (typeof arg[prop] === 'boolean') {\n    return arg[prop] ? prop : null;\n  }\n  if (!(prop in arg)) {\n    return prop;\n  }\n  return arg[prop];\n}\n", "'use strict';\n\nconst cleanPositionalOperators = require('../schema/cleanPositionalOperators');\nconst handleTimestampOption = require('../schema/handleTimestampOption');\n\nmodule.exports = applyTimestampsToChildren;\n\n/*!\n * ignore\n */\n\nfunction applyTimestampsToChildren(now, update, schema) {\n  if (update == null) {\n    return;\n  }\n\n  const keys = Object.keys(update);\n  const hasDollarKey = keys.some(key => key[0] === '$');\n\n  if (hasDollarKey) {\n    if (update.$push) {\n      _applyTimestampToUpdateOperator(update.$push);\n    }\n    if (update.$addToSet) {\n      _applyTimestampToUpdateOperator(update.$addToSet);\n    }\n    if (update.$set != null) {\n      const keys = Object.keys(update.$set);\n      for (const key of keys) {\n        applyTimestampsToUpdateKey(schema, key, update.$set, now);\n      }\n    }\n    if (update.$setOnInsert != null) {\n      const keys = Object.keys(update.$setOnInsert);\n      for (const key of keys) {\n        applyTimestampsToUpdateKey(schema, key, update.$setOnInsert, now);\n      }\n    }\n  }\n\n  const updateKeys = Object.keys(update).filter(key => key[0] !== '$');\n  for (const key of updateKeys) {\n    applyTimestampsToUpdateKey(schema, key, update, now);\n  }\n\n  function _applyTimestampToUpdateOperator(op) {\n    for (const key of Object.keys(op)) {\n      const $path = schema.path(key.replace(/\\.\\$\\./i, '.').replace(/.\\$$/, ''));\n      if (op[key] &&\n          $path &&\n          $path.$isMongooseDocumentArray &&\n          $path.schema.options.timestamps) {\n        const timestamps = $path.schema.options.timestamps;\n        const createdAt = handleTimestampOption(timestamps, 'createdAt');\n        const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n        if (op[key].$each) {\n          op[key].$each.forEach(function(subdoc) {\n            if (updatedAt != null) {\n              subdoc[updatedAt] = now;\n            }\n            if (createdAt != null) {\n              subdoc[createdAt] = now;\n            }\n\n            applyTimestampsToChildren(now, subdoc, $path.schema);\n          });\n        } else {\n          if (updatedAt != null) {\n            op[key][updatedAt] = now;\n          }\n          if (createdAt != null) {\n            op[key][createdAt] = now;\n          }\n\n          applyTimestampsToChildren(now, op[key], $path.schema);\n        }\n      }\n    }\n  }\n}\n\nfunction applyTimestampsToDocumentArray(arr, schematype, now) {\n  const timestamps = schematype.schema.options.timestamps;\n\n  const len = arr.length;\n\n  if (!timestamps) {\n    for (let i = 0; i < len; ++i) {\n      applyTimestampsToChildren(now, arr[i], schematype.schema);\n    }\n    return;\n  }\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  for (let i = 0; i < len; ++i) {\n    if (updatedAt != null) {\n      arr[i][updatedAt] = now;\n    }\n    if (createdAt != null) {\n      arr[i][createdAt] = now;\n    }\n\n    applyTimestampsToChildren(now, arr[i], schematype.schema);\n  }\n}\n\nfunction applyTimestampsToSingleNested(subdoc, schematype, now) {\n  const timestamps = schematype.schema.options.timestamps;\n  if (!timestamps) {\n    applyTimestampsToChildren(now, subdoc, schematype.schema);\n    return;\n  }\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  if (updatedAt != null) {\n    subdoc[updatedAt] = now;\n  }\n  if (createdAt != null) {\n    subdoc[createdAt] = now;\n  }\n\n  applyTimestampsToChildren(now, subdoc, schematype.schema);\n}\n\nfunction applyTimestampsToUpdateKey(schema, key, update, now) {\n  // Replace positional operator `$` and array filters `$[]` and `$[.*]`\n  const keyToSearch = cleanPositionalOperators(key);\n  const path = schema.path(keyToSearch);\n  if (!path) {\n    return;\n  }\n\n  const parentSchemaTypes = [];\n  const pieces = keyToSearch.split('.');\n  for (let i = pieces.length - 1; i > 0; --i) {\n    const s = schema.path(pieces.slice(0, i).join('.'));\n    if (s != null &&\n      (s.$isMongooseDocumentArray || s.$isSingleNested)) {\n      parentSchemaTypes.push({ parentPath: key.split('.').slice(0, i).join('.'), parentSchemaType: s });\n    }\n  }\n\n  if (Array.isArray(update[key]) && path.$isMongooseDocumentArray) {\n    applyTimestampsToDocumentArray(update[key], path, now);\n  } else if (update[key] && path.$isSingleNested) {\n    applyTimestampsToSingleNested(update[key], path, now);\n  } else if (parentSchemaTypes.length > 0) {\n    for (const item of parentSchemaTypes) {\n      const parentPath = item.parentPath;\n      const parentSchemaType = item.parentSchemaType;\n      const timestamps = parentSchemaType.schema.options.timestamps;\n      const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n\n      if (!timestamps || updatedAt == null) {\n        continue;\n      }\n\n      if (parentSchemaType.$isSingleNested) {\n        // Single nested is easy\n        update[parentPath + '.' + updatedAt] = now;\n      } else if (parentSchemaType.$isMongooseDocumentArray) {\n        let childPath = key.substring(parentPath.length + 1);\n\n        if (/^\\d+$/.test(childPath)) {\n          update[parentPath + '.' + childPath][updatedAt] = now;\n          continue;\n        }\n\n        const firstDot = childPath.indexOf('.');\n        childPath = firstDot !== -1 ? childPath.substring(0, firstDot) : childPath;\n\n        update[parentPath + '.' + childPath + '.' + updatedAt] = now;\n      }\n    }\n  } else if (path.schema != null && path.schema != schema && update[key]) {\n    const timestamps = path.schema.options.timestamps;\n    const createdAt = handleTimestampOption(timestamps, 'createdAt');\n    const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n\n    if (!timestamps) {\n      return;\n    }\n\n    if (updatedAt != null) {\n      update[key][updatedAt] = now;\n    }\n    if (createdAt != null) {\n      update[key][createdAt] = now;\n    }\n  }\n}\n", "'use strict';\n\n/*!\n * ignore\n */\n\nconst get = require('../get');\n\nmodule.exports = applyTimestampsToUpdate;\n\n/*!\n * ignore\n */\n\nfunction applyTimestampsToUpdate(now, createdAt, updatedAt, currentUpdate, options) {\n  const updates = currentUpdate;\n  let _updates = updates;\n  const overwrite = get(options, 'overwrite', false);\n  const timestamps = get(options, 'timestamps', true);\n\n  // Support skipping timestamps at the query level, see gh-6980\n  if (!timestamps || updates == null) {\n    return currentUpdate;\n  }\n\n  const skipCreatedAt = timestamps != null && timestamps.createdAt === false;\n  const skipUpdatedAt = timestamps != null && timestamps.updatedAt === false;\n\n  if (overwrite) {\n    if (currentUpdate && currentUpdate.$set) {\n      currentUpdate = currentUpdate.$set;\n      updates.$set = {};\n      _updates = updates.$set;\n    }\n    if (!skipUpdatedAt && updatedAt && !currentUpdate[updatedAt]) {\n      _updates[updatedAt] = now;\n    }\n    if (!skipCreatedAt && createdAt && !currentUpdate[createdAt]) {\n      _updates[createdAt] = now;\n    }\n    return updates;\n  }\n  currentUpdate = currentUpdate || {};\n\n  if (Array.isArray(updates)) {\n    // Update with aggregation pipeline\n    if (updatedAt == null) {\n      return updates;\n    }\n    updates.push({ $set: { [updatedAt]: now } });\n    return updates;\n  }\n  updates.$set = updates.$set || {};\n  if (!skipUpdatedAt && updatedAt &&\n      (!currentUpdate.$currentDate || !currentUpdate.$currentDate[updatedAt])) {\n    let timestampSet = false;\n    if (updatedAt.indexOf('.') !== -1) {\n      const pieces = updatedAt.split('.');\n      for (let i = 1; i < pieces.length; ++i) {\n        const remnant = pieces.slice(-i).join('.');\n        const start = pieces.slice(0, -i).join('.');\n        if (currentUpdate[start] != null) {\n          currentUpdate[start][remnant] = now;\n          timestampSet = true;\n          break;\n        } else if (currentUpdate.$set && currentUpdate.$set[start]) {\n          currentUpdate.$set[start][remnant] = now;\n          timestampSet = true;\n          break;\n        }\n      }\n    }\n\n    if (!timestampSet) {\n      updates.$set[updatedAt] = now;\n    }\n\n    if (updates.hasOwnProperty(updatedAt)) {\n      delete updates[updatedAt];\n    }\n  }\n\n  if (!skipCreatedAt && createdAt) {\n    if (currentUpdate[createdAt]) {\n      delete currentUpdate[createdAt];\n    }\n    if (currentUpdate.$set && currentUpdate.$set[createdAt]) {\n      delete currentUpdate.$set[createdAt];\n    }\n    let timestampSet = false;\n    if (createdAt.indexOf('.') !== -1) {\n      const pieces = createdAt.split('.');\n      for (let i = 1; i < pieces.length; ++i) {\n        const remnant = pieces.slice(-i).join('.');\n        const start = pieces.slice(0, -i).join('.');\n        if (currentUpdate[start] != null) {\n          currentUpdate[start][remnant] = now;\n          timestampSet = true;\n          break;\n        } else if (currentUpdate.$set && currentUpdate.$set[start]) {\n          currentUpdate.$set[start][remnant] = now;\n          timestampSet = true;\n          break;\n        }\n      }\n    }\n\n    if (!timestampSet) {\n      updates.$setOnInsert = updates.$setOnInsert || {};\n      updates.$setOnInsert[createdAt] = now;\n    }\n  }\n\n  if (Object.keys(updates.$set).length === 0) {\n    delete updates.$set;\n  }\n  return updates;\n}\n", "'use strict';\n\nmodule.exports = function setDocumentTimestamps(doc, timestampOption, currentTime, createdAt, updatedAt) {\n  const skipUpdatedAt = timestampOption != null && timestampOption.updatedAt === false;\n  const skipCreatedAt = timestampOption != null && timestampOption.createdAt === false;\n\n  const defaultTimestamp = currentTime != null ?\n    currentTime() :\n    doc.ownerDocument().constructor.base.now();\n\n  if (!skipCreatedAt &&\n      (doc.isNew || doc.$isSubdocument) &&\n      createdAt &&\n      !doc.$__getValue(createdAt) &&\n      doc.$__isSelected(createdAt)) {\n    doc.$set(createdAt, defaultTimestamp, undefined, { overwriteImmutable: true });\n  }\n\n  if (!skipUpdatedAt && updatedAt && (doc.isNew || doc.$isModified())) {\n    let ts = defaultTimestamp;\n    if (doc.isNew && createdAt != null) {\n      ts = doc.$__getValue(createdAt);\n    }\n    doc.$set(updatedAt, ts);\n  }\n};\n", "'use strict';\n\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst get = require('../get');\nconst handleTimestampOption = require('../schema/handleTimestampOption');\nconst setDocumentTimestamps = require('./setDocumentTimestamps');\nconst symbols = require('../../schema/symbols');\n\nconst replaceOps = new Set([\n  'replaceOne',\n  'findOneAndReplace'\n]);\n\nmodule.exports = function setupTimestamps(schema, timestamps) {\n  const childHasTimestamp = schema.childSchemas.find(withTimestamp);\n  function withTimestamp(s) {\n    const ts = s.schema.options.timestamps;\n    return !!ts;\n  }\n  if (!timestamps && !childHasTimestamp) {\n    return;\n  }\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  const currentTime = timestamps != null && timestamps.hasOwnProperty('currentTime') ?\n    timestamps.currentTime :\n    null;\n  const schemaAdditions = {};\n\n  schema.$timestamps = { createdAt: createdAt, updatedAt: updatedAt };\n\n  if (createdAt && !schema.paths[createdAt]) {\n    const baseImmutableCreatedAt = schema.base != null ? schema.base.get('timestamps.createdAt.immutable') : null;\n    const immutable = baseImmutableCreatedAt != null ? baseImmutableCreatedAt : true;\n    schemaAdditions[createdAt] = { [schema.options.typeKey || 'type']: Date, immutable };\n  }\n\n  if (updatedAt && !schema.paths[updatedAt]) {\n    schemaAdditions[updatedAt] = Date;\n  }\n\n  schema.add(schemaAdditions);\n\n  schema.pre('save', function timestampsPreSave(next) {\n    const timestampOption = get(this, '$__.saveOptions.timestamps');\n    if (timestampOption === false) {\n      return next();\n    }\n\n    setDocumentTimestamps(this, timestampOption, currentTime, createdAt, updatedAt);\n\n    next();\n  });\n\n  schema.methods.initializeTimestamps = function() {\n    const ts = currentTime != null ?\n      currentTime() : this.constructor.base.now();\n\n\n    if (createdAt && !this.get(createdAt)) {\n      this.$set(createdAt, ts);\n    }\n    if (updatedAt && !this.get(updatedAt)) {\n      this.$set(updatedAt, ts);\n    }\n    if (this.$isSubdocument) {\n      return this;\n    }\n\n    const subdocs = this.$getAllSubdocs();\n    for (const subdoc of subdocs) {\n      if (subdoc.initializeTimestamps) {\n        subdoc.initializeTimestamps();\n      }\n    }\n\n    return this;\n  };\n\n  _setTimestampsOnUpdate[symbols.builtInMiddleware] = true;\n\n  const opts = { query: true, model: false };\n  schema.pre('findOneAndReplace', opts, _setTimestampsOnUpdate);\n  schema.pre('findOneAndUpdate', opts, _setTimestampsOnUpdate);\n  schema.pre('replaceOne', opts, _setTimestampsOnUpdate);\n  schema.pre('update', opts, _setTimestampsOnUpdate);\n  schema.pre('updateOne', opts, _setTimestampsOnUpdate);\n  schema.pre('updateMany', opts, _setTimestampsOnUpdate);\n\n  function _setTimestampsOnUpdate(next) {\n    const now = currentTime != null ?\n      currentTime() :\n      this.model.base.now();\n    // Replacing with null update should still trigger timestamps\n    if (replaceOps.has(this.op) && this.getUpdate() == null) {\n      this.setUpdate({});\n    }\n    applyTimestampsToUpdate(\n      now,\n      createdAt,\n      updatedAt,\n      this.getUpdate(),\n      this._mongooseOptions,\n      this.schema\n    );\n    applyTimestampsToChildren(now, this.getUpdate(), this.model.schema);\n    next();\n  }\n};\n", "'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst util = require('util');\n\nmodule.exports = validateRef;\n\nfunction validateRef(ref, path) {\n  if (typeof ref === 'string') {\n    return;\n  }\n\n  if (typeof ref === 'function') {\n    return;\n  }\n\n  throw new MongooseError('Invalid ref at path \"' + path + '\". Got ' +\n    util.inspect(ref, { depth: 0 }));\n}\n", "'use strict';\n\nmodule.exports = Object.freeze([\n  // Read\n  'count',\n  'countDocuments',\n  'distinct',\n  'estimatedDocumentCount',\n  'find',\n  'findOne',\n  // Update\n  'findOneAndReplace',\n  'findOneAndUpdate',\n  'replaceOne',\n  'updateMany',\n  'updateOne',\n  // Delete\n  'deleteMany',\n  'deleteOne',\n  'findOneAndDelete',\n  'findOneAndRemove'\n]);\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = applyQueryMiddleware;\n\nconst validOps = require('./validOps');\n\n/*!\n * ignore\n */\n\napplyQueryMiddleware.middlewareFunctions = validOps.concat([\n  'validate'\n]);\n\n/**\n * Apply query middleware\n *\n * @param {Query} Query constructor\n * @param {Model} model\n * @api private\n */\n\nfunction applyQueryMiddleware(Query, model) {\n  const queryMiddleware = model.schema.s.hooks.filter(hook => {\n    const contexts = _getContexts(hook);\n    if (hook.name === 'validate') {\n      return !!contexts.query;\n    }\n    if (hook.name === 'deleteOne' || hook.name === 'updateOne') {\n      return !!contexts.query || Object.keys(contexts).length === 0;\n    }\n    if (hook.query != null || hook.document != null) {\n      return !!hook.query;\n    }\n    return true;\n  });\n\n  Query.prototype._queryMiddleware = queryMiddleware;\n}\n\nfunction _getContexts(hook) {\n  const ret = {};\n  if (hook.hasOwnProperty('query')) {\n    ret.query = hook.query;\n  }\n  if (hook.hasOwnProperty('document')) {\n    ret.document = hook.document;\n  }\n  return ret;\n}\n", "'use strict';\n\nconst symbols = require('../../schema/symbols');\nconst promiseOrCallback = require('../promiseOrCallback');\n\n/*!\n * ignore\n */\n\nmodule.exports = applyHooks;\n\n/*!\n * ignore\n */\n\napplyHooks.middlewareFunctions = [\n  'deleteOne',\n  'save',\n  'validate',\n  'remove',\n  'updateOne',\n  'init'\n];\n\n/*!\n * ignore\n */\n\nconst alreadyHookedFunctions = new Set(applyHooks.middlewareFunctions.flatMap(fn => ([fn, `$__${fn}`])));\n\n/**\n * Register hooks for this model\n *\n * @param {Model} model\n * @param {Schema} schema\n * @param {Object} options\n * @api private\n */\n\nfunction applyHooks(model, schema, options) {\n  options = options || {};\n\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1,\n    nullResultByDefault: true,\n    contextParameter: true\n  };\n  const objToDecorate = options.decorateDoc ? model : model.prototype;\n\n  model.$appliedHooks = true;\n  for (const key of Object.keys(schema.paths)) {\n    const type = schema.paths[key];\n    let childModel = null;\n    if (type.$isSingleNested) {\n      childModel = type.caster;\n    } else if (type.$isMongooseDocumentArray) {\n      childModel = type.Constructor;\n    } else {\n      continue;\n    }\n\n    if (childModel.$appliedHooks) {\n      continue;\n    }\n\n    applyHooks(childModel, type.schema, options);\n    if (childModel.discriminators != null) {\n      const keys = Object.keys(childModel.discriminators);\n      for (const key of keys) {\n        applyHooks(childModel.discriminators[key],\n          childModel.discriminators[key].schema, options);\n      }\n    }\n  }\n\n  // Built-in hooks rely on hooking internal functions in order to support\n  // promises and make it so that `doc.save.toString()` provides meaningful\n  // information.\n\n  const middleware = schema.s.hooks.\n    filter(hook => {\n      if (hook.name === 'updateOne' || hook.name === 'deleteOne') {\n        return !!hook['document'];\n      }\n      if (hook.name === 'remove' || hook.name === 'init') {\n        return hook['document'] == null || !!hook['document'];\n      }\n      if (hook.query != null || hook.document != null) {\n        return hook.document !== false;\n      }\n      return true;\n    }).\n    filter(hook => {\n      // If user has overwritten the method, don't apply built-in middleware\n      if (schema.methods[hook.name]) {\n        return !hook.fn[symbols.builtInMiddleware];\n      }\n\n      return true;\n    });\n\n  model._middleware = middleware;\n\n  objToDecorate.$__originalValidate = objToDecorate.$__originalValidate || objToDecorate.$__validate;\n\n  for (const method of ['save', 'validate', 'remove', 'deleteOne']) {\n    const toWrap = method === 'validate' ? '$__originalValidate' : `$__${method}`;\n    const wrapped = middleware.\n      createWrapper(method, objToDecorate[toWrap], null, kareemOptions);\n    objToDecorate[`$__${method}`] = wrapped;\n  }\n  objToDecorate.$__init = middleware.\n    createWrapperSync('init', objToDecorate.$__init, null, kareemOptions);\n\n  // Support hooks for custom methods\n  const customMethods = Object.keys(schema.methods);\n  const customMethodOptions = Object.assign({}, kareemOptions, {\n    // Only use `checkForPromise` for custom methods, because mongoose\n    // query thunks are not as consistent as I would like about returning\n    // a nullish value rather than the query. If a query thunk returns\n    // a query, `checkForPromise` causes infinite recursion\n    checkForPromise: true\n  });\n  for (const method of customMethods) {\n    if (alreadyHookedFunctions.has(method)) {\n      continue;\n    }\n    if (!middleware.hasHooks(method)) {\n      // Don't wrap if there are no hooks for the custom method to avoid\n      // surprises. Also, `createWrapper()` enforces consistent async,\n      // so wrapping a sync method would break it.\n      continue;\n    }\n    const originalMethod = objToDecorate[method];\n    objToDecorate[method] = function() {\n      const args = Array.prototype.slice.call(arguments);\n      const cb = args.slice(-1).pop();\n      const argsWithoutCallback = typeof cb === 'function' ?\n        args.slice(0, args.length - 1) : args;\n      return promiseOrCallback(cb, callback => {\n        return this[`$__${method}`].apply(this,\n          argsWithoutCallback.concat([callback]));\n      }, model.events);\n    };\n    objToDecorate[`$__${method}`] = middleware.\n      createWrapper(method, originalMethod, null, customMethodOptions);\n  }\n}\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst Binary = require('bson').Binary;\nconst utils = require('../utils');\n\n/**\n * Mongoose Buffer constructor.\n *\n * Values always have to be passed to the constructor to initialize.\n *\n * @param {Buffer} value\n * @param {String} encode\n * @param {Number} offset\n * @api private\n * @inherits Buffer https://nodejs.org/api/buffer.html\n * @see https://bit.ly/f6CnZU\n */\n\nfunction MongooseBuffer(value, encode, offset) {\n  let val = value;\n  if (value == null) {\n    val = 0;\n  }\n\n  let encoding;\n  let path;\n  let doc;\n\n  if (Array.isArray(encode)) {\n    // internal casting\n    path = encode[0];\n    doc = encode[1];\n  } else {\n    encoding = encode;\n  }\n\n  let buf;\n  if (typeof val === 'number' || val instanceof Number) {\n    buf = Buffer.alloc(val);\n  } else { // string, array or object { type: 'Buffer', data: [...] }\n    buf = Buffer.from(val, encoding, offset);\n  }\n  utils.decorate(buf, MongooseBuffer.mixin);\n  buf.isMongooseBuffer = true;\n\n  // make sure these internal props don't show up in Object.keys()\n  buf[MongooseBuffer.pathSymbol] = path;\n  buf[parentSymbol] = doc;\n\n  buf._subtype = 0;\n  return buf;\n}\n\nconst pathSymbol = Symbol.for('mongoose#Buffer#_path');\nconst parentSymbol = Symbol.for('mongoose#Buffer#_parent');\nMongooseBuffer.pathSymbol = pathSymbol;\n\n/*!\n * Inherit from Buffer.\n */\n\nMongooseBuffer.mixin = {\n\n  /**\n   * Default subtype for the Binary representing this Buffer\n   *\n   * @api private\n   * @property _subtype\n   * @memberOf MongooseBuffer.mixin\n   * @static\n   */\n\n  _subtype: undefined,\n\n  /**\n   * Marks this buffer as modified.\n   *\n   * @api private\n   * @method _markModified\n   * @memberOf MongooseBuffer.mixin\n   * @static\n   */\n\n  _markModified: function() {\n    const parent = this[parentSymbol];\n\n    if (parent) {\n      parent.markModified(this[MongooseBuffer.pathSymbol]);\n    }\n    return this;\n  },\n\n  /**\n   * Writes the buffer.\n   *\n   * @api public\n   * @method write\n   * @memberOf MongooseBuffer.mixin\n   * @static\n   */\n\n  write: function() {\n    const written = Buffer.prototype.write.apply(this, arguments);\n\n    if (written > 0) {\n      this._markModified();\n    }\n\n    return written;\n  },\n\n  /**\n   * Copies the buffer.\n   *\n   * #### Note:\n   *\n   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.\n   *\n   * @return {Number} The number of bytes copied.\n   * @param {Buffer} target\n   * @method copy\n   * @memberOf MongooseBuffer.mixin\n   * @static\n   */\n\n  copy: function(target) {\n    const ret = Buffer.prototype.copy.apply(this, arguments);\n\n    if (target && target.isMongooseBuffer) {\n      target._markModified();\n    }\n\n    return ret;\n  }\n};\n\n/*!\n * Compile other Buffer methods marking this buffer as modified.\n */\n\nutils.each(\n  [\n    // node < 0.5\n    'writeUInt8', 'writeUInt16', 'writeUInt32', 'writeInt8', 'writeInt16', 'writeInt32',\n    'writeFloat', 'writeDouble', 'fill',\n    'utf8Write', 'binaryWrite', 'asciiWrite', 'set',\n\n    // node >= 0.5\n    'writeUInt16LE', 'writeUInt16BE', 'writeUInt32LE', 'writeUInt32BE',\n    'writeInt16LE', 'writeInt16BE', 'writeInt32LE', 'writeInt32BE', 'writeFloatLE', 'writeFloatBE', 'writeDoubleLE', 'writeDoubleBE']\n  , function(method) {\n    if (!Buffer.prototype[method]) {\n      return;\n    }\n    MongooseBuffer.mixin[method] = function() {\n      const ret = Buffer.prototype[method].apply(this, arguments);\n      this._markModified();\n      return ret;\n    };\n  });\n\n/**\n * Converts this buffer to its Binary type representation.\n *\n * #### SubTypes:\n *\n *     const bson = require('bson')\n *     bson.BSON_BINARY_SUBTYPE_DEFAULT\n *     bson.BSON_BINARY_SUBTYPE_FUNCTION\n *     bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *     bson.BSON_BINARY_SUBTYPE_UUID\n *     bson.BSON_BINARY_SUBTYPE_MD5\n *     bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *     doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);\n *\n * @see bsonspec https://bsonspec.org/#/specification\n * @param {Hex} [subtype]\n * @return {Binary}\n * @api public\n * @method toObject\n * @memberOf MongooseBuffer\n */\n\nMongooseBuffer.mixin.toObject = function(options) {\n  const subtype = typeof options === 'number'\n    ? options\n    : (this._subtype || 0);\n  return new Binary(Buffer.from(this), subtype);\n};\n\nMongooseBuffer.mixin.$toObject = MongooseBuffer.mixin.toObject;\n\n/**\n * Converts this buffer for storage in MongoDB, including subtype\n *\n * @return {Binary}\n * @api public\n * @method toBSON\n * @memberOf MongooseBuffer\n */\n\nMongooseBuffer.mixin.toBSON = function() {\n  return new Binary(this, this._subtype || 0);\n};\n\n/**\n * Determines if this buffer is equals to `other` buffer\n *\n * @param {Buffer} other\n * @return {Boolean}\n * @method equals\n * @memberOf MongooseBuffer\n */\n\nMongooseBuffer.mixin.equals = function(other) {\n  if (!Buffer.isBuffer(other)) {\n    return false;\n  }\n\n  if (this.length !== other.length) {\n    return false;\n  }\n\n  for (let i = 0; i < this.length; ++i) {\n    if (this[i] !== other[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sets the subtype option and marks the buffer modified.\n *\n * #### SubTypes:\n *\n *     const bson = require('bson')\n *     bson.BSON_BINARY_SUBTYPE_DEFAULT\n *     bson.BSON_BINARY_SUBTYPE_FUNCTION\n *     bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *     bson.BSON_BINARY_SUBTYPE_UUID\n *     bson.BSON_BINARY_SUBTYPE_MD5\n *     bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *     doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);\n *\n * @see bsonspec https://bsonspec.org/#/specification\n * @param {Hex} subtype\n * @api public\n * @method subtype\n * @memberOf MongooseBuffer\n */\n\nMongooseBuffer.mixin.subtype = function(subtype) {\n  if (typeof subtype !== 'number') {\n    throw new TypeError('Invalid subtype. Expected a number');\n  }\n\n  if (this._subtype !== subtype) {\n    this._markModified();\n  }\n\n  this._subtype = subtype;\n};\n\n/*!\n * Module exports.\n */\n\nMongooseBuffer.Binary = Binary;\n\nmodule.exports = MongooseBuffer;\n", "'use strict';\n\nconst Mixed = require('../schema/mixed');\nconst MongooseError = require('../error/mongooseError');\nconst clone = require('../helpers/clone');\nconst deepEqual = require('../utils').deepEqual;\nconst getConstructorName = require('../helpers/getConstructorName');\nconst handleSpreadDoc = require('../helpers/document/handleSpreadDoc');\nconst util = require('util');\nconst specialProperties = require('../helpers/specialProperties');\nconst isBsonType = require('../helpers/isBsonType');\n\nconst populateModelSymbol = require('../helpers/symbols').populateModelSymbol;\n\n/*!\n * ignore\n */\n\nclass MongooseMap extends Map {\n  constructor(v, path, doc, schemaType) {\n    if (getConstructorName(v) === 'Object') {\n      v = Object.keys(v).reduce((arr, key) => arr.concat([[key, v[key]]]), []);\n    }\n    super(v);\n    this.$__parent = doc != null && doc.$__ != null ? doc : null;\n    this.$__path = path;\n    this.$__schemaType = schemaType == null ? new Mixed(path) : schemaType;\n\n    this.$__runDeferred();\n  }\n\n  $init(key, value) {\n    checkValidKey(key);\n\n    super.set(key, value);\n\n    if (value != null && value.$isSingleNested) {\n      value.$basePath = this.$__path + '.' + key;\n    }\n  }\n\n  $__set(key, value) {\n    super.set(key, value);\n  }\n\n  /**\n   * Overwrites native Map's `get()` function to support Mongoose getters.\n   *\n   * @api public\n   * @method get\n   * @memberOf Map\n   */\n\n  get(key, options) {\n    if (isBsonType(key, 'ObjectId')) {\n      key = key.toString();\n    }\n\n    options = options || {};\n    if (options.getters === false) {\n      return super.get(key);\n    }\n    return this.$__schemaType.applyGetters(super.get(key), this.$__parent);\n  }\n\n  /**\n   * Overwrites native Map's `set()` function to support setters, `populate()`,\n   * and change tracking. Note that Mongoose maps _only_ support strings and\n   * ObjectIds as keys.\n   *\n   * #### Example:\n   *\n   *     doc.myMap.set('test', 42); // works\n   *     doc.myMap.set({ obj: 42 }, 42); // Throws \"Mongoose maps only support string keys\"\n   *\n   * @api public\n   * @method set\n   * @memberOf Map\n   */\n\n  set(key, value) {\n    if (isBsonType(key, 'ObjectId')) {\n      key = key.toString();\n    }\n\n    checkValidKey(key);\n    value = handleSpreadDoc(value);\n\n    // Weird, but because you can't assign to `this` before calling `super()`\n    // you can't get access to `$__schemaType` to cast in the initial call to\n    // `set()` from the `super()` constructor.\n\n    if (this.$__schemaType == null) {\n      this.$__deferred = this.$__deferred || [];\n      this.$__deferred.push({ key: key, value: value });\n      return;\n    }\n\n    let _fullPath;\n    const parent = this.$__parent;\n    const populated = parent != null && parent.$__ && parent.$__.populated ?\n      parent.$populated(fullPath.call(this), true) || parent.$populated(this.$__path, true) :\n      null;\n    const priorVal = this.get(key);\n\n    if (populated != null) {\n      if (this.$__schemaType.$isSingleNested) {\n        throw new MongooseError(\n          'Cannot manually populate single nested subdoc underneath Map ' +\n          `at path \"${this.$__path}\". Try using an array instead of a Map.`\n        );\n      }\n      if (Array.isArray(value) && this.$__schemaType.$isMongooseArray) {\n        value = value.map(v => {\n          if (v.$__ == null) {\n            v = new populated.options[populateModelSymbol](v);\n          }\n          // Doesn't support single nested \"in-place\" populate\n          v.$__.wasPopulated = { value: v._id };\n          return v;\n        });\n      } else {\n        if (value.$__ == null) {\n          value = new populated.options[populateModelSymbol](value);\n        }\n        // Doesn't support single nested \"in-place\" populate\n        value.$__.wasPopulated = { value: value._id };\n      }\n    } else {\n      try {\n        const options = this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested ?\n          { path: fullPath.call(this) } :\n          null;\n        value = this.$__schemaType.applySetters(\n          value,\n          this.$__parent,\n          false,\n          this.get(key),\n          options\n        );\n      } catch (error) {\n        if (this.$__parent != null && this.$__parent.$__ != null) {\n          this.$__parent.invalidate(fullPath.call(this), error);\n          return;\n        }\n        throw error;\n      }\n    }\n\n    super.set(key, value);\n\n    if (parent != null && parent.$__ != null && !deepEqual(value, priorVal)) {\n      parent.markModified(fullPath.call(this));\n    }\n\n    // Delay calculating full path unless absolutely necessary, because string\n    // concatenation is a bottleneck re: #13171\n    function fullPath() {\n      if (_fullPath) {\n        return _fullPath;\n      }\n      _fullPath = this.$__path + '.' + key;\n      return _fullPath;\n    }\n  }\n\n  /**\n   * Overwrites native Map's `clear()` function to support change tracking.\n   *\n   * @api public\n   * @method clear\n   * @memberOf Map\n   */\n\n  clear() {\n    super.clear();\n    const parent = this.$__parent;\n    if (parent != null) {\n      parent.markModified(this.$__path);\n    }\n  }\n\n  /**\n   * Overwrites native Map's `delete()` function to support change tracking.\n   *\n   * @api public\n   * @method delete\n   * @memberOf Map\n   */\n\n  delete(key) {\n    if (isBsonType(key, 'ObjectId')) {\n      key = key.toString();\n    }\n\n    this.set(key, undefined);\n    return super.delete(key);\n  }\n\n  /**\n   * Converts this map to a native JavaScript Map so the MongoDB driver can serialize it.\n   *\n   * @api public\n   * @method toBSON\n   * @memberOf Map\n   */\n\n  toBSON() {\n    return new Map(this);\n  }\n\n  toObject(options) {\n    if (options && options.flattenMaps) {\n      const ret = {};\n      const keys = this.keys();\n      for (const key of keys) {\n        ret[key] = clone(this.get(key), options);\n      }\n      return ret;\n    }\n\n    return new Map(this);\n  }\n\n  $toObject() {\n    return this.constructor.prototype.toObject.apply(this, arguments);\n  }\n\n  /**\n   * Converts this map to a native JavaScript Map for `JSON.stringify()`. Set\n   * the `flattenMaps` option to convert this map to a POJO instead.\n   *\n   * #### Example:\n   *\n   *     doc.myMap.toJSON() instanceof Map; // true\n   *     doc.myMap.toJSON({ flattenMaps: true }) instanceof Map; // false\n   *\n   * @api public\n   * @method toJSON\n   * @param {Object} [options]\n   * @param {Boolean} [options.flattenMaps=false] set to `true` to convert the map to a POJO rather than a native JavaScript map\n   * @memberOf Map\n   */\n\n  toJSON(options) {\n    if (typeof (options && options.flattenMaps) === 'boolean' ? options.flattenMaps : true) {\n      const ret = {};\n      const keys = this.keys();\n      for (const key of keys) {\n        ret[key] = clone(this.get(key), options);\n      }\n      return ret;\n    }\n\n    return new Map(this);\n  }\n\n  inspect() {\n    return new Map(this);\n  }\n\n  $__runDeferred() {\n    if (!this.$__deferred) {\n      return;\n    }\n\n    for (const keyValueObject of this.$__deferred) {\n      this.set(keyValueObject.key, keyValueObject.value);\n    }\n\n    this.$__deferred = null;\n  }\n}\n\nif (util.inspect.custom) {\n  Object.defineProperty(MongooseMap.prototype, util.inspect.custom, {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: MongooseMap.prototype.inspect\n  });\n}\n\nObject.defineProperty(MongooseMap.prototype, '$__set', {\n  enumerable: false,\n  writable: true,\n  configurable: false\n});\n\nObject.defineProperty(MongooseMap.prototype, '$__parent', {\n  enumerable: false,\n  writable: true,\n  configurable: false\n});\n\nObject.defineProperty(MongooseMap.prototype, '$__path', {\n  enumerable: false,\n  writable: true,\n  configurable: false\n});\n\nObject.defineProperty(MongooseMap.prototype, '$__schemaType', {\n  enumerable: false,\n  writable: true,\n  configurable: false\n});\n\n/**\n * Set to `true` for all Mongoose map instances\n *\n * @api public\n * @property $isMongooseMap\n * @memberOf MongooseMap\n * @instance\n */\n\nObject.defineProperty(MongooseMap.prototype, '$isMongooseMap', {\n  enumerable: false,\n  writable: false,\n  configurable: false,\n  value: true\n});\n\nObject.defineProperty(MongooseMap.prototype, '$__deferredCalls', {\n  enumerable: false,\n  writable: false,\n  configurable: false,\n  value: true\n});\n\n/**\n * Since maps are stored as objects under the hood, keys must be strings\n * and can't contain any invalid characters\n * @param {String} key\n * @api private\n */\n\nfunction checkValidKey(key) {\n  const keyType = typeof key;\n  if (keyType !== 'string') {\n    throw new TypeError(`Mongoose maps only support string keys, got ${keyType}`);\n  }\n  if (key.startsWith('$')) {\n    throw new Error(`Mongoose maps do not support keys that start with \"$\", got \"${key}\"`);\n  }\n  if (key.includes('.')) {\n    throw new Error(`Mongoose maps do not support keys that contain \".\", got \"${key}\"`);\n  }\n  if (specialProperties.has(key)) {\n    throw new Error(`Mongoose maps do not support reserved key name \"${key}\"`);\n  }\n}\n\nmodule.exports = MongooseMap;\n", "/**\n * UUID type constructor\n *\n * #### Example:\n *\n *     const id = new mongoose.Types.UUID();\n *\n * @constructor UUID\n */\n\n'use strict';\n\nmodule.exports = require('bson').UUID;\n", "\n/*!\n * Module exports.\n */\n\n'use strict';\n\nexports.Array = require('./array');\nexports.Buffer = require('./buffer');\n\nexports.Document = // @deprecate\nexports.Embedded = require('./ArraySubdocument');\n\nexports.DocumentArray = require('./DocumentArray');\nexports.Decimal128 = require('./decimal128');\nexports.ObjectId = require('./objectid');\n\nexports.Map = require('./map');\n\nexports.Subdocument = require('./subdocument');\n\nexports.UUID = require('./uuid');\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an Array schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ tags: [String] });\n *     schema.path('tags').options; // SchemaArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaArrayOptions\n */\n\nclass SchemaArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If this is an array of strings, an array of allowed values for this path.\n * Throws an error if this array isn't an array of strings.\n *\n * @api public\n * @property enum\n * @memberOf SchemaArrayOptions\n * @type {Array}\n * @instance\n */\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'enum', opts);\n\n/**\n * If set, specifies the type of this array's values. Equivalent to setting\n * `type` to an array whose first element is `of`.\n *\n * #### Example:\n *\n *     // `arr` is an array of numbers.\n *     new Schema({ arr: [Number] });\n *     // Equivalent way to define `arr` as an array of numbers\n *     new Schema({ arr: { type: Array, of: Number } });\n *\n * @api public\n * @property of\n * @memberOf SchemaArrayOptions\n * @type {Function|String}\n * @instance\n */\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'of', opts);\n\n/**\n * If set to `false`, will always deactivate casting non-array values to arrays.\n * If set to `true`, will cast non-array values to arrays if `init` and `SchemaArray.options.castNonArrays` are also `true`\n *\n * #### Example:\n *\n *     const Model = db.model('Test', new Schema({ x1: { castNonArrays: false, type: [String] } }));\n *     const doc = new Model({ x1: \"some non-array value\" });\n *     await doc.validate(); // Errors with \"CastError\"\n *\n * @api public\n * @property castNonArrays\n * @memberOf SchemaArrayOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'castNonArrays', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaArrayOptions;\n", "'use strict';\n\nmodule.exports = arrayDepth;\n\nfunction arrayDepth(arr) {\n  if (!Array.isArray(arr)) {\n    return { min: 0, max: 0, containsNonArrayItem: true };\n  }\n  if (arr.length === 0) {\n    return { min: 1, max: 1, containsNonArrayItem: false };\n  }\n  if (arr.length === 1 && !Array.isArray(arr[0])) {\n    return { min: 1, max: 1, containsNonArrayItem: false };\n  }\n\n  const res = arrayDepth(arr[0]);\n\n  for (let i = 1; i < arr.length; ++i) {\n    const _res = arrayDepth(arr[i]);\n    if (_res.min < res.min) {\n      res.min = _res.min;\n    }\n    if (_res.max > res.max) {\n      res.max = _res.max;\n    }\n    res.containsNonArrayItem = res.containsNonArrayItem || _res.containsNonArrayItem;\n  }\n\n  res.min = res.min + 1;\n  res.max = res.max + 1;\n\n  return res;\n}\n", "'use strict';\n\nconst assert = require('assert');\n\n/**\n * Given a value, cast it to a number, or throw an `Error` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @return {Number}\n * @throws {Error} if `value` is not one of the allowed values\n * @api private\n */\n\nmodule.exports = function castNumber(val) {\n  if (val == null) {\n    return val;\n  }\n  if (val === '') {\n    return null;\n  }\n\n  if (typeof val === 'string' || typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  assert.ok(!isNaN(val));\n  if (val instanceof Number) {\n    return val.valueOf();\n  }\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (!Array.isArray(val) && typeof val.valueOf === 'function') {\n    return Number(val.valueOf());\n  }\n  if (val.toString && !Array.isArray(val) && val.toString() == Number(val)) {\n    return Number(val);\n  }\n\n  assert.ok(false);\n};\n", "'use strict';\n\nconst CastError = require('../../error/cast');\nconst StrictModeError = require('../../error/strict');\nconst castNumber = require('../../cast/number');\n\nconst booleanComparison = new Set(['$and', '$or']);\nconst comparisonOperator = new Set(['$cmp', '$eq', '$lt', '$lte', '$gt', '$gte']);\nconst arithmeticOperatorArray = new Set([\n  // avoid casting '$add' or '$subtract', because expressions can be either number or date,\n  // and we don't have a good way of inferring which arguments should be numbers and which should\n  // be dates.\n  '$multiply',\n  '$divide',\n  '$log',\n  '$mod',\n  '$trunc',\n  '$avg',\n  '$max',\n  '$min',\n  '$stdDevPop',\n  '$stdDevSamp',\n  '$sum'\n]);\nconst arithmeticOperatorNumber = new Set([\n  '$abs',\n  '$exp',\n  '$ceil',\n  '$floor',\n  '$ln',\n  '$log10',\n  '$round',\n  '$sqrt',\n  '$sin',\n  '$cos',\n  '$tan',\n  '$asin',\n  '$acos',\n  '$atan',\n  '$atan2',\n  '$asinh',\n  '$acosh',\n  '$atanh',\n  '$sinh',\n  '$cosh',\n  '$tanh',\n  '$degreesToRadians',\n  '$radiansToDegrees'\n]);\nconst arrayElementOperators = new Set([\n  '$arrayElemAt',\n  '$first',\n  '$last'\n]);\nconst dateOperators = new Set([\n  '$year',\n  '$month',\n  '$week',\n  '$dayOfMonth',\n  '$dayOfYear',\n  '$hour',\n  '$minute',\n  '$second',\n  '$isoDayOfWeek',\n  '$isoWeekYear',\n  '$isoWeek',\n  '$millisecond'\n]);\nconst expressionOperator = new Set(['$not']);\n\nmodule.exports = function cast$expr(val, schema, strictQuery) {\n  if (typeof val !== 'object' || val === null) {\n    throw new Error('`$expr` must be an object');\n  }\n\n  return _castExpression(val, schema, strictQuery);\n};\n\nfunction _castExpression(val, schema, strictQuery) {\n  // Preserve the value if it represents a path or if it's null\n  if (isPath(val) || val === null) {\n    return val;\n  }\n\n  if (val.$cond != null) {\n    if (Array.isArray(val.$cond)) {\n      val.$cond = val.$cond.map(expr => _castExpression(expr, schema, strictQuery));\n    } else {\n      val.$cond.if = _castExpression(val.$cond.if, schema, strictQuery);\n      val.$cond.then = _castExpression(val.$cond.then, schema, strictQuery);\n      val.$cond.else = _castExpression(val.$cond.else, schema, strictQuery);\n    }\n  } else if (val.$ifNull != null) {\n    val.$ifNull.map(v => _castExpression(v, schema, strictQuery));\n  } else if (val.$switch != null) {\n    val.branches.map(v => _castExpression(v, schema, strictQuery));\n    val.default = _castExpression(val.default, schema, strictQuery);\n  }\n\n  const keys = Object.keys(val);\n  for (const key of keys) {\n    if (booleanComparison.has(key)) {\n      val[key] = val[key].map(v => _castExpression(v, schema, strictQuery));\n    } else if (comparisonOperator.has(key)) {\n      val[key] = castComparison(val[key], schema, strictQuery);\n    } else if (arithmeticOperatorArray.has(key)) {\n      val[key] = castArithmetic(val[key], schema, strictQuery);\n    } else if (arithmeticOperatorNumber.has(key)) {\n      val[key] = castNumberOperator(val[key], schema, strictQuery);\n    } else if (expressionOperator.has(key)) {\n      val[key] = _castExpression(val[key], schema, strictQuery);\n    }\n  }\n\n  if (val.$in) {\n    val.$in = castIn(val.$in, schema, strictQuery);\n  }\n  if (val.$size) {\n    val.$size = castNumberOperator(val.$size, schema, strictQuery);\n  }\n\n  _omitUndefined(val);\n\n  return val;\n}\n\nfunction _omitUndefined(val) {\n  const keys = Object.keys(val);\n  for (let i = 0, len = keys.length; i < len; ++i) {\n    (val[keys[i]] === void 0) && delete val[keys[i]];\n  }\n}\n\n// { $op: <number> }\nfunction castNumberOperator(val) {\n  if (!isLiteral(val)) {\n    return val;\n  }\n\n  try {\n    return castNumber(val);\n  } catch (err) {\n    throw new CastError('Number', val);\n  }\n}\n\nfunction castIn(val, schema, strictQuery) {\n  const path = val[1];\n  if (!isPath(path)) {\n    return val;\n  }\n  const search = val[0];\n\n  const schematype = schema.path(path.slice(1));\n  if (schematype === null) {\n    if (strictQuery === false) {\n      return val;\n    } else if (strictQuery === 'throw') {\n      throw new StrictModeError('$in');\n    }\n\n    return void 0;\n  }\n\n  if (!schematype.$isMongooseArray) {\n    throw new Error('Path must be an array for $in');\n  }\n\n  return [\n    schematype.$isMongooseDocumentArray ? schematype.$embeddedSchemaType.cast(search) : schematype.caster.cast(search),\n    path\n  ];\n}\n\n// { $op: [<number>, <number>] }\nfunction castArithmetic(val) {\n  if (!Array.isArray(val)) {\n    if (!isLiteral(val)) {\n      return val;\n    }\n    try {\n      return castNumber(val);\n    } catch (err) {\n      throw new CastError('Number', val);\n    }\n  }\n\n  return val.map(v => {\n    if (!isLiteral(v)) {\n      return v;\n    }\n    try {\n      return castNumber(v);\n    } catch (err) {\n      throw new CastError('Number', v);\n    }\n  });\n}\n\n// { $op: [expression, expression] }\nfunction castComparison(val, schema, strictQuery) {\n  if (!Array.isArray(val) || val.length !== 2) {\n    throw new Error('Comparison operator must be an array of length 2');\n  }\n\n  val[0] = _castExpression(val[0], schema, strictQuery);\n  const lhs = val[0];\n\n  if (isLiteral(val[1])) {\n    let path = null;\n    let schematype = null;\n    let caster = null;\n    if (isPath(lhs)) {\n      path = lhs.slice(1);\n      schematype = schema.path(path);\n    } else if (typeof lhs === 'object' && lhs != null) {\n      for (const key of Object.keys(lhs)) {\n        if (dateOperators.has(key) && isPath(lhs[key])) {\n          path = lhs[key].slice(1) + '.' + key;\n          caster = castNumber;\n        } else if (arrayElementOperators.has(key) && isPath(lhs[key])) {\n          path = lhs[key].slice(1) + '.' + key;\n          schematype = schema.path(lhs[key].slice(1));\n          if (schematype != null) {\n            if (schematype.$isMongooseDocumentArray) {\n              schematype = schematype.$embeddedSchemaType;\n            } else if (schematype.$isMongooseArray) {\n              schematype = schematype.caster;\n            }\n          }\n        }\n      }\n    }\n\n    const is$literal = typeof val[1] === 'object' && val[1] != null && val[1].$literal != null;\n    if (schematype != null) {\n      if (is$literal) {\n        val[1] = { $literal: schematype.cast(val[1].$literal) };\n      } else {\n        val[1] = schematype.cast(val[1]);\n      }\n    } else if (caster != null) {\n      if (is$literal) {\n        try {\n          val[1] = { $literal: caster(val[1].$literal) };\n        } catch (err) {\n          throw new CastError(caster.name.replace(/^cast/, ''), val[1], path + '.$literal');\n        }\n      } else {\n        try {\n          val[1] = caster(val[1]);\n        } catch (err) {\n          throw new CastError(caster.name.replace(/^cast/, ''), val[1], path);\n        }\n      }\n    } else if (path != null && strictQuery === true) {\n      return void 0;\n    } else if (path != null && strictQuery === 'throw') {\n      throw new StrictModeError(path);\n    }\n  } else {\n    val[1] = _castExpression(val[1]);\n  }\n\n  return val;\n}\n\nfunction isPath(val) {\n  return typeof val === 'string' && val[0] === '$';\n}\n\nfunction isLiteral(val) {\n  if (typeof val === 'string' && val[0] === '$') {\n    return false;\n  }\n  if (typeof val === 'object' && val !== null && Object.keys(val).find(key => key[0] === '$')) {\n    // The `$literal` expression can make an object a literal\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/literal/#mongodb-expression-exp.-literal\n    return val.$literal != null;\n  }\n  return true;\n}\n", "'use strict';\n\nconst CastError = require('../error/cast');\n\n/**\n * Given a value, cast it to a string, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {string|null|undefined}\n * @throws {CastError}\n * @api private\n */\n\nmodule.exports = function castString(value, path) {\n  // If null or undefined\n  if (value == null) {\n    return value;\n  }\n\n  // handle documents being passed\n  if (value._id && typeof value._id === 'string') {\n    return value._id;\n  }\n\n  // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n  // **unless** its the default Object.toString, because \"[object Object]\"\n  // doesn't really qualify as useful data\n  if (value.toString &&\n      value.toString !== Object.prototype.toString &&\n      !Array.isArray(value)) {\n    return value.toString();\n  }\n\n  throw new CastError('string', value, path);\n};\n", "'use strict';\n\nconst CastError = require('../../error/cast');\nconst castBoolean = require('../../cast/boolean');\nconst castString = require('../../cast/string');\n\n/**\n * Casts val to an object suitable for `$text`. Throws an error if the object\n * can't be casted.\n *\n * @param {Any} val value to cast\n * @param {String} [path] path to associate with any errors that occured\n * @return {Object} casted object\n * @see https://www.mongodb.com/docs/manual/reference/operator/query/text/\n * @api private\n */\n\nmodule.exports = function(val, path) {\n  if (val == null || typeof val !== 'object') {\n    throw new CastError('$text', val, path);\n  }\n\n  if (val.$search != null) {\n    val.$search = castString(val.$search, path + '.$search');\n  }\n  if (val.$language != null) {\n    val.$language = castString(val.$language, path + '.$language');\n  }\n  if (val.$caseSensitive != null) {\n    val.$caseSensitive = castBoolean(val.$caseSensitive,\n      path + '.$castSensitive');\n  }\n  if (val.$diacriticSensitive != null) {\n    val.$diacriticSensitive = castBoolean(val.$diacriticSensitive,\n      path + '.$diacriticSensitive');\n  }\n\n  return val;\n};\n", "'use strict';\n\nconst specialKeys = new Set([\n  '$ref',\n  '$id',\n  '$db'\n]);\n\nmodule.exports = function isOperator(path) {\n  return (\n    path[0] === '$' &&\n    !specialKeys.has(path)\n  );\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('./error/cast');\nconst StrictModeError = require('./error/strict');\nconst Types = require('./schema/index');\nconst cast$expr = require('./helpers/query/cast$expr');\nconst castTextSearch = require('./schema/operators/text');\nconst get = require('./helpers/get');\nconst getSchemaDiscriminatorByValue = require('./helpers/discriminator/getSchemaDiscriminatorByValue');\nconst isOperator = require('./helpers/query/isOperator');\nconst util = require('util');\nconst isObject = require('./helpers/isObject');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst utils = require('./utils');\n\nconst ALLOWED_GEOWITHIN_GEOJSON_TYPES = ['Polygon', 'MultiPolygon'];\n\n/**\n * Handles internal casting for query filters.\n *\n * @param {Schema} schema\n * @param {Object} obj Object to cast\n * @param {Object} [options] the query options\n * @param {Boolean|\"throw\"} [options.strict] Wheter to enable all strict options\n * @param {Boolean|\"throw\"} [options.strictQuery] Enable strict Queries\n * @param {Boolean} [options.upsert]\n * @param {Query} [context] passed to setters\n * @api private\n */\nmodule.exports = function cast(schema, obj, options, context) {\n  if (Array.isArray(obj)) {\n    throw new Error('Query filter must be an object, got an array ', util.inspect(obj));\n  }\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (schema != null && schema.discriminators != null && obj[schema.options.discriminatorKey] != null) {\n    schema = getSchemaDiscriminatorByValue(schema, obj[schema.options.discriminatorKey]) || schema;\n  }\n\n  const paths = Object.keys(obj);\n  let i = paths.length;\n  let _keys;\n  let any$conditionals;\n  let schematype;\n  let nested;\n  let path;\n  let type;\n  let val;\n\n  options = options || {};\n\n  while (i--) {\n    path = paths[i];\n    val = obj[path];\n\n    if (path === '$or' || path === '$nor' || path === '$and') {\n      if (!Array.isArray(val)) {\n        throw new CastError('Array', val, path);\n      }\n      for (let k = 0; k < val.length; ++k) {\n        if (val[k] == null || typeof val[k] !== 'object') {\n          throw new CastError('Object', val[k], path + '.' + k);\n        }\n        val[k] = cast(schema, val[k], options, context);\n      }\n    } else if (path === '$where') {\n      type = typeof val;\n\n      if (type !== 'string' && type !== 'function') {\n        throw new Error('Must have a string or function for $where');\n      }\n\n      if (type === 'function') {\n        obj[path] = val.toString();\n      }\n\n      continue;\n    } else if (path === '$expr') {\n      val = cast$expr(val, schema);\n      continue;\n    } else if (path === '$elemMatch') {\n      val = cast(schema, val, options, context);\n    } else if (path === '$text') {\n      val = castTextSearch(val, path);\n    } else {\n      if (!schema) {\n        // no casting for Mixed types\n        continue;\n      }\n\n      schematype = schema.path(path);\n\n      // Check for embedded discriminator paths\n      if (!schematype) {\n        const split = path.split('.');\n        let j = split.length;\n        while (j--) {\n          const pathFirstHalf = split.slice(0, j).join('.');\n          const pathLastHalf = split.slice(j).join('.');\n          const _schematype = schema.path(pathFirstHalf);\n          const discriminatorKey = _schematype &&\n            _schematype.schema &&\n            _schematype.schema.options &&\n            _schematype.schema.options.discriminatorKey;\n\n          // gh-6027: if we haven't found the schematype but this path is\n          // underneath an embedded discriminator and the embedded discriminator\n          // key is in the query, use the embedded discriminator schema\n          if (_schematype != null &&\n            (_schematype.schema && _schematype.schema.discriminators) != null &&\n            discriminatorKey != null &&\n            pathLastHalf !== discriminatorKey) {\n            const discriminatorVal = get(obj, pathFirstHalf + '.' + discriminatorKey);\n            const discriminators = _schematype.schema.discriminators;\n            if (typeof discriminatorVal === 'string' && discriminators[discriminatorVal] != null) {\n\n              schematype = discriminators[discriminatorVal].path(pathLastHalf);\n            } else if (discriminatorVal != null &&\n              Object.keys(discriminatorVal).length === 1 &&\n              Array.isArray(discriminatorVal.$in) &&\n              discriminatorVal.$in.length === 1 &&\n              typeof discriminatorVal.$in[0] === 'string' &&\n              discriminators[discriminatorVal.$in[0]] != null) {\n              schematype = discriminators[discriminatorVal.$in[0]].path(pathLastHalf);\n            }\n          }\n        }\n      }\n\n      if (!schematype) {\n        // Handle potential embedded array queries\n        const split = path.split('.');\n        let j = split.length;\n        let pathFirstHalf;\n        let pathLastHalf;\n        let remainingConds;\n\n        // Find the part of the var path that is a path of the Schema\n        while (j--) {\n          pathFirstHalf = split.slice(0, j).join('.');\n          schematype = schema.path(pathFirstHalf);\n          if (schematype) {\n            break;\n          }\n        }\n\n        // If a substring of the input path resolves to an actual real path...\n        if (schematype) {\n          // Apply the casting; similar code for $elemMatch in schema/array.js\n          if (schematype.caster && schematype.caster.schema) {\n            remainingConds = {};\n            pathLastHalf = split.slice(j).join('.');\n            remainingConds[pathLastHalf] = val;\n\n            const ret = cast(schematype.caster.schema, remainingConds, options, context)[pathLastHalf];\n            if (ret === void 0) {\n              delete obj[path];\n            } else {\n              obj[path] = ret;\n            }\n          } else {\n            obj[path] = val;\n          }\n          continue;\n        }\n\n        if (isObject(val)) {\n          // handle geo schemas that use object notation\n          // { loc: { long: Number, lat: Number }\n\n          let geo = '';\n          if (val.$near) {\n            geo = '$near';\n          } else if (val.$nearSphere) {\n            geo = '$nearSphere';\n          } else if (val.$within) {\n            geo = '$within';\n          } else if (val.$geoIntersects) {\n            geo = '$geoIntersects';\n          } else if (val.$geoWithin) {\n            geo = '$geoWithin';\n          }\n\n          if (geo) {\n            const numbertype = new Types.Number('__QueryCasting__');\n            let value = val[geo];\n\n            if (val.$maxDistance != null) {\n              val.$maxDistance = numbertype.castForQuery(\n                null,\n                val.$maxDistance,\n                context\n              );\n            }\n            if (val.$minDistance != null) {\n              val.$minDistance = numbertype.castForQuery(\n                null,\n                val.$minDistance,\n                context\n              );\n            }\n\n            if (geo === '$within') {\n              const withinType = value.$center\n                  || value.$centerSphere\n                  || value.$box\n                  || value.$polygon;\n\n              if (!withinType) {\n                throw new Error('Bad $within parameter: ' + JSON.stringify(val));\n              }\n\n              value = withinType;\n            } else if (geo === '$near' &&\n                typeof value.type === 'string' && Array.isArray(value.coordinates)) {\n              // geojson; cast the coordinates\n              value = value.coordinates;\n            } else if ((geo === '$near' || geo === '$nearSphere' || geo === '$geoIntersects') &&\n                value.$geometry && typeof value.$geometry.type === 'string' &&\n                Array.isArray(value.$geometry.coordinates)) {\n              if (value.$maxDistance != null) {\n                value.$maxDistance = numbertype.castForQuery(\n                  null,\n                  value.$maxDistance,\n                  context\n                );\n              }\n              if (value.$minDistance != null) {\n                value.$minDistance = numbertype.castForQuery(\n                  null,\n                  value.$minDistance,\n                  context\n                );\n              }\n              if (isMongooseObject(value.$geometry)) {\n                value.$geometry = value.$geometry.toObject({\n                  transform: false,\n                  virtuals: false\n                });\n              }\n              value = value.$geometry.coordinates;\n            } else if (geo === '$geoWithin') {\n              if (value.$geometry) {\n                if (isMongooseObject(value.$geometry)) {\n                  value.$geometry = value.$geometry.toObject({ virtuals: false });\n                }\n                const geoWithinType = value.$geometry.type;\n                if (ALLOWED_GEOWITHIN_GEOJSON_TYPES.indexOf(geoWithinType) === -1) {\n                  throw new Error('Invalid geoJSON type for $geoWithin \"' +\n                    geoWithinType + '\", must be \"Polygon\" or \"MultiPolygon\"');\n                }\n                value = value.$geometry.coordinates;\n              } else {\n                value = value.$box || value.$polygon || value.$center ||\n                  value.$centerSphere;\n                if (isMongooseObject(value)) {\n                  value = value.toObject({ virtuals: false });\n                }\n              }\n            }\n\n            _cast(value, numbertype, context);\n            continue;\n          }\n        }\n\n        if (schema.nested[path]) {\n          continue;\n        }\n\n        const strict = 'strict' in options ? options.strict : schema.options.strict;\n        const strictQuery = getStrictQuery(options, schema._userProvidedOptions, schema.options, context);\n        if (options.upsert && strict) {\n          if (strict === 'throw') {\n            throw new StrictModeError(path);\n          }\n          throw new StrictModeError(path, 'Path \"' + path + '\" is not in ' +\n            'schema, strict mode is `true`, and upsert is `true`.');\n        } if (strictQuery === 'throw') {\n          throw new StrictModeError(path, 'Path \"' + path + '\" is not in ' +\n            'schema and strictQuery is \\'throw\\'.');\n        } else if (strictQuery) {\n          delete obj[path];\n        }\n      } else if (val == null) {\n        continue;\n      } else if (utils.isPOJO(val)) {\n        any$conditionals = Object.keys(val).some(isOperator);\n\n        if (!any$conditionals) {\n          obj[path] = schematype.castForQuery(\n            null,\n            val,\n            context\n          );\n        } else {\n          const ks = Object.keys(val);\n          let $cond;\n\n          let k = ks.length;\n\n          while (k--) {\n            $cond = ks[k];\n            nested = val[$cond];\n\n            if ($cond === '$not') {\n              if (nested && schematype) {\n                _keys = Object.keys(nested);\n                if (_keys.length && isOperator(_keys[0])) {\n                  for (const key in nested) {\n                    nested[key] = schematype.castForQuery(\n                      key,\n                      nested[key],\n                      context\n                    );\n                  }\n                } else {\n                  val[$cond] = schematype.castForQuery(\n                    $cond,\n                    nested,\n                    context\n                  );\n                }\n                continue;\n              }\n            } else {\n              val[$cond] = schematype.castForQuery(\n                $cond,\n                nested,\n                context\n              );\n            }\n          }\n        }\n      } else if (Array.isArray(val) && ['Buffer', 'Array'].indexOf(schematype.instance) === -1) {\n        const casted = [];\n        const valuesArray = val;\n\n        for (const _val of valuesArray) {\n          casted.push(schematype.castForQuery(\n            null,\n            _val,\n            context\n          ));\n        }\n\n        obj[path] = { $in: casted };\n      } else {\n        obj[path] = schematype.castForQuery(\n          null,\n          val,\n          context\n        );\n      }\n    }\n  }\n\n  return obj;\n};\n\nfunction _cast(val, numbertype, context) {\n  if (Array.isArray(val)) {\n    val.forEach(function(item, i) {\n      if (Array.isArray(item) || isObject(item)) {\n        return _cast(item, numbertype, context);\n      }\n      val[i] = numbertype.castForQuery(null, item, context);\n    });\n  } else {\n    const nearKeys = Object.keys(val);\n    let nearLen = nearKeys.length;\n    while (nearLen--) {\n      const nkey = nearKeys[nearLen];\n      const item = val[nkey];\n      if (Array.isArray(item) || isObject(item)) {\n        _cast(item, numbertype, context);\n        val[nkey] = item;\n      } else {\n        val[nkey] = numbertype.castForQuery({ val: item, context: context });\n      }\n    }\n  }\n}\n\nfunction getStrictQuery(queryOptions, schemaUserProvidedOptions, schemaOptions, context) {\n  if ('strictQuery' in queryOptions) {\n    return queryOptions.strictQuery;\n  }\n  if ('strictQuery' in schemaUserProvidedOptions) {\n    return schemaUserProvidedOptions.strictQuery;\n  }\n  const mongooseOptions = context &&\n    context.mongooseCollection &&\n    context.mongooseCollection.conn &&\n    context.mongooseCollection.conn.base &&\n    context.mongooseCollection.conn.base.options;\n  if (mongooseOptions) {\n    if ('strictQuery' in mongooseOptions) {\n      return mongooseOptions.strictQuery;\n    }\n  }\n  return schemaOptions.strictQuery;\n}\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a Number schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ count: Number });\n *     schema.path('count').options; // SchemaNumberOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaNumberOptions\n */\n\nclass SchemaNumberOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, Mongoose adds a validator that checks that this path is at least the\n * given `min`.\n *\n * @api public\n * @property min\n * @memberOf SchemaNumberOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(SchemaNumberOptions.prototype, 'min', opts);\n\n/**\n * If set, Mongoose adds a validator that checks that this path is less than the\n * given `max`.\n *\n * @api public\n * @property max\n * @memberOf SchemaNumberOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(SchemaNumberOptions.prototype, 'max', opts);\n\n/**\n * If set, Mongoose adds a validator that checks that this path is strictly\n * equal to one of the given values.\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       favoritePrime: {\n *         type: Number,\n *         enum: [3, 5, 7]\n *       }\n *     });\n *     schema.path('favoritePrime').options.enum; // [3, 5, 7]\n *\n * @api public\n * @property enum\n * @memberOf SchemaNumberOptions\n * @type {Array}\n * @instance\n */\n\nObject.defineProperty(SchemaNumberOptions.prototype, 'enum', opts);\n\n/**\n * Sets default [populate options](https://mongoosejs.com/docs/populate.html#query-conditions).\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       child: {\n *         type: Number,\n *         ref: 'Child',\n *         populate: { select: 'name' }\n *       }\n *     });\n *     const Parent = mongoose.model('Parent', schema);\n *\n *     // Automatically adds `.select('name')`\n *     Parent.findOne().populate('child');\n *\n * @api public\n * @property populate\n * @memberOf SchemaNumberOptions\n * @type {Object}\n * @instance\n */\n\nObject.defineProperty(SchemaNumberOptions.prototype, 'populate', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaNumberOptions;\n", "/*!\n * Module requirements.\n */\n\n'use strict';\n\nconst CastError = require('../../error/cast');\n\n/*!\n * ignore\n */\n\nfunction handleBitwiseOperator(val) {\n  const _this = this;\n  if (Array.isArray(val)) {\n    return val.map(function(v) {\n      return _castNumber(_this.path, v);\n    });\n  } else if (Buffer.isBuffer(val)) {\n    return val;\n  }\n  // Assume trying to cast to number\n  return _castNumber(_this.path, val);\n}\n\n/*!\n * ignore\n */\n\nfunction _castNumber(path, num) {\n  const v = Number(num);\n  if (isNaN(v)) {\n    throw new CastError('number', num, path);\n  }\n  return v;\n}\n\nmodule.exports = handleBitwiseOperator;\n", "'use strict';\n\n/*!\n * Module requirements.\n */\n\nconst MongooseError = require('../error/index');\nconst SchemaNumberOptions = require('../options/SchemaNumberOptions');\nconst SchemaType = require('../schematype');\nconst castNumber = require('../cast/number');\nconst handleBitwiseOperator = require('./operators/bitwise');\nconst utils = require('../utils');\n\nconst CastError = SchemaType.CastError;\n\n/**\n * Number SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaNumber(key, options) {\n  SchemaType.call(this, key, options, 'Number');\n}\n\n/**\n * Attaches a getter for all Number instances.\n *\n * #### Example:\n *\n *     // Make all numbers round down\n *     mongoose.Number.get(function(v) { return Math.floor(v); });\n *\n *     const Model = mongoose.model('Test', new Schema({ test: Number }));\n *     new Model({ test: 3.14 }).test; // 3\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaNumber.get = SchemaType.get;\n\n/**\n * Sets a default option for all Number instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.Number.set('min', 0);\n *\n *     const Order = mongoose.model('Order', new Schema({ amount: Number }));\n *     new Order({ amount: -10 }).validateSync().errors.amount.message; // Path `amount` must be larger than 0.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaNumber.set = SchemaType.set;\n\nSchemaNumber.setters = [];\n\n/*!\n * ignore\n */\n\nSchemaNumber._cast = castNumber;\n\n/**\n * Get/set the function used to cast arbitrary values to numbers.\n *\n * #### Example:\n *\n *     // Make Mongoose cast empty strings '' to 0 for paths declared as numbers\n *     const original = mongoose.Number.cast();\n *     mongoose.Number.cast(v => {\n *       if (v === '') { return 0; }\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Number.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaNumber.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaNumber._defaultCaster = v => {\n  if (typeof v !== 'number') {\n    throw new Error();\n  }\n  return v;\n};\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaNumber.schemaName = 'Number';\n\nSchemaNumber.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaNumber.prototype = Object.create(SchemaType.prototype);\nSchemaNumber.prototype.constructor = SchemaNumber;\nSchemaNumber.prototype.OptionsConstructor = SchemaNumberOptions;\n\n/*!\n * ignore\n */\n\nSchemaNumber._checkRequired = v => typeof v === 'number' || v instanceof Number;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaNumber.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {\n  if (typeof value === 'object' && SchemaType._isRef(this, value, doc, true)) {\n    return value != null;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    SchemaNumber.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Sets a minimum number validator.\n *\n * #### Example:\n *\n *     const s = new Schema({ n: { type: Number, min: 10 })\n *     const M = db.model('M', s)\n *     const m = new M({ n: 9 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     const min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     const schema = new Schema({ n: { type: Number, min: min })\n *     const M = mongoose.model('Measurement', schema);\n *     const s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10).\n *     })\n *\n * @param {Number} value minimum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaNumber.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.minValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    let msg = message || MongooseError.messages.Number.min;\n    msg = msg.replace(/{MIN}/, value);\n    this.validators.push({\n      validator: this.minValidator = function(v) {\n        return v == null || v >= value;\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum number validator.\n *\n * #### Example:\n *\n *     const s = new Schema({ n: { type: Number, max: 10 })\n *     const M = db.model('M', s)\n *     const m = new M({ n: 11 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     const max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     const schema = new Schema({ n: { type: Number, max: max })\n *     const M = mongoose.model('Measurement', schema);\n *     const s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10).\n *     })\n *\n * @param {Number} maximum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaNumber.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.maxValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    let msg = message || MongooseError.messages.Number.max;\n    msg = msg.replace(/{MAX}/, value);\n    this.validators.push({\n      validator: this.maxValidator = function(v) {\n        return v == null || v <= value;\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a enum validator\n *\n * #### Example:\n *\n *     const s = new Schema({ n: { type: Number, enum: [1, 2, 3] });\n *     const M = db.model('M', s);\n *\n *     const m = new M({ n: 4 });\n *     await m.save(); // throws validation error\n *\n *     m.n = 3;\n *     await m.save(); // succeeds\n *\n * @param {Array} values allowed values\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaNumber.prototype.enum = function(values, message) {\n  if (this.enumValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.enumValidator;\n    }, this);\n  }\n\n\n  if (!Array.isArray(values)) {\n    const isObjectSyntax = utils.isPOJO(values) && values.values != null;\n    if (isObjectSyntax) {\n      message = values.message;\n      values = values.values;\n    } else if (typeof values === 'number') {\n      values = Array.prototype.slice.call(arguments);\n      message = null;\n    }\n\n    if (utils.isPOJO(values)) {\n      values = Object.values(values);\n    }\n    message = message || MongooseError.messages.Number.enum;\n  }\n\n  message = message == null ? MongooseError.messages.Number.enum : message;\n\n  this.enumValidator = v => v == null || values.indexOf(v) !== -1;\n  this.validators.push({\n    validator: this.enumValidator,\n    message: message,\n    type: 'enum',\n    enumValues: values\n  });\n\n  return this;\n};\n\n/**\n * Casts to number\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaNumber.prototype.cast = function(value, doc, init) {\n  if (typeof value !== 'number' && SchemaType._isRef(this, value, doc, init)) {\n    if (value == null || utils.isNonBuiltinObject(value)) {\n      return this._castRef(value, doc, init);\n    }\n  }\n\n  const val = value && typeof value._id !== 'undefined' ?\n    value._id : // documents\n    value;\n\n  let castNumber;\n  if (typeof this._castFunction === 'function') {\n    castNumber = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castNumber = this.constructor.cast();\n  } else {\n    castNumber = SchemaNumber.cast();\n  }\n\n  try {\n    return castNumber(val);\n  } catch (err) {\n    throw new CastError('Number', val, this.path, err, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nfunction handleArray(val) {\n  const _this = this;\n  if (!Array.isArray(val)) {\n    return [this.cast(val)];\n  }\n  return val.map(function(m) {\n    return _this.cast(m);\n  });\n}\n\nSchemaNumber.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle,\n      $mod: handleArray\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaNumber.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new CastError('number', val, this.path, null, this);\n    }\n    return handler.call(this, val, context);\n  }\n  val = this.applySetters(val, context);\n  return val;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaNumber;\n", "'use strict';\n\n/*!\n * Module requirements.\n */\n\nconst SchemaNumber = require('../number');\n\n/*!\n * ignore\n */\n\nexports.castToNumber = castToNumber;\nexports.castArraysOfNumbers = castArraysOfNumbers;\n\n/*!\n * ignore\n */\n\nfunction castToNumber(val) {\n  return SchemaNumber.cast()(val);\n}\n\nfunction castArraysOfNumbers(arr, self) {\n  arr.forEach(function(v, i) {\n    if (Array.isArray(v)) {\n      castArraysOfNumbers(v, self);\n    } else {\n      arr[i] = castToNumber.call(self, v);\n    }\n  });\n}\n", "/*!\n * Module requirements.\n */\n\n'use strict';\n\nconst castArraysOfNumbers = require('./helpers').castArraysOfNumbers;\nconst castToNumber = require('./helpers').castToNumber;\n\n/*!\n * ignore\n */\n\nexports.cast$geoIntersects = cast$geoIntersects;\nexports.cast$near = cast$near;\nexports.cast$within = cast$within;\n\nfunction cast$near(val) {\n  const SchemaArray = require('../array');\n\n  if (Array.isArray(val)) {\n    castArraysOfNumbers(val, this);\n    return val;\n  }\n\n  _castMinMaxDistance(this, val);\n\n  if (val && val.$geometry) {\n    return cast$geometry(val, this);\n  }\n\n  if (!Array.isArray(val)) {\n    throw new TypeError('$near must be either an array or an object ' +\n      'with a $geometry property');\n  }\n\n  return SchemaArray.prototype.castForQuery.call(this, null, val);\n}\n\nfunction cast$geometry(val, self) {\n  switch (val.$geometry.type) {\n    case 'Polygon':\n    case 'LineString':\n    case 'Point':\n      castArraysOfNumbers(val.$geometry.coordinates, self);\n      break;\n    default:\n      // ignore unknowns\n      break;\n  }\n\n  _castMinMaxDistance(self, val);\n\n  return val;\n}\n\nfunction cast$within(val) {\n  _castMinMaxDistance(this, val);\n\n  if (val.$box || val.$polygon) {\n    const type = val.$box ? '$box' : '$polygon';\n    val[type].forEach(arr => {\n      if (!Array.isArray(arr)) {\n        const msg = 'Invalid $within $box argument. '\n            + 'Expected an array, received ' + arr;\n        throw new TypeError(msg);\n      }\n      arr.forEach((v, i) => {\n        arr[i] = castToNumber.call(this, v);\n      });\n    });\n  } else if (val.$center || val.$centerSphere) {\n    const type = val.$center ? '$center' : '$centerSphere';\n    val[type].forEach((item, i) => {\n      if (Array.isArray(item)) {\n        item.forEach((v, j) => {\n          item[j] = castToNumber.call(this, v);\n        });\n      } else {\n        val[type][i] = castToNumber.call(this, item);\n      }\n    });\n  } else if (val.$geometry) {\n    cast$geometry(val, this);\n  }\n\n  return val;\n}\n\nfunction cast$geoIntersects(val) {\n  const geo = val.$geometry;\n  if (!geo) {\n    return;\n  }\n\n  cast$geometry(val, this);\n  return val;\n}\n\nfunction _castMinMaxDistance(self, val) {\n  if (val.$maxDistance) {\n    val.$maxDistance = castToNumber.call(self, val.$maxDistance);\n  }\n  if (val.$minDistance) {\n    val.$minDistance = castToNumber.call(self, val.$minDistance);\n  }\n}\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst $exists = require('./operators/exists');\nconst $type = require('./operators/type');\nconst MongooseError = require('../error/mongooseError');\nconst SchemaArrayOptions = require('../options/SchemaArrayOptions');\nconst SchemaType = require('../schematype');\nconst CastError = SchemaType.CastError;\nconst Mixed = require('./mixed');\nconst arrayDepth = require('../helpers/arrayDepth');\nconst cast = require('../cast');\nconst clone = require('../helpers/clone');\nconst isOperator = require('../helpers/query/isOperator');\nconst util = require('util');\nconst utils = require('../utils');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst geospatial = require('./operators/geospatial');\nconst getDiscriminatorByValue = require('../helpers/discriminator/getDiscriminatorByValue');\n\nlet MongooseArray;\nlet EmbeddedDoc;\n\nconst isNestedArraySymbol = Symbol('mongoose#isNestedArray');\nconst emptyOpts = Object.freeze({});\n\n/**\n * Array SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @param {Object} options\n * @param {Object} schemaOptions\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaArray(key, cast, options, schemaOptions) {\n  // lazy load\n  EmbeddedDoc || (EmbeddedDoc = require('../types').Embedded);\n\n  let typeKey = 'type';\n  if (schemaOptions && schemaOptions.typeKey) {\n    typeKey = schemaOptions.typeKey;\n  }\n  this.schemaOptions = schemaOptions;\n\n  if (cast) {\n    let castOptions = {};\n\n    if (utils.isPOJO(cast)) {\n      if (cast[typeKey]) {\n        // support { type: Woot }\n        castOptions = clone(cast); // do not alter user arguments\n        delete castOptions[typeKey];\n        cast = cast[typeKey];\n      } else {\n        cast = Mixed;\n      }\n    }\n\n    if (options != null && options.ref != null && castOptions.ref == null) {\n      castOptions.ref = options.ref;\n    }\n\n    if (cast === Object) {\n      cast = Mixed;\n    }\n\n    // support { type: 'String' }\n    const name = typeof cast === 'string'\n      ? cast\n      : utils.getFunctionName(cast);\n\n    const Types = require('./index.js');\n    const caster = Types.hasOwnProperty(name) ? Types[name] : cast;\n\n    this.casterConstructor = caster;\n\n    if (this.casterConstructor instanceof SchemaArray) {\n      this.casterConstructor[isNestedArraySymbol] = true;\n    }\n\n    if (typeof caster === 'function' &&\n        !caster.$isArraySubdocument &&\n        !caster.$isSchemaMap) {\n      const path = this.caster instanceof EmbeddedDoc ? null : key;\n      this.caster = new caster(path, castOptions);\n    } else {\n      this.caster = caster;\n      if (!(this.caster instanceof EmbeddedDoc)) {\n        this.caster.path = key;\n      }\n    }\n\n    this.$embeddedSchemaType = this.caster;\n  }\n\n  this.$isMongooseArray = true;\n\n  SchemaType.call(this, key, options, 'Array');\n\n  let defaultArr;\n  let fn;\n\n  if (this.defaultValue != null) {\n    defaultArr = this.defaultValue;\n    fn = typeof defaultArr === 'function';\n  }\n\n  if (!('defaultValue' in this) || this.defaultValue !== void 0) {\n    const defaultFn = function() {\n      // Leave it up to `cast()` to convert the array\n      return fn\n        ? defaultArr.call(this)\n        : defaultArr != null\n          ? [].concat(defaultArr)\n          : [];\n    };\n    defaultFn.$runBeforeSetters = !fn;\n    this.default(defaultFn);\n  }\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaArray.schemaName = 'Array';\n\n\n/**\n * Options for all arrays.\n *\n * - `castNonArrays`: `true` by default. If `false`, Mongoose will throw a CastError when a value isn't an array. If `true`, Mongoose will wrap the provided value in an array before casting.\n *\n * @static\n * @api public\n */\n\nSchemaArray.options = { castNonArrays: true };\n\n/*!\n * ignore\n */\n\nSchemaArray.defaultOptions = {};\n\n/**\n * Sets a default option for all Array instances.\n *\n * #### Example:\n *\n *     // Make all Array instances have `required` of true by default.\n *     mongoose.Schema.Array.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Array }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @api public\n */\nSchemaArray.set = SchemaType.set;\n\nSchemaArray.setters = [];\n\n/**\n * Attaches a getter for all Array instances\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaArray.get = SchemaType.get;\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaArray.prototype = Object.create(SchemaType.prototype);\nSchemaArray.prototype.constructor = SchemaArray;\nSchemaArray.prototype.OptionsConstructor = SchemaArrayOptions;\n\n/*!\n * ignore\n */\n\nSchemaArray._checkRequired = SchemaType.prototype.checkRequired;\n\n/**\n * Override the function the required validator uses to check whether an array\n * passes the `required` check.\n *\n * #### Example:\n *\n *     // Require non-empty array to pass `required` check\n *     mongoose.Schema.Types.Array.checkRequired(v => Array.isArray(v) && v.length);\n *\n *     const M = mongoose.model({ arr: { type: Array, required: true } });\n *     new M({ arr: [] }).validateSync(); // `null`, validation fails!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @api public\n */\n\nSchemaArray.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies the `required` validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaArray.prototype.checkRequired = function checkRequired(value, doc) {\n  if (typeof value === 'object' && SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    SchemaArray.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Adds an enum validator if this is an array of strings or numbers. Equivalent to\n * `SchemaString.prototype.enum()` or `SchemaNumber.prototype.enum()`\n *\n * @param {...String|Object} [args] enumeration values\n * @return {SchemaArray} this\n */\n\nSchemaArray.prototype.enum = function() {\n  let arr = this;\n  while (true) {\n    const instance = arr &&\n    arr.caster &&\n    arr.caster.instance;\n    if (instance === 'Array') {\n      arr = arr.caster;\n      continue;\n    }\n    if (instance !== 'String' && instance !== 'Number') {\n      throw new Error('`enum` can only be set on an array of strings or numbers ' +\n        ', not ' + instance);\n    }\n    break;\n  }\n\n  let enumArray = arguments;\n  if (!Array.isArray(arguments) && utils.isObject(arguments)) {\n    enumArray = utils.object.vals(enumArray);\n  }\n\n  arr.caster.enum.apply(arr.caster, enumArray);\n  return this;\n};\n\n/**\n * Overrides the getters application for the population special-case\n *\n * @param {Object} value\n * @param {Object} scope\n * @api private\n */\n\nSchemaArray.prototype.applyGetters = function(value, scope) {\n  if (scope != null && scope.$__ != null && scope.$populated(this.path)) {\n    // means the object id was populated\n    return value;\n  }\n\n  const ret = SchemaType.prototype.applyGetters.call(this, value, scope);\n  if (Array.isArray(ret)) {\n    const rawValue = utils.isMongooseArray(ret) ? ret.__array : ret;\n    const len = rawValue.length;\n    for (let i = 0; i < len; ++i) {\n      rawValue[i] = this.caster.applyGetters(rawValue[i], scope);\n    }\n  }\n  return ret;\n};\n\nSchemaArray.prototype._applySetters = function(value, scope, init, priorVal) {\n  if (this.casterConstructor.$isMongooseArray &&\n      SchemaArray.options.castNonArrays &&\n      !this[isNestedArraySymbol]) {\n    // Check nesting levels and wrap in array if necessary\n    let depth = 0;\n    let arr = this;\n    while (arr != null &&\n      arr.$isMongooseArray &&\n      !arr.$isMongooseDocumentArray) {\n      ++depth;\n      arr = arr.casterConstructor;\n    }\n\n    // No need to wrap empty arrays\n    if (value != null && value.length !== 0) {\n      const valueDepth = arrayDepth(value);\n      if (valueDepth.min === valueDepth.max && valueDepth.max < depth && valueDepth.containsNonArrayItem) {\n        for (let i = valueDepth.max; i < depth; ++i) {\n          value = [value];\n        }\n      }\n    }\n  }\n\n  return SchemaType.prototype._applySetters.call(this, value, scope, init, priorVal);\n};\n\n/**\n * Casts values for set().\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nSchemaArray.prototype.cast = function(value, doc, init, prev, options) {\n  // lazy load\n  MongooseArray || (MongooseArray = require('../types').Array);\n\n  let i;\n  let l;\n\n  if (Array.isArray(value)) {\n    const len = value.length;\n    if (!len && doc) {\n      const indexes = doc.schema.indexedPaths();\n\n      const arrayPath = this.path;\n      for (i = 0, l = indexes.length; i < l; ++i) {\n        const pathIndex = indexes[i][0][arrayPath];\n        if (pathIndex === '2dsphere' || pathIndex === '2d') {\n          return;\n        }\n      }\n\n      // Special case: if this index is on the parent of what looks like\n      // GeoJSON, skip setting the default to empty array re: #1668, #3233\n      const arrayGeojsonPath = this.path.endsWith('.coordinates') ?\n        this.path.substring(0, this.path.lastIndexOf('.')) : null;\n      if (arrayGeojsonPath != null) {\n        for (i = 0, l = indexes.length; i < l; ++i) {\n          const pathIndex = indexes[i][0][arrayGeojsonPath];\n          if (pathIndex === '2dsphere') {\n            return;\n          }\n        }\n      }\n    }\n\n    options = options || emptyOpts;\n\n    let rawValue = utils.isMongooseArray(value) ? value.__array : value;\n    let path = options.path || this.path;\n    if (options.arrayPathIndex != null) {\n      path += '.' + options.arrayPathIndex;\n    }\n    value = MongooseArray(rawValue, path, doc, this);\n    rawValue = value.__array;\n\n    if (init && doc != null && doc.$__ != null && doc.$populated(this.path)) {\n      return value;\n    }\n\n    const caster = this.caster;\n    const isMongooseArray = caster.$isMongooseArray;\n    if (caster && this.casterConstructor !== Mixed) {\n      try {\n        const len = rawValue.length;\n        for (i = 0; i < len; i++) {\n          const opts = {};\n          // Perf: creating `arrayPath` is expensive for large arrays.\n          // We only need `arrayPath` if this is a nested array, so\n          // skip if possible.\n          if (isMongooseArray) {\n            if (options.arrayPath != null) {\n              opts.arrayPathIndex = i;\n            } else if (caster._arrayParentPath != null) {\n              opts.arrayPathIndex = i;\n            }\n          }\n          rawValue[i] = caster.applySetters(rawValue[i], doc, init, void 0, opts);\n        }\n      } catch (e) {\n        // rethrow\n        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path + '.' + i, e, this);\n      }\n    }\n\n    return value;\n  }\n\n  const castNonArraysOption = this.options.castNonArrays != null ? this.options.castNonArrays : SchemaArray.options.castNonArrays;\n  if (init || castNonArraysOption) {\n    // gh-2442: if we're loading this from the db and its not an array, mark\n    // the whole array as modified.\n    if (!!doc && !!init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init);\n  }\n\n  throw new CastError('Array', util.inspect(value), this.path, null, this);\n};\n\n/*!\n * ignore\n */\n\nSchemaArray.prototype._castForPopulate = function _castForPopulate(value, doc) {\n  // lazy load\n  MongooseArray || (MongooseArray = require('../types').Array);\n\n  if (Array.isArray(value)) {\n    let i;\n    const rawValue = value.__array ? value.__array : value;\n    const len = rawValue.length;\n\n    const caster = this.caster;\n    if (caster && this.casterConstructor !== Mixed) {\n      try {\n        for (i = 0; i < len; i++) {\n          const opts = {};\n          // Perf: creating `arrayPath` is expensive for large arrays.\n          // We only need `arrayPath` if this is a nested array, so\n          // skip if possible.\n          if (caster.$isMongooseArray && caster._arrayParentPath != null) {\n            opts.arrayPathIndex = i;\n          }\n\n          rawValue[i] = caster.cast(rawValue[i], doc, false, void 0, opts);\n        }\n      } catch (e) {\n        // rethrow\n        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path + '.' + i, e, this);\n      }\n    }\n\n    return value;\n  }\n\n  throw new CastError('Array', util.inspect(value), this.path, null, this);\n};\n\nSchemaArray.prototype.$toObject = SchemaArray.prototype.toObject;\n\n/*!\n * ignore\n */\n\nSchemaArray.prototype.discriminator = function(...args) {\n  let arr = this;\n  while (arr.$isMongooseArray && !arr.$isMongooseDocumentArray) {\n    arr = arr.casterConstructor;\n    if (arr == null || typeof arr === 'function') {\n      throw new MongooseError('You can only add an embedded discriminator on ' +\n        'a document array, ' + this.path + ' is a plain array');\n    }\n  }\n  return arr.discriminator(...args);\n};\n\n/*!\n * ignore\n */\n\nSchemaArray.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.path, this.caster, options, this.schemaOptions);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  return schematype;\n};\n\nSchemaArray.prototype._castForQuery = function(val, context) {\n  let Constructor = this.casterConstructor;\n\n  if (val &&\n      Constructor.discriminators &&\n      Constructor.schema &&\n      Constructor.schema.options &&\n      Constructor.schema.options.discriminatorKey) {\n    if (typeof val[Constructor.schema.options.discriminatorKey] === 'string' &&\n        Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]]) {\n      Constructor = Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]];\n    } else {\n      const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, val[Constructor.schema.options.discriminatorKey]);\n      if (constructorByValue) {\n        Constructor = constructorByValue;\n      }\n    }\n  }\n\n  const proto = this.casterConstructor.prototype;\n  const protoCastForQuery = proto && proto.castForQuery;\n  const protoCast = proto && proto.cast;\n  const constructorCastForQuery = Constructor.castForQuery;\n  const caster = this.caster;\n\n  if (Array.isArray(val)) {\n    this.setters.reverse().forEach(setter => {\n      val = setter.call(this, val, this);\n    });\n    val = val.map(function(v) {\n      if (utils.isObject(v) && v.$elemMatch) {\n        return v;\n      }\n      if (protoCastForQuery) {\n        v = protoCastForQuery.call(caster, null, v, context);\n        return v;\n      } else if (protoCast) {\n        v = protoCast.call(caster, v);\n        return v;\n      } else if (constructorCastForQuery) {\n        v = constructorCastForQuery.call(caster, null, v, context);\n        return v;\n      }\n      if (v != null) {\n        v = new Constructor(v);\n        return v;\n      }\n      return v;\n    });\n  } else if (protoCastForQuery) {\n    val = protoCastForQuery.call(caster, null, val, context);\n  } else if (protoCast) {\n    val = protoCast.call(caster, val);\n  } else if (constructorCastForQuery) {\n    val = constructorCastForQuery.call(caster, null, val, context);\n  } else if (val != null) {\n    val = new Constructor(val);\n  }\n\n  return val;\n};\n\n/**\n * Casts values for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaArray.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Array.');\n    }\n\n    return handler.call(this, val, context);\n  } else {\n    return this._castForQuery(val, context);\n  }\n};\n\nfunction cast$all(val, context) {\n  if (!Array.isArray(val)) {\n    val = [val];\n  }\n\n  val = val.map((v) => {\n    if (!utils.isObject(v)) {\n      return v;\n    }\n    if (v.$elemMatch != null) {\n      return { $elemMatch: cast(this.casterConstructor.schema, v.$elemMatch, null, this && this.$$context) };\n    }\n\n    const o = {};\n    o[this.path] = v;\n    return cast(this.casterConstructor.schema, o, null, this && this.$$context)[this.path];\n  }, this);\n\n  return this.castForQuery(null, val, context);\n}\n\nfunction cast$elemMatch(val, context) {\n  const keys = Object.keys(val);\n  const numKeys = keys.length;\n  for (let i = 0; i < numKeys; ++i) {\n    const key = keys[i];\n    const value = val[key];\n    if (isOperator(key) && value != null) {\n      val[key] = this.castForQuery(key, value, context);\n    }\n  }\n\n  // Is this an embedded discriminator and is the discriminator key set?\n  // If so, use the discriminator schema. See gh-7449\n  const discriminatorKey = this &&\n    this.casterConstructor &&\n    this.casterConstructor.schema &&\n    this.casterConstructor.schema.options &&\n    this.casterConstructor.schema.options.discriminatorKey;\n  const discriminators = this &&\n  this.casterConstructor &&\n  this.casterConstructor.schema &&\n  this.casterConstructor.schema.discriminators || {};\n  if (discriminatorKey != null &&\n      val[discriminatorKey] != null &&\n      discriminators[val[discriminatorKey]] != null) {\n    return cast(discriminators[val[discriminatorKey]], val, null, this && this.$$context);\n  }\n\n  return cast(this.casterConstructor.schema, val, null, this && this.$$context);\n}\n\nconst handle = SchemaArray.prototype.$conditionalHandlers = {};\n\nhandle.$all = cast$all;\nhandle.$options = String;\nhandle.$elemMatch = cast$elemMatch;\nhandle.$geoIntersects = geospatial.cast$geoIntersects;\nhandle.$or = createLogicalQueryOperatorHandler('$or');\nhandle.$and = createLogicalQueryOperatorHandler('$and');\nhandle.$nor = createLogicalQueryOperatorHandler('$nor');\n\nfunction createLogicalQueryOperatorHandler(op) {\n  return function logicalQueryOperatorHandler(val) {\n    if (!Array.isArray(val)) {\n      throw new TypeError('conditional ' + op + ' requires an array');\n    }\n\n    const ret = [];\n    for (const obj of val) {\n      ret.push(cast(this.casterConstructor.schema, obj, null, this && this.$$context));\n    }\n\n    return ret;\n  };\n}\n\nhandle.$near =\nhandle.$nearSphere = geospatial.cast$near;\n\nhandle.$within =\nhandle.$geoWithin = geospatial.cast$within;\n\nhandle.$size =\nhandle.$minDistance =\nhandle.$maxDistance = castToNumber;\n\nhandle.$exists = $exists;\nhandle.$type = $type;\n\nhandle.$eq =\nhandle.$gt =\nhandle.$gte =\nhandle.$lt =\nhandle.$lte =\nhandle.$not =\nhandle.$regex =\nhandle.$ne = SchemaArray.prototype._castForQuery;\n\n// `$in` is special because you can also include an empty array in the query\n// like `$in: [1, []]`, see gh-5913\nhandle.$nin = SchemaType.prototype.$conditionalHandlers.$nin;\nhandle.$in = SchemaType.prototype.$conditionalHandlers.$in;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaArray;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\nconst SchemaType = require('../schematype');\nconst castBoolean = require('../cast/boolean');\nconst utils = require('../utils');\n\n/**\n * Boolean SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBoolean(path, options) {\n  SchemaType.call(this, path, options, 'Boolean');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBoolean.schemaName = 'Boolean';\n\nSchemaBoolean.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBoolean.prototype = Object.create(SchemaType.prototype);\nSchemaBoolean.prototype.constructor = SchemaBoolean;\n\n/*!\n * ignore\n */\n\nSchemaBoolean._cast = castBoolean;\n\n/**\n * Sets a default option for all Boolean instances.\n *\n * #### Example:\n *\n *     // Make all booleans have `default` of false.\n *     mongoose.Schema.Boolean.set('default', false);\n *\n *     const Order = mongoose.model('Order', new Schema({ isPaid: Boolean }));\n *     new Order({ }).isPaid; // false\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaBoolean.set = SchemaType.set;\n\nSchemaBoolean.setters = [];\n\n/**\n * Attaches a getter for all Boolean instances\n *\n * #### Example:\n *\n *     mongoose.Schema.Boolean.get(v => v === true ? 'yes' : 'no');\n *\n *     const Order = mongoose.model('Order', new Schema({ isPaid: Boolean }));\n *     new Order({ isPaid: false }).isPaid; // 'no'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaBoolean.get = SchemaType.get;\n\n/**\n * Get/set the function used to cast arbitrary values to booleans.\n *\n * #### Example:\n *\n *     // Make Mongoose cast empty string '' to false.\n *     const original = mongoose.Schema.Boolean.cast();\n *     mongoose.Schema.Boolean.cast(v => {\n *       if (v === '') {\n *         return false;\n *       }\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Schema.Boolean.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaBoolean.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaBoolean._defaultCaster = v => {\n  if (v != null && typeof v !== 'boolean') {\n    throw new Error();\n  }\n  return v;\n};\n\n/*!\n * ignore\n */\n\nSchemaBoolean._checkRequired = v => v === true || v === false;\n\n/**\n * Override the function the required validator uses to check whether a boolean\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaBoolean.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator. For a boolean\n * to satisfy a required validator, it must be strictly equal to true or to\n * false.\n *\n * @param {Any} value\n * @return {Boolean}\n * @api public\n */\n\nSchemaBoolean.prototype.checkRequired = function(value) {\n  return this.constructor._checkRequired(value);\n};\n\n/**\n * Configure which values get casted to `true`.\n *\n * #### Example:\n *\n *     const M = mongoose.model('Test', new Schema({ b: Boolean }));\n *     new M({ b: 'affirmative' }).b; // undefined\n *     mongoose.Schema.Boolean.convertToTrue.add('affirmative');\n *     new M({ b: 'affirmative' }).b; // true\n *\n * @property convertToTrue\n * @static\n * @memberOf SchemaBoolean\n * @type {Set}\n * @api public\n */\n\nObject.defineProperty(SchemaBoolean, 'convertToTrue', {\n  get: () => castBoolean.convertToTrue,\n  set: v => { castBoolean.convertToTrue = v; }\n});\n\n/**\n * Configure which values get casted to `false`.\n *\n * #### Example:\n *\n *     const M = mongoose.model('Test', new Schema({ b: Boolean }));\n *     new M({ b: 'nay' }).b; // undefined\n *     mongoose.Schema.Types.Boolean.convertToFalse.add('nay');\n *     new M({ b: 'nay' }).b; // false\n *\n * @property convertToFalse\n * @static\n * @memberOf SchemaBoolean\n * @type {Set}\n * @api public\n */\n\nObject.defineProperty(SchemaBoolean, 'convertToFalse', {\n  get: () => castBoolean.convertToFalse,\n  set: v => { castBoolean.convertToFalse = v; }\n});\n\n/**\n * Casts to boolean\n *\n * @param {Object} value\n * @param {Object} model this value is optional\n * @api private\n */\n\nSchemaBoolean.prototype.cast = function(value) {\n  let castBoolean;\n  if (typeof this._castFunction === 'function') {\n    castBoolean = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castBoolean = this.constructor.cast();\n  } else {\n    castBoolean = SchemaBoolean.cast();\n  }\n\n  try {\n    return castBoolean(value);\n  } catch (error) {\n    throw new CastError('Boolean', value, this.path, error, this);\n  }\n};\n\nSchemaBoolean.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {});\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} val\n * @api private\n */\n\nSchemaBoolean.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = SchemaBoolean.$conditionalHandlers[$conditional];\n\n    if (handler) {\n      return handler.call(this, val);\n    }\n\n    return this.applySetters(null, val, context);\n  }\n\n  return this.applySetters(val, context);\n};\n\n/**\n *\n * @api private\n */\n\nSchemaBoolean.prototype._castNullish = function _castNullish(v) {\n  if (typeof v === 'undefined') {\n    return v;\n  }\n  const castBoolean = typeof this.constructor.cast === 'function' ?\n    this.constructor.cast() :\n    SchemaBoolean.cast();\n  if (castBoolean == null) {\n    return v;\n  }\n  if (castBoolean.convertToFalse instanceof Set && castBoolean.convertToFalse.has(v)) {\n    return false;\n  }\n  if (castBoolean.convertToTrue instanceof Set && castBoolean.convertToTrue.has(v)) {\n    return true;\n  }\n  return v;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBoolean;\n", "'use strict';\n\nconst assert = require('assert');\n\n/**\n * Given a value, cast it to a BigInt, or throw an `Error` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @return {Number}\n * @throws {Error} if `value` is not one of the allowed values\n * @api private\n */\n\nmodule.exports = function castBigInt(val) {\n  if (val == null) {\n    return val;\n  }\n  if (val === '') {\n    return null;\n  }\n  if (typeof val === 'bigint') {\n    return val;\n  }\n\n  if (typeof val === 'string' || typeof val === 'number') {\n    return BigInt(val);\n  }\n\n  assert.ok(false);\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\nconst SchemaType = require('../schematype');\nconst castBigInt = require('../cast/bigint');\nconst utils = require('../utils');\n\n/**\n * BigInt SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBigInt(path, options) {\n  SchemaType.call(this, path, options, 'BigInt');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBigInt.schemaName = 'BigInt';\n\nSchemaBigInt.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBigInt.prototype = Object.create(SchemaType.prototype);\nSchemaBigInt.prototype.constructor = SchemaBigInt;\n\n/*!\n * ignore\n */\n\nSchemaBigInt._cast = castBigInt;\n\n/**\n * Sets a default option for all BigInt instances.\n *\n * #### Example:\n *\n *     // Make all bigints required by default\n *     mongoose.Schema.BigInt.set('required', true);\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaBigInt.set = SchemaType.set;\n\nSchemaBigInt.setters = [];\n\n/**\n * Attaches a getter for all BigInt instances\n *\n * #### Example:\n *\n *     // Convert bigints to numbers\n *     mongoose.Schema.BigInt.get(v => v == null ? v : Number(v));\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaBigInt.get = SchemaType.get;\n\n/**\n * Get/set the function used to cast arbitrary values to booleans.\n *\n * #### Example:\n *\n *     // Make Mongoose cast empty string '' to false.\n *     const original = mongoose.Schema.BigInt.cast();\n *     mongoose.Schema.BigInt.cast(v => {\n *       if (v === '') {\n *         return false;\n *       }\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Schema.BigInt.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaBigInt.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaBigInt._checkRequired = v => v != null;\n\n/**\n * Override the function the required validator uses to check whether a value\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaBigInt.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @return {Boolean}\n * @api public\n */\n\nSchemaBigInt.prototype.checkRequired = function(value) {\n  return this.constructor._checkRequired(value);\n};\n\n/**\n * Casts to bigint\n *\n * @param {Object} value\n * @param {Object} model this value is optional\n * @api private\n */\n\nSchemaBigInt.prototype.cast = function(value) {\n  let castBigInt;\n  if (typeof this._castFunction === 'function') {\n    castBigInt = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castBigInt = this.constructor.cast();\n  } else {\n    castBigInt = SchemaBigInt.cast();\n  }\n\n  try {\n    return castBigInt(value);\n  } catch (error) {\n    throw new CastError('BigInt', value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nSchemaBigInt.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val, context) {\n  return this.castForQuery(null, val, context);\n}\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} val\n * @api private\n */\n\nSchemaBigInt.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = SchemaBigInt.$conditionalHandlers[$conditional];\n\n    if (handler) {\n      return handler.call(this, val);\n    }\n\n    return this.applySetters(null, val, context);\n  }\n\n  return this.applySetters(val, context);\n};\n\n/**\n *\n * @api private\n */\n\nSchemaBigInt.prototype._castNullish = function _castNullish(v) {\n  if (typeof v === 'undefined') {\n    return v;\n  }\n  const castBigInt = typeof this.constructor.cast === 'function' ?\n    this.constructor.cast() :\n    SchemaBigInt.cast();\n  if (castBigInt == null) {\n    return v;\n  }\n  return v;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBigInt;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a Buffer schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ bitmap: Buffer });\n *     schema.path('bitmap').options; // SchemaBufferOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaBufferOptions\n */\n\nclass SchemaBufferOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * Set the default subtype for this buffer.\n *\n * @api public\n * @property subtype\n * @memberOf SchemaBufferOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(SchemaBufferOptions.prototype, 'subtype', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaBufferOptions;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseBuffer = require('../types/buffer');\nconst SchemaBufferOptions = require('../options/SchemaBufferOptions');\nconst SchemaType = require('../schematype');\nconst handleBitwiseOperator = require('./operators/bitwise');\nconst utils = require('../utils');\n\nconst Binary = MongooseBuffer.Binary;\nconst CastError = SchemaType.CastError;\n\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBuffer.schemaName = 'Buffer';\n\nSchemaBuffer.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\nSchemaBuffer.prototype.constructor = SchemaBuffer;\nSchemaBuffer.prototype.OptionsConstructor = SchemaBufferOptions;\n\n/*!\n * ignore\n */\n\nSchemaBuffer._checkRequired = v => !!(v && v.length);\n\n/**\n * Sets a default option for all Buffer instances.\n *\n * #### Example:\n *\n *     // Make all buffers have `required` of true by default.\n *     mongoose.Schema.Buffer.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Buffer }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaBuffer.set = SchemaType.set;\n\nSchemaBuffer.setters = [];\n\n/**\n * Attaches a getter for all Buffer instances\n *\n * #### Example:\n *\n *     // Always convert to string when getting an ObjectId\n *     mongoose.Schema.Types.Buffer.get(v => v.toString('hex'));\n *\n *     const Model = mongoose.model('Test', new Schema({ buf: Buffer } }));\n *     typeof (new Model({ buf: Buffer.fromString('hello') }).buf); // 'string'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaBuffer.get = SchemaType.get;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * #### Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ buf: { type: Buffer, required: true } });\n *     new M({ buf: Buffer.from('') }).validateSync(); // validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaBuffer.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator. To satisfy a\n * required validator, a buffer must not be null or undefined and have\n * non-zero length.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaBuffer.prototype.checkRequired = function(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return this.constructor._checkRequired(value);\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaBuffer.prototype.cast = function(value, doc, init) {\n  let ret;\n  if (SchemaType._isRef(this, value, doc, init)) {\n    if (value && value.isMongooseBuffer) {\n      return value;\n    }\n\n    if (Buffer.isBuffer(value)) {\n      if (!value || !value.isMongooseBuffer) {\n        value = new MongooseBuffer(value, [this.path, doc]);\n        if (this.options.subtype != null) {\n          value._subtype = this.options.subtype;\n        }\n      }\n      return value;\n    }\n\n    if (value instanceof Binary) {\n      ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n      if (typeof value.sub_type !== 'number') {\n        throw new CastError('Buffer', value, this.path, null, this);\n      }\n      ret._subtype = value.sub_type;\n      return ret;\n    }\n\n    if (value == null || utils.isNonBuiltinObject(value)) {\n      return this._castRef(value, doc, init);\n    }\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n      if (this.options.subtype != null) {\n        value._subtype = this.options.subtype;\n      }\n    }\n    return value;\n  }\n\n  if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('Buffer', value, this.path, null, this);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (value === null) {\n    return value;\n  }\n\n\n  const type = typeof value;\n  if (\n    type === 'string' || type === 'number' || Array.isArray(value) ||\n    (type === 'object' && value.type === 'Buffer' && Array.isArray(value.data)) // gh-6863\n  ) {\n    if (type === 'number') {\n      value = [value];\n    }\n    ret = new MongooseBuffer(value, [this.path, doc]);\n    if (this.options.subtype != null) {\n      ret._subtype = this.options.subtype;\n    }\n    return ret;\n  }\n\n  throw new CastError('Buffer', value, this.path, null, this);\n};\n\n/**\n * Sets the default [subtype](https://studio3t.com/whats-new/best-practices-uuid-mongodb/)\n * for this buffer. You can find a [list of allowed subtypes here](https://api.mongodb.com/python/current/api/bson/binary.html).\n *\n * #### Example:\n *\n *     const s = new Schema({ uuid: { type: Buffer, subtype: 4 });\n *     const M = db.model('M', s);\n *     const m = new M({ uuid: 'test string' });\n *     m.uuid._subtype; // 4\n *\n * @param {Number} subtype the default subtype\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaBuffer.prototype.subtype = function(subtype) {\n  this.options.subtype = subtype;\n  return this;\n};\n\n/*!\n * ignore\n */\nfunction handleSingle(val, context) {\n  return this.castForQuery(null, val, context);\n}\n\nSchemaBuffer.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\n    }\n    return handler.call(this, val);\n  }\n  const casted = this.applySetters(val, context);\n  return casted ? casted.toObject({ transform: false, virtuals: false }) : casted;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBuffer;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a Date schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ startedAt: Date });\n *     schema.path('startedAt').options; // SchemaDateOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaDateOptions\n */\n\nclass SchemaDateOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, Mongoose adds a validator that checks that this path is after the\n * given `min`.\n *\n * @api public\n * @property min\n * @memberOf SchemaDateOptions\n * @type {Date}\n * @instance\n */\n\nObject.defineProperty(SchemaDateOptions.prototype, 'min', opts);\n\n/**\n * If set, Mongoose adds a validator that checks that this path is before the\n * given `max`.\n *\n * @api public\n * @property max\n * @memberOf SchemaDateOptions\n * @type {Date}\n * @instance\n */\n\nObject.defineProperty(SchemaDateOptions.prototype, 'max', opts);\n\n/**\n * If set, Mongoose creates a TTL index on this path.\n *\n * mongo TTL index `expireAfterSeconds` value will take 'expires' value expressed in seconds.\n *\n * #### Example:\n *\n *     const schema = new Schema({ \"expireAt\": { type: Date,  expires: 11 } });\n *     // if 'expireAt' is set, then document expires at expireAt + 11 seconds\n *\n * @api public\n * @property expires\n * @memberOf SchemaDateOptions\n * @type {Date}\n * @instance\n */\n\nObject.defineProperty(SchemaDateOptions.prototype, 'expires', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaDateOptions;\n", "'use strict';\n\nconst assert = require('assert');\n\nmodule.exports = function castDate(value) {\n  // Support empty string because of empty form values. Originally introduced\n  // in https://github.com/Automattic/mongoose/commit/efc72a1898fc3c33a319d915b8c5463a22938dfe\n  if (value == null || value === '') {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    assert.ok(!isNaN(value.valueOf()));\n\n    return value;\n  }\n\n  let date;\n\n  assert.ok(typeof value !== 'boolean');\n\n  if (value instanceof Number || typeof value === 'number') {\n    date = new Date(value);\n  } else if (typeof value === 'string' && !isNaN(Number(value)) && (Number(value) >= 275761 || Number(value) < -271820)) {\n    // string representation of milliseconds take this path\n    date = new Date(Number(value));\n  } else if (typeof value.valueOf === 'function') {\n    // support for moment.js. This is also the path strings will take because\n    // strings have a `valueOf()`\n    date = new Date(value.valueOf());\n  } else {\n    // fallback\n    date = new Date(value);\n  }\n\n  if (!isNaN(date.valueOf())) {\n    return date;\n  }\n\n  assert.ok(false);\n};\n", "/*!\n * Module requirements.\n */\n\n'use strict';\n\nconst MongooseError = require('../error/index');\nconst SchemaDateOptions = require('../options/SchemaDateOptions');\nconst SchemaType = require('../schematype');\nconst castDate = require('../cast/date');\nconst getConstructorName = require('../helpers/getConstructorName');\nconst utils = require('../utils');\n\nconst CastError = SchemaType.CastError;\n\n/**\n * Date SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaDate(key, options) {\n  SchemaType.call(this, key, options, 'Date');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaDate.schemaName = 'Date';\n\nSchemaDate.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaDate.prototype = Object.create(SchemaType.prototype);\nSchemaDate.prototype.constructor = SchemaDate;\nSchemaDate.prototype.OptionsConstructor = SchemaDateOptions;\n\n/*!\n * ignore\n */\n\nSchemaDate._cast = castDate;\n\n/**\n * Sets a default option for all Date instances.\n *\n * #### Example:\n *\n *     // Make all dates have `required` of true by default.\n *     mongoose.Schema.Date.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Date }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaDate.set = SchemaType.set;\n\nSchemaDate.setters = [];\n\n/**\n * Attaches a getter for all Date instances\n *\n * #### Example:\n *\n *     // Always convert Dates to string\n *     mongoose.Date.get(v => v.toString());\n *\n *     const Model = mongoose.model('Test', new Schema({ date: { type: Date, default: () => new Date() } }));\n *     typeof (new Model({}).date); // 'string'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaDate.get = SchemaType.get;\n\n/**\n * Get/set the function used to cast arbitrary values to dates.\n *\n * #### Example:\n *\n *     // Mongoose converts empty string '' into `null` for date types. You\n *     // can create a custom caster to disable it.\n *     const original = mongoose.Schema.Types.Date.cast();\n *     mongoose.Schema.Types.Date.cast(v => {\n *       assert.ok(v !== '');\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Schema.Types.Date.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaDate.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaDate._defaultCaster = v => {\n  if (v != null && !(v instanceof Date)) {\n    throw new Error();\n  }\n  return v;\n};\n\n/**\n * Declares a TTL index (rounded to the nearest second) for _Date_ types only.\n *\n * This sets the `expireAfterSeconds` index option available in MongoDB >= 2.1.2.\n * This index type is only compatible with Date types.\n *\n * #### Example:\n *\n *     // expire in 24 hours\n *     new Schema({ createdAt: { type: Date, expires: 60*60*24 }});\n *\n * `expires` utilizes the `ms` module from [guille](https://github.com/guille/) allowing us to use a friendlier syntax:\n *\n * #### Example:\n *\n *     // expire in 24 hours\n *     new Schema({ createdAt: { type: Date, expires: '24h' }});\n *\n *     // expire in 1.5 hours\n *     new Schema({ createdAt: { type: Date, expires: '1.5h' }});\n *\n *     // expire in 7 days\n *     const schema = new Schema({ createdAt: Date });\n *     schema.path('createdAt').expires('7d');\n *\n * @param {Number|String} when\n * @added 3.0.0\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaDate.prototype.expires = function(when) {\n  if (getConstructorName(this._index) !== 'Object') {\n    this._index = {};\n  }\n\n  this._index.expires = when;\n  utils.expires(this._index);\n  return this;\n};\n\n/*!\n * ignore\n */\n\nSchemaDate._checkRequired = v => v instanceof Date;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * #### Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ str: { type: String, required: true } });\n *     new M({ str: '' }).validateSync(); // `null`, validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaDate.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator. To satisfy\n * a required validator, the given value must be an instance of `Date`.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaDate.prototype.checkRequired = function(value, doc) {\n  if (typeof value === 'object' && SchemaType._isRef(this, value, doc, true)) {\n    return value != null;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    SchemaDate.checkRequired();\n  return _checkRequired(value);\n};\n\n/**\n * Sets a minimum date validator.\n *\n * #### Example:\n *\n *     const s = new Schema({ d: { type: Date, min: Date('1970-01-01') })\n *     const M = db.model('M', s)\n *     const m = new M({ d: Date('1969-12-31') })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.d = Date('2014-12-08');\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     const min = [Date('1970-01-01'), 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     const schema = new Schema({ d: { type: Date, min: min })\n *     const M = mongoose.model('M', schema);\n *     const s= new M({ d: Date('1969-12-31') });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `d` (1969-12-31) is before the limit (1970-01-01).\n *     })\n *\n * @param {Date} value minimum date\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaDate.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.minValidator;\n    }, this);\n  }\n\n  if (value) {\n    let msg = message || MongooseError.messages.Date.min;\n    if (typeof msg === 'string') {\n      msg = msg.replace(/{MIN}/, (value === Date.now ? 'Date.now()' : value.toString()));\n    }\n    const _this = this;\n    this.validators.push({\n      validator: this.minValidator = function(val) {\n        let _value = value;\n        if (typeof value === 'function' && value !== Date.now) {\n          _value = _value.call(this);\n        }\n        const min = (_value === Date.now ? _value() : _this.cast(_value));\n        return val === null || val.valueOf() >= min.valueOf();\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum date validator.\n *\n * #### Example:\n *\n *     const s = new Schema({ d: { type: Date, max: Date('2014-01-01') })\n *     const M = db.model('M', s)\n *     const m = new M({ d: Date('2014-12-08') })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.d = Date('2013-12-31');\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     const max = [Date('2014-01-01'), 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     const schema = new Schema({ d: { type: Date, max: max })\n *     const M = mongoose.model('M', schema);\n *     const s= new M({ d: Date('2014-12-08') });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `d` (2014-12-08) exceeds the limit (2014-01-01).\n *     })\n *\n * @param {Date} maximum date\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaDate.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.maxValidator;\n    }, this);\n  }\n\n  if (value) {\n    let msg = message || MongooseError.messages.Date.max;\n    if (typeof msg === 'string') {\n      msg = msg.replace(/{MAX}/, (value === Date.now ? 'Date.now()' : value.toString()));\n    }\n    const _this = this;\n    this.validators.push({\n      validator: this.maxValidator = function(val) {\n        let _value = value;\n        if (typeof _value === 'function' && _value !== Date.now) {\n          _value = _value.call(this);\n        }\n        const max = (_value === Date.now ? _value() : _this.cast(_value));\n        return val === null || val.valueOf() <= max.valueOf();\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to date\n *\n * @param {Object} value to cast\n * @api private\n */\n\nSchemaDate.prototype.cast = function(value) {\n  let castDate;\n  if (typeof this._castFunction === 'function') {\n    castDate = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castDate = this.constructor.cast();\n  } else {\n    castDate = SchemaDate.cast();\n  }\n\n  try {\n    return castDate(value);\n  } catch (error) {\n    throw new CastError('date', value, this.path, error, this);\n  }\n};\n\n/**\n * Date Query casting.\n *\n * @param {Any} val\n * @api private\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nSchemaDate.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaDate.prototype.castForQuery = function($conditional, val, context) {\n  if ($conditional == null) {\n    return this.applySetters(val, context);\n  }\n\n  const handler = this.$conditionalHandlers[$conditional];\n\n  if (!handler) {\n    throw new Error('Can\\'t use ' + $conditional + ' with Date.');\n  }\n\n  return handler.call(this, val);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaDate;\n", "'use strict';\n\nconst Decimal128Type = require('../types/decimal128');\nconst assert = require('assert');\n\nmodule.exports = function castDecimal128(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n  if (typeof Uint8Array === 'function' && value instanceof Uint8Array) {\n    return new Decimal128Type(value);\n  }\n\n  if (typeof value === 'number') {\n    return Decimal128Type.fromString(String(value));\n  }\n\n  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {\n    return Decimal128Type.fromString(value.valueOf());\n  }\n\n  assert.ok(false);\n};\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst SchemaType = require('../schematype');\nconst CastError = SchemaType.CastError;\nconst castDecimal128 = require('../cast/decimal128');\nconst utils = require('../utils');\nconst isBsonType = require('../helpers/isBsonType');\n\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDecimal128.schemaName = 'Decimal128';\n\nDecimal128.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n\n/*!\n * ignore\n */\n\nDecimal128._cast = castDecimal128;\n\n/**\n * Sets a default option for all Decimal128 instances.\n *\n * #### Example:\n *\n *     // Make all decimal 128s have `required` of true by default.\n *     mongoose.Schema.Decimal128.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: mongoose.Decimal128 }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nDecimal128.set = SchemaType.set;\n\nDecimal128.setters = [];\n\n/**\n * Attaches a getter for all Decimal128 instances\n *\n * #### Example:\n *\n *     // Automatically convert Decimal128s to Numbers\n *     mongoose.Schema.Decimal128.get(v => v == null ? v : Number(v));\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nDecimal128.get = SchemaType.get;\n\n/**\n * Get/set the function used to cast arbitrary values to decimals.\n *\n * #### Example:\n *\n *     // Make Mongoose only refuse to cast numbers as decimal128\n *     const original = mongoose.Schema.Types.Decimal128.cast();\n *     mongoose.Decimal128.cast(v => {\n *       assert.ok(typeof v !== 'number');\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Decimal128.cast(false);\n *\n * @param {Function} [caster]\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nDecimal128.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nDecimal128._defaultCaster = v => {\n  if (v != null && !isBsonType(v, 'Decimal128')) {\n    throw new Error();\n  }\n  return v;\n};\n\n/*!\n * ignore\n */\n\nDecimal128._checkRequired = v => isBsonType(v, 'Decimal128');\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nDecimal128.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    Decimal128.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nDecimal128.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    if (isBsonType(value, 'Decimal128')) {\n      return value;\n    }\n\n    return this._castRef(value, doc, init);\n  }\n\n  let castDecimal128;\n  if (typeof this._castFunction === 'function') {\n    castDecimal128 = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castDecimal128 = this.constructor.cast();\n  } else {\n    castDecimal128 = Decimal128.cast();\n  }\n\n  try {\n    return castDecimal128(value);\n  } catch (error) {\n    throw new CastError('Decimal128', value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a single nested schematype.\n *\n * #### Example:\n *\n *     const schema = Schema({ child: Schema({ name: String }) });\n *     schema.path('child').options; // SchemaSubdocumentOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaSubdocumentOptions\n */\n\nclass SchemaSubdocumentOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, overwrites the child schema's `_id` option.\n *\n * #### Example:\n *\n *     const childSchema = Schema({ name: String });\n *     const parentSchema = Schema({\n *       child: { type: childSchema, _id: false }\n *     });\n *     parentSchema.path('child').schema.options._id; // false\n *\n * @api public\n * @property of\n * @memberOf SchemaSubdocumentOptions\n * @type {Function|string}\n * @instance\n */\n\nObject.defineProperty(SchemaSubdocumentOptions.prototype, '_id', opts);\n\nmodule.exports = SchemaSubdocumentOptions;\n", "'use strict';\n\nmodule.exports = function each(arr, cb, done) {\n  if (arr.length === 0) {\n    return done();\n  }\n\n  let remaining = arr.length;\n  let err = null;\n  for (const v of arr) {\n    cb(v, function(_err) {\n      if (err != null) {\n        return;\n      }\n      if (_err != null) {\n        err = _err;\n        return done(err);\n      }\n\n      if (--remaining <= 0) {\n        return done();\n      }\n    });\n  }\n};\n", "'use strict';\n\nconst each = require('../helpers/each');\n\n/*!\n * ignore\n */\n\nmodule.exports = function removeSubdocs(schema) {\n  const unshift = true;\n  schema.s.hooks.pre('deleteOne', { document: true, query: false }, function removeSubDocsPreRemove(next) {\n    if (this.$isSubdocument) {\n      next();\n      return;\n    }\n    if (this.$__ == null) {\n      next();\n      return;\n    }\n\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n\n    each(subdocs, function(subdoc, cb) {\n      subdoc.$__deleteOne(cb);\n    }, function(error) {\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('deleteOne:error', _this, [_this], { error: error }, function(error) {\n          next(error);\n        });\n      }\n      next();\n    });\n  }, null, unshift);\n};\n", "'use strict';\n\nconst each = require('../helpers/each');\n\n/*!\n * ignore\n */\n\nmodule.exports = function saveSubdocs(schema) {\n  const unshift = true;\n  schema.s.hooks.pre('save', false, function saveSubdocsPreSave(next) {\n    if (this.$isSubdocument) {\n      next();\n      return;\n    }\n\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n\n    if (!subdocs.length) {\n      next();\n      return;\n    }\n\n    each(subdocs, function(subdoc, cb) {\n      subdoc.$__schema.s.hooks.execPre('save', subdoc, function(err) {\n        cb(err);\n      });\n    }, function(error) {\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {\n          next(error);\n        });\n      }\n      next();\n    });\n  }, null, unshift);\n\n  schema.s.hooks.post('save', function saveSubdocsPostSave(doc, next) {\n    if (this.$isSubdocument) {\n      next();\n      return;\n    }\n\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n\n    if (!subdocs.length) {\n      next();\n      return;\n    }\n\n    each(subdocs, function(subdoc, cb) {\n      subdoc.$__schema.s.hooks.execPost('save', subdoc, [subdoc], function(err) {\n        cb(err);\n      });\n    }, function(error) {\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {\n          next(error);\n        });\n      }\n      next();\n    });\n  }, null, unshift);\n};\n", "'use strict';\n\nconst objectIdSymbol = require('../helpers/symbols').objectIdSymbol;\nconst utils = require('../utils');\n\n/*!\n * ignore\n */\n\nmodule.exports = function shardingPlugin(schema) {\n  schema.post('init', function shardingPluginPostInit() {\n    storeShard.call(this);\n    return this;\n  });\n  schema.pre('save', function shardingPluginPreSave(next) {\n    applyWhere.call(this);\n    next();\n  });\n  schema.pre('remove', function shardingPluginPreRemove(next) {\n    applyWhere.call(this);\n    next();\n  });\n  schema.post('save', function shardingPluginPostSave() {\n    storeShard.call(this);\n  });\n};\n\n/*!\n * ignore\n */\n\nfunction applyWhere() {\n  let paths;\n  let len;\n\n  if (this.$__.shardval) {\n    paths = Object.keys(this.$__.shardval);\n    len = paths.length;\n\n    this.$where = this.$where || {};\n    for (let i = 0; i < len; ++i) {\n      this.$where[paths[i]] = this.$__.shardval[paths[i]];\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nmodule.exports.storeShard = storeShard;\n\n/*!\n * ignore\n */\n\nfunction storeShard() {\n  // backwards compat\n  const key = this.$__schema.options.shardKey || this.$__schema.options.shardkey;\n  if (!utils.isPOJO(key)) {\n    return;\n  }\n\n  const orig = this.$__.shardval = {};\n  const paths = Object.keys(key);\n  const len = paths.length;\n  let val;\n\n  for (let i = 0; i < len; ++i) {\n    val = this.$__getValue(paths[i]);\n    if (val == null) {\n      orig[paths[i]] = val;\n    } else if (utils.isMongooseObject(val)) {\n      orig[paths[i]] = val.toObject({ depopulate: true, _isNested: true });\n    } else if (val instanceof Date || val[objectIdSymbol]) {\n      orig[paths[i]] = val;\n    } else if (typeof val.valueOf === 'function') {\n      orig[paths[i]] = val.valueOf();\n    } else {\n      orig[paths[i]] = val;\n    }\n  }\n}\n", "'use strict';\n\nconst arrayAtomicsSymbol = require('../helpers/symbols').arrayAtomicsSymbol;\nconst sessionNewDocuments = require('../helpers/symbols').sessionNewDocuments;\nconst utils = require('../utils');\n\nmodule.exports = function trackTransaction(schema) {\n  schema.pre('save', function trackTransactionPreSave() {\n    const session = this.$session();\n    if (session == null) {\n      return;\n    }\n    if (session.transaction == null || session[sessionNewDocuments] == null) {\n      return;\n    }\n\n    if (!session[sessionNewDocuments].has(this)) {\n      const initialState = {};\n      if (this.isNew) {\n        initialState.isNew = true;\n      }\n      if (this.$__schema.options.versionKey) {\n        initialState.versionKey = this.get(this.$__schema.options.versionKey);\n      }\n\n      initialState.modifiedPaths = new Set(Object.keys(this.$__.activePaths.getStatePaths('modify')));\n      initialState.atomics = _getAtomics(this);\n\n      session[sessionNewDocuments].set(this, initialState);\n    } else {\n      const state = session[sessionNewDocuments].get(this);\n\n      for (const path of Object.keys(this.$__.activePaths.getStatePaths('modify'))) {\n        state.modifiedPaths.add(path);\n      }\n      state.atomics = _getAtomics(this, state.atomics);\n    }\n  });\n};\n\nfunction _getAtomics(doc, previous) {\n  const pathToAtomics = new Map();\n  previous = previous || new Map();\n\n  const pathsToCheck = Object.keys(doc.$__.activePaths.init).concat(Object.keys(doc.$__.activePaths.modify));\n\n  for (const path of pathsToCheck) {\n    const val = doc.$__getValue(path);\n    if (val != null &&\n        Array.isArray(val) &&\n        utils.isMongooseDocumentArray(val) &&\n        val.length &&\n        val[arrayAtomicsSymbol] != null &&\n        Object.keys(val[arrayAtomicsSymbol]).length !== 0) {\n      const existing = previous.get(path) || {};\n      pathToAtomics.set(path, mergeAtomics(existing, val[arrayAtomicsSymbol]));\n    }\n  }\n\n  const dirty = doc.$__dirty();\n  for (const dirt of dirty) {\n    const path = dirt.path;\n\n    const val = dirt.value;\n    if (val != null && val[arrayAtomicsSymbol] != null && Object.keys(val[arrayAtomicsSymbol]).length !== 0) {\n      const existing = previous.get(path) || {};\n      pathToAtomics.set(path, mergeAtomics(existing, val[arrayAtomicsSymbol]));\n    }\n  }\n\n  return pathToAtomics;\n}\n\nfunction mergeAtomics(destination, source) {\n  destination = destination || {};\n\n  if (source.$pullAll != null) {\n    destination.$pullAll = (destination.$pullAll || []).concat(source.$pullAll);\n  }\n  if (source.$push != null) {\n    destination.$push = destination.$push || {};\n    destination.$push.$each = (destination.$push.$each || []).concat(source.$push.$each);\n  }\n  if (source.$addToSet != null) {\n    destination.$addToSet = (destination.$addToSet || []).concat(source.$addToSet);\n  }\n  if (source.$set != null) {\n    destination.$set = Object.assign(destination.$set || {}, source.$set);\n  }\n\n  return destination;\n}\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function validateBeforeSave(schema) {\n  const unshift = true;\n  schema.pre('save', false, function validateBeforeSave(next, options) {\n    const _this = this;\n    // Nested docs have their own presave\n    if (this.$isSubdocument) {\n      return next();\n    }\n\n    const hasValidateBeforeSaveOption = options &&\n        (typeof options === 'object') &&\n        ('validateBeforeSave' in options);\n\n    let shouldValidate;\n    if (hasValidateBeforeSaveOption) {\n      shouldValidate = !!options.validateBeforeSave;\n    } else {\n      shouldValidate = this.$__schema.options.validateBeforeSave;\n    }\n\n    // Validate\n    if (shouldValidate) {\n      const hasValidateModifiedOnlyOption = options &&\n          (typeof options === 'object') &&\n          ('validateModifiedOnly' in options);\n      const validateOptions = hasValidateModifiedOnlyOption ?\n        { validateModifiedOnly: options.validateModifiedOnly } :\n        null;\n      this.$validate(validateOptions).then(\n        () => {\n          this.$op = 'save';\n          next();\n        },\n        error => {\n          _this.$__schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {\n            _this.$op = 'save';\n            next(error);\n          });\n        }\n      );\n    } else {\n      next();\n    }\n  }, null, unshift);\n};\n", "'use strict';\n\nexports.removeSubdocs = require('./removeSubdocs');\nexports.saveSubdocs = require('./saveSubdocs');\nexports.sharding = require('./sharding');\nexports.trackTransaction = require('./trackTransaction');\nexports.validateBeforeSave = require('./validateBeforeSave');\n", "'use strict';\n\nconst builtinPlugins = require('../../plugins');\n\nmodule.exports = function applyBuiltinPlugins(schema) {\n  for (const plugin of Object.values(builtinPlugins)) {\n    plugin(schema, { deduplicate: true });\n  }\n  schema.plugins = Object.values(builtinPlugins).\n    map(fn => ({ fn, opts: { deduplicate: true } })).\n    concat(schema.plugins);\n};\n", "'use strict';\nconst schemaMerge = require('../schema/merge');\nconst specialProperties = require('../../helpers/specialProperties');\nconst isBsonType = require('../../helpers/isBsonType');\nconst ObjectId = require('../../types/objectid');\nconst isObject = require('../../helpers/isObject');\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @param {String} [path]\n * @api private\n */\n\nmodule.exports = function mergeDiscriminatorSchema(to, from, path, seen) {\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  path = path || '';\n  seen = seen || new WeakSet();\n\n  if (seen.has(from)) {\n    return;\n  }\n  seen.add(from);\n\n  while (i < len) {\n    key = keys[i++];\n    if (!path) {\n      if (key === 'discriminators' ||\n        key === 'base' ||\n        key === '_applyDiscriminators' ||\n        key === '_userProvidedOptions' ||\n        key === 'options') {\n        continue;\n      }\n    }\n    if (path === 'tree' && from != null && from.instanceOfSchema) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (isObject(from[key])) {\n      if (!isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if ((from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n              (from[key].$isMongooseDocumentArray && to[key].$isSingleNested) ||\n              (from[key].$isMongooseDocumentArrayElement && to[key].$isMongooseDocumentArrayElement)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), true);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (isBsonType(from[key], 'ObjectId')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      mergeDiscriminatorSchema(to[key], from[key], path ? path + '.' + key : key, seen);\n    }\n  }\n};\n", "'use strict';\n\nconst Mixed = require('../../schema/mixed');\nconst applyBuiltinPlugins = require('../schema/applyBuiltinPlugins');\nconst clone = require('../clone');\nconst defineKey = require('../document/compile').defineKey;\nconst get = require('../get');\nconst utils = require('../../utils');\nconst mergeDiscriminatorSchema = require('../../helpers/discriminator/mergeDiscriminatorSchema');\n\nconst CUSTOMIZABLE_DISCRIMINATOR_OPTIONS = {\n  toJSON: true,\n  toObject: true,\n  _id: true,\n  id: true,\n  virtuals: true,\n  methods: true\n};\n\n/*!\n * ignore\n */\n\nmodule.exports = function discriminator(model, name, schema, tiedValue, applyPlugins, mergeHooks) {\n  if (!(schema && schema.instanceOfSchema)) {\n    throw new Error('You must pass a valid discriminator Schema');\n  }\n\n  mergeHooks = mergeHooks == null ? true : mergeHooks;\n\n  if (model.schema.discriminatorMapping &&\n      !model.schema.discriminatorMapping.isRoot) {\n    throw new Error('Discriminator \"' + name +\n        '\" can only be a discriminator of the root model');\n  }\n\n  if (applyPlugins) {\n    const applyPluginsToDiscriminators = get(model.base,\n      'options.applyPluginsToDiscriminators', false) || !mergeHooks;\n    // Even if `applyPluginsToDiscriminators` isn't set, we should still apply\n    // global plugins to schemas embedded in the discriminator schema (gh-7370)\n    model.base._applyPlugins(schema, {\n      skipTopLevel: !applyPluginsToDiscriminators\n    });\n  } else if (!mergeHooks) {\n    applyBuiltinPlugins(schema);\n  }\n\n  const key = model.schema.options.discriminatorKey;\n\n  const existingPath = model.schema.path(key);\n  if (existingPath != null) {\n    if (!utils.hasUserDefinedProperty(existingPath.options, 'select')) {\n      existingPath.options.select = true;\n    }\n    existingPath.options.$skipDiscriminatorCheck = true;\n  } else {\n    const baseSchemaAddition = {};\n    baseSchemaAddition[key] = {\n      default: void 0,\n      select: true,\n      $skipDiscriminatorCheck: true\n    };\n    baseSchemaAddition[key][model.schema.options.typeKey] = String;\n    model.schema.add(baseSchemaAddition);\n    defineKey({\n      prop: key,\n      prototype: model.prototype,\n      options: model.schema.options\n    });\n  }\n\n  if (schema.path(key) && schema.path(key).options.$skipDiscriminatorCheck !== true) {\n    throw new Error('Discriminator \"' + name +\n        '\" cannot have field with name \"' + key + '\"');\n  }\n\n  let value = name;\n  if ((typeof tiedValue === 'string' && tiedValue.length) || tiedValue != null) {\n    value = tiedValue;\n  }\n\n  function merge(schema, baseSchema) {\n    // Retain original schema before merging base schema\n    schema._baseSchema = baseSchema;\n    if (baseSchema.paths._id &&\n        baseSchema.paths._id.options &&\n        !baseSchema.paths._id.options.auto) {\n      schema.remove('_id');\n    }\n\n    // Find conflicting paths: if something is a path in the base schema\n    // and a nested path in the child schema, overwrite the base schema path.\n    // See gh-6076\n    const baseSchemaPaths = Object.keys(baseSchema.paths);\n    const conflictingPaths = [];\n\n    for (const path of baseSchemaPaths) {\n      if (schema.nested[path]) {\n        conflictingPaths.push(path);\n        continue;\n      }\n\n      if (path.indexOf('.') === -1) {\n        continue;\n      }\n      const sp = path.split('.').slice(0, -1);\n      let cur = '';\n      for (const piece of sp) {\n        cur += (cur.length ? '.' : '') + piece;\n        if (schema.paths[cur] instanceof Mixed ||\n            schema.singleNestedPaths[cur] instanceof Mixed) {\n          conflictingPaths.push(path);\n        }\n      }\n    }\n\n    mergeDiscriminatorSchema(schema, baseSchema);\n\n    // Clean up conflicting paths _after_ merging re: gh-6076\n    for (const conflictingPath of conflictingPaths) {\n      delete schema.paths[conflictingPath];\n    }\n\n    // Rebuild schema models because schemas may have been merged re: #7884\n    schema.childSchemas.forEach(obj => {\n      obj.model.prototype.$__setSchema(obj.schema);\n    });\n\n    const obj = {};\n    obj[key] = {\n      default: value,\n      select: true,\n      set: function(newName) {\n        if (newName === value || (Array.isArray(value) && utils.deepEqual(newName, value))) {\n          return value;\n        }\n        throw new Error('Can\\'t set discriminator key \"' + key + '\"');\n      },\n      $skipDiscriminatorCheck: true\n    };\n    obj[key][schema.options.typeKey] = existingPath ? existingPath.options[schema.options.typeKey] : String;\n    schema.add(obj);\n\n    schema.discriminatorMapping = { key: key, value: value, isRoot: false };\n\n    if (baseSchema.options.collection) {\n      schema.options.collection = baseSchema.options.collection;\n    }\n    const toJSON = schema.options.toJSON;\n    const toObject = schema.options.toObject;\n    const _id = schema.options._id;\n    const id = schema.options.id;\n\n    const keys = Object.keys(schema.options);\n    schema.options.discriminatorKey = baseSchema.options.discriminatorKey;\n    const userProvidedOptions = schema._userProvidedOptions;\n    for (const _key of keys) {\n      if (!CUSTOMIZABLE_DISCRIMINATOR_OPTIONS[_key]) {\n        // Use `schema.options` in `deepEqual()` because of `discriminatorKey`\n        // set above. We don't allow customizing discriminator key, always\n        // overwrite. See gh-9238\n        if (_key in userProvidedOptions && !utils.deepEqual(schema.options[_key], baseSchema.options[_key])) {\n          throw new Error('Can\\'t customize discriminator option ' + _key +\n            ' (can only modify ' +\n            Object.keys(CUSTOMIZABLE_DISCRIMINATOR_OPTIONS).join(', ') +\n            ')');\n        }\n      }\n    }\n    schema.options = clone(baseSchema.options);\n\n    for (const _key of Object.keys(userProvidedOptions)) {\n      schema.options[_key] = userProvidedOptions[_key];\n    }\n    if (toJSON) schema.options.toJSON = toJSON;\n    if (toObject) schema.options.toObject = toObject;\n    if (typeof _id !== 'undefined') {\n      schema.options._id = _id;\n    }\n    schema.options.id = id;\n    if (mergeHooks) {\n      schema.s.hooks = model.schema.s.hooks.merge(schema.s.hooks);\n    }\n    if (applyPlugins) {\n      schema.plugins = Array.prototype.slice.call(baseSchema.plugins);\n    }\n    schema.callQueue = baseSchema.callQueue.concat(schema.callQueue);\n    delete schema._requiredpaths; // reset just in case Schema#requiredPaths() was called on either schema\n  }\n\n  // merges base schema into new discriminator schema and sets new type field.\n  merge(schema, model.schema);\n\n  if (!model.discriminators) {\n    model.discriminators = {};\n  }\n\n  if (!model.schema.discriminatorMapping) {\n    model.schema.discriminatorMapping = { key: key, value: null, isRoot: true };\n  }\n  if (!model.schema.discriminators) {\n    model.schema.discriminators = {};\n  }\n\n  model.schema.discriminators[name] = schema;\n\n  if (model.discriminators[name] && !schema.options.overwriteModels) {\n    throw new Error('Discriminator with name \"' + name + '\" already exists');\n  }\n\n  return schema;\n};\n", "'use strict';\n\nconst getDiscriminatorByValue = require('./getDiscriminatorByValue');\n\n/**\n * Find the correct constructor, taking into account discriminators\n * @api private\n */\n\nmodule.exports = function getConstructor(Constructor, value) {\n  const discriminatorKey = Constructor.schema.options.discriminatorKey;\n  if (value != null &&\n      Constructor.discriminators &&\n      value[discriminatorKey] != null) {\n    if (Constructor.discriminators[value[discriminatorKey]]) {\n      Constructor = Constructor.discriminators[value[discriminatorKey]];\n    } else {\n      const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, value[discriminatorKey]);\n      if (constructorByValue) {\n        Constructor = constructorByValue;\n      }\n    }\n  }\n\n  return Constructor;\n};\n", "'use strict';\n\nconst addAutoId = require('./addAutoId');\n\nmodule.exports = function handleIdOption(schema, options) {\n  if (options == null || options._id == null) {\n    return schema;\n  }\n\n  schema = schema.clone();\n  if (!options._id) {\n    schema.remove('_id');\n    schema.options._id = false;\n  } else if (!schema.paths['_id']) {\n    addAutoId(schema);\n    schema.options._id = true;\n  }\n\n  return schema;\n};\n", "\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass InvalidSchemaOptionError extends MongooseError {\n  /**\n   * InvalidSchemaOption Error constructor.\n   * @param {String} name\n   * @api private\n   */\n  constructor(name, option) {\n    const msg = `Cannot create use schema for property \"${name}\" because the schema has the ${option} option enabled.`;\n    super(msg);\n  }\n}\n\nObject.defineProperty(InvalidSchemaOptionError.prototype, 'name', {\n  value: 'InvalidSchemaOptionError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = InvalidSchemaOptionError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\nconst EventEmitter = require('events').EventEmitter;\nconst ObjectExpectedError = require('../error/objectExpected');\nconst SchemaSubdocumentOptions = require('../options/SchemaSubdocumentOptions');\nconst SchemaType = require('../schematype');\nconst applyDefaults = require('../helpers/document/applyDefaults');\nconst $exists = require('./operators/exists');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst discriminator = require('../helpers/model/discriminator');\nconst geospatial = require('./operators/geospatial');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst utils = require('../utils');\nconst InvalidSchemaOptionError = require('../error/invalidSchemaOption');\n\nlet Subdocument;\n\nmodule.exports = SubdocumentPath;\n\n/**\n * Single nested subdocument SchemaType constructor.\n *\n * @param {Schema} schema\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SubdocumentPath(schema, path, options) {\n  if (schema.options.timeseries) {\n    throw new InvalidSchemaOptionError(path, 'timeseries');\n  }\n  const schemaTypeIdOption = SubdocumentPath.defaultOptions &&\n    SubdocumentPath.defaultOptions._id;\n  if (schemaTypeIdOption != null) {\n    options = options || {};\n    options._id = schemaTypeIdOption;\n  }\n\n  schema = handleIdOption(schema, options);\n\n  this.caster = _createConstructor(schema);\n  this.caster.path = path;\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  this.base = schema.base;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype = Object.create(SchemaType.prototype);\nSubdocumentPath.prototype.constructor = SubdocumentPath;\nSubdocumentPath.prototype.OptionsConstructor = SchemaSubdocumentOptions;\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, baseClass) {\n  // lazy load\n  Subdocument || (Subdocument = require('../types/subdocument'));\n\n  const _embedded = function SingleNested(value, path, parent) {\n    this.$__parent = parent;\n    Subdocument.apply(this, arguments);\n\n    if (parent == null) {\n      return;\n    }\n    this.$session(parent.$session());\n  };\n\n  schema._preCompile();\n\n  const proto = baseClass != null ? baseClass.prototype : Subdocument.prototype;\n  _embedded.prototype = Object.create(proto);\n  _embedded.prototype.$__setSchema(schema);\n  _embedded.prototype.constructor = _embedded;\n  _embedded.base = schema.base;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.events = new EventEmitter();\n  _embedded.prototype.toBSON = function() {\n    return this.toObject(internalToObjectOptions);\n  };\n\n  // apply methods\n  for (const i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n\n/**\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\nSubdocumentPath.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val, context) {\n  return { $geometry: this.castForQuery(null, val.$geometry, context) };\n};\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.$conditionalHandlers.$near =\nSubdocumentPath.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\n\nSubdocumentPath.prototype.$conditionalHandlers.$within =\nSubdocumentPath.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\n\nSubdocumentPath.prototype.$conditionalHandlers.$geoIntersects =\n  geospatial.cast$geoIntersects;\n\nSubdocumentPath.prototype.$conditionalHandlers.$minDistance = castToNumber;\nSubdocumentPath.prototype.$conditionalHandlers.$maxDistance = castToNumber;\n\nSubdocumentPath.prototype.$conditionalHandlers.$exists = $exists;\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nSubdocumentPath.prototype.cast = function(val, doc, init, priorVal, options) {\n  if (val && val.$isSingleNested && val.parent === doc) {\n    return val;\n  }\n\n  if (val != null && (typeof val !== 'object' || Array.isArray(val))) {\n    throw new ObjectExpectedError(this.path, val);\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n\n  let subdoc;\n\n  // Only pull relevant selected paths and pull out the base path\n  const parentSelected = doc && doc.$__ && doc.$__.selected;\n  const path = this.path;\n  const selected = parentSelected == null ? null : Object.keys(parentSelected).reduce((obj, key) => {\n    if (key.startsWith(path + '.')) {\n      obj = obj || {};\n      obj[key.substring(path.length + 1)] = parentSelected[key];\n    }\n    return obj;\n  }, null);\n  if (init) {\n    subdoc = new Constructor(void 0, selected, doc, false, { defaults: false });\n    delete subdoc.$__.defaults;\n    subdoc.$init(val);\n    applyDefaults(subdoc, selected);\n  } else {\n    options = Object.assign({}, options, { priorDoc: priorVal });\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, selected, doc, undefined, options);\n    }\n\n    return new Constructor(val, selected, doc, undefined, options);\n  }\n\n  return subdoc;\n};\n\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\nSubdocumentPath.prototype.castForQuery = function($conditional, val, context, options) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val);\n  }\n  if (val == null) {\n    return val;\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n  if (val instanceof Constructor) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val, context);\n  }\n\n  const overrideStrict = options != null && options.strict != null ?\n    options.strict :\n    void 0;\n\n  try {\n    val = new Constructor(val, overrideStrict);\n  } catch (error) {\n    // Make sure we always wrap in a CastError (gh-6803)\n    if (!(error instanceof CastError)) {\n      throw new CastError('Embedded', val, this.path, error, this);\n    }\n    throw error;\n  }\n  return val;\n};\n\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\nSubdocumentPath.prototype.doValidate = function(value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, null, (scope != null && scope.$__ != null) ? scope : null);\n  }\n\n  if (options && options.skipSchemaValidators) {\n    if (!value) {\n      return fn(null);\n    }\n    return value.validate().then(() => fn(null), err => fn(err));\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function(error) {\n    if (error) {\n      return fn(error);\n    }\n    if (!value) {\n      return fn(null);\n    }\n\n    value.validate().then(() => fn(null), err => fn(err));\n  }, scope, options);\n};\n\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\nSubdocumentPath.prototype.doValidateSync = function(value, scope, options) {\n  if (!options || !options.skipSchemaValidators) {\n    const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n    if (schemaTypeError) {\n      return schemaTypeError;\n    }\n  }\n  if (!value) {\n    return;\n  }\n  return value.validateSync();\n};\n\n/**\n * Adds a discriminator to this single nested subdocument.\n *\n * #### Example:\n *\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shape: shapeSchema });\n *\n *     const singleNestedPath = parentSchema.path('shape');\n *     singleNestedPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @see discriminators https://mongoosejs.com/docs/discriminators.html\n * @api public\n */\n\nSubdocumentPath.prototype.discriminator = function(name, schema, options) {\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean'\n    ? options.clone\n    : true;\n\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this.caster, name, schema, value);\n\n  this.caster.discriminators[name] = _createConstructor(schema, this.caster);\n\n  return this.caster.discriminators[name];\n};\n\n/*!\n * ignore\n */\n\nSubdocumentPath.defaultOptions = {};\n\n/**\n * Sets a default option for all SubdocumentPath instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.SubdocumentPath.set('required', true);\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {void}\n * @function set\n * @static\n * @api public\n */\n\nSubdocumentPath.set = SchemaType.set;\n\nSubdocumentPath.setters = [];\n\n/**\n * Attaches a getter for all SubdocumentPath instances\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSubdocumentPath.get = SchemaType.get;\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.toJSON = function toJSON() {\n  return { path: this.path, options: this.options };\n};\n\n/*!\n * ignore\n */\n\nSubdocumentPath.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.schema, this.path, options);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.caster.discriminators = Object.assign({}, this.caster.discriminators);\n  return schematype;\n};\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('../error/mongooseError');\nconst SchemaType = require('../schematype');\nconst SubdocumentPath = require('./SubdocumentPath');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\n\n/**\n * DocumentArrayElement SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction DocumentArrayElement(path, options) {\n  this.$parentSchemaType = options && options.$parentSchemaType;\n  if (!this.$parentSchemaType) {\n    throw new MongooseError('Cannot create DocumentArrayElement schematype without a parent');\n  }\n  delete options.$parentSchemaType;\n\n  SchemaType.call(this, path, options, 'DocumentArrayElement');\n\n  this.$isMongooseDocumentArrayElement = true;\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDocumentArrayElement.schemaName = 'DocumentArrayElement';\n\nDocumentArrayElement.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nDocumentArrayElement.prototype = Object.create(SchemaType.prototype);\nDocumentArrayElement.prototype.constructor = DocumentArrayElement;\n\n/**\n * Casts `val` for DocumentArrayElement.\n *\n * @param {Object} value to cast\n * @api private\n */\n\nDocumentArrayElement.prototype.cast = function(...args) {\n  return this.$parentSchemaType.cast(...args)[0];\n};\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $cond\n * @param {any} [val]\n * @api private\n */\n\nDocumentArrayElement.prototype.doValidate = function(value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, scope, null, null, options && options.index != null ? options.index : null);\n  }\n\n  return SubdocumentPath.prototype.doValidate.call(this, value, fn, scope, options);\n};\n\n/**\n * Clone the current SchemaType\n *\n * @return {DocumentArrayElement} The cloned instance\n * @api private\n */\n\nDocumentArrayElement.prototype.clone = function() {\n  this.options.$parentSchemaType = this.$parentSchemaType;\n  const ret = SchemaType.prototype.clone.apply(this, arguments);\n  delete this.options.$parentSchemaType;\n\n  ret.caster = this.caster;\n  ret.schema = this.schema;\n\n  return ret;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArrayElement;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an Document Array schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ users: [{ name: string }] });\n *     schema.path('users').options; // SchemaDocumentArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaDocumentOptions\n */\n\nclass SchemaDocumentArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If `true`, Mongoose will skip building any indexes defined in this array's schema.\n * If not set, Mongoose will build all indexes defined in this array's schema.\n *\n * #### Example:\n *\n *     const childSchema = Schema({ name: { type: String, index: true } });\n *     // If `excludeIndexes` is `true`, Mongoose will skip building an index\n *     // on `arr.name`. Otherwise, Mongoose will build an index on `arr.name`.\n *     const parentSchema = Schema({\n *       arr: { type: [childSchema], excludeIndexes: true }\n *     });\n *\n * @api public\n * @property excludeIndexes\n * @memberOf SchemaDocumentArrayOptions\n * @type {Array}\n * @instance\n */\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, 'excludeIndexes', opts);\n\n/**\n * If set, overwrites the child schema's `_id` option.\n *\n * #### Example:\n *\n *     const childSchema = Schema({ name: String });\n *     const parentSchema = Schema({\n *       child: { type: childSchema, _id: false }\n *     });\n *     parentSchema.path('child').schema.options._id; // false\n *\n * @api public\n * @property _id\n * @memberOf SchemaDocumentArrayOptions\n * @type {Array}\n * @instance\n */\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, '_id', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaDocumentArrayOptions;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ArrayType = require('./array');\nconst CastError = require('../error/cast');\nconst DocumentArrayElement = require('./DocumentArrayElement');\nconst EventEmitter = require('events').EventEmitter;\nconst SchemaDocumentArrayOptions =\n  require('../options/SchemaDocumentArrayOptions');\nconst SchemaType = require('../schematype');\nconst discriminator = require('../helpers/model/discriminator');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst handleSpreadDoc = require('../helpers/document/handleSpreadDoc');\nconst utils = require('../utils');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\nconst InvalidSchemaOptionError = require('../error/invalidSchemaOption');\n\nconst arrayAtomicsSymbol = require('../helpers/symbols').arrayAtomicsSymbol;\nconst arrayPathSymbol = require('../helpers/symbols').arrayPathSymbol;\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nlet MongooseDocumentArray;\nlet Subdocument;\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @param {Object} schemaOptions\n * @inherits SchemaArray\n * @api public\n */\n\nfunction DocumentArrayPath(key, schema, options, schemaOptions) {\n  if (schema.options && schema.options.timeseries) {\n    throw new InvalidSchemaOptionError(key, 'timeseries');\n  }\n  const schemaTypeIdOption = DocumentArrayPath.defaultOptions &&\n    DocumentArrayPath.defaultOptions._id;\n  if (schemaTypeIdOption != null) {\n    schemaOptions = schemaOptions || {};\n    schemaOptions._id = schemaTypeIdOption;\n  }\n\n  if (schemaOptions != null && schemaOptions._id != null) {\n    schema = handleIdOption(schema, schemaOptions);\n  } else if (options != null && options._id != null) {\n    schema = handleIdOption(schema, options);\n  }\n\n  const EmbeddedDocument = _createConstructor(schema, options);\n  EmbeddedDocument.prototype.$basePath = key;\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  this.schemaOptions = schemaOptions || {};\n  this.$isMongooseDocumentArray = true;\n  this.Constructor = EmbeddedDocument;\n\n  EmbeddedDocument.base = schema.base;\n\n  const fn = this.defaultValue;\n\n  if (!('defaultValue' in this) || fn !== void 0) {\n    this.default(function() {\n      let arr = fn.call(this);\n      if (arr != null && !Array.isArray(arr)) {\n        arr = [arr];\n      }\n      // Leave it up to `cast()` to convert this to a documentarray\n      return arr;\n    });\n  }\n\n  const $parentSchemaType = this;\n  this.$embeddedSchemaType = new DocumentArrayElement(key + '.$', {\n    required: this &&\n      this.schemaOptions &&\n      this.schemaOptions.required || false,\n    $parentSchemaType\n  });\n\n  this.$embeddedSchemaType.caster = this.Constructor;\n  this.$embeddedSchemaType.schema = this.schema;\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDocumentArrayPath.schemaName = 'DocumentArray';\n\n/**\n * Options for all document arrays.\n *\n * - `castNonArrays`: `true` by default. If `false`, Mongoose will throw a CastError when a value isn't an array. If `true`, Mongoose will wrap the provided value in an array before casting.\n *\n * @api public\n */\n\nDocumentArrayPath.options = { castNonArrays: true };\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArrayPath.prototype = Object.create(ArrayType.prototype);\nDocumentArrayPath.prototype.constructor = DocumentArrayPath;\nDocumentArrayPath.prototype.OptionsConstructor = SchemaDocumentArrayOptions;\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, options, baseClass) {\n  Subdocument || (Subdocument = require('../types/ArraySubdocument'));\n\n  // compile an embedded document for this schema\n  function EmbeddedDocument() {\n    Subdocument.apply(this, arguments);\n    if (this.__parentArray == null || this.__parentArray.getArrayParent() == null) {\n      return;\n    }\n    this.$session(this.__parentArray.getArrayParent().$session());\n  }\n\n  schema._preCompile();\n\n  const proto = baseClass != null ? baseClass.prototype : Subdocument.prototype;\n  EmbeddedDocument.prototype = Object.create(proto);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n  EmbeddedDocument.prototype.constructor = EmbeddedDocument;\n  EmbeddedDocument.$isArraySubdocument = true;\n  EmbeddedDocument.events = new EventEmitter();\n  EmbeddedDocument.base = schema.base;\n\n  // apply methods\n  for (const i in schema.methods) {\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    EmbeddedDocument[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    EmbeddedDocument[i] = EventEmitter.prototype[i];\n  }\n\n  EmbeddedDocument.options = options;\n\n  return EmbeddedDocument;\n}\n\n/**\n * Adds a discriminator to this document array.\n *\n * #### Example:\n *\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shapes: [shapeSchema] });\n *\n *     const docArrayPath = parentSchema.path('shapes');\n *     docArrayPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @see discriminators https://mongoosejs.com/docs/discriminators.html\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @api public\n */\n\nDocumentArrayPath.prototype.discriminator = function(name, schema, options) {\n  if (typeof name === 'function') {\n    name = utils.getFunctionName(name);\n  }\n\n  options = options || {};\n  const tiedValue = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean' ? options.clone : true;\n\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this.casterConstructor, name, schema, tiedValue);\n\n  const EmbeddedDocument = _createConstructor(schema, null, this.casterConstructor);\n  EmbeddedDocument.baseCasterConstructor = this.casterConstructor;\n\n  try {\n    Object.defineProperty(EmbeddedDocument, 'name', {\n      value: name\n    });\n  } catch (error) {\n    // Ignore error, only happens on old versions of node\n  }\n\n  this.casterConstructor.discriminators[name] = EmbeddedDocument;\n\n  return this.casterConstructor.discriminators[name];\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArrayPath.prototype.doValidate = function(array, fn, scope, options) {\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/DocumentArray'));\n\n  const _this = this;\n  try {\n    SchemaType.prototype.doValidate.call(this, array, cb, scope);\n  } catch (err) {\n    return fn(err);\n  }\n\n  function cb(err) {\n    if (err) {\n      return fn(err);\n    }\n\n    let count = array && array.length;\n    let error;\n\n    if (!count) {\n      return fn();\n    }\n    if (options && options.updateValidator) {\n      return fn();\n    }\n    if (!utils.isMongooseDocumentArray(array)) {\n      array = new MongooseDocumentArray(array, _this.path, scope);\n    }\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    function callback(err) {\n      if (err != null) {\n        error = err;\n      }\n      --count || fn(error);\n    }\n\n    for (let i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      let doc = array[i];\n      if (doc == null) {\n        --count || fn(error);\n        continue;\n      }\n\n      // If you set the array index directly, the doc might not yet be\n      // a full fledged mongoose subdoc, so make it into one.\n      if (!(doc instanceof Subdocument)) {\n        const Constructor = getConstructor(_this.casterConstructor, array[i]);\n        doc = array[i] = new Constructor(doc, array, undefined, undefined, i);\n      }\n\n      if (options != null && options.validateModifiedOnly && !doc.$isModified()) {\n        --count || fn(error);\n        continue;\n      }\n\n      doc.$__validate(callback);\n    }\n  }\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * #### Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArrayPath.prototype.doValidateSync = function(array, scope, options) {\n  const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError != null) {\n    return schemaTypeError;\n  }\n\n  const count = array && array.length;\n  let resultError = null;\n\n  if (!count) {\n    return;\n  }\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (let i = 0, len = count; i < len; ++i) {\n    // sidestep sparse entries\n    let doc = array[i];\n    if (!doc) {\n      continue;\n    }\n\n    // If you set the array index directly, the doc might not yet be\n    // a full fledged mongoose subdoc, so make it into one.\n    if (!(doc instanceof Subdocument)) {\n      const Constructor = getConstructor(this.casterConstructor, array[i]);\n      doc = array[i] = new Constructor(doc, array, undefined, undefined, i);\n    }\n\n    if (options != null && options.validateModifiedOnly && !doc.$isModified()) {\n      continue;\n    }\n\n    const subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError && resultError == null) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.getDefault = function(scope, init, options) {\n  let ret = typeof this.defaultValue === 'function'\n    ? this.defaultValue.call(scope)\n    : this.defaultValue;\n\n  if (ret == null) {\n    return ret;\n  }\n\n  if (options && options.skipCast) {\n    return ret;\n  }\n\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/DocumentArray'));\n\n  if (!Array.isArray(ret)) {\n    ret = [ret];\n  }\n\n  ret = new MongooseDocumentArray(ret, this.path, scope);\n\n  for (let i = 0; i < ret.length; ++i) {\n    const Constructor = getConstructor(this.casterConstructor, ret[i]);\n    const _subdoc = new Constructor({}, ret, undefined,\n      undefined, i);\n    _subdoc.$init(ret[i]);\n    _subdoc.isNew = true;\n\n    // Make sure all paths in the subdoc are set to `default` instead\n    // of `init` since we used `init`.\n    Object.assign(_subdoc.$__.activePaths.default, _subdoc.$__.activePaths.init);\n    _subdoc.$__.activePaths.init = {};\n\n    ret[i] = _subdoc;\n  }\n\n  return ret;\n};\n\nconst _toObjectOptions = Object.freeze({ transform: false, virtuals: false });\nconst initDocumentOptions = Object.freeze({ skipId: false, willInit: true });\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArrayPath.prototype.cast = function(value, doc, init, prev, options) {\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/DocumentArray'));\n\n  // Skip casting if `value` is the same as the previous value, no need to cast. See gh-9266\n  if (value != null && value[arrayPathSymbol] != null && value === prev) {\n    return value;\n  }\n\n  let selected;\n  let subdoc;\n\n  options = options || {};\n\n  const path = options.path || this.path;\n\n  if (!Array.isArray(value)) {\n    if (!init && !DocumentArrayPath.options.castNonArrays) {\n      throw new CastError('DocumentArray', value, this.path, null, this);\n    }\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(path);\n    }\n    return this.cast([value], doc, init, prev, options);\n  }\n\n  // We need to create a new array, otherwise change tracking will\n  // update the old doc (gh-4449)\n  if (!options.skipDocumentArrayCast || utils.isMongooseDocumentArray(value)) {\n    value = new MongooseDocumentArray(value, path, doc);\n  }\n\n  if (prev != null) {\n    value[arrayAtomicsSymbol] = prev[arrayAtomicsSymbol] || {};\n  }\n\n  if (options.arrayPathIndex != null) {\n    value[arrayPathSymbol] = path + '.' + options.arrayPathIndex;\n  }\n\n  const rawArray = utils.isMongooseDocumentArray(value) ? value.__array : value;\n  const len = rawArray.length;\n\n  for (let i = 0; i < len; ++i) {\n    if (!rawArray[i]) {\n      continue;\n    }\n\n    const Constructor = getConstructor(this.casterConstructor, rawArray[i]);\n\n    // Check if the document has a different schema (re gh-3701)\n    if (rawArray[i].$__ != null && !(rawArray[i] instanceof Constructor)) {\n      const spreadDoc = handleSpreadDoc(rawArray[i], true);\n      if (rawArray[i] !== spreadDoc) {\n        rawArray[i] = spreadDoc;\n      } else {\n        rawArray[i] = rawArray[i].toObject({\n          transform: false,\n          // Special case: if different model, but same schema, apply virtuals\n          // re: gh-7898\n          virtuals: rawArray[i].schema === Constructor.schema\n        });\n      }\n    }\n\n    if (rawArray[i] instanceof Subdocument) {\n      if (rawArray[i][documentArrayParent] !== doc) {\n        if (init) {\n          const subdoc = new Constructor(null, value, initDocumentOptions, selected, i);\n          rawArray[i] = subdoc.$init(rawArray[i]);\n        } else {\n          const subdoc = new Constructor(rawArray[i], value, undefined, undefined, i);\n          rawArray[i] = subdoc;\n        }\n      }\n      // Might not have the correct index yet, so ensure it does.\n      if (rawArray[i].__index == null) {\n        rawArray[i].$setIndex(i);\n      }\n    } else if (rawArray[i] != null) {\n      if (init) {\n        if (doc) {\n          selected || (selected = scopePaths(this, doc.$__.selected, init));\n        } else {\n          selected = true;\n        }\n\n        subdoc = new Constructor(null, value, initDocumentOptions, selected, i);\n        rawArray[i] = subdoc.$init(rawArray[i]);\n      } else {\n        if (prev && typeof prev.id === 'function') {\n          subdoc = prev.id(rawArray[i]._id);\n        }\n\n        if (prev && subdoc && utils.deepEqual(subdoc.toObject(_toObjectOptions), rawArray[i])) {\n          // handle resetting doc with existing id and same data\n          subdoc.set(rawArray[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          rawArray[i] = subdoc;\n        } else {\n          try {\n            subdoc = new Constructor(rawArray[i], value, undefined,\n              undefined, i);\n            // if set() is hooked it will have no return value\n            // see gh-746\n            rawArray[i] = subdoc;\n          } catch (error) {\n            throw new CastError('embedded', rawArray[i],\n              value[arrayPathSymbol], error, this);\n          }\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.path, this.schema, options, this.schemaOptions);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.Constructor.discriminators = Object.assign({},\n    this.Constructor.discriminators);\n  return schematype;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.applyGetters = function(value, scope) {\n  return SchemaType.prototype.applyGetters.call(this, value, scope);\n};\n\n/**\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArrayPath} array the array to scope `fields` paths\n * @param {Object|undefined} fields the root fields selected in the query\n * @param {Boolean|undefined} init if we are being created part of a query result\n * @api private\n */\n\nfunction scopePaths(array, fields, init) {\n  if (!(init && fields)) {\n    return undefined;\n  }\n\n  const path = array.path + '.';\n  const keys = Object.keys(fields);\n  let i = keys.length;\n  const selected = {};\n  let hasKeys;\n  let key;\n  let sub;\n\n  while (i--) {\n    key = keys[i];\n    if (key.startsWith(path)) {\n      sub = key.substring(path.length);\n      if (sub === '$') {\n        continue;\n      }\n      if (sub.startsWith('$.')) {\n        sub = sub.substring(2);\n      }\n      hasKeys || (hasKeys = true);\n      selected[sub] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.defaultOptions = {};\n\n/**\n * Sets a default option for all DocumentArray instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.DocumentArray.set('_id', false);\n *\n * @param {String} option The name of the option you'd like to set (e.g. trim, lowercase, etc...)\n * @param {Any} value The value of the option you'd like to set.\n * @return {void}\n * @function set\n * @static\n * @api public\n */\n\nDocumentArrayPath.set = SchemaType.set;\n\nDocumentArrayPath.setters = [];\n\n/**\n * Attaches a getter for all DocumentArrayPath instances\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nDocumentArrayPath.get = SchemaType.get;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArrayPath;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a Map schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ socialMediaHandles: { type: Map, of: String } });\n *     schema.path('socialMediaHandles').options; // SchemaMapOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaMapOptions\n */\n\nclass SchemaMapOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, specifies the type of this map's values. Mongoose will cast\n * this map's values to the given type.\n *\n * If not set, Mongoose will not cast the map's values.\n *\n * #### Example:\n *\n *     // Mongoose will cast `socialMediaHandles` values to strings\n *     const schema = new Schema({ socialMediaHandles: { type: Map, of: String } });\n *     schema.path('socialMediaHandles').options.of; // String\n *\n * @api public\n * @property of\n * @memberOf SchemaMapOptions\n * @type {Function|string}\n * @instance\n */\n\nObject.defineProperty(SchemaMapOptions.prototype, 'of', opts);\n\nmodule.exports = SchemaMapOptions;\n", "'use strict';\n\n/*!\n * ignore\n */\n\nconst MongooseMap = require('../types/map');\nconst SchemaMapOptions = require('../options/SchemaMapOptions');\nconst SchemaType = require('../schematype');\n/*!\n * ignore\n */\n\nclass Map extends SchemaType {\n  constructor(key, options) {\n    super(key, options, 'Map');\n    this.$isSchemaMap = true;\n  }\n\n  set(option, value) {\n    return SchemaType.set(option, value);\n  }\n\n  cast(val, doc, init) {\n    if (val instanceof MongooseMap) {\n      return val;\n    }\n\n    const path = this.path;\n\n    if (init) {\n      const map = new MongooseMap({}, path, doc, this.$__schemaType);\n\n      if (val instanceof global.Map) {\n        for (const key of val.keys()) {\n          let _val = val.get(key);\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\n          }\n          map.$init(key, _val);\n        }\n      } else {\n        for (const key of Object.keys(val)) {\n          let _val = val[key];\n          if (_val == null) {\n            _val = map.$__schemaType._castNullish(_val);\n          } else {\n            _val = map.$__schemaType.cast(_val, doc, true, null, { path: path + '.' + key });\n          }\n          map.$init(key, _val);\n        }\n      }\n\n      return map;\n    }\n\n    return new MongooseMap(val, path, doc, this.$__schemaType);\n  }\n\n  clone() {\n    const schematype = super.clone();\n\n    if (this.$__schemaType != null) {\n      schematype.$__schemaType = this.$__schemaType.clone();\n    }\n    return schematype;\n  }\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nMap.schemaName = 'Map';\n\nMap.prototype.OptionsConstructor = SchemaMapOptions;\n\nMap.defaultOptions = {};\n\nmodule.exports = Map;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an ObjectId schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ testId: mongoose.ObjectId });\n *     schema.path('testId').options; // SchemaObjectIdOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaObjectIdOptions\n */\n\nclass SchemaObjectIdOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If truthy, uses Mongoose's default built-in ObjectId path.\n *\n * @api public\n * @property auto\n * @memberOf SchemaObjectIdOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'auto', opts);\n\n/**\n * Sets default [populate options](https://mongoosejs.com/docs/populate.html#query-conditions).\n *\n * #### Example:\n *\n *     const schema = new Schema({\n *       child: {\n *         type: 'ObjectId',\n *         ref: 'Child',\n *         populate: { select: 'name' }\n *       }\n *     });\n *     const Parent = mongoose.model('Parent', schema);\n *\n *     // Automatically adds `.select('name')`\n *     Parent.findOne().populate('child');\n *\n * @api public\n * @property populate\n * @memberOf SchemaObjectIdOptions\n * @type {Object}\n * @instance\n */\n\nObject.defineProperty(SchemaObjectIdOptions.prototype, 'populate', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaObjectIdOptions;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst SchemaObjectIdOptions = require('../options/SchemaObjectIdOptions');\nconst SchemaType = require('../schematype');\nconst castObjectId = require('../cast/objectid');\nconst getConstructorName = require('../helpers/getConstructorName');\nconst oid = require('../types/objectid');\nconst isBsonType = require('../helpers/isBsonType');\nconst utils = require('../utils');\n\nconst CastError = SchemaType.CastError;\nlet Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  const isKeyHexStr = typeof key === 'string' && key.length === 24 && /^[a-f0-9]+$/i.test(key);\n  const suppressWarning = options && options.suppressWarning;\n  if ((isKeyHexStr || typeof key === 'undefined') && !suppressWarning) {\n    utils.warn('mongoose: To create a new ObjectId please try ' +\n      '`Mongoose.Types.ObjectId` instead of using ' +\n      '`Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if ' +\n      'you\\'re trying to create a hex char path in your schema.');\n  }\n  SchemaType.call(this, key, options, 'ObjectId');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\nObjectId.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\nObjectId.prototype.OptionsConstructor = SchemaObjectIdOptions;\n\n/**\n * Attaches a getter for all ObjectId instances\n *\n * #### Example:\n *\n *     // Always convert to string when getting an ObjectId\n *     mongoose.ObjectId.get(v => v.toString());\n *\n *     const Model = mongoose.model('Test', new Schema({}));\n *     typeof (new Model({})._id); // 'string'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nObjectId.get = SchemaType.get;\n\n/**\n * Sets a default option for all ObjectId instances.\n *\n * #### Example:\n *\n *     // Make all object ids have option `required` equal to true.\n *     mongoose.Schema.ObjectId.set('required', true);\n *\n *     const Order = mongoose.model('Order', new Schema({ userId: ObjectId }));\n *     new Order({ }).validateSync().errors.userId.message; // Path `userId` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nObjectId.set = SchemaType.set;\n\nObjectId.setters = [];\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nObjectId._checkRequired = v => isBsonType(v, 'ObjectId');\n\n/*!\n * ignore\n */\n\nObjectId._cast = castObjectId;\n\n/**\n * Get/set the function used to cast arbitrary values to objectids.\n *\n * #### Example:\n *\n *     // Make Mongoose only try to cast length 24 strings. By default, any 12\n *     // char string is a valid ObjectId.\n *     const original = mongoose.ObjectId.cast();\n *     mongoose.ObjectId.cast(v => {\n *       assert.ok(typeof v !== 'string' || v.length === 24);\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.ObjectId.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nObjectId.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nObjectId._defaultCaster = v => {\n  if (!(isBsonType(v, 'ObjectId'))) {\n    throw new Error(v + ' is not an instance of ObjectId');\n  }\n  return v;\n};\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * #### Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ str: { type: String, required: true } });\n *     new M({ str: '' }).validateSync(); // `null`, validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nObjectId.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    ObjectId.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (!(isBsonType(value, 'ObjectId')) && SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n    if ((getConstructorName(value) || '').toLowerCase() === 'objectid') {\n      return new oid(value.toHexString());\n    }\n\n    if (value == null || utils.isNonBuiltinObject(value)) {\n      return this._castRef(value, doc, init);\n    }\n  }\n\n  let castObjectId;\n  if (typeof this._castFunction === 'function') {\n    castObjectId = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castObjectId = this.constructor.cast();\n  } else {\n    castObjectId = ObjectId.cast();\n  }\n\n  try {\n    return castObjectId(value);\n  } catch (error) {\n    throw new CastError('ObjectId', value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\ndefaultId.$runBeforeSetters = true;\n\nfunction resetId(v) {\n  Document || (Document = require('./../document'));\n\n  if (this instanceof Document) {\n    if (v === void 0) {\n      const _v = new oid();\n      return _v;\n    }\n  }\n\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n", "'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a string schematype.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String });\n *     schema.path('name').options; // SchemaStringOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaStringOptions\n */\n\nclass SchemaStringOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * Array of allowed values for this path\n *\n * @api public\n * @property enum\n * @memberOf SchemaStringOptions\n * @type {Array}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'enum', opts);\n\n/**\n * Attach a validator that succeeds if the data string matches the given regular\n * expression, and fails otherwise.\n *\n * @api public\n * @property match\n * @memberOf SchemaStringOptions\n * @type {RegExp}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'match', opts);\n\n/**\n * If truthy, Mongoose will add a custom setter that lowercases this string\n * using JavaScript's built-in `String#toLowerCase()`.\n *\n * @api public\n * @property lowercase\n * @memberOf SchemaStringOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'lowercase', opts);\n\n/**\n * If truthy, Mongoose will add a custom setter that removes leading and trailing\n * whitespace using [JavaScript's built-in `String#trim()`](https://masteringjs.io/tutorials/fundamentals/trim-string).\n *\n * @api public\n * @property trim\n * @memberOf SchemaStringOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'trim', opts);\n\n/**\n * If truthy, Mongoose will add a custom setter that uppercases this string\n * using JavaScript's built-in [`String#toUpperCase()`](https://masteringjs.io/tutorials/fundamentals/uppercase).\n *\n * @api public\n * @property uppercase\n * @memberOf SchemaStringOptions\n * @type {Boolean}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'uppercase', opts);\n\n/**\n * If set, Mongoose will add a custom validator that ensures the given\n * string's `length` is at least the given number.\n *\n * Mongoose supports two different spellings for this option: `minLength` and `minlength`.\n * `minLength` is the recommended way to specify this option, but Mongoose also supports\n * `minlength` (lowercase \"l\").\n *\n * @api public\n * @property minLength\n * @memberOf SchemaStringOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'minLength', opts);\nObject.defineProperty(SchemaStringOptions.prototype, 'minlength', opts);\n\n/**\n * If set, Mongoose will add a custom validator that ensures the given\n * string's `length` is at most the given number.\n *\n * Mongoose supports two different spellings for this option: `maxLength` and `maxlength`.\n * `maxLength` is the recommended way to specify this option, but Mongoose also supports\n * `maxlength` (lowercase \"l\").\n *\n * @api public\n * @property maxLength\n * @memberOf SchemaStringOptions\n * @type {Number}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'maxLength', opts);\nObject.defineProperty(SchemaStringOptions.prototype, 'maxlength', opts);\n\n/**\n * Sets default [populate options](https://mongoosejs.com/docs/populate.html#query-conditions).\n *\n * @api public\n * @property populate\n * @memberOf SchemaStringOptions\n * @type {Object}\n * @instance\n */\n\nObject.defineProperty(SchemaStringOptions.prototype, 'populate', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaStringOptions;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst SchemaType = require('../schematype');\nconst MongooseError = require('../error/index');\nconst SchemaStringOptions = require('../options/SchemaStringOptions');\nconst castString = require('../cast/string');\nconst utils = require('../utils');\nconst isBsonType = require('../helpers/isBsonType');\n\nconst CastError = SchemaType.CastError;\n\n/**\n * String SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaString(key, options) {\n  this.enumValues = [];\n  this.regExp = null;\n  SchemaType.call(this, key, options, 'String');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaString.schemaName = 'String';\n\nSchemaString.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaString.prototype = Object.create(SchemaType.prototype);\nSchemaString.prototype.constructor = SchemaString;\nObject.defineProperty(SchemaString.prototype, 'OptionsConstructor', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: SchemaStringOptions\n});\n\n/*!\n * ignore\n */\n\nSchemaString._cast = castString;\n\n/**\n * Get/set the function used to cast arbitrary values to strings.\n *\n * #### Example:\n *\n *     // Throw an error if you pass in an object. Normally, Mongoose allows\n *     // objects with custom `toString()` functions.\n *     const original = mongoose.Schema.Types.String.cast();\n *     mongoose.Schema.Types.String.cast(v => {\n *       assert.ok(v == null || typeof v !== 'object');\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.Schema.Types.String.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaString.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaString._defaultCaster = v => {\n  if (v != null && typeof v !== 'string') {\n    throw new Error();\n  }\n  return v;\n};\n\n/**\n * Attaches a getter for all String instances.\n *\n * #### Example:\n *\n *     // Make all numbers round down\n *     mongoose.Schema.String.get(v => v.toLowerCase());\n *\n *     const Model = mongoose.model('Test', new Schema({ test: String }));\n *     new Model({ test: 'FOO' }).test; // 'foo'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaString.get = SchemaType.get;\n\n/**\n * Sets a default option for all String instances.\n *\n * #### Example:\n *\n *     // Make all strings have option `trim` equal to true.\n *     mongoose.Schema.String.set('trim', true);\n *\n *     const User = mongoose.model('User', new Schema({ name: String }));\n *     new User({ name: '   John Doe   ' }).name; // 'John Doe'\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaString.set = SchemaType.set;\n\nSchemaString.setters = [];\n\n/*!\n * ignore\n */\n\nSchemaString._checkRequired = v => (v instanceof String || typeof v === 'string') && v.length;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * #### Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ str: { type: String, required: true } });\n *     new M({ str: '' }).validateSync(); // `null`, validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaString.checkRequired = SchemaType.checkRequired;\n\n/**\n * Adds an enum validator\n *\n * #### Example:\n *\n *     const states = ['opening', 'open', 'closing', 'closed']\n *     const s = new Schema({ state: { type: String, enum: states }})\n *     const M = db.model('M', s)\n *     const m = new M({ state: 'invalid' })\n *     m.save(function (err) {\n *       console.error(String(err)) // ValidationError: `invalid` is not a valid enum value for path `state`.\n *       m.state = 'open'\n *       m.save(callback) // success\n *     })\n *\n *     // or with custom error messages\n *     const enum = {\n *       values: ['opening', 'open', 'closing', 'closed'],\n *       message: 'enum validator failed for path `{PATH}` with value `{VALUE}`'\n *     }\n *     const s = new Schema({ state: { type: String, enum: enum })\n *     const M = db.model('M', s)\n *     const m = new M({ state: 'invalid' })\n *     m.save(function (err) {\n *       console.error(String(err)) // ValidationError: enum validator failed for path `state` with value `invalid`\n *       m.state = 'open'\n *       m.save(callback) // success\n *     })\n *\n * @param {...String|Object} [args] enumeration values\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @see Enums in JavaScript https://masteringjs.io/tutorials/fundamentals/enum\n * @api public\n */\n\nSchemaString.prototype.enum = function() {\n  if (this.enumValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.enumValidator;\n    }, this);\n    this.enumValidator = false;\n  }\n\n  if (arguments[0] === void 0 || arguments[0] === false) {\n    return this;\n  }\n\n  let values;\n  let errorMessage;\n\n  if (utils.isObject(arguments[0])) {\n    if (Array.isArray(arguments[0].values)) {\n      values = arguments[0].values;\n      errorMessage = arguments[0].message;\n    } else {\n      values = utils.object.vals(arguments[0]);\n      errorMessage = MongooseError.messages.String.enum;\n    }\n  } else {\n    values = arguments;\n    errorMessage = MongooseError.messages.String.enum;\n  }\n\n  for (const value of values) {\n    if (value !== undefined) {\n      this.enumValues.push(this.cast(value));\n    }\n  }\n\n  const vals = this.enumValues;\n  this.enumValidator = function(v) {\n    return undefined === v || ~vals.indexOf(v);\n  };\n  this.validators.push({\n    validator: this.enumValidator,\n    message: errorMessage,\n    type: 'enum',\n    enumValues: vals\n  });\n\n  return this;\n};\n\n/**\n * Adds a lowercase [setter](https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.set()).\n *\n * #### Example:\n *\n *     const s = new Schema({ email: { type: String, lowercase: true }})\n *     const M = db.model('M', s);\n *     const m = new M({ email: 'SomeEmail@example.COM' });\n *     console.log(m.email) // someemail@example.com\n *     M.find({ email: 'SomeEmail@example.com' }); // Queries by 'someemail@example.com'\n *\n * Note that `lowercase` does **not** affect regular expression queries:\n *\n * #### Example:\n *\n *     // Still queries for documents whose `email` matches the regular\n *     // expression /SomeEmail/. Mongoose does **not** convert the RegExp\n *     // to lowercase.\n *     M.find({ email: /SomeEmail/ });\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.lowercase = function(shouldApply) {\n  if (arguments.length > 0 && !shouldApply) {\n    return this;\n  }\n  return this.set(v => {\n    if (typeof v !== 'string') {\n      v = this.cast(v);\n    }\n    if (v) {\n      return v.toLowerCase();\n    }\n    return v;\n  });\n};\n\n/**\n * Adds an uppercase [setter](https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.set()).\n *\n * #### Example:\n *\n *     const s = new Schema({ caps: { type: String, uppercase: true }})\n *     const M = db.model('M', s);\n *     const m = new M({ caps: 'an example' });\n *     console.log(m.caps) // AN EXAMPLE\n *     M.find({ caps: 'an example' }) // Matches documents where caps = 'AN EXAMPLE'\n *\n * Note that `uppercase` does **not** affect regular expression queries:\n *\n * #### Example:\n *\n *     // Mongoose does **not** convert the RegExp to uppercase.\n *     M.find({ email: /an example/ });\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.uppercase = function(shouldApply) {\n  if (arguments.length > 0 && !shouldApply) {\n    return this;\n  }\n  return this.set(v => {\n    if (typeof v !== 'string') {\n      v = this.cast(v);\n    }\n    if (v) {\n      return v.toUpperCase();\n    }\n    return v;\n  });\n};\n\n/**\n * Adds a trim [setter](https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.set()).\n *\n * The string value will be [trimmed](https://masteringjs.io/tutorials/fundamentals/trim-string) when set.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: { type: String, trim: true }});\n *     const M = db.model('M', s);\n *     const string = ' some name ';\n *     console.log(string.length); // 11\n *     const m = new M({ name: string });\n *     console.log(m.name.length); // 9\n *\n *     // Equivalent to `findOne({ name: string.trim() })`\n *     M.findOne({ name: string });\n *\n * Note that `trim` does **not** affect regular expression queries:\n *\n * #### Example:\n *\n *     // Mongoose does **not** trim whitespace from the RegExp.\n *     M.find({ name: / some name / });\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.trim = function(shouldTrim) {\n  if (arguments.length > 0 && !shouldTrim) {\n    return this;\n  }\n  return this.set(v => {\n    if (typeof v !== 'string') {\n      v = this.cast(v);\n    }\n    if (v) {\n      return v.trim();\n    }\n    return v;\n  });\n};\n\n/**\n * Sets a minimum length validator.\n *\n * #### Example:\n *\n *     const schema = new Schema({ postalCode: { type: String, minlength: 5 })\n *     const Address = db.model('Address', schema)\n *     const address = new Address({ postalCode: '9512' })\n *     address.save(function (err) {\n *       console.error(err) // validator error\n *       address.postalCode = '95125';\n *       address.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MINLENGTH} token which will be replaced with the minimum allowed length\n *     const minlength = [5, 'The value of path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).'];\n *     const schema = new Schema({ postalCode: { type: String, minlength: minlength })\n *     const Address = mongoose.model('Address', schema);\n *     const address = new Address({ postalCode: '9512' });\n *     address.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512`) is shorter than the minimum length (5).\n *     })\n *\n * @param {Number} value minimum string length\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaString.prototype.minlength = function(value, message) {\n  if (this.minlengthValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.minlengthValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    let msg = message || MongooseError.messages.String.minlength;\n    msg = msg.replace(/{MINLENGTH}/, value);\n    this.validators.push({\n      validator: this.minlengthValidator = function(v) {\n        return v === null || v.length >= value;\n      },\n      message: msg,\n      type: 'minlength',\n      minlength: value\n    });\n  }\n\n  return this;\n};\n\nSchemaString.prototype.minLength = SchemaString.prototype.minlength;\n\n/**\n * Sets a maximum length validator.\n *\n * #### Example:\n *\n *     const schema = new Schema({ postalCode: { type: String, maxlength: 9 })\n *     const Address = db.model('Address', schema)\n *     const address = new Address({ postalCode: '9512512345' })\n *     address.save(function (err) {\n *       console.error(err) // validator error\n *       address.postalCode = '95125';\n *       address.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAXLENGTH} token which will be replaced with the maximum allowed length\n *     const maxlength = [9, 'The value of path `{PATH}` (`{VALUE}`) exceeds the maximum allowed length ({MAXLENGTH}).'];\n *     const schema = new Schema({ postalCode: { type: String, maxlength: maxlength })\n *     const Address = mongoose.model('Address', schema);\n *     const address = new Address({ postalCode: '9512512345' });\n *     address.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512512345`) exceeds the maximum allowed length (9).\n *     })\n *\n * @param {Number} value maximum string length\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaString.prototype.maxlength = function(value, message) {\n  if (this.maxlengthValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.maxlengthValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    let msg = message || MongooseError.messages.String.maxlength;\n    msg = msg.replace(/{MAXLENGTH}/, value);\n    this.validators.push({\n      validator: this.maxlengthValidator = function(v) {\n        return v === null || v.length <= value;\n      },\n      message: msg,\n      type: 'maxlength',\n      maxlength: value\n    });\n  }\n\n  return this;\n};\n\nSchemaString.prototype.maxLength = SchemaString.prototype.maxlength;\n\n/**\n * Sets a regexp validator.\n *\n * Any value that does not pass `regExp`.test(val) will fail validation.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: { type: String, match: /^a/ }})\n *     const M = db.model('M', s)\n *     const m = new M({ name: 'I am invalid' })\n *     m.validate(function (err) {\n *       console.error(String(err)) // \"ValidationError: Path `name` is invalid (I am invalid).\"\n *       m.name = 'apples'\n *       m.validate(function (err) {\n *         assert.ok(err) // success\n *       })\n *     })\n *\n *     // using a custom error message\n *     const match = [ /\\.html$/, \"That file doesn't end in .html ({VALUE})\" ];\n *     const s = new Schema({ file: { type: String, match: match }})\n *     const M = db.model('M', s);\n *     const m = new M({ file: 'invalid' });\n *     m.validate(function (err) {\n *       console.log(String(err)) // \"ValidationError: That file doesn't end in .html (invalid)\"\n *     })\n *\n * Empty strings, `undefined`, and `null` values always pass the match validator. If you require these values, enable the `required` validator also.\n *\n *     const s = new Schema({ name: { type: String, match: /^a/, required: true }})\n *\n * @param {RegExp} regExp regular expression to test against\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages https://mongoosejs.com/docs/api/error.html#Error.messages\n * @api public\n */\n\nSchemaString.prototype.match = function match(regExp, message) {\n  // yes, we allow multiple match validators\n\n  const msg = message || MongooseError.messages.String.match;\n\n  const matchValidator = function(v) {\n    if (!regExp) {\n      return false;\n    }\n\n    // In case RegExp happens to have `/g` flag set, we need to reset the\n    // `lastIndex`, otherwise `match` will intermittently fail.\n    regExp.lastIndex = 0;\n\n    const ret = ((v != null && v !== '')\n      ? regExp.test(v)\n      : true);\n    return ret;\n  };\n\n  this.validators.push({\n    validator: matchValidator,\n    message: msg,\n    type: 'regexp',\n    regexp: regExp\n  });\n  return this;\n};\n\n/**\n * Check if the given value satisfies the `required` validator. The value is\n * considered valid if it is a string (that is, not `null` or `undefined`) and\n * has positive length. The `required` validator **will** fail for empty\n * strings.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaString.prototype.checkRequired = function checkRequired(value, doc) {\n  if (typeof value === 'object' && SchemaType._isRef(this, value, doc, true)) {\n    return value != null;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired === 'function' ?\n    this.constructor.checkRequired() :\n    SchemaString.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Casts to String\n *\n * @api private\n */\n\nSchemaString.prototype.cast = function(value, doc, init) {\n  if (typeof value !== 'string' && SchemaType._isRef(this, value, doc, init)) {\n    return this._castRef(value, doc, init);\n  }\n\n  let castString;\n  if (typeof this._castFunction === 'function') {\n    castString = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castString = this.constructor.cast();\n  } else {\n    castString = SchemaString.cast();\n  }\n\n  try {\n    return castString(value);\n  } catch (error) {\n    throw new CastError('string', value, this.path, null, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val, context) {\n  return this.castForQuery(null, val, context);\n}\n\n/*!\n * ignore\n */\n\nfunction handleArray(val, context) {\n  const _this = this;\n  if (!Array.isArray(val)) {\n    return [this.castForQuery(null, val, context)];\n  }\n  return val.map(function(m) {\n    return _this.castForQuery(null, m, context);\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction handleSingleNoSetters(val) {\n  if (val == null) {\n    return this._castNullish(val);\n  }\n\n  return this.cast(val, this);\n}\n\nconst $conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $all: handleArray,\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle,\n  $options: handleSingleNoSetters,\n  $regex: function handle$regex(val) {\n    if (Object.prototype.toString.call(val) === '[object RegExp]') {\n      return val;\n    }\n\n    return handleSingleNoSetters.call(this, val);\n  },\n  $not: handleSingle\n});\n\nObject.defineProperty(SchemaString.prototype, '$conditionalHandlers', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: Object.freeze($conditionalHandlers)\n});\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nSchemaString.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with String.');\n    }\n    return handler.call(this, val, context);\n  }\n\n  if (Object.prototype.toString.call(val) === '[object RegExp]' || isBsonType(val, 'BSONRegExp')) {\n    return val;\n  }\n\n  return this.applySetters(val, context);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaString;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseBuffer = require('../types/buffer');\nconst SchemaType = require('../schematype');\nconst CastError = SchemaType.CastError;\nconst utils = require('../utils');\nconst handleBitwiseOperator = require('./operators/bitwise');\n\nconst UUID_FORMAT = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i;\nconst Binary = MongooseBuffer.Binary;\n\n/**\n * Helper function to convert the input hex-string to a buffer\n * @param {String} hex The hex string to convert\n * @returns {Buffer} The hex as buffer\n * @api private\n */\n\nfunction hex2buffer(hex) {\n  // use buffer built-in function to convert from hex-string to buffer\n  const buff = hex != null && Buffer.from(hex, 'hex');\n  return buff;\n}\n\n/**\n * Helper function to convert the buffer input to a string\n * @param {Buffer} buf The buffer to convert to a hex-string\n * @returns {String} The buffer as a hex-string\n * @api private\n */\n\nfunction binary2hex(buf) {\n  // use buffer built-in function to convert from buffer to hex-string\n  const hex = buf != null && buf.toString('hex');\n  return hex;\n}\n\n/**\n * Convert a String to Binary\n * @param {String} uuidStr The value to process\n * @returns {MongooseBuffer} The binary to store\n * @api private\n */\n\nfunction stringToBinary(uuidStr) {\n  // Protect against undefined & throwing err\n  if (typeof uuidStr !== 'string') uuidStr = '';\n  const hex = uuidStr.replace(/[{}-]/g, ''); // remove extra characters\n  const bytes = hex2buffer(hex);\n  const buff = new MongooseBuffer(bytes);\n  buff._subtype = 4;\n\n  return buff;\n}\n\n/**\n * Convert binary to a uuid string\n * @param {Buffer|Binary|String} uuidBin The value to process\n * @returns {String} The completed uuid-string\n * @api private\n */\nfunction binaryToString(uuidBin) {\n  // i(hasezoey) dont quite know why, but \"uuidBin\" may sometimes also be the already processed string\n  let hex;\n  if (typeof uuidBin !== 'string' && uuidBin != null) {\n    hex = binary2hex(uuidBin);\n    const uuidStr = hex.substring(0, 8) + '-' + hex.substring(8, 8 + 4) + '-' + hex.substring(12, 12 + 4) + '-' + hex.substring(16, 16 + 4) + '-' + hex.substring(20, 20 + 12);\n    return uuidStr;\n  }\n  return uuidBin;\n}\n\n/**\n * UUIDv1 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaUUID(key, options) {\n  SchemaType.call(this, key, options, 'UUID');\n  this.getters.push(function(value) {\n    // For populated\n    if (value != null && value.$__ != null) {\n      return value;\n    }\n    return binaryToString(value);\n  });\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaUUID.schemaName = 'UUID';\n\nSchemaUUID.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaUUID.prototype = Object.create(SchemaType.prototype);\nSchemaUUID.prototype.constructor = SchemaUUID;\n\n/*!\n * ignore\n */\n\nSchemaUUID._cast = function(value) {\n  if (value == null) {\n    return value;\n  }\n\n  function newBuffer(initbuff) {\n    const buff = new MongooseBuffer(initbuff);\n    buff._subtype = 4;\n    return buff;\n  }\n\n  if (typeof value === 'string') {\n    if (UUID_FORMAT.test(value)) {\n      return stringToBinary(value);\n    } else {\n      throw new CastError(SchemaUUID.schemaName, value, this.path);\n    }\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return newBuffer(value);\n  }\n\n  if (value instanceof Binary) {\n    return newBuffer(value.value(true));\n  }\n\n  // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n  // **unless** its the default Object.toString, because \"[object Object]\"\n  // doesn't really qualify as useful data\n  if (value.toString && value.toString !== Object.prototype.toString) {\n    if (UUID_FORMAT.test(value.toString())) {\n      return stringToBinary(value.toString());\n    }\n  }\n\n  throw new CastError(SchemaUUID.schemaName, value, this.path);\n};\n\n/**\n * Attaches a getter for all UUID instances.\n *\n * #### Example:\n *\n *     // Note that `v` is a string by default\n *     mongoose.Schema.UUID.get(v => v.toUpperCase());\n *\n *     const Model = mongoose.model('Test', new Schema({ test: 'UUID' }));\n *     new Model({ test: uuid.v4() }).test; // UUID with all uppercase\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaUUID.get = SchemaType.get;\n\n/**\n * Sets a default option for all UUID instances.\n *\n * #### Example:\n *\n *     // Make all UUIDs have `required` of true by default.\n *     mongoose.Schema.UUID.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: mongoose.UUID }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nSchemaUUID.set = SchemaType.set;\n\nSchemaUUID.setters = [];\n\n/**\n * Get/set the function used to cast arbitrary values to UUIDs.\n *\n * #### Example:\n *\n *     // Make Mongoose refuse to cast UUIDs with 0 length\n *     const original = mongoose.Schema.Types.UUID.cast();\n *     mongoose.UUID.cast(v => {\n *       assert.ok(typeof v === \"string\" && v.length > 0);\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.UUID.cast(false);\n *\n * @param {Function} [caster]\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nSchemaUUID.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nSchemaUUID._checkRequired = v => v != null;\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nSchemaUUID.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @return {Boolean}\n * @api public\n */\n\nSchemaUUID.prototype.checkRequired = function checkRequired(value) {\n  if (Buffer.isBuffer(value)) {\n    value = binaryToString(value);\n  }\n  return value != null && UUID_FORMAT.test(value);\n};\n\n/**\n * Casts to UUID\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nSchemaUUID.prototype.cast = function(value, doc, init) {\n  if (utils.isNonBuiltinObject(value) &&\n      SchemaType._isRef(this, value, doc, init)) {\n    return this._castRef(value, doc, init);\n  }\n\n  let castFn;\n  if (typeof this._castFunction === 'function') {\n    castFn = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castFn = this.constructor.cast();\n  } else {\n    castFn = SchemaUUID.cast();\n  }\n\n  try {\n    return castFn(value);\n  } catch (error) {\n    throw new CastError(SchemaUUID.schemaName, value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\n/*!\n * ignore\n */\n\nfunction handleArray(val) {\n  return val.map((m) => {\n    return this.cast(m);\n  });\n}\n\nSchemaUUID.prototype.$conditionalHandlers =\nutils.options(SchemaType.prototype.$conditionalHandlers, {\n  $bitsAllClear: handleBitwiseOperator,\n  $bitsAnyClear: handleBitwiseOperator,\n  $bitsAllSet: handleBitwiseOperator,\n  $bitsAnySet: handleBitwiseOperator,\n  $all: handleArray,\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $in: handleArray,\n  $lt: handleSingle,\n  $lte: handleSingle,\n  $ne: handleSingle,\n  $nin: handleArray\n});\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} val\n * @api private\n */\n\nSchemaUUID.prototype.castForQuery = function($conditional, val, context) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error('Can\\'t use ' + $conditional + ' with UUID.');\n    return handler.call(this, val, context);\n  } else {\n    return this.cast(val);\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaUUID;\n", "\n/*!\n * Module exports.\n */\n\n'use strict';\n\nexports.Array = require('./array');\nexports.Boolean = require('./boolean');\nexports.BigInt = require('./bigint');\nexports.Buffer = require('./buffer');\nexports.Date = require('./date');\nexports.Decimal128 = exports.Decimal = require('./decimal128');\nexports.DocumentArray = require('./documentarray');\nexports.Map = require('./map');\nexports.Mixed = require('./mixed');\nexports.Number = require('./number');\nexports.ObjectId = require('./objectid');\nexports.String = require('./string');\nexports.Subdocument = require('./SubdocumentPath');\nexports.UUID = require('./uuid');\n\n// alias\n\nexports.Oid = exports.ObjectId;\nexports.Object = exports.Mixed;\nexports.Bool = exports.Boolean;\nexports.ObjectID = exports.ObjectId;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EventEmitter = require('events').EventEmitter;\nconst Kareem = require('kareem');\nconst MongooseError = require('./error/mongooseError');\nconst SchemaType = require('./schematype');\nconst SchemaTypeOptions = require('./options/SchemaTypeOptions');\nconst VirtualOptions = require('./options/VirtualOptions');\nconst VirtualType = require('./virtualtype');\nconst addAutoId = require('./helpers/schema/addAutoId');\nconst clone = require('./helpers/clone');\nconst get = require('./helpers/get');\nconst getConstructorName = require('./helpers/getConstructorName');\nconst getIndexes = require('./helpers/schema/getIndexes');\nconst handleReadPreferenceAliases = require('./helpers/query/handleReadPreferenceAliases');\nconst idGetter = require('./helpers/schema/idGetter');\nconst merge = require('./helpers/schema/merge');\nconst mpath = require('mpath');\nconst setupTimestamps = require('./helpers/timestamps/setupTimestamps');\nconst utils = require('./utils');\nconst validateRef = require('./helpers/populate/validateRef');\nconst util = require('util');\n\nlet MongooseTypes;\n\nconst queryHooks = require('./helpers/query/applyQueryMiddleware').\n  middlewareFunctions;\nconst documentHooks = require('./helpers/model/applyHooks').middlewareFunctions;\nconst hookNames = queryHooks.concat(documentHooks).\n  reduce((s, hook) => s.add(hook), new Set());\n\nconst isPOJO = utils.isPOJO;\n\nlet id = 0;\n\n/**\n * Schema constructor.\n *\n * #### Example:\n *\n *     const child = new Schema({ name: String });\n *     const schema = new Schema({ name: String, age: Number, children: [child] });\n *     const Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * #### Options:\n *\n * - [autoIndex](https://mongoosejs.com/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [autoCreate](https://mongoosejs.com/docs/guide.html#autoCreate): bool - defaults to null (which means use the connection's autoCreate option)\n * - [bufferCommands](https://mongoosejs.com/docs/guide.html#bufferCommands): bool - defaults to true\n * - [bufferTimeoutMS](https://mongoosejs.com/docs/guide.html#bufferTimeoutMS): number - defaults to 10000 (10 seconds). If `bufferCommands` is enabled, the amount of time Mongoose will wait for connectivity to be restablished before erroring out.\n * - [capped](https://mongoosejs.com/docs/guide.html#capped): bool | number | object - defaults to false\n * - [collection](https://mongoosejs.com/docs/guide.html#collection): string - no default\n * - [discriminatorKey](https://mongoosejs.com/docs/guide.html#discriminatorKey): string - defaults to `__t`\n * - [id](https://mongoosejs.com/docs/guide.html#id): bool - defaults to true\n * - [_id](https://mongoosejs.com/docs/guide.html#_id): bool - defaults to true\n * - [minimize](https://mongoosejs.com/docs/guide.html#minimize): bool - controls [document#toObject](https://mongoosejs.com/docs/api/document.html#Document.prototype.toObject()) behavior when called manually - defaults to true\n * - [read](https://mongoosejs.com/docs/guide.html#read): string\n * - [writeConcern](https://mongoosejs.com/docs/guide.html#writeConcern): object - defaults to null, use to override [the MongoDB server's default write concern settings](https://www.mongodb.com/docs/manual/reference/write-concern/)\n * - [shardKey](https://mongoosejs.com/docs/guide.html#shardKey): object - defaults to `null`\n * - [strict](https://mongoosejs.com/docs/guide.html#strict): bool - defaults to true\n * - [strictQuery](https://mongoosejs.com/docs/guide.html#strictQuery): bool - defaults to false\n * - [toJSON](https://mongoosejs.com/docs/guide.html#toJSON) - object - no default\n * - [toObject](https://mongoosejs.com/docs/guide.html#toObject) - object - no default\n * - [typeKey](https://mongoosejs.com/docs/guide.html#typeKey) - string - defaults to 'type'\n * - [validateBeforeSave](https://mongoosejs.com/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [validateModifiedOnly](https://mongoosejs.com/docs/api/document.html#Document.prototype.validate()) - bool - defaults to `false`\n * - [versionKey](https://mongoosejs.com/docs/guide.html#versionKey): string or object - defaults to \"__v\"\n * - [optimisticConcurrency](https://mongoosejs.com/docs/guide.html#optimisticConcurrency): bool - defaults to false. Set to true to enable [optimistic concurrency](https://thecodebarbarian.com/whats-new-in-mongoose-5-10-optimistic-concurrency.html).\n * - [collation](https://mongoosejs.com/docs/guide.html#collation): object - defaults to null (which means use no collation)\n * - [timeseries](https://mongoosejs.com/docs/guide.html#timeseries): object - defaults to null (which means this schema's collection won't be a timeseries collection)\n * - [selectPopulatedPaths](https://mongoosejs.com/docs/guide.html#selectPopulatedPaths): boolean - defaults to `true`\n * - [skipVersioning](https://mongoosejs.com/docs/guide.html#skipVersioning): object - paths to exclude from versioning\n * - [timestamps](https://mongoosejs.com/docs/guide.html#timestamps): object or boolean - defaults to `false`. If true, Mongoose adds `createdAt` and `updatedAt` properties to your schema and manages those properties for you.\n * - [pluginTags](https://mongoosejs.com/docs/guide.html#pluginTags): array of strings - defaults to `undefined`. If set and plugin called with `tags` option, will only apply that plugin to schemas with a matching tag.\n * - [virtuals](https://mongoosejs.com/docs/tutorials/virtuals.html#virtuals-via-schema-options): object - virtuals to define, alias for [`.virtual`](https://mongoosejs.com/docs/api/schema.html#Schema.prototype.virtual())\n * - [collectionOptions]: object with options passed to [`createCollection()`](https://www.mongodb.com/docs/manual/reference/method/db.createCollection/) when calling `Model.createCollection()` or `autoCreate` set to true.\n *\n * #### Options for Nested Schemas:\n *\n * - `excludeIndexes`: bool - defaults to `false`. If `true`, skip building indexes on this schema's paths.\n *\n * #### Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object|Schema|Array} [definition] Can be one of: object describing schema paths, or schema to copy, or array of objects and schemas\n * @param {Object} [options]\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema(obj, options) {\n  if (!(this instanceof Schema)) {\n    return new Schema(obj, options);\n  }\n\n  this.obj = obj;\n  this.paths = {};\n  this.aliases = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.singleNestedPaths = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = (options && options.methods) || {};\n  this.methodOptions = {};\n  this.statics = (options && options.statics) || {};\n  this.tree = {};\n  this.query = (options && options.query) || {};\n  this.childSchemas = [];\n  this.plugins = [];\n  // For internal debugging. Do not use this to try to save a schema in MDB.\n  this.$id = ++id;\n  this.mapPaths = [];\n\n  this.s = {\n    hooks: new Kareem()\n  };\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (Array.isArray(obj)) {\n    for (const definition of obj) {\n      this.add(definition);\n    }\n  } else if (obj) {\n    this.add(obj);\n  }\n\n  // build virtual paths\n  if (options && options.virtuals) {\n    const virtuals = options.virtuals;\n    const pathNames = Object.keys(virtuals);\n    for (const pathName of pathNames) {\n      const pathOptions = virtuals[pathName].options ? virtuals[pathName].options : undefined;\n      const virtual = this.virtual(pathName, pathOptions);\n\n      if (virtuals[pathName].get) {\n        virtual.get(virtuals[pathName].get);\n      }\n\n      if (virtuals[pathName].set) {\n        virtual.set(virtuals[pathName].set);\n      }\n    }\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  const _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  const auto_id = !this.paths['_id'] &&\n      (this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    addAutoId(this);\n  }\n\n  this.setupTimestamp(this.options.timestamps);\n}\n\n/**\n * Create virtual properties with alias field\n * @api private\n */\nfunction aliasFields(schema, paths) {\n  for (const path of Object.keys(paths)) {\n    let alias = null;\n    if (paths[path] != null) {\n      alias = paths[path];\n    } else {\n      const options = get(schema.paths[path], 'options');\n      if (options == null) {\n        continue;\n      }\n\n      alias = options.alias;\n    }\n\n    if (!alias) {\n      continue;\n    }\n\n    const prop = schema.paths[path].path;\n    if (Array.isArray(alias)) {\n      for (const a of alias) {\n        if (typeof a !== 'string') {\n          throw new Error('Invalid value for alias option on ' + prop + ', got ' + a);\n        }\n\n        schema.aliases[a] = prop;\n\n        schema.\n          virtual(a).\n          get((function(p) {\n            return function() {\n              if (typeof this.get === 'function') {\n                return this.get(p);\n              }\n              return this[p];\n            };\n          })(prop)).\n          set((function(p) {\n            return function(v) {\n              return this.$set(p, v);\n            };\n          })(prop));\n      }\n\n      continue;\n    }\n\n    if (typeof alias !== 'string') {\n      throw new Error('Invalid value for alias option on ' + prop + ', got ' + alias);\n    }\n\n    schema.aliases[alias] = prop;\n\n    schema.\n      virtual(alias).\n      get((function(p) {\n        return function() {\n          if (typeof this.get === 'function') {\n            return this.get(p);\n          }\n          return this[p];\n        };\n      })(prop)).\n      set((function(p) {\n        return function(v) {\n          return this.$set(p, v);\n        };\n      })(prop));\n  }\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create(EventEmitter.prototype);\nSchema.prototype.constructor = Schema;\nSchema.prototype.instanceOfSchema = true;\n\n/*!\n * ignore\n */\n\nObject.defineProperty(Schema.prototype, '$schemaType', {\n  configurable: false,\n  enumerable: false,\n  writable: true\n});\n\n/**\n * Array of child schemas (from document arrays and single nested subdocs)\n * and their corresponding compiled models. Each element of the array is\n * an object with 2 properties: `schema` and `model`.\n *\n * This property is typically only useful for plugin authors and advanced users.\n * You do not need to interact with this property at all to use mongoose.\n *\n * @api public\n * @property childSchemas\n * @memberOf Schema\n * @instance\n */\n\nObject.defineProperty(Schema.prototype, 'childSchemas', {\n  configurable: false,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * Object containing all virtuals defined on this schema.\n * The objects' keys are the virtual paths and values are instances of `VirtualType`.\n *\n * This property is typically only useful for plugin authors and advanced users.\n * You do not need to interact with this property at all to use mongoose.\n *\n * #### Example:\n *\n *     const schema = new Schema({});\n *     schema.virtual('answer').get(() => 42);\n *\n *     console.log(schema.virtuals); // { answer: VirtualType { path: 'answer', ... } }\n *     console.log(schema.virtuals['answer'].getters[0].call()); // 42\n *\n * @api public\n * @property virtuals\n * @memberOf Schema\n * @instance\n */\n\nObject.defineProperty(Schema.prototype, 'virtuals', {\n  configurable: false,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The original object passed to the schema constructor\n *\n * #### Example:\n *\n *     const schema = new Schema({ a: String }).add({ b: String });\n *     schema.obj; // { a: String }\n *\n * @api public\n * @property obj\n * @memberOf Schema\n * @instance\n */\n\nSchema.prototype.obj;\n\n/**\n * The paths defined on this schema. The keys are the top-level paths\n * in this schema, and the values are instances of the SchemaType class.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String }, { _id: false });\n *     schema.paths; // { name: SchemaString { ... } }\n *\n *     schema.add({ age: Number });\n *     schema.paths; // { name: SchemaString { ... }, age: SchemaNumber { ... } }\n *\n * @api public\n * @property paths\n * @memberOf Schema\n * @instance\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * #### Example:\n *\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n * @memberOf Schema\n * @instance\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns a deep copy of the schema\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String });\n *     const clone = schema.clone();\n *     clone === schema; // false\n *     clone.path('name'); // SchemaString { ... }\n *\n * @return {Schema} the cloned schema\n * @api public\n * @memberOf Schema\n * @instance\n */\n\nSchema.prototype.clone = function() {\n  const s = this._clone();\n\n  // Bubble up `init` for backwards compat\n  s.on('init', v => this.emit('init', v));\n\n  return s;\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._clone = function _clone(Constructor) {\n  Constructor = Constructor || (this.base == null ? Schema : this.base.Schema);\n\n  const s = new Constructor({}, this._userProvidedOptions);\n  s.base = this.base;\n  s.obj = this.obj;\n  s.options = clone(this.options);\n  s.callQueue = this.callQueue.map(function(f) { return f; });\n  s.methods = clone(this.methods);\n  s.methodOptions = clone(this.methodOptions);\n  s.statics = clone(this.statics);\n  s.query = clone(this.query);\n  s.plugins = Array.prototype.slice.call(this.plugins);\n  s._indexes = clone(this._indexes);\n  s.s.hooks = this.s.hooks.clone();\n\n  s.tree = clone(this.tree);\n  s.paths = clone(this.paths);\n  s.nested = clone(this.nested);\n  s.subpaths = clone(this.subpaths);\n  for (const schemaType of Object.values(s.paths)) {\n    if (schemaType.$isSingleNested) {\n      const path = schemaType.path;\n      for (const key of Object.keys(schemaType.schema.paths)) {\n        s.singleNestedPaths[path + '.' + key] = schemaType.schema.paths[key];\n      }\n      for (const key of Object.keys(schemaType.schema.singleNestedPaths)) {\n        s.singleNestedPaths[path + '.' + key] =\n          schemaType.schema.singleNestedPaths[key];\n      }\n      for (const key of Object.keys(schemaType.schema.subpaths)) {\n        s.singleNestedPaths[path + '.' + key] =\n          schemaType.schema.subpaths[key];\n      }\n      for (const key of Object.keys(schemaType.schema.nested)) {\n        s.singleNestedPaths[path + '.' + key] = 'nested';\n      }\n    }\n  }\n  s.childSchemas = gatherChildSchemas(s);\n\n  s.virtuals = clone(this.virtuals);\n  s.$globalPluginsApplied = this.$globalPluginsApplied;\n  s.$isRootDiscriminator = this.$isRootDiscriminator;\n  s.$implicitlyCreated = this.$implicitlyCreated;\n  s.$id = ++id;\n  s.$originalSchemaId = this.$id;\n  s.mapPaths = [].concat(this.mapPaths);\n\n  if (this.discriminatorMapping != null) {\n    s.discriminatorMapping = Object.assign({}, this.discriminatorMapping);\n  }\n  if (this.discriminators != null) {\n    s.discriminators = Object.assign({}, this.discriminators);\n  }\n  if (this._applyDiscriminators != null) {\n    s._applyDiscriminators = Object.assign({}, this._applyDiscriminators);\n  }\n\n  s.aliases = Object.assign({}, this.aliases);\n\n  return s;\n};\n\n/**\n * Returns a new schema that has the picked `paths` from this schema.\n *\n * This method is analagous to [Lodash's `pick()` function](https://lodash.com/docs/4.17.15#pick) for Mongoose schemas.\n *\n * #### Example:\n *\n *     const schema = Schema({ name: String, age: Number });\n *     // Creates a new schema with the same `name` path as `schema`,\n *     // but no `age` path.\n *     const newSchema = schema.pick(['name']);\n *\n *     newSchema.path('name'); // SchemaString { ... }\n *     newSchema.path('age'); // undefined\n *\n * @param {String[]} paths List of Paths to pick for the new Schema\n * @param {Object} [options] Options to pass to the new Schema Constructor (same as `new Schema(.., Options)`). Defaults to `this.options` if not set.\n * @return {Schema}\n * @api public\n */\n\nSchema.prototype.pick = function(paths, options) {\n  const newSchema = new Schema({}, options || this.options);\n  if (!Array.isArray(paths)) {\n    throw new MongooseError('Schema#pick() only accepts an array argument, ' +\n      'got \"' + typeof paths + '\"');\n  }\n\n  for (const path of paths) {\n    if (this.nested[path]) {\n      newSchema.add({ [path]: get(this.tree, path) });\n    } else {\n      const schematype = this.path(path);\n      if (schematype == null) {\n        throw new MongooseError('Path `' + path + '` is not in the schema');\n      }\n      newSchema.add({ [path]: schematype });\n    }\n  }\n\n  return newSchema;\n};\n\n/**\n * Returns a new schema that has the `paths` from the original schema, minus the omitted ones.\n *\n * This method is analagous to [Lodash's `omit()` function](https://lodash.com/docs/#omit) for Mongoose schemas.\n *\n * #### Example:\n *\n *     const schema = Schema({ name: String, age: Number });\n *     // Creates a new schema omitting the `age` path\n *     const newSchema = schema.omit(['age']);\n *\n *     newSchema.path('name'); // SchemaString { ... }\n *     newSchema.path('age'); // undefined\n *\n * @param {String[]} paths List of Paths to omit for the new Schema\n * @param {Object} [options] Options to pass to the new Schema Constructor (same as `new Schema(.., Options)`). Defaults to `this.options` if not set.\n * @return {Schema}\n * @api public\n */\n\nSchema.prototype.omit = function(paths, options) {\n  const newSchema = new Schema(this, options || this.options);\n  if (!Array.isArray(paths)) {\n    throw new MongooseError(\n      'Schema#omit() only accepts an array argument, ' +\n        'got \"' +\n        typeof paths +\n        '\"'\n    );\n  }\n\n  newSchema.remove(paths);\n\n  for (const nested in newSchema.singleNestedPaths) {\n    if (paths.includes(nested)) {\n      delete newSchema.singleNestedPaths[nested];\n    }\n  }\n\n  return newSchema;\n};\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} [options] Options to overwrite the default options\n * @return {Object} The merged options of `options` and the default options\n * @api private\n */\n\nSchema.prototype.defaultOptions = function(options) {\n  this._userProvidedOptions = options == null ? {} : clone(options);\n  const baseOptions = this.base && this.base.options || {};\n  const strict = 'strict' in baseOptions ? baseOptions.strict : true;\n  const strictQuery = 'strictQuery' in baseOptions ? baseOptions.strictQuery : false;\n  const id = 'id' in baseOptions ? baseOptions.id : true;\n  options = utils.options({\n    strict,\n    strictQuery,\n    bufferCommands: true,\n    capped: false, // { size, max, autoIndexId }\n    versionKey: '__v',\n    optimisticConcurrency: false,\n    minimize: true,\n    autoIndex: null,\n    discriminatorKey: '__t',\n    shardKey: null,\n    read: null,\n    validateBeforeSave: true,\n    validateModifiedOnly: false,\n    // the following are only applied at construction time\n    _id: true,\n    id: id,\n    typeKey: 'type'\n  }, clone(options));\n\n  if (options.versionKey && typeof options.versionKey !== 'string') {\n    throw new MongooseError('`versionKey` must be falsy or string, got `' + (typeof options.versionKey) + '`');\n  }\n\n  if (typeof options.read === 'string') {\n    options.read = handleReadPreferenceAliases(options.read);\n  } else if (Array.isArray(options.read) && typeof options.read[0] === 'string') {\n    options.read = {\n      mode: handleReadPreferenceAliases(options.read[0]),\n      tags: options.read[1]\n    };\n  }\n\n  if (options.optimisticConcurrency && !options.versionKey) {\n    throw new MongooseError('Must set `versionKey` if using `optimisticConcurrency`');\n  }\n\n  return options;\n};\n\n/**\n * Inherit a Schema by applying a discriminator on an existing Schema.\n *\n *\n * #### Example:\n *\n *     const eventSchema = new mongoose.Schema({ timestamp: Date }, { discriminatorKey: 'kind' });\n *\n *     const clickedEventSchema = new mongoose.Schema({ element: String }, { discriminatorKey: 'kind' });\n *     const ClickedModel = eventSchema.discriminator('clicked', clickedEventSchema);\n *\n *     const Event = mongoose.model('Event', eventSchema);\n *\n *     Event.discriminators['clicked']; // Model { clicked }\n *\n *     const doc = await Event.create({ kind: 'clicked', element: '#hero' });\n *     doc.element; // '#hero'\n *     doc instanceof ClickedModel; // true\n *\n * @param {String} name the name of the discriminator\n * @param {Schema} schema the discriminated Schema\n * @return {Schema} the Schema instance\n * @api public\n */\nSchema.prototype.discriminator = function(name, schema) {\n  this._applyDiscriminators = Object.assign(this._applyDiscriminators || {}, { [name]: schema });\n\n  return this;\n};\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * #### Example:\n *\n *     const ToySchema = new Schema();\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n *     const TurboManSchema = new Schema();\n *     // You can also `add()` another schema and copy over all paths, virtuals,\n *     // getters, setters, indexes, methods, and statics.\n *     TurboManSchema.add(ToySchema).add({ year: Number });\n *\n * @param {Object|Schema} obj plain object with paths to add, or another schema\n * @param {String} [prefix] path to prefix the newly added paths with\n * @return {Schema} the Schema instance\n * @api public\n */\n\nSchema.prototype.add = function add(obj, prefix) {\n  if (obj instanceof Schema || (obj != null && obj.instanceOfSchema)) {\n    merge(this, obj);\n\n    return this;\n  }\n\n  // Special case: setting top-level `_id` to false should convert to disabling\n  // the `_id` option. This behavior never worked before 5.4.11 but numerous\n  // codebases use it (see gh-7516, gh-7512).\n  if (obj._id === false && prefix == null) {\n    this.options._id = false;\n  }\n\n  prefix = prefix || '';\n  // avoid prototype pollution\n  if (prefix === '__proto__.' || prefix === 'constructor.' || prefix === 'prototype.') {\n    return this;\n  }\n\n  const keys = Object.keys(obj);\n  const typeKey = this.options.typeKey;\n  for (const key of keys) {\n    if (utils.specialProperties.has(key)) {\n      continue;\n    }\n\n    const fullPath = prefix + key;\n    const val = obj[key];\n\n    if (val == null) {\n      throw new TypeError('Invalid value for schema path `' + fullPath +\n        '`, got value \"' + val + '\"');\n    }\n    // Retain `_id: false` but don't set it as a path, re: gh-8274.\n    if (key === '_id' && val === false) {\n      continue;\n    }\n    // Deprecate setting schema paths to primitive types (gh-7558)\n    let isMongooseTypeString = false;\n    if (typeof val === 'string') {\n      // Handle the case in which the type is specified as a string (eg. 'date', 'oid', ...)\n      const MongooseTypes = this.base != null ? this.base.Schema.Types : Schema.Types;\n      const upperVal = val.charAt(0).toUpperCase() + val.substring(1);\n      isMongooseTypeString = MongooseTypes[upperVal] != null;\n    }\n    if (\n      key !== '_id' &&\n      ((typeof val !== 'object' && typeof val !== 'function' && !isMongooseTypeString) ||\n      val == null)\n    ) {\n      throw new TypeError(`Invalid schema configuration: \\`${val}\\` is not ` +\n        `a valid type at path \\`${key}\\`. See ` +\n        'https://bit.ly/mongoose-schematypes for a list of valid schema types.');\n    }\n    if (val instanceof VirtualType || (val.constructor && val.constructor.name || null) === 'VirtualType') {\n      this.virtual(val);\n      continue;\n    }\n\n    if (Array.isArray(val) && val.length === 1 && val[0] == null) {\n      throw new TypeError('Invalid value for schema Array path `' + fullPath +\n        '`, got value \"' + val[0] + '\"');\n    }\n\n    if (!(isPOJO(val) || val instanceof SchemaTypeOptions)) {\n      // Special-case: Non-options definitely a path so leaf at this node\n      // Examples: Schema instances, SchemaType instances\n      if (prefix) {\n        this.nested[prefix.substring(0, prefix.length - 1)] = true;\n      }\n      this.path(prefix + key, val);\n      if (val[0] != null && !(val[0].instanceOfSchema) && utils.isPOJO(val[0].discriminators)) {\n        const schemaType = this.path(prefix + key);\n        for (const key in val[0].discriminators) {\n          schemaType.discriminator(key, val[0].discriminators[key]);\n        }\n      } else if (val[0] != null && val[0].instanceOfSchema && utils.isPOJO(val[0]._applyDiscriminators)) {\n        const applyDiscriminators = val[0]._applyDiscriminators || [];\n        const schemaType = this.path(prefix + key);\n        for (const disc in applyDiscriminators) {\n          schemaType.discriminator(disc, applyDiscriminators[disc]);\n        }\n      }\n      else if (val != null && val.instanceOfSchema && utils.isPOJO(val._applyDiscriminators)) {\n        const applyDiscriminators = val._applyDiscriminators || [];\n        const schemaType = this.path(prefix + key);\n        for (const disc in applyDiscriminators) {\n          schemaType.discriminator(disc, applyDiscriminators[disc]);\n        }\n      }\n    } else if (Object.keys(val).length < 1) {\n      // Special-case: {} always interpreted as Mixed path so leaf at this node\n      if (prefix) {\n        this.nested[prefix.substring(0, prefix.length - 1)] = true;\n      }\n      this.path(fullPath, val); // mixed type\n    } else if (!val[typeKey] || (typeKey === 'type' && isPOJO(val.type) && val.type.type)) {\n      // Special-case: POJO with no bona-fide type key - interpret as tree of deep paths so recurse\n      // nested object `{ last: { name: String } }`. Avoid functions with `.type` re: #10807 because\n      // NestJS sometimes adds `Date.type`.\n      this.nested[fullPath] = true;\n      this.add(val, fullPath + '.');\n    } else {\n      // There IS a bona-fide type key that may also be a POJO\n      const _typeDef = val[typeKey];\n      if (isPOJO(_typeDef) && Object.keys(_typeDef).length > 0) {\n        // If a POJO is the value of a type key, make it a subdocument\n        if (prefix) {\n          this.nested[prefix.substring(0, prefix.length - 1)] = true;\n        }\n\n        const childSchemaOptions = {};\n        if (this._userProvidedOptions.typeKey) {\n          childSchemaOptions.typeKey = this._userProvidedOptions.typeKey;\n        }\n        // propagate 'strict' option to child schema\n        if (this._userProvidedOptions.strict != null) {\n          childSchemaOptions.strict = this._userProvidedOptions.strict;\n        }\n        if (this._userProvidedOptions.toObject != null) {\n          childSchemaOptions.toObject = utils.omit(this._userProvidedOptions.toObject, ['transform']);\n        }\n        if (this._userProvidedOptions.toJSON != null) {\n          childSchemaOptions.toJSON = utils.omit(this._userProvidedOptions.toJSON, ['transform']);\n        }\n\n        const _schema = new Schema(_typeDef, childSchemaOptions);\n        _schema.$implicitlyCreated = true;\n        const schemaWrappedPath = Object.assign({}, val, { [typeKey]: _schema });\n        this.path(prefix + key, schemaWrappedPath);\n      } else {\n        // Either the type is non-POJO or we interpret it as Mixed anyway\n        if (prefix) {\n          this.nested[prefix.substring(0, prefix.length - 1)] = true;\n        }\n        this.path(prefix + key, val);\n        if (val != null && !(val.instanceOfSchema) && utils.isPOJO(val.discriminators)) {\n          const schemaType = this.path(prefix + key);\n          for (const key in val.discriminators) {\n            schemaType.discriminator(key, val.discriminators[key]);\n          }\n        }\n      }\n    }\n  }\n\n  const aliasObj = Object.fromEntries(\n    Object.entries(obj).map(([key]) => ([prefix + key, null]))\n  );\n  aliasFields(this, aliasObj);\n  return this;\n};\n\n/**\n * Add an alias for `path`. This means getting or setting the `alias`\n * is equivalent to getting or setting the `path`.\n *\n * #### Example:\n *\n *     const toySchema = new Schema({ n: String });\n *\n *     // Make 'name' an alias for 'n'\n *     toySchema.alias('n', 'name');\n *\n *     const Toy = mongoose.model('Toy', toySchema);\n *     const turboMan = new Toy({ n: 'Turbo Man' });\n *\n *     turboMan.name; // 'Turbo Man'\n *     turboMan.n; // 'Turbo Man'\n *\n *     turboMan.name = 'Turbo Man Action Figure';\n *     turboMan.n; // 'Turbo Man Action Figure'\n *\n *     await turboMan.save(); // Saves { _id: ..., n: 'Turbo Man Action Figure' }\n *\n *\n * @param {String} path real path to alias\n * @param {String|String[]} alias the path(s) to use as an alias for `path`\n * @return {Schema} the Schema instance\n * @api public\n */\n\nSchema.prototype.alias = function alias(path, alias) {\n  aliasFields(this, { [path]: alias });\n  return this;\n};\n\n/**\n * Remove an index by name or index specification.\n *\n * removeIndex only removes indexes from your schema object. Does **not** affect the indexes\n * in MongoDB.\n *\n * #### Example:\n *\n *     const ToySchema = new Schema({ name: String, color: String, price: Number });\n *\n *     // Add a new index on { name, color }\n *     ToySchema.index({ name: 1, color: 1 });\n *\n *     // Remove index on { name, color }\n *     // Keep in mind that order matters! `removeIndex({ color: 1, name: 1 })` won't remove the index\n *     ToySchema.removeIndex({ name: 1, color: 1 });\n *\n *     // Add an index with a custom name\n *     ToySchema.index({ color: 1 }, { name: 'my custom index name' });\n *     // Remove index by name\n *     ToySchema.removeIndex('my custom index name');\n *\n * @param {Object|string} index name or index specification\n * @return {Schema} the Schema instance\n * @api public\n */\n\nSchema.prototype.removeIndex = function removeIndex(index) {\n  if (arguments.length > 1) {\n    throw new Error('removeIndex() takes only 1 argument');\n  }\n\n  if (typeof index !== 'object' && typeof index !== 'string') {\n    throw new Error('removeIndex() may only take either an object or a string as an argument');\n  }\n\n  if (typeof index === 'object') {\n    for (let i = this._indexes.length - 1; i >= 0; --i) {\n      if (util.isDeepStrictEqual(this._indexes[i][0], index)) {\n        this._indexes.splice(i, 1);\n      }\n    }\n  } else {\n    for (let i = this._indexes.length - 1; i >= 0; --i) {\n      if (this._indexes[i][1] != null && this._indexes[i][1].name === index) {\n        this._indexes.splice(i, 1);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Remove all indexes from this schema.\n *\n * clearIndexes only removes indexes from your schema object. Does **not** affect the indexes\n * in MongoDB.\n *\n * #### Example:\n *\n *     const ToySchema = new Schema({ name: String, color: String, price: Number });\n *     ToySchema.index({ name: 1 });\n *     ToySchema.index({ color: 1 });\n *\n *     // Remove all indexes on this schema\n *     ToySchema.clearIndexes();\n *\n *     ToySchema.indexes(); // []\n *\n * @return {Schema} the Schema instance\n * @api public\n */\n\nSchema.prototype.clearIndexes = function clearIndexes() {\n  this._indexes.length = 0;\n\n  return this;\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are warned in schema declarations\n * because they have the potential to break Mongoose/ Mongoose plugins functionality. If you create a schema\n * using `new Schema()` with one of these property names, Mongoose will log a warning.\n *\n * - _posts\n * - _pres\n * - collection\n  * - emit\n * - errors\n * - get\n * - init\n * - isModified\n * - isNew\n * - listeners\n * - modelName\n * - on\n * - once\n * - populated\n * - prototype\n * - remove\n * - removeListener\n * - save\n * - schema\n * - toObject\n * - validate\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      const schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n *\n * @property reserved\n * @memberOf Schema\n * @static\n */\n\nSchema.reserved = Object.create(null);\nSchema.prototype.reserved = Schema.reserved;\n\nconst reserved = Schema.reserved;\n// Core object\nreserved['prototype'] =\n// EventEmitter\nreserved.emit =\nreserved.listeners =\nreserved.removeListener =\n\n// document properties and functions\nreserved.collection =\nreserved.errors =\nreserved.get =\nreserved.init =\nreserved.isModified =\nreserved.isNew =\nreserved.populated =\nreserved.remove =\nreserved.save =\nreserved.toObject =\nreserved.validate = 1;\nreserved.collection = 1;\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * #### Example:\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path The name of the Path to get / set\n * @param {Object} [obj] The Type to set the path to, if provided the path will be SET, otherwise the path will be GET\n * @api public\n */\n\nSchema.prototype.path = function(path, obj) {\n  if (obj === undefined) {\n    // Convert to '.$' to check subpaths re: gh-6405\n    const cleanPath = _pathToPositionalSyntax(path);\n    let schematype = _getPath(this, path, cleanPath);\n    if (schematype != null) {\n      return schematype;\n    }\n\n    // Look for maps\n    const mapPath = getMapPath(this, path);\n    if (mapPath != null) {\n      return mapPath;\n    }\n\n    // Look if a parent of this path is mixed\n    schematype = this.hasMixedParent(cleanPath);\n    if (schematype != null) {\n      return schematype;\n    }\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n      ? getPositionalPath(this, path)\n      : undefined;\n  }\n\n  // some path names conflict with document methods\n  const firstPieceOfPath = path.split('.')[0];\n  if (reserved[firstPieceOfPath] && !this.options.suppressReservedKeysWarning) {\n    const errorMessage = `\\`${firstPieceOfPath}\\` is a reserved schema pathname and may break some functionality. ` +\n      'You are allowed to use it, but use at your own risk. ' +\n      'To disable this warning pass `suppressReservedKeysWarning` as a schema option.';\n\n    utils.warn(errorMessage);\n  }\n\n  if (typeof obj === 'object' && utils.hasUserDefinedProperty(obj, 'ref')) {\n    validateRef(obj.ref, path);\n  }\n\n  // update the tree\n  const subpaths = path.split(/\\./);\n  const last = subpaths.pop();\n  let branch = this.tree;\n  let fullPath = '';\n\n  for (const sub of subpaths) {\n    if (utils.specialProperties.has(sub)) {\n      throw new Error('Cannot set special property `' + sub + '` on a schema');\n    }\n    fullPath = fullPath += (fullPath.length > 0 ? '.' : '') + sub;\n    if (!branch[sub]) {\n      this.nested[fullPath] = true;\n      branch[sub] = {};\n    }\n    if (typeof branch[sub] !== 'object') {\n      const msg = 'Cannot set nested path `' + path + '`. '\n          + 'Parent path `'\n          + fullPath\n          + '` already set to type ' + branch[sub].name\n          + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  }\n\n  branch[last] = clone(obj);\n\n  this.paths[path] = this.interpretAsType(path, obj, this.options);\n  const schemaType = this.paths[path];\n\n  if (schemaType.$isSchemaMap) {\n    // Maps can have arbitrary keys, so `$*` is internal shorthand for \"any key\"\n    // The '$' is to imply this path should never be stored in MongoDB so we\n    // can easily build a regexp out of this path, and '*' to imply \"any key.\"\n    const mapPath = path + '.$*';\n\n    this.paths[mapPath] = schemaType.$__schemaType;\n    this.mapPaths.push(this.paths[mapPath]);\n  }\n\n  if (schemaType.$isSingleNested) {\n    for (const key of Object.keys(schemaType.schema.paths)) {\n      this.singleNestedPaths[path + '.' + key] = schemaType.schema.paths[key];\n    }\n    for (const key of Object.keys(schemaType.schema.singleNestedPaths)) {\n      this.singleNestedPaths[path + '.' + key] =\n        schemaType.schema.singleNestedPaths[key];\n    }\n    for (const key of Object.keys(schemaType.schema.subpaths)) {\n      this.singleNestedPaths[path + '.' + key] =\n        schemaType.schema.subpaths[key];\n    }\n    for (const key of Object.keys(schemaType.schema.nested)) {\n      this.singleNestedPaths[path + '.' + key] = 'nested';\n    }\n\n    Object.defineProperty(schemaType.schema, 'base', {\n      configurable: true,\n      enumerable: false,\n      writable: false,\n      value: this.base\n    });\n\n    schemaType.caster.base = this.base;\n    this.childSchemas.push({\n      schema: schemaType.schema,\n      model: schemaType.caster\n    });\n  } else if (schemaType.$isMongooseDocumentArray) {\n    Object.defineProperty(schemaType.schema, 'base', {\n      configurable: true,\n      enumerable: false,\n      writable: false,\n      value: this.base\n    });\n\n    schemaType.casterConstructor.base = this.base;\n    this.childSchemas.push({\n      schema: schemaType.schema,\n      model: schemaType.casterConstructor\n    });\n  }\n\n  if (schemaType.$isMongooseArray && schemaType.caster instanceof SchemaType) {\n    let arrayPath = path;\n    let _schemaType = schemaType;\n\n    const toAdd = [];\n    while (_schemaType.$isMongooseArray) {\n      arrayPath = arrayPath + '.$';\n\n      // Skip arrays of document arrays\n      if (_schemaType.$isMongooseDocumentArray) {\n        _schemaType.$embeddedSchemaType._arrayPath = arrayPath;\n        _schemaType.$embeddedSchemaType._arrayParentPath = path;\n        _schemaType = _schemaType.$embeddedSchemaType.clone();\n      } else {\n        _schemaType.caster._arrayPath = arrayPath;\n        _schemaType.caster._arrayParentPath = path;\n        _schemaType = _schemaType.caster.clone();\n      }\n\n      _schemaType.path = arrayPath;\n      toAdd.push(_schemaType);\n    }\n\n    for (const _schemaType of toAdd) {\n      this.subpaths[_schemaType.path] = _schemaType;\n    }\n  }\n\n  if (schemaType.$isMongooseDocumentArray) {\n    for (const key of Object.keys(schemaType.schema.paths)) {\n      const _schemaType = schemaType.schema.paths[key];\n      this.subpaths[path + '.' + key] = _schemaType;\n      if (typeof _schemaType === 'object' && _schemaType != null && _schemaType.$parentSchemaDocArray == null) {\n        _schemaType.$parentSchemaDocArray = schemaType;\n      }\n    }\n    for (const key of Object.keys(schemaType.schema.subpaths)) {\n      const _schemaType = schemaType.schema.subpaths[key];\n      this.subpaths[path + '.' + key] = _schemaType;\n      if (typeof _schemaType === 'object' && _schemaType != null && _schemaType.$parentSchemaDocArray == null) {\n        _schemaType.$parentSchemaDocArray = schemaType;\n      }\n    }\n    for (const key of Object.keys(schemaType.schema.singleNestedPaths)) {\n      const _schemaType = schemaType.schema.singleNestedPaths[key];\n      this.subpaths[path + '.' + key] = _schemaType;\n      if (typeof _schemaType === 'object' && _schemaType != null && _schemaType.$parentSchemaDocArray == null) {\n        _schemaType.$parentSchemaDocArray = schemaType;\n      }\n    }\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction gatherChildSchemas(schema) {\n  const childSchemas = [];\n\n  for (const path of Object.keys(schema.paths)) {\n    const schematype = schema.paths[path];\n    if (schematype.$isMongooseDocumentArray || schematype.$isSingleNested) {\n      childSchemas.push({ schema: schematype.schema, model: schematype.caster });\n    }\n  }\n\n  return childSchemas;\n}\n\n/*!\n * ignore\n */\n\nfunction _getPath(schema, path, cleanPath) {\n  if (schema.paths.hasOwnProperty(path)) {\n    return schema.paths[path];\n  }\n  if (schema.subpaths.hasOwnProperty(cleanPath)) {\n    return schema.subpaths[cleanPath];\n  }\n  if (schema.singleNestedPaths.hasOwnProperty(cleanPath) && typeof schema.singleNestedPaths[cleanPath] === 'object') {\n    return schema.singleNestedPaths[cleanPath];\n  }\n\n  return null;\n}\n\n/*!\n * ignore\n */\n\nfunction _pathToPositionalSyntax(path) {\n  if (!/\\.\\d+/.test(path)) {\n    return path;\n  }\n  return path.replace(/\\.\\d+\\./g, '.$.').replace(/\\.\\d+$/, '.$');\n}\n\n/*!\n * ignore\n */\n\nfunction getMapPath(schema, path) {\n  if (schema.mapPaths.length === 0) {\n    return null;\n  }\n  for (const val of schema.mapPaths) {\n    const _path = val.path;\n    const re = new RegExp('^' + _path.replace(/\\.\\$\\*/g, '\\\\.[^.]+') + '$');\n    if (re.test(path)) {\n      return schema.paths[_path];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The Mongoose instance this schema is associated with\n *\n * @property base\n * @api private\n */\n\nObject.defineProperty(Schema.prototype, 'base', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: null\n});\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @param {Object} options\n * @api private\n */\n\nSchema.prototype.interpretAsType = function(path, obj, options) {\n  if (obj instanceof SchemaType) {\n    if (obj.path === path) {\n      return obj;\n    }\n    const clone = obj.clone();\n    clone.path = path;\n    return clone;\n  }\n\n  // If this schema has an associated Mongoose object, use the Mongoose object's\n  // copy of SchemaTypes re: gh-7158 gh-6933\n  const MongooseTypes = this.base != null ? this.base.Schema.Types : Schema.Types;\n  const Types = this.base != null ? this.base.Types : require('./types');\n\n  if (!utils.isPOJO(obj) && !(obj instanceof SchemaTypeOptions)) {\n    const constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName !== 'Object') {\n      const oldObj = obj;\n      obj = {};\n      obj[options.typeKey] = oldObj;\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  let type = obj[options.typeKey] && (obj[options.typeKey] instanceof Function || options.typeKey !== 'type' || !obj.type.type)\n    ? obj[options.typeKey]\n    : {};\n  let name;\n\n  if (utils.isPOJO(type) || type === 'mixed') {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || type === Array || type === 'array' || type === MongooseTypes.Array) {\n    // if it was specified through { type } look for `cast`\n    let cast = (type === Array || type === 'array')\n      ? obj.cast || obj.of\n      : type[0];\n\n    // new Schema({ path: [new Schema({ ... })] })\n    if (cast && cast.instanceOfSchema) {\n      if (!(cast instanceof Schema)) {\n        if (this.options._isMerging) {\n          cast = new Schema(cast);\n        } else {\n          throw new TypeError('Schema for array path `' + path +\n            '` is from a different copy of the Mongoose module. ' +\n            'Please make sure you\\'re using the same version ' +\n            'of Mongoose everywhere with `npm list mongoose`. If you are still ' +\n            'getting this error, please add `new Schema()` around the path: ' +\n            `${path}: new Schema(...)`);\n        }\n      }\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n    if (cast &&\n        cast[options.typeKey] &&\n        cast[options.typeKey].instanceOfSchema) {\n      if (!(cast[options.typeKey] instanceof Schema)) {\n        if (this.options._isMerging) {\n          cast[options.typeKey] = new Schema(cast[options.typeKey]);\n        } else {\n          throw new TypeError('Schema for array path `' + path +\n            '` is from a different copy of the Mongoose module. ' +\n            'Please make sure you\\'re using the same version ' +\n            'of Mongoose everywhere with `npm list mongoose`. If you are still ' +\n            'getting this error, please add `new Schema()` around the path: ' +\n            `${path}: new Schema(...)`);\n        }\n      }\n      return new MongooseTypes.DocumentArray(path, cast[options.typeKey], obj, cast);\n    }\n\n    if (Array.isArray(cast)) {\n      return new MongooseTypes.Array(path, this.interpretAsType(path, cast, options), obj);\n    }\n\n    // Handle both `new Schema({ arr: [{ subpath: String }] })` and `new Schema({ arr: [{ type: { subpath: string } }] })`\n    const castFromTypeKey = (cast != null && cast[options.typeKey] && (options.typeKey !== 'type' || !cast.type.type)) ?\n      cast[options.typeKey] :\n      cast;\n    if (typeof cast === 'string') {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (utils.isPOJO(castFromTypeKey)) {\n      if (Object.keys(castFromTypeKey).length) {\n        // The `minimize` and `typeKey` options propagate to child schemas\n        // declared inline, like `{ arr: [{ val: { $type: String } }] }`.\n        // See gh-3560\n        const childSchemaOptions = { minimize: options.minimize };\n        if (options.typeKey) {\n          childSchemaOptions.typeKey = options.typeKey;\n        }\n        // propagate 'strict' option to child schema\n        if (options.hasOwnProperty('strict')) {\n          childSchemaOptions.strict = options.strict;\n        }\n        if (options.hasOwnProperty('strictQuery')) {\n          childSchemaOptions.strictQuery = options.strictQuery;\n        }\n        if (options.hasOwnProperty('toObject')) {\n          childSchemaOptions.toObject = utils.omit(options.toObject, ['transform']);\n        }\n        if (options.hasOwnProperty('toJSON')) {\n          childSchemaOptions.toJSON = utils.omit(options.toJSON, ['transform']);\n        }\n\n        if (this._userProvidedOptions.hasOwnProperty('_id')) {\n          childSchemaOptions._id = this._userProvidedOptions._id;\n        } else if (Schema.Types.DocumentArray.defaultOptions._id != null) {\n          childSchemaOptions._id = Schema.Types.DocumentArray.defaultOptions._id;\n        }\n\n        const childSchema = new Schema(castFromTypeKey, childSchemaOptions);\n        childSchema.$implicitlyCreated = true;\n        return new MongooseTypes.DocumentArray(path, childSchema, obj);\n      } else {\n        // Special case: empty object becomes mixed\n        return new MongooseTypes.Array(path, MongooseTypes.Mixed, obj);\n      }\n    }\n\n    if (cast) {\n      type = cast[options.typeKey] && (options.typeKey !== 'type' || !cast.type.type)\n        ? cast[options.typeKey]\n        : cast;\n\n      if (Array.isArray(type)) {\n        return new MongooseTypes.Array(path, this.interpretAsType(path, type, options), obj);\n      }\n\n      name = typeof type === 'string'\n        ? type\n        : type.schemaName || utils.getFunctionName(type);\n\n      // For Jest 26+, see #10296\n      if (name === 'ClockDate') {\n        name = 'Date';\n      }\n\n      if (name === void 0) {\n        throw new TypeError('Invalid schema configuration: ' +\n          `Could not determine the embedded type for array \\`${path}\\`. ` +\n          'See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.');\n      }\n      if (!MongooseTypes.hasOwnProperty(name)) {\n        throw new TypeError('Invalid schema configuration: ' +\n          `\\`${name}\\` is not a valid type within the array \\`${path}\\`.` +\n          'See https://bit.ly/mongoose-schematypes for a list of valid schema types.');\n      }\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj, options);\n  }\n\n  if (type && type.instanceOfSchema) {\n    return new MongooseTypes.Subdocument(type, path, obj);\n  }\n\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else if (typeof type === 'function' || typeof type === 'object') {\n    name = type.schemaName || utils.getFunctionName(type);\n  } else if (type === Types.ObjectId) {\n    name = 'ObjectId';\n  } else if (type === Types.Decimal128) {\n    name = 'Decimal128';\n  } else {\n    name = type == null ? '' + type : type.toString();\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n  // Special case re: gh-7049 because the bson `ObjectID` class' capitalization\n  // doesn't line up with Mongoose's.\n  if (name === 'ObjectID') {\n    name = 'ObjectId';\n  }\n  // For Jest 26+, see #10296\n  if (name === 'ClockDate') {\n    name = 'Date';\n  }\n\n  if (name === void 0) {\n    throw new TypeError(`Invalid schema configuration: \\`${path}\\` schematype definition is ` +\n      'invalid. See ' +\n      'https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.');\n  }\n  if (MongooseTypes[name] == null) {\n    throw new TypeError(`Invalid schema configuration: \\`${name}\\` is not ` +\n      `a valid type at path \\`${path}\\`. See ` +\n      'https://bit.ly/mongoose-schematypes for a list of valid schema types.');\n  }\n\n  const schemaType = new MongooseTypes[name](path, obj);\n\n  if (schemaType.$isSchemaMap) {\n    createMapNestedSchemaType(this, schemaType, path, obj, options);\n  }\n\n  return schemaType;\n};\n\n/*!\n * ignore\n */\n\nfunction createMapNestedSchemaType(schema, schemaType, path, obj, options) {\n  const mapPath = path + '.$*';\n  let _mapType = { type: {} };\n  if (utils.hasUserDefinedProperty(obj, 'of')) {\n    const isInlineSchema = utils.isPOJO(obj.of) &&\n      Object.keys(obj.of).length > 0 &&\n      !utils.hasUserDefinedProperty(obj.of, schema.options.typeKey);\n    if (isInlineSchema) {\n      _mapType = { [schema.options.typeKey]: new Schema(obj.of) };\n    } else if (utils.isPOJO(obj.of)) {\n      _mapType = Object.assign({}, obj.of);\n    } else {\n      _mapType = { [schema.options.typeKey]: obj.of };\n    }\n\n    if (_mapType[schema.options.typeKey] && _mapType[schema.options.typeKey].instanceOfSchema) {\n      const subdocumentSchema = _mapType[schema.options.typeKey];\n      subdocumentSchema.eachPath((subpath, type) => {\n        if (type.options.select === true || type.options.select === false) {\n          throw new MongooseError('Cannot use schema-level projections (`select: true` or `select: false`) within maps at path \"' + path + '.' + subpath + '\"');\n        }\n      });\n    }\n\n    if (utils.hasUserDefinedProperty(obj, 'ref')) {\n      _mapType.ref = obj.ref;\n    }\n  }\n  schemaType.$__schemaType = schema.interpretAsType(mapPath, _mapType, options);\n}\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and the schemaType instance.\n *\n * #### Example:\n *\n *     const userSchema = new Schema({ name: String, registeredAt: Date });\n *     userSchema.eachPath((pathname, schematype) => {\n *       // Prints twice:\n *       // name SchemaString { ... }\n *       // registeredAt SchemaDate { ... }\n *       console.log(pathname, schematype);\n *     });\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function(fn) {\n  const keys = Object.keys(this.paths);\n  const len = keys.length;\n\n  for (let i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * #### Example:\n *\n *     const s = new Schema({\n *       name: { type: String, required: true },\n *       age: { type: String, required: true },\n *       notes: String\n *     });\n *     s.requiredPaths(); // [ 'age', 'name' ]\n *\n * @api public\n * @param {Boolean} invalidate Refresh the cache\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths(invalidate) {\n  if (this._requiredpaths && !invalidate) {\n    return this._requiredpaths;\n  }\n\n  const paths = Object.keys(this.paths);\n  let i = paths.length;\n  const ret = [];\n\n  while (i--) {\n    const path = paths[i];\n    if (this.paths[path].isRequired) {\n      ret.push(path);\n    }\n  }\n  this._requiredpaths = ret;\n  return this._requiredpaths;\n};\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths() {\n  if (this._indexedpaths) {\n    return this._indexedpaths;\n  }\n  this._indexedpaths = this.indexes();\n  return this._indexedpaths;\n};\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: String, nested: { foo: String } });\n *     s.virtual('foo').get(() => 42);\n *     s.pathType('name'); // \"real\"\n *     s.pathType('nested'); // \"nested\"\n *     s.pathType('foo'); // \"virtual\"\n *     s.pathType('fail'); // \"adhocOrUndefined\"\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function(path) {\n  if (this.paths.hasOwnProperty(path)) {\n    return 'real';\n  }\n  if (this.virtuals.hasOwnProperty(path)) {\n    return 'virtual';\n  }\n  if (this.nested.hasOwnProperty(path)) {\n    return 'nested';\n  }\n\n  // Convert to '.$' to check subpaths re: gh-6405\n  const cleanPath = _pathToPositionalSyntax(path);\n\n  if (this.subpaths.hasOwnProperty(cleanPath) || this.subpaths.hasOwnProperty(path)) {\n    return 'real';\n  }\n\n  const singleNestedPath = this.singleNestedPaths.hasOwnProperty(cleanPath) || this.singleNestedPaths.hasOwnProperty(path);\n  if (singleNestedPath) {\n    return singleNestedPath === 'nested' ? 'nested' : 'real';\n  }\n\n  // Look for maps\n  const mapPath = getMapPath(this, path);\n  if (mapPath != null) {\n    return 'real';\n  }\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {\n    return getPositionalPathType(this, path);\n  }\n  return 'adhocOrUndefined';\n};\n\n/**\n * Returns true iff this path is a child of a mixed schema.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nSchema.prototype.hasMixedParent = function(path) {\n  const subpaths = path.split(/\\./g);\n  path = '';\n  for (let i = 0; i < subpaths.length; ++i) {\n    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];\n    if (this.paths.hasOwnProperty(path) &&\n        this.paths[path] instanceof MongooseTypes.Mixed) {\n      return this.paths[path];\n    }\n  }\n\n  return null;\n};\n\n/**\n * Setup updatedAt and createdAt timestamps to documents if enabled\n *\n * @param {Boolean|Object} timestamps timestamps options\n * @api private\n */\nSchema.prototype.setupTimestamp = function(timestamps) {\n  return setupTimestamps(this, timestamps);\n};\n\n/**\n * ignore. Deprecated re: #6405\n * @param {Any} self\n * @param {String} path\n * @api private\n */\n\nfunction getPositionalPathType(self, path) {\n  const subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths.hasOwnProperty(subpaths[0]) ?\n      self.paths[subpaths[0]] :\n      'adhocOrUndefined';\n  }\n\n  let val = self.path(subpaths[0]);\n  let isNested = false;\n  if (!val) {\n    return 'adhocOrUndefined';\n  }\n\n  const last = subpaths.length - 1;\n\n  for (let i = 1; i < subpaths.length; ++i) {\n    isNested = false;\n    const subpath = subpaths[i];\n\n    if (i === last && val && !/\\D/.test(subpath)) {\n      if (val.$isMongooseDocumentArray) {\n        val = val.$embeddedSchemaType;\n      } else if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) {\n      // Nested array\n      if (val instanceof MongooseTypes.Array && i !== last) {\n        val = val.caster;\n      }\n      continue;\n    }\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    const type = val.schema.pathType(subpath);\n    isNested = (type === 'nested');\n    val = val.schema.path(subpath);\n  }\n\n  self.subpaths[path] = val;\n  if (val) {\n    return 'real';\n  }\n  if (isNested) {\n    return 'nested';\n  }\n  return 'adhocOrUndefined';\n}\n\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath(self, path) {\n  getPositionalPathType(self, path);\n  return self.subpaths[path];\n}\n\n/**\n * Adds a method call to the queue.\n *\n * #### Example:\n *\n *     schema.methods.print = function() { console.log(this); };\n *     schema.queue('print', []); // Print the doc every one is instantiated\n *\n *     const Model = mongoose.model('Test', schema);\n *     new Model({ name: 'test' }); // Prints '{\"_id\": ..., \"name\": \"test\" }'\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api public\n */\n\nSchema.prototype.queue = function(name, args) {\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the model.\n *\n * #### Example:\n *\n *     const toySchema = new Schema({ name: String, created: Date });\n *\n *     toySchema.pre('save', function(next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     });\n *\n *     toySchema.pre('validate', function(next) {\n *       if (this.name !== 'Woody') this.name = 'Woody';\n *       next();\n *     });\n *\n *     // Equivalent to calling `pre()` on `find`, `findOne`, `findOneAndUpdate`.\n *     toySchema.pre(/^find/, function(next) {\n *       console.log(this.getFilter());\n *     });\n *\n *     // Equivalent to calling `pre()` on `updateOne`, `findOneAndUpdate`.\n *     toySchema.pre(['updateOne', 'findOneAndUpdate'], function(next) {\n *       console.log(this.getFilter());\n *     });\n *\n *     toySchema.pre('deleteOne', function() {\n *       // Runs when you call `Toy.deleteOne()`\n *     });\n *\n *     toySchema.pre('deleteOne', { document: true }, function() {\n *       // Runs when you call `doc.deleteOne()`\n *     });\n *\n * @param {String|RegExp|String[]} methodName The method name or regular expression to match method name\n * @param {Object} [options]\n * @param {Boolean} [options.document] If `name` is a hook for both document and query middleware, set to `true` to run on document middleware. For example, set `options.document` to `true` to apply this hook to `Document#deleteOne()` rather than `Query#deleteOne()`.\n * @param {Boolean} [options.query] If `name` is a hook for both document and query middleware, set to `true` to run on query middleware.\n * @param {Function} callback\n * @api public\n */\n\nSchema.prototype.pre = function(name) {\n  if (name instanceof RegExp) {\n    const remainingArgs = Array.prototype.slice.call(arguments, 1);\n    for (const fn of hookNames) {\n      if (name.test(fn)) {\n        this.pre.apply(this, [fn].concat(remainingArgs));\n      }\n    }\n    return this;\n  }\n  if (Array.isArray(name)) {\n    const remainingArgs = Array.prototype.slice.call(arguments, 1);\n    for (const el of name) {\n      this.pre.apply(this, [el].concat(remainingArgs));\n    }\n    return this;\n  }\n  this.s.hooks.pre.apply(this.s.hooks, arguments);\n  return this;\n};\n\n/**\n * Defines a post hook for the document\n *\n *     const schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     schema.post('find', function(docs) {\n *       console.log('this fired after you ran a find query');\n *     });\n *\n *     schema.post(/Many$/, function(res) {\n *       console.log('this fired after you ran `updateMany()` or `deleteMany()`');\n *     });\n *\n *     const Model = mongoose.model('Model', schema);\n *\n *     const m = new Model(..);\n *     m.save(function(err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n *     m.find(function(err, docs) {\n *       console.log('this fires after the post find hook');\n *     });\n *\n * @param {String|RegExp|String[]} methodName The method name or regular expression to match method name\n * @param {Object} [options]\n * @param {Boolean} [options.document] If `name` is a hook for both document and query middleware, set to `true` to run on document middleware.\n * @param {Boolean} [options.query] If `name` is a hook for both document and query middleware, set to `true` to run on query middleware.\n * @param {Function} fn callback\n * @see middleware https://mongoosejs.com/docs/middleware.html\n * @see kareem https://npmjs.org/package/kareem\n * @api public\n */\n\nSchema.prototype.post = function(name) {\n  if (name instanceof RegExp) {\n    const remainingArgs = Array.prototype.slice.call(arguments, 1);\n    for (const fn of hookNames) {\n      if (name.test(fn)) {\n        this.post.apply(this, [fn].concat(remainingArgs));\n      }\n    }\n    return this;\n  }\n  if (Array.isArray(name)) {\n    const remainingArgs = Array.prototype.slice.call(arguments, 1);\n    for (const el of name) {\n      this.post.apply(this, [el].concat(remainingArgs));\n    }\n    return this;\n  }\n  this.s.hooks.post.apply(this.s.hooks, arguments);\n  return this;\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * #### Example:\n *\n *     const s = new Schema({ name: String });\n *     s.plugin(schema => console.log(schema.path('name').path));\n *     mongoose.model('Test', s); // Prints 'name'\n *\n * Or with Options:\n *\n *     const s = new Schema({ name: String });\n *     s.plugin((schema, opts) => console.log(opts.text, schema.path('name').path), { text: \"Schema Path Name:\" });\n *     mongoose.model('Test', s); // Prints 'Schema Path Name: name'\n *\n * @param {Function} plugin The Plugin's callback\n * @param {Object} [opts] Options to pass to the plugin\n * @param {Boolean} [opts.deduplicate=false] If true, ignore duplicate plugins (same `fn` argument using `===`)\n * @see plugins https://mongoosejs.com/docs/plugins.html\n * @api public\n */\n\nSchema.prototype.plugin = function(fn, opts) {\n  if (typeof fn !== 'function') {\n    throw new Error('First param to `schema.plugin()` must be a function, ' +\n      'got \"' + (typeof fn) + '\"');\n  }\n\n  if (opts && opts.deduplicate) {\n    for (const plugin of this.plugins) {\n      if (plugin.fn === fn) {\n        return this;\n      }\n    }\n  }\n  this.plugins.push({ fn: fn, opts: opts });\n\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * #### Example:\n *\n *     const schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     const Kitty = mongoose.model('Kitty', schema);\n *\n *     const fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     const fizz = new Kitty;\n *     fizz.purr();\n *     fizz.scratch();\n *\n * NOTE: `Schema.method()` adds instance methods to the `Schema.methods` object. You can also add instance methods directly to the `Schema.methods` object as seen in the [guide](https://mongoosejs.com/docs/guide.html#methods)\n *\n * @param {String|Object} name The Method Name for a single function, or a Object of \"string-function\" pairs.\n * @param {Function} [fn] The Function in a single-function definition.\n * @api public\n */\n\nSchema.prototype.method = function(name, fn, options) {\n  if (typeof name !== 'string') {\n    for (const i in name) {\n      this.methods[i] = name[i];\n      this.methodOptions[i] = clone(options);\n    }\n  } else {\n    this.methods[name] = fn;\n    this.methodOptions[name] = clone(options);\n  }\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * #### Example:\n *\n *     const schema = new Schema(..);\n *     // Equivalent to `schema.statics.findByName = function(name) {}`;\n *     schema.static('findByName', function(name) {\n *       return this.find({ name: name });\n *     });\n *\n *     const Drink = mongoose.model('Drink', schema);\n *     await Drink.findByName('LaCroix');\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.static({\n *         findByName: function () {..}\n *       , findByCost: function () {..}\n *     });\n *\n *     const Drink = mongoose.model('Drink', schema);\n *     await Drink.findByName('LaCroix');\n *     await Drink.findByCost(3);\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String|Object} name The Method Name for a single function, or a Object of \"string-function\" pairs.\n * @param {Function} [fn] The Function in a single-function definition.\n * @api public\n * @see Statics https://mongoosejs.com/docs/guide.html#statics\n */\n\nSchema.prototype.static = function(name, fn) {\n  if (typeof name !== 'string') {\n    for (const i in name) {\n      this.statics[i] = name[i];\n    }\n  } else {\n    this.statics[name] = fn;\n  }\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * #### Example:\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields The Fields to index, with the order, available values: `1 | -1 | '2d' | '2dsphere' | 'geoHaystack' | 'hashed' | 'text'`\n * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#createIndex)\n * @param {String | number} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link.\n * @param {String} [options.language_override=null] Tells mongodb to use the specified field instead of `language` for parsing text indexes.\n * @api public\n */\n\nSchema.prototype.index = function(fields, options) {\n  fields || (fields = {});\n  options || (options = {});\n\n  if (options.expires) {\n    utils.expires(options);\n  }\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets a schema option.\n *\n * #### Example:\n *\n *     schema.set('strict'); // 'true' by default\n *     schema.set('strict', false); // Sets 'strict' to false\n *     schema.set('strict'); // 'false'\n *\n * @param {String} key The name of the option to set the value to\n * @param {Object} [value] The value to set the option to, if not passed, the option will be reset to default\n * @param {Array<string>} [tags] tags to add to read preference if key === 'read'\n * @see Schema https://mongoosejs.com/docs/api/schema.html#Schema()\n * @api public\n */\n\nSchema.prototype.set = function(key, value, tags) {\n  if (arguments.length === 1) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      if (typeof value === 'string') {\n        this.options[key] = { mode: handleReadPreferenceAliases(value), tags };\n      } else if (Array.isArray(value) && typeof value[0] === 'string') {\n        this.options[key] = {\n          mode: handleReadPreferenceAliases(value[0]),\n          tags: value[1]\n        };\n      } else {\n        this.options[key] = value;\n      }\n      this._userProvidedOptions[key] = this.options[key];\n      break;\n    case 'timestamps':\n      this.setupTimestamp(value);\n      this.options[key] = value;\n      this._userProvidedOptions[key] = this.options[key];\n      break;\n    case '_id':\n      this.options[key] = value;\n      this._userProvidedOptions[key] = this.options[key];\n\n      if (value && !this.paths['_id']) {\n        addAutoId(this);\n      } else if (!value && this.paths['_id'] != null && this.paths['_id'].auto) {\n        this.remove('_id');\n      }\n      break;\n    default:\n      this.options[key] = value;\n      this._userProvidedOptions[key] = this.options[key];\n      break;\n  }\n\n  // Propagate `strict` and `strictQuery` changes down to implicitly created schemas\n  if (key === 'strict') {\n    _propagateOptionsToImplicitlyCreatedSchemas(this, { strict: value });\n  }\n  if (key === 'strictQuery') {\n    _propagateOptionsToImplicitlyCreatedSchemas(this, { strictQuery: value });\n  }\n\n  return this;\n};\n\n/*!\n * Recursively set options on implicitly created schemas\n */\n\nfunction _propagateOptionsToImplicitlyCreatedSchemas(baseSchema, options) {\n  for (const { schema } of baseSchema.childSchemas) {\n    if (!schema.$implicitlyCreated) {\n      continue;\n    }\n    Object.assign(schema.options, options);\n    _propagateOptionsToImplicitlyCreatedSchemas(schema, options);\n  }\n}\n\n/**\n * Gets a schema option.\n *\n * #### Example:\n *\n *     schema.get('strict'); // true\n *     schema.set('strict', false);\n *     schema.get('strict'); // false\n *\n * @param {String} key The name of the Option to get the current value for\n * @api public\n * @return {Any} the option's value\n */\n\nSchema.prototype.get = function(key) {\n  return this.options[key];\n};\n\nconst indexTypes = '2d 2dsphere hashed text'.split(' ');\n\n/**\n * The allowed index types\n *\n * @property {String[]} indexTypes\n * @memberOf Schema\n * @static\n * @api public\n */\n\nObject.defineProperty(Schema, 'indexTypes', {\n  get: function() {\n    return indexTypes;\n  },\n  set: function() {\n    throw new Error('Cannot overwrite Schema.indexTypes');\n  }\n});\n\n/**\n * Returns a list of indexes that this schema declares, via `schema.index()` or by `index: true` in a path's options.\n * Indexes are expressed as an array `[spec, options]`.\n *\n * #### Example:\n *\n *     const userSchema = new Schema({\n *       email: { type: String, required: true, unique: true },\n *       registeredAt: { type: Date, index: true }\n *     });\n *\n *     // [ [ { email: 1 }, { unique: true, background: true } ],\n *     //   [ { registeredAt: 1 }, { background: true } ] ]\n *     userSchema.indexes();\n *\n * [Plugins](https://mongoosejs.com/docs/plugins.html) can use the return value of this function to modify a schema's indexes.\n * For example, the below plugin makes every index unique by default.\n *\n *     function myPlugin(schema) {\n *       for (const index of schema.indexes()) {\n *         if (index[1].unique === undefined) {\n *           index[1].unique = true;\n *         }\n *       }\n *     }\n *\n * @api public\n * @return {Array} list of indexes defined in the schema\n */\n\nSchema.prototype.indexes = function() {\n  return getIndexes(this);\n};\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name The name of the Virtual\n * @param {Object} [options]\n * @param {String|Model} [options.ref] model name or model instance. Marks this as a [populate virtual](https://mongoosejs.com/docs/populate.html#populate-virtuals).\n * @param {String|Function} [options.localField] Required for populate virtuals. See [populate virtual docs](https://mongoosejs.com/docs/populate.html#populate-virtuals) for more information.\n * @param {String|Function} [options.foreignField] Required for populate virtuals. See [populate virtual docs](https://mongoosejs.com/docs/populate.html#populate-virtuals) for more information.\n * @param {Boolean|Function} [options.justOne=false] Only works with populate virtuals. If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), will be a single doc or `null`. Otherwise, the populate virtual will be an array.\n * @param {Boolean} [options.count=false] Only works with populate virtuals. If [truthy](https://masteringjs.io/tutorials/fundamentals/truthy), this populate virtual will contain the number of documents rather than the documents themselves when you `populate()`.\n * @param {Function|null} [options.get=null] Adds a [getter](https://mongoosejs.com/docs/tutorials/getters-setters.html) to this virtual to transform the populated doc.\n * @param {Object|Function} [options.match=null] Apply a default [`match` option to populate](https://mongoosejs.com/docs/populate.html#match), adding an additional filter to the populate query.\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function(name, options) {\n  if (name instanceof VirtualType || getConstructorName(name) === 'VirtualType') {\n    return this.virtual(name.path, name.options);\n  }\n  options = new VirtualOptions(options);\n\n  if (utils.hasUserDefinedProperty(options, ['ref', 'refPath'])) {\n    if (options.localField == null) {\n      throw new Error('Reference virtuals require `localField` option');\n    }\n\n    if (options.foreignField == null) {\n      throw new Error('Reference virtuals require `foreignField` option');\n    }\n\n    this.pre('init', function virtualPreInit(obj) {\n      if (mpath.has(name, obj)) {\n        const _v = mpath.get(name, obj);\n        if (!this.$$populatedVirtuals) {\n          this.$$populatedVirtuals = {};\n        }\n\n        if (options.justOne || options.count) {\n          this.$$populatedVirtuals[name] = Array.isArray(_v) ?\n            _v[0] :\n            _v;\n        } else {\n          this.$$populatedVirtuals[name] = Array.isArray(_v) ?\n            _v :\n            _v == null ? [] : [_v];\n        }\n\n        mpath.unset(name, obj);\n      }\n    });\n\n    const virtual = this.virtual(name);\n    virtual.options = options;\n\n    virtual.\n      set(function(_v) {\n        if (!this.$$populatedVirtuals) {\n          this.$$populatedVirtuals = {};\n        }\n\n        if (options.justOne || options.count) {\n          this.$$populatedVirtuals[name] = Array.isArray(_v) ?\n            _v[0] :\n            _v;\n\n          if (typeof this.$$populatedVirtuals[name] !== 'object') {\n            this.$$populatedVirtuals[name] = options.count ? _v : null;\n          }\n        } else {\n          this.$$populatedVirtuals[name] = Array.isArray(_v) ?\n            _v :\n            _v == null ? [] : [_v];\n\n          this.$$populatedVirtuals[name] = this.$$populatedVirtuals[name].filter(function(doc) {\n            return doc && typeof doc === 'object';\n          });\n        }\n      });\n\n    if (typeof options.get === 'function') {\n      virtual.get(options.get);\n    }\n\n    // Workaround for gh-8198: if virtual is under document array, make a fake\n    // virtual. See gh-8210, gh-13189\n    const parts = name.split('.');\n    let cur = parts[0];\n    for (let i = 0; i < parts.length - 1; ++i) {\n      if (this.paths[cur] == null) {\n        continue;\n      }\n\n      if (this.paths[cur].$isMongooseDocumentArray || this.paths[cur].$isSingleNested) {\n        const remnant = parts.slice(i + 1).join('.');\n        this.paths[cur].schema.virtual(remnant, options);\n        break;\n      }\n\n      cur += '.' + parts[i + 1];\n    }\n\n    return virtual;\n  }\n\n  const virtuals = this.virtuals;\n  const parts = name.split('.');\n\n  if (this.pathType(name) === 'real') {\n    throw new Error('Virtual path \"' + name + '\"' +\n      ' conflicts with a real path in the schema');\n  }\n\n  virtuals[name] = parts.reduce(function(mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length - 1)\n      ? new VirtualType(options, name)\n      : {});\n    return mem[part];\n  }, this.tree);\n\n  return virtuals[name];\n};\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name The name of the Virtual to get\n * @return {VirtualType|null}\n */\n\nSchema.prototype.virtualpath = function(name) {\n  return this.virtuals.hasOwnProperty(name) ? this.virtuals[name] : null;\n};\n\n/**\n * Removes the given `path` (or [`paths`]).\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String, age: Number });\n *     schema.remove('name');\n *     schema.path('name'); // Undefined\n *     schema.path('age'); // SchemaNumber { ... }\n *\n * Or as a Array:\n *\n *     schema.remove(['name', 'age']);\n *     schema.path('name'); // Undefined\n *     schema.path('age'); // Undefined\n *\n * @param {String|Array} path The Path(s) to remove\n * @return {Schema} the Schema instance\n * @api public\n */\nSchema.prototype.remove = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    path.forEach(function(name) {\n      if (this.path(name) == null && !this.nested[name]) {\n        return;\n      }\n      if (this.nested[name]) {\n        const allKeys = Object.keys(this.paths).\n          concat(Object.keys(this.nested));\n        for (const path of allKeys) {\n          if (path.startsWith(name + '.')) {\n            delete this.paths[path];\n            delete this.nested[path];\n            _deletePath(this, path);\n          }\n        }\n\n        delete this.nested[name];\n        _deletePath(this, name);\n        return;\n      }\n\n      delete this.paths[name];\n      _deletePath(this, name);\n    }, this);\n  }\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _deletePath(schema, name) {\n  const pieces = name.split('.');\n  const last = pieces.pop();\n\n  let branch = schema.tree;\n\n  for (const piece of pieces) {\n    branch = branch[piece];\n  }\n\n  delete branch[last];\n}\n\n/**\n * Removes the given virtual or virtuals from the schema.\n *\n * @param {String|Array} path The virutal path(s) to remove.\n * @returns {Schema} the Schema instance, or a mongoose error if the virtual does not exist.\n * @api public\n */\n\nSchema.prototype.removeVirtual = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    for (const virtual of path) {\n      if (this.virtuals[virtual] == null) {\n        throw new MongooseError(`Attempting to remove virtual \"${virtual}\" that does not exist.`);\n      }\n    }\n\n    for (const virtual of path) {\n      delete this.paths[virtual];\n      delete this.virtuals[virtual];\n      if (virtual.indexOf('.') !== -1) {\n        mpath.unset(virtual, this.tree);\n      } else {\n        delete this.tree[virtual];\n      }\n    }\n  }\n  return this;\n};\n\n/**\n * Loads an ES6 class into a schema. Maps [setters](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set) + [getters](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get), [static methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static),\n * and [instance methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Class_body_and_method_definitions)\n * to schema [virtuals](https://mongoosejs.com/docs/guide.html#virtuals),\n * [statics](https://mongoosejs.com/docs/guide.html#statics), and\n * [methods](https://mongoosejs.com/docs/guide.html#methods).\n *\n * #### Example:\n *\n * ```javascript\n * const md5 = require('md5');\n * const userSchema = new Schema({ email: String });\n * class UserClass {\n *   // `gravatarImage` becomes a virtual\n *   get gravatarImage() {\n *     const hash = md5(this.email.toLowerCase());\n *     return `https://www.gravatar.com/avatar/${hash}`;\n *   }\n *\n *   // `getProfileUrl()` becomes a document method\n *   getProfileUrl() {\n *     return `https://mysite.com/${this.email}`;\n *   }\n *\n *   // `findByEmail()` becomes a static\n *   static findByEmail(email) {\n *     return this.findOne({ email });\n *   }\n * }\n *\n * // `schema` will now have a `gravatarImage` virtual, a `getProfileUrl()` method,\n * // and a `findByEmail()` static\n * userSchema.loadClass(UserClass);\n * ```\n *\n * @param {Function} model The Class to load\n * @param {Boolean} [virtualsOnly] if truthy, only pulls virtuals from the class, not methods or statics\n */\nSchema.prototype.loadClass = function(model, virtualsOnly) {\n  // Stop copying when hit certain base classes\n  if (model === Object.prototype ||\n      model === Function.prototype ||\n      model.prototype.hasOwnProperty('$isMongooseModelPrototype') ||\n      model.prototype.hasOwnProperty('$isMongooseDocumentPrototype')) {\n    return this;\n  }\n\n  this.loadClass(Object.getPrototypeOf(model), virtualsOnly);\n\n  // Add static methods\n  if (!virtualsOnly) {\n    Object.getOwnPropertyNames(model).forEach(function(name) {\n      if (name.match(/^(length|name|prototype|constructor|__proto__)$/)) {\n        return;\n      }\n      const prop = Object.getOwnPropertyDescriptor(model, name);\n      if (prop.hasOwnProperty('value')) {\n        this.static(name, prop.value);\n      }\n    }, this);\n  }\n\n  // Add methods and virtuals\n  Object.getOwnPropertyNames(model.prototype).forEach(function(name) {\n    if (name.match(/^(constructor)$/)) {\n      return;\n    }\n    const method = Object.getOwnPropertyDescriptor(model.prototype, name);\n    if (!virtualsOnly) {\n      if (typeof method.value === 'function') {\n        this.method(name, method.value);\n      }\n    }\n    if (typeof method.get === 'function') {\n      if (this.virtuals[name]) {\n        this.virtuals[name].getters = [];\n      }\n      this.virtual(name).get(method.get);\n    }\n    if (typeof method.set === 'function') {\n      if (this.virtuals[name]) {\n        this.virtuals[name].setters = [];\n      }\n      this.virtual(name).set(method.set);\n    }\n  }, this);\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getSchema = function(path) {\n  const _this = this;\n  const pathschema = _this.path(path);\n  const resultPath = [];\n\n  if (pathschema) {\n    pathschema.$fullPath = path;\n    return pathschema;\n  }\n\n  function search(parts, schema) {\n    let p = parts.length + 1;\n    let foundschema;\n    let trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        resultPath.push(trypath);\n\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            foundschema.caster.$fullPath = resultPath.join('.');\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length) {\n            if (foundschema.schema) {\n              let ret;\n              if (parts[p] === '$' || isArrayFilter(parts[p])) {\n                if (p + 1 === parts.length) {\n                  // comments.$\n                  return foundschema;\n                }\n                // comments.$.comments.$.title\n                ret = search(parts.slice(p + 1), foundschema.schema);\n                if (ret) {\n                  ret.$parentSchemaDocArray = ret.$parentSchemaDocArray ||\n                    (foundschema.schema.$isSingleNested ? null : foundschema);\n                }\n                return ret;\n              }\n              // this is the last path of the selector\n              ret = search(parts.slice(p), foundschema.schema);\n              if (ret) {\n                ret.$parentSchemaDocArray = ret.$parentSchemaDocArray ||\n                  (foundschema.schema.$isSingleNested ? null : foundschema);\n              }\n              return ret;\n            }\n          }\n        } else if (foundschema.$isSchemaMap) {\n          if (p >= parts.length) {\n            return foundschema;\n          }\n          // Any path in the map will be an instance of the map's embedded schematype\n          if (p + 1 >= parts.length) {\n            return foundschema.$__schemaType;\n          }\n\n          if (foundschema.$__schemaType instanceof MongooseTypes.Mixed) {\n            return foundschema.$__schemaType;\n          }\n          if (foundschema.$__schemaType.schema != null) {\n            // Map of docs\n            const ret = search(parts.slice(p + 1), foundschema.$__schemaType.schema);\n            return ret;\n          }\n        }\n\n        foundschema.$fullPath = resultPath.join('.');\n\n        return foundschema;\n      }\n    }\n  }\n\n  // look for arrays\n  const parts = path.split('.');\n  for (let i = 0; i < parts.length; ++i) {\n    if (parts[i] === '$' || isArrayFilter(parts[i])) {\n      // Re: gh-5628, because `schema.path()` doesn't take $ into account.\n      parts[i] = '0';\n    }\n  }\n  return search(parts, _this);\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getPathType = function(path) {\n  const _this = this;\n  const pathschema = _this.path(path);\n\n  if (pathschema) {\n    return 'real';\n  }\n\n  function search(parts, schema) {\n    let p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return { schema: foundschema, pathType: 'mixed' };\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if (parts[p] === '$' || isArrayFilter(parts[p])) {\n              if (p === parts.length - 1) {\n                return { schema: foundschema, pathType: 'nested' };\n              }\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            }\n            // this is the last path of the selector\n            return search(parts.slice(p), foundschema.schema);\n          }\n          return {\n            schema: foundschema,\n            pathType: foundschema.$isSingleNested ? 'nested' : 'array'\n          };\n        }\n        return { schema: foundschema, pathType: 'real' };\n      } else if (p === parts.length && schema.nested[trypath]) {\n        return { schema: schema, pathType: 'nested' };\n      }\n    }\n    return { schema: foundschema || schema, pathType: 'undefined' };\n  }\n\n  // look for arrays\n  return search(path.split('.'), _this);\n};\n\n/*!\n * ignore\n */\n\nfunction isArrayFilter(piece) {\n  return piece.startsWith('$[') && piece.endsWith(']');\n}\n\n/**\n * Called by `compile()` _right before_ compiling. Good for making any changes to\n * the schema that should respect options set by plugins, like `id`\n * @method _preCompile\n * @memberOf Schema\n * @instance\n * @api private\n */\n\nSchema.prototype._preCompile = function _preCompile() {\n  idGetter(this);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     const ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * #### Types:\n *\n * - [String](https://mongoosejs.com/docs/schematypes.html#strings)\n * - [Number](https://mongoosejs.com/docs/schematypes.html#numbers)\n * - [Boolean](https://mongoosejs.com/docs/schematypes.html#booleans) | Bool\n * - [Array](https://mongoosejs.com/docs/schematypes.html#arrays)\n * - [Buffer](https://mongoosejs.com/docs/schematypes.html#buffers)\n * - [Date](https://mongoosejs.com/docs/schematypes.html#dates)\n * - [ObjectId](https://mongoosejs.com/docs/schematypes.html#objectids) | Oid\n * - [Mixed](https://mongoosejs.com/docs/schematypes.html#mixed)\n * - [UUID](https://mongoosejs.com/docs/schematypes.html#uuid)\n * - [BigInt](https://mongoosejs.com/docs/schematypes.html#bigint)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     const Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nexports.ObjectId = MongooseTypes.ObjectId;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * SyncIndexes Error constructor.\n *\n * @param {String} message\n * @param {String} errorsMap\n * @inherits MongooseError\n * @api private\n */\n\nclass SyncIndexesError extends MongooseError {\n  constructor(message, errorsMap) {\n    super(message);\n    this.errors = errorsMap;\n  }\n}\n\nObject.defineProperty(SyncIndexesError.prototype, 'name', {\n  value: 'SyncIndexesError'\n});\n\n\nmodule.exports = SyncIndexesError;\n", "'use strict';\n\nmodule.exports = function applyPlugins(schema, plugins, options, cacheKey) {\n  if (schema[cacheKey]) {\n    return;\n  }\n  schema[cacheKey] = true;\n\n  if (!options || !options.skipTopLevel) {\n    let pluginTags = null;\n    for (const plugin of plugins) {\n      const tags = plugin[1] == null ? null : plugin[1].tags;\n      if (!Array.isArray(tags)) {\n        schema.plugin(plugin[0], plugin[1]);\n        continue;\n      }\n\n      pluginTags = pluginTags || new Set(schema.options.pluginTags || []);\n      if (!tags.find(tag => pluginTags.has(tag))) {\n        continue;\n      }\n      schema.plugin(plugin[0], plugin[1]);\n    }\n  }\n\n  options = Object.assign({}, options);\n  delete options.skipTopLevel;\n\n  if (options.applyPluginsToChildSchemas !== false) {\n    for (const path of Object.keys(schema.paths)) {\n      const type = schema.paths[path];\n      if (type.schema != null) {\n        applyPlugins(type.schema, plugins, options, cacheKey);\n\n        // Recompile schema because plugins may have changed it, see gh-7572\n        type.caster.prototype.$__setSchema(type.schema);\n      }\n    }\n  }\n\n  const discriminators = schema.discriminators;\n  if (discriminators == null) {\n    return;\n  }\n\n  const applyPluginsToDiscriminators = options.applyPluginsToDiscriminators;\n\n  const keys = Object.keys(discriminators);\n  for (const discriminatorKey of keys) {\n    const discriminatorSchema = discriminators[discriminatorKey];\n\n    applyPlugins(discriminatorSchema, plugins,\n      { skipTopLevel: !applyPluginsToDiscriminators }, cacheKey);\n  }\n};\n", "'use strict';\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * createCollections Error constructor\n *\n * @param {String} message\n * @param {String} errorsMap\n * @inherits MongooseError\n * @api private\n */\n\nclass CreateCollectionsError extends MongooseError {\n  constructor(message, errorsMap) {\n    super(message);\n    this.errors = errorsMap;\n  }\n}\n\nObject.defineProperty(CreateCollectionsError.prototype, 'name', {\n  value: 'CreateCollectionsError'\n});\n\nmodule.exports = CreateCollectionsError;\n\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ChangeStream = require('./cursor/ChangeStream');\nconst EventEmitter = require('events').EventEmitter;\nconst Schema = require('./schema');\nconst STATES = require('./connectionstate');\nconst MongooseError = require('./error/index');\nconst ServerSelectionError = require('./error/serverSelection');\nconst SyncIndexesError = require('./error/syncIndexes');\nconst applyPlugins = require('./helpers/schema/applyPlugins');\nconst clone = require('./helpers/clone');\nconst driver = require('./driver');\nconst get = require('./helpers/get');\nconst immediate = require('./helpers/immediate');\nconst utils = require('./utils');\nconst CreateCollectionsError = require('./error/createCollectionsError');\n\nconst arrayAtomicsSymbol = require('./helpers/symbols').arrayAtomicsSymbol;\nconst sessionNewDocuments = require('./helpers/symbols').sessionNewDocuments;\n\n/**\n * A list of authentication mechanisms that don't require a password for authentication.\n * This is used by the authMechanismDoesNotRequirePassword method.\n *\n * @api private\n */\nconst noPasswordAuthMechanisms = [\n  'MONGODB-X509'\n];\n\n/**\n * Connection constructor\n *\n * For practical reasons, a Connection equals a Db.\n *\n * @param {Mongoose} base a mongoose instance\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\n * @event `connecting`: Emitted when `connection.openUri()` is executed on this connection.\n * @event `connected`: Emitted when this connection successfully connects to the db. May be emitted _multiple_ times in `reconnected` scenarios.\n * @event `open`: Emitted after we `connected` and `onOpen` is executed on all of this connection's models.\n * @event `disconnecting`: Emitted when `connection.close()` was executed.\n * @event `disconnected`: Emitted after getting disconnected from the db.\n * @event `close`: Emitted after we `disconnected` and `onClose` executed on all of this connection's models.\n * @event `reconnected`: Emitted after we `connected` and subsequently `disconnected`, followed by successfully another successful connection.\n * @event `error`: Emitted when an error occurs on this connection.\n * @event `fullsetup`: Emitted after the driver has connected to primary and all secondaries if specified in the connection string.\n * @api public\n */\n\nfunction Connection(base) {\n  this.base = base;\n  this.collections = {};\n  this.models = {};\n  this.config = {};\n  this.replica = false;\n  this.options = null;\n  this.otherDbs = []; // FIXME: To be replaced with relatedDbs\n  this.relatedDbs = {}; // Hashmap of other dbs that share underlying connection\n  this.states = STATES;\n  this._readyState = STATES.disconnected;\n  this._closeCalled = false;\n  this._hasOpened = false;\n  this.plugins = [];\n  if (typeof base === 'undefined' || !base.connections.length) {\n    this.id = 0;\n  } else {\n    this.id = base.nextConnectionId;\n  }\n  this._queue = [];\n}\n\n/*!\n * Inherit from EventEmitter\n */\n\nObject.setPrototypeOf(Connection.prototype, EventEmitter.prototype);\n\n/**\n * Connection ready state\n *\n * - 0 = disconnected\n * - 1 = connected\n * - 2 = connecting\n * - 3 = disconnecting\n *\n * Each state change emits its associated event name.\n *\n * #### Example:\n *\n *     conn.on('connected', callback);\n *     conn.on('disconnected', callback);\n *\n * @property readyState\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'readyState', {\n  get: function() {\n    return this._readyState;\n  },\n  set: function(val) {\n    if (!(val in STATES)) {\n      throw new Error('Invalid connection state: ' + val);\n    }\n\n    if (this._readyState !== val) {\n      this._readyState = val;\n      // [legacy] loop over the otherDbs on this connection and change their state\n      for (const db of this.otherDbs) {\n        db.readyState = val;\n      }\n\n      if (STATES.connected === val) {\n        this._hasOpened = true;\n      }\n\n      this.emit(STATES[val]);\n    }\n  }\n});\n\n/**\n * Gets the value of the option `key`. Equivalent to `conn.options[key]`\n *\n * #### Example:\n *\n *     conn.get('test'); // returns the 'test' value\n *\n * @param {String} key\n * @method get\n * @api public\n */\n\nConnection.prototype.get = function(key) {\n  if (this.config.hasOwnProperty(key)) {\n    return this.config[key];\n  }\n\n  return get(this.options, key);\n};\n\n/**\n * Sets the value of the option `key`. Equivalent to `conn.options[key] = val`\n *\n * Supported options include:\n *\n * - `maxTimeMS`: Set [`maxTimeMS`](https://mongoosejs.com/docs/api/query.html#Query.prototype.maxTimeMS()) for all queries on this connection.\n * - 'debug': If `true`, prints the operations mongoose sends to MongoDB to the console. If a writable stream is passed, it will log to that stream, without colorization. If a callback function is passed, it will receive the collection name, the method name, then all arugments passed to the method. For example, if you wanted to replicate the default logging, you could output from the callback `Mongoose: ${collectionName}.${methodName}(${methodArgs.join(', ')})`.\n *\n * #### Example:\n *\n *     conn.set('test', 'foo');\n *     conn.get('test'); // 'foo'\n *     conn.options.test; // 'foo'\n *\n * @param {String} key\n * @param {Any} val\n * @method set\n * @api public\n */\n\nConnection.prototype.set = function(key, val) {\n  if (this.config.hasOwnProperty(key)) {\n    this.config[key] = val;\n    return val;\n  }\n\n  this.options = this.options || {};\n  this.options[key] = val;\n  return val;\n};\n\n/**\n * A hash of the collections associated with this connection\n *\n * @property collections\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.collections;\n\n/**\n * The name of the database this connection points to.\n *\n * #### Example:\n *\n *     mongoose.createConnection('mongodb://127.0.0.1:27017/mydb').name; // \"mydb\"\n *\n * @property name\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.name;\n\n/**\n * A [POJO](https://masteringjs.io/tutorials/fundamentals/pojo) containing\n * a map from model names to models. Contains all models that have been\n * added to this connection using [`Connection#model()`](https://mongoosejs.com/docs/api/connection.html#Connection.prototype.model()).\n *\n * #### Example:\n *\n *     const conn = mongoose.createConnection();\n *     const Test = conn.model('Test', mongoose.Schema({ name: String }));\n *\n *     Object.keys(conn.models).length; // 1\n *     conn.models.Test === Test; // true\n *\n * @property models\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.models;\n\n/**\n * A number identifier for this connection. Used for debugging when\n * you have [multiple connections](https://mongoosejs.com/docs/connections.html#multiple_connections).\n *\n * #### Example:\n *\n *     // The default connection has `id = 0`\n *     mongoose.connection.id; // 0\n *\n *     // If you create a new connection, Mongoose increments id\n *     const conn = mongoose.createConnection();\n *     conn.id; // 1\n *\n * @property id\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.id;\n\n/**\n * The plugins that will be applied to all models created on this connection.\n *\n * #### Example:\n *\n *     const db = mongoose.createConnection('mongodb://127.0.0.1:27017/mydb');\n *     db.plugin(() => console.log('Applied'));\n *     db.plugins.length; // 1\n *\n *     db.model('Test', new Schema({})); // Prints \"Applied\"\n *\n * @property plugins\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'plugins', {\n  configurable: false,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The host name portion of the URI. If multiple hosts, such as a replica set,\n * this will contain the first host name in the URI\n *\n * #### Example:\n *\n *     mongoose.createConnection('mongodb://127.0.0.1:27017/mydb').host; // \"127.0.0.1\"\n *\n * @property host\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'host', {\n  configurable: true,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The port portion of the URI. If multiple hosts, such as a replica set,\n * this will contain the port from the first host name in the URI.\n *\n * #### Example:\n *\n *     mongoose.createConnection('mongodb://127.0.0.1:27017/mydb').port; // 27017\n *\n * @property port\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'port', {\n  configurable: true,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The username specified in the URI\n *\n * #### Example:\n *\n *     mongoose.createConnection('mongodb://val:psw@127.0.0.1:27017/mydb').user; // \"val\"\n *\n * @property user\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'user', {\n  configurable: true,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The password specified in the URI\n *\n * #### Example:\n *\n *     mongoose.createConnection('mongodb://val:psw@127.0.0.1:27017/mydb').pass; // \"psw\"\n *\n * @property pass\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nObject.defineProperty(Connection.prototype, 'pass', {\n  configurable: true,\n  enumerable: true,\n  writable: true\n});\n\n/**\n * The mongodb.Db instance, set when the connection is opened\n *\n * @property db\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.db;\n\n/**\n * The MongoClient instance this connection uses to talk to MongoDB. Mongoose automatically sets this property\n * when the connection is opened.\n *\n * @property client\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.client;\n\n/**\n * A hash of the global options that are associated with this connection\n *\n * @property config\n * @memberOf Connection\n * @instance\n * @api public\n */\n\nConnection.prototype.config;\n\n/**\n * Helper for `createCollection()`. Will explicitly create the given collection\n * with specified options. Used to create [capped collections](https://www.mongodb.com/docs/manual/core/capped-collections/)\n * and [views](https://www.mongodb.com/docs/manual/core/views/) from mongoose.\n *\n * Options are passed down without modification to the [MongoDB driver's `createCollection()` function](https://mongodb.github.io/node-mongodb-native/4.9/classes/Db.html#createCollection)\n *\n * @method createCollection\n * @param {string} collection The collection to create\n * @param {Object} [options] see [MongoDB driver docs](https://mongodb.github.io/node-mongodb-native/4.9/classes/Db.html#createCollection)\n * @return {Promise}\n * @api public\n */\n\nConnection.prototype.createCollection = async function createCollection(collection, options) {\n  if (typeof options === 'function' || (arguments.length >= 3 && typeof arguments[2] === 'function')) {\n    throw new MongooseError('Connection.prototype.createCollection() no longer accepts a callback');\n  }\n\n  if ((this.readyState === STATES.connecting || this.readyState === STATES.disconnected) && this._shouldBufferCommands()) {\n    await new Promise(resolve => {\n      this._queue.push({ fn: resolve });\n    });\n  }\n\n  return this.db.createCollection(collection, options);\n};\n\n/**\n * Calls `createCollection()` on a models in a series.\n *\n * @method createCollections\n * @param {Boolean} continueOnError When true, will continue to create collections and create a new error class for the collections that errored.\n * @returns {Promise}\n * @api public\n */\n\nConnection.prototype.createCollections = async function createCollections(options = {}) {\n  const result = {};\n  const errorsMap = { };\n\n  const { continueOnError } = options;\n  delete options.continueOnError;\n  for (const model of Object.values(this.models)) {\n    try {\n      result[model.modelName] = await model.createCollection({});\n    } catch (err) {\n      if (!continueOnError) {\n        errorsMap[model.modelName] = err;\n        break;\n      } else {\n        result[model.modelName] = err;\n      }\n    }\n  }\n\n  if (!continueOnError && Object.keys(errorsMap).length) {\n    const message = Object.entries(errorsMap).map(([modelName, err]) => `${modelName}: ${err.message}`).join(', ');\n    const createCollectionsError = new CreateCollectionsError(message, errorsMap);\n    throw createCollectionsError;\n  }\n  return result;\n};\n\n/**\n * _Requires MongoDB >= 3.6.0._ Starts a [MongoDB session](https://www.mongodb.com/docs/manual/release-notes/3.6/#client-sessions)\n * for benefits like causal consistency, [retryable writes](https://www.mongodb.com/docs/manual/core/retryable-writes/),\n * and [transactions](https://thecodebarbarian.com/a-node-js-perspective-on-mongodb-4-transactions.html).\n *\n * #### Example:\n *\n *     const session = await conn.startSession();\n *     let doc = await Person.findOne({ name: 'Ned Stark' }, null, { session });\n *     await doc.remove();\n *     // `doc` will always be null, even if reading from a replica set\n *     // secondary. Without causal consistency, it is possible to\n *     // get a doc back from the below query if the query reads from a\n *     // secondary that is experiencing replication lag.\n *     doc = await Person.findOne({ name: 'Ned Stark' }, null, { session, readPreference: 'secondary' });\n *\n *\n * @method startSession\n * @param {Object} [options] see the [mongodb driver options](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html#startSession)\n * @param {Boolean} [options.causalConsistency=true] set to false to disable causal consistency\n * @return {Promise<ClientSession>} promise that resolves to a MongoDB driver `ClientSession`\n * @api public\n */\n\nConnection.prototype.startSession = async function startSession(options) {\n  if (arguments.length >= 2 && typeof arguments[1] === 'function') {\n    throw new MongooseError('Connection.prototype.startSession() no longer accepts a callback');\n  }\n\n  if ((this.readyState === STATES.connecting || this.readyState === STATES.disconnected) && this._shouldBufferCommands()) {\n    await new Promise(resolve => {\n      this._queue.push({ fn: resolve });\n    });\n  }\n\n  const session = this.client.startSession(options);\n  return session;\n};\n\n/**\n * _Requires MongoDB >= 3.6.0._ Executes the wrapped async function\n * in a transaction. Mongoose will commit the transaction if the\n * async function executes successfully and attempt to retry if\n * there was a retriable error.\n *\n * Calls the MongoDB driver's [`session.withTransaction()`](https://mongodb.github.io/node-mongodb-native/4.9/classes/ClientSession.html#withTransaction),\n * but also handles resetting Mongoose document state as shown below.\n *\n * #### Example:\n *\n *     const doc = new Person({ name: 'Will Riker' });\n *     await db.transaction(async function setRank(session) {\n *       doc.rank = 'Captain';\n *       await doc.save({ session });\n *       doc.isNew; // false\n *\n *       // Throw an error to abort the transaction\n *       throw new Error('Oops!');\n *     },{ readPreference: 'primary' }).catch(() => {});\n *\n *     // true, `transaction()` reset the document's state because the\n *     // transaction was aborted.\n *     doc.isNew;\n *\n * @method transaction\n * @param {Function} fn Function to execute in a transaction\n * @param {mongodb.TransactionOptions} [options] Optional settings for the transaction\n * @return {Promise<Any>} promise that is fulfilled if Mongoose successfully committed the transaction, or rejects if the transaction was aborted or if Mongoose failed to commit the transaction. If fulfilled, the promise resolves to a MongoDB command result.\n * @api public\n */\n\nConnection.prototype.transaction = function transaction(fn, options) {\n  return this.startSession().then(session => {\n    session[sessionNewDocuments] = new Map();\n    return session.withTransaction(() => fn(session), options).\n      then(res => {\n        delete session[sessionNewDocuments];\n        return res;\n      }).\n      catch(err => {\n        // If transaction was aborted, we need to reset newly\n        // inserted documents' `isNew`.\n        for (const doc of session[sessionNewDocuments].keys()) {\n          const state = session[sessionNewDocuments].get(doc);\n          if (state.hasOwnProperty('isNew')) {\n            doc.$isNew = state.$isNew;\n          }\n          if (state.hasOwnProperty('versionKey')) {\n            doc.set(doc.schema.options.versionKey, state.versionKey);\n          }\n\n          if (state.modifiedPaths.length > 0 && doc.$__.activePaths.states.modify == null) {\n            doc.$__.activePaths.states.modify = {};\n          }\n          for (const path of state.modifiedPaths) {\n            doc.$__.activePaths.paths[path] = 'modify';\n            doc.$__.activePaths.states.modify[path] = true;\n          }\n\n          for (const path of state.atomics.keys()) {\n            const val = doc.$__getValue(path);\n            if (val == null) {\n              continue;\n            }\n            val[arrayAtomicsSymbol] = state.atomics.get(path);\n          }\n        }\n        delete session[sessionNewDocuments];\n        throw err;\n      })\n      .finally(() => {\n        session.endSession()\n          .catch(() => {});\n      });\n  });\n};\n\n/**\n * Helper for `dropCollection()`. Will delete the given collection, including\n * all documents and indexes.\n *\n * @method dropCollection\n * @param {string} collection The collection to delete\n * @return {Promise}\n * @api public\n */\n\nConnection.prototype.dropCollection = async function dropCollection(collection) {\n  if (arguments.length >= 2 && typeof arguments[1] === 'function') {\n    throw new MongooseError('Connection.prototype.dropCollection() no longer accepts a callback');\n  }\n\n  if ((this.readyState === STATES.connecting || this.readyState === STATES.disconnected) && this._shouldBufferCommands()) {\n    await new Promise(resolve => {\n      this._queue.push({ fn: resolve });\n    });\n  }\n\n  return this.db.dropCollection(collection);\n};\n\n/**\n * Helper for `dropDatabase()`. Deletes the given database, including all\n * collections, documents, and indexes.\n *\n * #### Example:\n *\n *     const conn = mongoose.createConnection('mongodb://127.0.0.1:27017/mydb');\n *     // Deletes the entire 'mydb' database\n *     await conn.dropDatabase();\n *\n * @method dropDatabase\n * @return {Promise}\n * @api public\n */\n\nConnection.prototype.dropDatabase = async function dropDatabase() {\n  if (arguments.length >= 1 && typeof arguments[0] === 'function') {\n    throw new MongooseError('Connection.prototype.dropDatabase() no longer accepts a callback');\n  }\n\n  if ((this.readyState === STATES.connecting || this.readyState === STATES.disconnected) && this._shouldBufferCommands()) {\n    await new Promise(resolve => {\n      this._queue.push({ fn: resolve });\n    });\n  }\n\n  // If `dropDatabase()` is called, this model's collection will not be\n  // init-ed. It is sufficiently common to call `dropDatabase()` after\n  // `mongoose.connect()` but before creating models that we want to\n  // support this. See gh-6796\n  for (const model of Object.values(this.models)) {\n    delete model.$init;\n  }\n\n  return this.db.dropDatabase();\n};\n\n/*!\n * ignore\n */\n\nConnection.prototype._shouldBufferCommands = function _shouldBufferCommands() {\n  if (this.config.bufferCommands != null) {\n    return this.config.bufferCommands;\n  }\n  if (this.base.get('bufferCommands') != null) {\n    return this.base.get('bufferCommands');\n  }\n  return true;\n};\n\n/**\n * error\n *\n * Graceful error handling, passes error to callback\n * if available, else emits error on the connection.\n *\n * @param {Error} err\n * @param {Function} callback optional\n * @emits \"error\" Emits the `error` event with the given `err`, unless a callback is specified\n * @returns {Promise|null} Returns a rejected Promise if no `callback` is given.\n * @api private\n */\n\nConnection.prototype.error = function(err, callback) {\n  if (callback) {\n    callback(err);\n    return null;\n  }\n  if (this.listeners('error').length > 0) {\n    this.emit('error', err);\n  }\n  return Promise.reject(err);\n};\n\n/**\n * Called when the connection is opened\n *\n * @api private\n */\n\nConnection.prototype.onOpen = function() {\n  this.readyState = STATES.connected;\n\n  for (const d of this._queue) {\n    d.fn.apply(d.ctx, d.args);\n  }\n  this._queue = [];\n\n  // avoid having the collection subscribe to our event emitter\n  // to prevent 0.3 warning\n  for (const i in this.collections) {\n    if (utils.object.hasOwnProperty(this.collections, i)) {\n      this.collections[i].onOpen();\n    }\n  }\n\n  this.emit('open');\n};\n\n/**\n * Opens the connection with a URI using `MongoClient.connect()`.\n *\n * @param {String} uri The URI to connect with.\n * @param {Object} [options] Passed on to [`MongoClient.connect`](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html#connect-1)\n * @param {Boolean} [options.bufferCommands=true] Mongoose specific option. Set to false to [disable buffering](https://mongoosejs.com/docs/faq.html#callback_never_executes) on all models associated with this connection.\n * @param {Number} [options.bufferTimeoutMS=10000] Mongoose specific option. If `bufferCommands` is true, Mongoose will throw an error after `bufferTimeoutMS` if the operation is still buffered.\n * @param {String} [options.dbName] The name of the database we want to use. If not provided, use database name from connection string.\n * @param {String} [options.user] username for authentication, equivalent to `options.auth.user`. Maintained for backwards compatibility.\n * @param {String} [options.pass] password for authentication, equivalent to `options.auth.password`. Maintained for backwards compatibility.\n * @param {Number} [options.maxPoolSize=100] The maximum number of sockets the MongoDB driver will keep open for this connection. Keep in mind that MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See [Slow Trains in MongoDB and Node.js](https://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs).\n * @param {Number} [options.minPoolSize=0] The minimum number of sockets the MongoDB driver will keep open for this connection. Keep in mind that MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See [Slow Trains in MongoDB and Node.js](https://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs).\n * @param {Number} [options.serverSelectionTimeoutMS] If `useUnifiedTopology = true`, the MongoDB driver will try to find a server to send any given operation to, and keep retrying for `serverSelectionTimeoutMS` milliseconds before erroring out. If not set, the MongoDB driver defaults to using `30000` (30 seconds).\n * @param {Number} [options.heartbeatFrequencyMS] If `useUnifiedTopology = true`, the MongoDB driver sends a heartbeat every `heartbeatFrequencyMS` to check on the status of the connection. A heartbeat is subject to `serverSelectionTimeoutMS`, so the MongoDB driver will retry failed heartbeats for up to 30 seconds by default. Mongoose only emits a `'disconnected'` event after a heartbeat has failed, so you may want to decrease this setting to reduce the time between when your server goes down and when Mongoose emits `'disconnected'`. We recommend you do **not** set this setting below 1000, too many heartbeats can lead to performance degradation.\n * @param {Boolean} [options.autoIndex=true] Mongoose-specific option. Set to false to disable automatic index creation for all models associated with this connection.\n * @param {Class} [options.promiseLibrary] Sets the [underlying driver's promise library](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/MongoClientOptions.html#promiseLibrary).\n * @param {Number} [options.socketTimeoutMS=0] How long the MongoDB driver will wait before killing a socket due to inactivity _after initial connection_. A socket may be inactive because of either no activity or a long-running operation. `socketTimeoutMS` defaults to 0, which means Node.js will not time out the socket due to inactivity. This option is passed to [Node.js `socket#setTimeout()` function](https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback) after the MongoDB driver successfully completes.\n * @param {Number} [options.family=0] Passed transparently to [Node.js' `dns.lookup()`](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback) function. May be either `0, `4`, or `6`. `4` means use IPv4 only, `6` means use IPv6 only, `0` means try both.\n * @param {Boolean} [options.autoCreate=false] Set to `true` to make Mongoose automatically call `createCollection()` on every model created on this connection.\n * @returns {Promise<Connection>}\n * @api public\n */\n\nConnection.prototype.openUri = async function openUri(uri, options) {\n  if (this.readyState === STATES.connecting || this.readyState === STATES.connected) {\n    if (this._connectionString === uri) {\n      return this;\n    }\n  }\n\n  this._closeCalled = false;\n\n  // Internal option to skip `await this.$initialConnection` in\n  // this function for `createConnection()`. Because otherwise\n  // `createConnection()` would have an uncatchable error.\n  let _fireAndForget = false;\n  if (options && '_fireAndForget' in options) {\n    _fireAndForget = options._fireAndForget;\n    delete options._fireAndForget;\n  }\n\n  try {\n    _validateArgs.apply(arguments);\n  } catch (err) {\n    if (_fireAndForget) {\n      throw err;\n    }\n    this.$initialConnection = Promise.reject(err);\n    throw err;\n  }\n\n  this.$initialConnection = this.createClient(uri, options).\n    then(() => this).\n    catch(err => {\n      this.readyState = STATES.disconnected;\n      if (this.listeners('error').length > 0) {\n        immediate(() => this.emit('error', err));\n      }\n      throw err;\n    });\n\n  for (const model of Object.values(this.models)) {\n    // Errors handled internally, so safe to ignore error\n    model.init().catch(function $modelInitNoop() {});\n  }\n\n  // `createConnection()` calls this `openUri()` function without\n  // awaiting on the result, so we set this option to rely on\n  // `asPromise()` to handle any errors.\n  if (_fireAndForget) {\n    return this;\n  }\n\n  try {\n    await this.$initialConnection;\n  } catch (err) {\n    throw _handleConnectionErrors(err);\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _validateArgs(uri, options, callback) {\n  if (typeof options === 'function' && callback == null) {\n    throw new MongooseError('Connection.prototype.openUri() no longer accepts a callback');\n  } else if (typeof callback === 'function') {\n    throw new MongooseError('Connection.prototype.openUri() no longer accepts a callback');\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _handleConnectionErrors(err) {\n  if (err?.name === 'MongoServerSelectionError') {\n    const originalError = err;\n    err = new ServerSelectionError();\n    err.assimilateError(originalError);\n  }\n\n  return err;\n}\n\n/**\n * Destroy the connection. Similar to [`.close`](https://mongoosejs.com/docs/api/connection.html#Connection.prototype.close()),\n * but also removes the connection from Mongoose's `connections` list and prevents the\n * connection from ever being re-opened.\n *\n * @param {Boolean} [force]\n * @returns {Promise}\n */\n\nConnection.prototype.destroy = async function destroy(force) {\n  if (typeof force === 'function' || (arguments.length === 2 && typeof arguments[1] === 'function')) {\n    throw new MongooseError('Connection.prototype.destroy() no longer accepts a callback');\n  }\n\n  if (force != null && typeof force === 'object') {\n    this.$wasForceClosed = !!force.force;\n  } else {\n    this.$wasForceClosed = !!force;\n  }\n\n  return this._close(force, true);\n};\n\n/**\n * Closes the connection\n *\n * @param {Boolean} [force] optional\n * @return {Promise}\n * @api public\n */\n\nConnection.prototype.close = async function close(force) {\n  if (typeof force === 'function' || (arguments.length === 2 && typeof arguments[1] === 'function')) {\n    throw new MongooseError('Connection.prototype.close() no longer accepts a callback');\n  }\n\n  if (force != null && typeof force === 'object') {\n    this.$wasForceClosed = !!force.force;\n  } else {\n    this.$wasForceClosed = !!force;\n  }\n\n  for (const model of Object.values(this.models)) {\n    // If manually disconnecting, make sure to clear each model's `$init`\n    // promise, so Mongoose knows to re-run `init()` in case the\n    // connection is re-opened. See gh-12047.\n    delete model.$init;\n  }\n\n  return this._close(force, false);\n};\n\n/**\n * Handles closing the connection\n *\n * @param {Boolean} force\n * @param {Boolean} destroy\n * @returns {Connection} this\n * @api private\n */\nConnection.prototype._close = async function _close(force, destroy) {\n  const _this = this;\n  const closeCalled = this._closeCalled;\n  this._closeCalled = true;\n  this._destroyCalled = destroy;\n  if (this.client != null) {\n    this.client._closeCalled = true;\n    this.client._destroyCalled = destroy;\n  }\n\n  const conn = this;\n  switch (this.readyState) {\n    case STATES.disconnected:\n      if (destroy && this.base.connections.indexOf(conn) !== -1) {\n        this.base.connections.splice(this.base.connections.indexOf(conn), 1);\n      }\n      if (!closeCalled) {\n        await this.doClose(force);\n        this.onClose(force);\n      }\n      break;\n\n    case STATES.connected:\n      this.readyState = STATES.disconnecting;\n      await this.doClose(force);\n      if (destroy && _this.base.connections.indexOf(conn) !== -1) {\n        this.base.connections.splice(this.base.connections.indexOf(conn), 1);\n      }\n      this.onClose(force);\n\n      break;\n    case STATES.connecting:\n      return new Promise((resolve, reject) => {\n        const _rerunClose = () => {\n          this.removeListener('open', _rerunClose);\n          this.removeListener('error', _rerunClose);\n          if (destroy) {\n            this.destroy(force).then(resolve, reject);\n          } else {\n            this.close(force).then(resolve, reject);\n          }\n        };\n\n        this.once('open', _rerunClose);\n        this.once('error', _rerunClose);\n      });\n\n    case STATES.disconnecting:\n      return new Promise(resolve => {\n        this.once('close', () => {\n          if (destroy && this.base.connections.indexOf(conn) !== -1) {\n            this.base.connections.splice(this.base.connections.indexOf(conn), 1);\n          }\n          resolve();\n        });\n      });\n  }\n\n  return this;\n};\n\n/**\n * Abstract method that drivers must implement.\n *\n * @api private\n */\n\nConnection.prototype.doClose = function() {\n  throw new Error('Connection#doClose unimplemented by driver');\n};\n\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\nConnection.prototype.onClose = function(force) {\n  this.readyState = STATES.disconnected;\n\n  // avoid having the collection subscribe to our event emitter\n  // to prevent 0.3 warning\n  for (const i in this.collections) {\n    if (utils.object.hasOwnProperty(this.collections, i)) {\n      this.collections[i].onClose(force);\n    }\n  }\n\n  this.emit('close', force);\n\n  for (const db of this.otherDbs) {\n    this._destroyCalled ? db.destroy({ force: force, skipCloseClient: true }) : db.close({ force: force, skipCloseClient: true });\n  }\n};\n\n/**\n * Retrieves a raw collection instance, creating it if not cached.\n * This method returns a thin wrapper around a [MongoDB Node.js driver collection]([MongoDB Node.js driver collection](https://mongodb.github.io/node-mongodb-native/Next/classes/Collection.html)).\n * Using a Collection bypasses Mongoose middleware, validation, and casting,\n * letting you use [MongoDB Node.js driver](https://mongodb.github.io/node-mongodb-native/) functionality directly.\n *\n * @param {String} name of the collection\n * @param {Object} [options] optional collection options\n * @return {Collection} collection instance\n * @api public\n */\n\nConnection.prototype.collection = function(name, options) {\n  const defaultOptions = {\n    autoIndex: this.config.autoIndex != null ? this.config.autoIndex : this.base.options.autoIndex,\n    autoCreate: this.config.autoCreate != null ? this.config.autoCreate : this.base.options.autoCreate\n  };\n  options = Object.assign({}, defaultOptions, options ? clone(options) : {});\n  options.$wasForceClosed = this.$wasForceClosed;\n  const Collection = this.base && this.base.__driver && this.base.__driver.Collection || driver.get().Collection;\n  if (!(name in this.collections)) {\n    this.collections[name] = new Collection(name, this, options);\n  }\n  return this.collections[name];\n};\n\n/**\n * Declares a plugin executed on all schemas you pass to `conn.model()`\n *\n * Equivalent to calling `.plugin(fn)` on each schema you create.\n *\n * #### Example:\n *\n *     const db = mongoose.createConnection('mongodb://127.0.0.1:27017/mydb');\n *     db.plugin(() => console.log('Applied'));\n *     db.plugins.length; // 1\n *\n *     db.model('Test', new Schema({})); // Prints \"Applied\"\n *\n * @param {Function} fn plugin callback\n * @param {Object} [opts] optional options\n * @return {Connection} this\n * @see plugins https://mongoosejs.com/docs/plugins.html\n * @api public\n */\n\nConnection.prototype.plugin = function(fn, opts) {\n  this.plugins.push([fn, opts]);\n  return this;\n};\n\n/**\n * Defines or retrieves a model.\n *\n *     const mongoose = require('mongoose');\n *     const db = mongoose.createConnection(..);\n *     db.model('Venue', new Schema(..));\n *     const Ticket = db.model('Ticket', new Schema(..));\n *     const Venue = db.model('Venue');\n *\n * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the `utils.toCollectionName` method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String }, { collection: 'actor' });\n *\n *     // or\n *\n *     schema.set('collection', 'actor');\n *\n *     // or\n *\n *     const collectionName = 'actor'\n *     const M = conn.model('Actor', schema, collectionName)\n *\n * @param {String|Function} name the model name or class extending Model\n * @param {Schema} [schema] a schema. necessary when defining a model\n * @param {String} [collection] name of mongodb collection (optional) if not given it will be induced from model name\n * @param {Object} [options]\n * @param {Boolean} [options.overwriteModels=false] If true, overwrite existing models with the same name to avoid `OverwriteModelError`\n * @see Mongoose#model https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.model()\n * @return {Model} The compiled model\n * @api public\n */\n\nConnection.prototype.model = function(name, schema, collection, options) {\n  if (!(this instanceof Connection)) {\n    throw new MongooseError('`connection.model()` should not be run with ' +\n      '`new`. If you are doing `new db.model(foo)(bar)`, use ' +\n      '`db.model(foo)(bar)` instead');\n  }\n\n  let fn;\n  if (typeof name === 'function') {\n    fn = name;\n    name = fn.name;\n  }\n\n  // collection name discovery\n  if (typeof schema === 'string') {\n    collection = schema;\n    schema = false;\n  }\n\n  if (utils.isObject(schema)) {\n    if (!schema.instanceOfSchema) {\n      schema = new Schema(schema);\n    } else if (!(schema instanceof this.base.Schema)) {\n      schema = schema._clone(this.base.Schema);\n    }\n  }\n  if (schema && !schema.instanceOfSchema) {\n    throw new Error('The 2nd parameter to `mongoose.model()` should be a ' +\n      'schema or a POJO');\n  }\n\n  const defaultOptions = { cache: false, overwriteModels: this.base.options.overwriteModels };\n  const opts = Object.assign(defaultOptions, options, { connection: this });\n  if (this.models[name] && !collection && opts.overwriteModels !== true) {\n    // model exists but we are not subclassing with custom collection\n    if (schema && schema.instanceOfSchema && schema !== this.models[name].schema) {\n      throw new MongooseError.OverwriteModelError(name);\n    }\n    return this.models[name];\n  }\n\n  let model;\n\n  if (schema && schema.instanceOfSchema) {\n    applyPlugins(schema, this.plugins, null, '$connectionPluginsApplied');\n\n    // compile a model\n    model = this.base._model(fn || name, schema, collection, opts);\n\n    // only the first model with this name is cached to allow\n    // for one-offs with custom collection names etc.\n    if (!this.models[name]) {\n      this.models[name] = model;\n    }\n\n    // Errors handled internally, so safe to ignore error\n    model.init().catch(function $modelInitNoop() {});\n\n    return model;\n  }\n\n  if (this.models[name] && collection) {\n    // subclassing current model with alternate collection\n    model = this.models[name];\n    schema = model.prototype.schema;\n    const sub = model.__subclass(this, schema, collection);\n    // do not cache the sub model\n    return sub;\n  }\n\n  if (arguments.length === 1) {\n    model = this.models[name];\n    if (!model) {\n      throw new MongooseError.MissingSchemaError(name);\n    }\n    return model;\n  }\n\n  if (!model) {\n    throw new MongooseError.MissingSchemaError(name);\n  }\n\n  if (this === model.prototype.db\n      && (!collection || collection === model.collection.name)) {\n    // model already uses this connection.\n\n    // only the first model with this name is cached to allow\n    // for one-offs with custom collection names etc.\n    if (!this.models[name]) {\n      this.models[name] = model;\n    }\n\n    return model;\n  }\n  this.models[name] = model.__subclass(this, schema, collection);\n  return this.models[name];\n};\n\n/**\n * Removes the model named `name` from this connection, if it exists. You can\n * use this function to clean up any models you created in your tests to\n * prevent OverwriteModelErrors.\n *\n * #### Example:\n *\n *     conn.model('User', new Schema({ name: String }));\n *     console.log(conn.model('User')); // Model object\n *     conn.deleteModel('User');\n *     console.log(conn.model('User')); // undefined\n *\n *     // Usually useful in a Mocha `afterEach()` hook\n *     afterEach(function() {\n *       conn.deleteModel(/.+/); // Delete every model\n *     });\n *\n * @api public\n * @param {String|RegExp} name if string, the name of the model to remove. If regexp, removes all models whose name matches the regexp.\n * @return {Connection} this\n */\n\nConnection.prototype.deleteModel = function(name) {\n  if (typeof name === 'string') {\n    const model = this.model(name);\n    if (model == null) {\n      return this;\n    }\n    const collectionName = model.collection.name;\n    delete this.models[name];\n    delete this.collections[collectionName];\n\n    this.emit('deleteModel', model);\n  } else if (name instanceof RegExp) {\n    const pattern = name;\n    const names = this.modelNames();\n    for (const name of names) {\n      if (pattern.test(name)) {\n        this.deleteModel(name);\n      }\n    }\n  } else {\n    throw new Error('First parameter to `deleteModel()` must be a string ' +\n      'or regexp, got \"' + name + '\"');\n  }\n\n  return this;\n};\n\n/**\n * Watches the entire underlying database for changes. Similar to\n * [`Model.watch()`](https://mongoosejs.com/docs/api/model.html#Model.watch()).\n *\n * This function does **not** trigger any middleware. In particular, it\n * does **not** trigger aggregate middleware.\n *\n * The ChangeStream object is an event emitter that emits the following events:\n *\n * - 'change': A change occurred, see below example\n * - 'error': An unrecoverable error occurred. In particular, change streams currently error out if they lose connection to the replica set primary. Follow [this GitHub issue](https://github.com/Automattic/mongoose/issues/6799) for updates.\n * - 'end': Emitted if the underlying stream is closed\n * - 'close': Emitted if the underlying stream is closed\n *\n * #### Example:\n *\n *     const User = conn.model('User', new Schema({ name: String }));\n *\n *     const changeStream = conn.watch().on('change', data => console.log(data));\n *\n *     // Triggers a 'change' event on the change stream.\n *     await User.create({ name: 'test' });\n *\n * @api public\n * @param {Array} [pipeline]\n * @param {Object} [options] passed without changes to [the MongoDB driver's `Db#watch()` function](https://mongodb.github.io/node-mongodb-native/4.9/classes/Db.html#watch)\n * @return {ChangeStream} mongoose-specific change stream wrapper, inherits from EventEmitter\n */\n\nConnection.prototype.watch = function(pipeline, options) {\n  const changeStreamThunk = cb => {\n    immediate(() => {\n      if (this.readyState === STATES.connecting) {\n        this.once('open', function() {\n          const driverChangeStream = this.db.watch(pipeline, options);\n          cb(null, driverChangeStream);\n        });\n      } else {\n        const driverChangeStream = this.db.watch(pipeline, options);\n        cb(null, driverChangeStream);\n      }\n    });\n  };\n\n  const changeStream = new ChangeStream(changeStreamThunk, pipeline, options);\n  return changeStream;\n};\n\n/**\n * Returns a promise that resolves when this connection\n * successfully connects to MongoDB, or rejects if this connection failed\n * to connect.\n *\n * #### Example:\n *\n *     const conn = await mongoose.createConnection('mongodb://127.0.0.1:27017/test').\n *       asPromise();\n *     conn.readyState; // 1, means Mongoose is connected\n *\n * @api public\n * @return {Promise}\n */\n\nConnection.prototype.asPromise = async function asPromise() {\n  try {\n    await this.$initialConnection;\n    return this;\n  } catch (err) {\n    throw _handleConnectionErrors(err);\n  }\n};\n\n/**\n * Returns an array of model names created on this connection.\n * @api public\n * @return {String[]}\n */\n\nConnection.prototype.modelNames = function() {\n  return Object.keys(this.models);\n};\n\n/**\n * Returns if the connection requires authentication after it is opened. Generally if a\n * username and password are both provided than authentication is needed, but in some cases a\n * password is not required.\n *\n * @api private\n * @return {Boolean} true if the connection should be authenticated after it is opened, otherwise false.\n */\nConnection.prototype.shouldAuthenticate = function() {\n  return this.user != null &&\n    (this.pass != null || this.authMechanismDoesNotRequirePassword());\n};\n\n/**\n * Returns a boolean value that specifies if the current authentication mechanism needs a\n * password to authenticate according to the auth objects passed into the openUri methods.\n *\n * @api private\n * @return {Boolean} true if the authentication mechanism specified in the options object requires\n *  a password, otherwise false.\n */\nConnection.prototype.authMechanismDoesNotRequirePassword = function() {\n  if (this.options && this.options.auth) {\n    return noPasswordAuthMechanisms.indexOf(this.options.auth.authMechanism) >= 0;\n  }\n  return true;\n};\n\n/**\n * Returns a boolean value that specifies if the provided objects object provides enough\n * data to authenticate with. Generally this is true if the username and password are both specified\n * but in some authentication methods, a password is not required for authentication so only a username\n * is required.\n *\n * @param {Object} [options] the options object passed into the openUri methods.\n * @api private\n * @return {Boolean} true if the provided options object provides enough data to authenticate with,\n *   otherwise false.\n */\nConnection.prototype.optionsProvideAuthenticationData = function(options) {\n  return (options) &&\n      (options.user) &&\n      ((options.pass) || this.authMechanismDoesNotRequirePassword());\n};\n\n/**\n * Returns the [MongoDB driver `MongoClient`](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html) instance\n * that this connection uses to talk to MongoDB.\n *\n * #### Example:\n *\n *     const conn = await mongoose.createConnection('mongodb://127.0.0.1:27017/test').\n *       asPromise();\n *\n *     conn.getClient(); // MongoClient { ... }\n *\n * @api public\n * @return {MongoClient}\n */\n\nConnection.prototype.getClient = function getClient() {\n  return this.client;\n};\n\n/**\n * Set the [MongoDB driver `MongoClient`](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html) instance\n * that this connection uses to talk to MongoDB. This is useful if you already have a MongoClient instance, and want to\n * reuse it.\n *\n * #### Example:\n *\n *     const client = await mongodb.MongoClient.connect('mongodb://127.0.0.1:27017/test');\n *\n *     const conn = mongoose.createConnection().setClient(client);\n *\n *     conn.getClient(); // MongoClient { ... }\n *     conn.readyState; // 1, means 'CONNECTED'\n *\n * @api public\n * @param {MongClient} client The Client to set to be used.\n * @return {Connection} this\n */\n\nConnection.prototype.setClient = function setClient() {\n  throw new MongooseError('Connection#setClient not implemented by driver');\n};\n\n/*!\n * Called internally by `openUri()` to create a MongoClient instance.\n */\n\nConnection.prototype.createClient = function createClient() {\n  throw new MongooseError('Connection#createClient not implemented by driver');\n};\n\n/**\n * Syncs all the indexes for the models registered with this connection.\n *\n * @param {Object} [options]\n * @param {Boolean} [options.continueOnError] `false` by default. If set to `true`, mongoose will not throw an error if one model syncing failed, and will return an object where the keys are the names of the models, and the values are the results/errors for each model.\n * @return {Promise<Object>} Returns a Promise, when the Promise resolves the value is a list of the dropped indexes.\n */\nConnection.prototype.syncIndexes = async function syncIndexes(options = {}) {\n  const result = {};\n  const errorsMap = { };\n\n  const { continueOnError } = options;\n  delete options.continueOnError;\n\n  for (const model of Object.values(this.models)) {\n    try {\n      result[model.modelName] = await model.syncIndexes(options);\n    } catch (err) {\n      if (!continueOnError) {\n        errorsMap[model.modelName] = err;\n        break;\n      } else {\n        result[model.modelName] = err;\n      }\n    }\n  }\n\n  if (!continueOnError && Object.keys(errorsMap).length) {\n    const message = Object.entries(errorsMap).map(([modelName, err]) => `${modelName}: ${err.message}`).join(', ');\n    const syncIndexesError = new SyncIndexesError(message, errorsMap);\n    throw syncIndexesError;\n  }\n\n  return result;\n};\n\n/**\n * Switches to a different database using the same [connection pool](https://mongoosejs.com/docs/api/connectionshtml#connection_pools).\n *\n * Returns a new connection object, with the new db.\n *\n * #### Example:\n *\n *     // Connect to `initialdb` first\n *     const conn = await mongoose.createConnection('mongodb://127.0.0.1:27017/initialdb').asPromise();\n *\n *     // Creates an un-cached connection to `mydb`\n *     const db = conn.useDb('mydb');\n *     // Creates a cached connection to `mydb2`. All calls to `conn.useDb('mydb2', { useCache: true })` will return the same\n *     // connection instance as opposed to creating a new connection instance\n *     const db2 = conn.useDb('mydb2', { useCache: true });\n *\n * @method useDb\n * @memberOf Connection\n * @param {String} name The database name\n * @param {Object} [options]\n * @param {Boolean} [options.useCache=false] If true, cache results so calling `useDb()` multiple times with the same name only creates 1 connection object.\n * @param {Boolean} [options.noListener=false] If true, the connection object will not make the db listen to events on the original connection. See [issue #9961](https://github.com/Automattic/mongoose/issues/9961).\n * @return {Connection} New Connection Object\n * @api public\n */\n\n/**\n * Removes the database connection with the given name created with with `useDb()`.\n *\n * Throws an error if the database connection was not found.\n *\n * #### Example:\n *\n *     // Connect to `initialdb` first\n *     const conn = await mongoose.createConnection('mongodb://127.0.0.1:27017/initialdb').asPromise();\n *\n *     // Creates an un-cached connection to `mydb`\n *     const db = conn.useDb('mydb');\n *\n *     // Closes `db`, and removes `db` from `conn.relatedDbs` and `conn.otherDbs`\n *     await conn.removeDb('mydb');\n *\n * @method removeDb\n * @memberOf Connection\n * @param {String} name The database name\n * @return {Connection} this\n * @api public\n */\n\n/*!\n * Module exports.\n */\n\nConnection.STATES = STATES;\nmodule.exports = Connection;\n", "'use strict';\n\nconst clone = require('./clone');\nconst MongooseError = require('../error/index');\n\nfunction processConnectionOptions(uri, options) {\n  const opts = options ? options : {};\n  const readPreference = opts.readPreference\n    ? opts.readPreference\n    : getUriReadPreference(uri);\n\n  const clonedOpts = clone(opts);\n  const resolvedOpts = (readPreference && readPreference !== 'primary' && readPreference !== 'primaryPreferred')\n    ? resolveOptsConflicts(readPreference, clonedOpts)\n    : clonedOpts;\n\n  return resolvedOpts;\n}\n\nfunction resolveOptsConflicts(pref, opts) {\n  // don't silently override user-provided indexing options\n  if (setsIndexOptions(opts) && setsSecondaryRead(pref)) {\n    throwReadPreferenceError();\n  }\n\n  // if user has not explicitly set any auto-indexing options,\n  // we can silently default them all to false\n  else {\n    return defaultIndexOptsToFalse(opts);\n  }\n}\n\nfunction setsIndexOptions(opts) {\n  const configIdx = opts.config && opts.config.autoIndex;\n  const { autoCreate, autoIndex } = opts;\n  return !!(configIdx || autoCreate || autoIndex);\n}\n\nfunction setsSecondaryRead(prefString) {\n  return !!(prefString === 'secondary' || prefString === 'secondaryPreferred');\n}\n\nfunction getUriReadPreference(connectionString) {\n  const exp = /(?:&|\\?)readPreference=(\\w+)(?:&|$)/;\n  const match = exp.exec(connectionString);\n  return match ? match[1] : null;\n}\n\nfunction defaultIndexOptsToFalse(opts) {\n  opts.config = { autoIndex: false };\n  opts.autoCreate = false;\n  opts.autoIndex = false;\n  return opts;\n}\n\nfunction throwReadPreferenceError() {\n  throw new MongooseError(\n    'MongoDB prohibits index creation on connections that read from ' +\n            'non-primary replicas.  Connections that set \"readPreference\" to \"secondary\" or ' +\n            '\"secondaryPreferred\" may not opt-in to the following connection options: ' +\n            'autoCreate, autoIndex'\n  );\n}\n\nmodule.exports = processConnectionOptions;\n", "'use strict';\n\nexports.setTimeout = setTimeout;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseConnection = require('../../connection');\nconst MongooseError = require('../../error/index');\nconst STATES = require('../../connectionstate');\nconst mongodb = require('mongodb');\nconst pkg = require('../../../package.json');\nconst processConnectionOptions = require('../../helpers/processConnectionOptions');\nconst setTimeout = require('../../helpers/timers').setTimeout;\nconst utils = require('../../utils');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) connection implementation.\n *\n * @inherits Connection\n * @api private\n */\n\nfunction NativeConnection() {\n  MongooseConnection.apply(this, arguments);\n  this._listening = false;\n}\n\n/**\n * Expose the possible connection states.\n * @api public\n */\n\nNativeConnection.STATES = STATES;\n\n/*!\n * Inherits from Connection.\n */\n\nObject.setPrototypeOf(NativeConnection.prototype, MongooseConnection.prototype);\n\n/**\n * Switches to a different database using the same connection pool.\n *\n * Returns a new connection object, with the new db. If you set the `useCache`\n * option, `useDb()` will cache connections by `name`.\n *\n * **Note:** Calling `close()` on a `useDb()` connection will close the base connection as well.\n *\n * @param {String} name The database name\n * @param {Object} [options]\n * @param {Boolean} [options.useCache=false] If true, cache results so calling `useDb()` multiple times with the same name only creates 1 connection object.\n * @param {Boolean} [options.noListener=false] If true, the new connection object won't listen to any events on the base connection. This is better for memory usage in cases where you're calling `useDb()` for every request.\n * @return {Connection} New Connection Object\n * @api public\n */\n\nNativeConnection.prototype.useDb = function(name, options) {\n  // Return immediately if cached\n  options = options || {};\n  if (options.useCache && this.relatedDbs[name]) {\n    return this.relatedDbs[name];\n  }\n\n  // we have to manually copy all of the attributes...\n  const newConn = new this.constructor();\n  newConn.name = name;\n  newConn.base = this.base;\n  newConn.collections = {};\n  newConn.models = {};\n  newConn.replica = this.replica;\n  newConn.config = Object.assign({}, this.config, newConn.config);\n  newConn.name = this.name;\n  newConn.options = this.options;\n  newConn._readyState = this._readyState;\n  newConn._closeCalled = this._closeCalled;\n  newConn._hasOpened = this._hasOpened;\n  newConn._listening = false;\n  newConn._parent = this;\n\n  newConn.host = this.host;\n  newConn.port = this.port;\n  newConn.user = this.user;\n  newConn.pass = this.pass;\n\n  // First, when we create another db object, we are not guaranteed to have a\n  // db object to work with. So, in the case where we have a db object and it\n  // is connected, we can just proceed with setting everything up. However, if\n  // we do not have a db or the state is not connected, then we need to wait on\n  // the 'open' event of the connection before doing the rest of the setup\n  // the 'connected' event is the first time we'll have access to the db object\n\n  const _this = this;\n\n  newConn.client = _this.client;\n\n  if (this.db && this._readyState === STATES.connected) {\n    wireup();\n  } else {\n    this.once('connected', wireup);\n  }\n\n  function wireup() {\n    newConn.client = _this.client;\n    const _opts = {};\n    if (options.hasOwnProperty('noListener')) {\n      _opts.noListener = options.noListener;\n    }\n    newConn.db = _this.client.db(name, _opts);\n    newConn.onOpen();\n  }\n\n  newConn.name = name;\n\n  // push onto the otherDbs stack, this is used when state changes\n  if (options.noListener !== true) {\n    this.otherDbs.push(newConn);\n  }\n  newConn.otherDbs.push(this);\n\n  // push onto the relatedDbs cache, this is used when state changes\n  if (options && options.useCache) {\n    this.relatedDbs[newConn.name] = newConn;\n    newConn.relatedDbs = this.relatedDbs;\n  }\n\n  return newConn;\n};\n\n/**\n * Removes the database connection with the given name created with `useDb()`.\n *\n * Throws an error if the database connection was not found.\n *\n * #### Example:\n *\n *     // Connect to `initialdb` first\n *     const conn = await mongoose.createConnection('mongodb://127.0.0.1:27017/initialdb').asPromise();\n *\n *     // Creates an un-cached connection to `mydb`\n *     const db = conn.useDb('mydb');\n *\n *     // Closes `db`, and removes `db` from `conn.relatedDbs` and `conn.otherDbs`\n *     await conn.removeDb('mydb');\n *\n * @method removeDb\n * @memberOf Connection\n * @param {String} name The database name\n * @return {Connection} this\n */\n\nNativeConnection.prototype.removeDb = function removeDb(name) {\n  const dbs = this.otherDbs.filter(db => db.name === name);\n  if (!dbs.length) {\n    throw new MongooseError(`No connections to database \"${name}\" found`);\n  }\n\n  for (const db of dbs) {\n    db._closeCalled = true;\n    db._destroyCalled = true;\n    db._readyState = STATES.disconnected;\n    db.$wasForceClosed = true;\n  }\n  delete this.relatedDbs[name];\n  this.otherDbs = this.otherDbs.filter(db => db.name !== name);\n};\n\n/**\n * Closes the connection\n *\n * @param {Boolean} [force]\n * @return {Connection} this\n * @api private\n */\n\nNativeConnection.prototype.doClose = async function doClose(force) {\n  if (this.client == null) {\n    return this;\n  }\n\n  let skipCloseClient = false;\n  if (force != null && typeof force === 'object') {\n    skipCloseClient = force.skipCloseClient;\n    force = force.force;\n  }\n\n  if (skipCloseClient) {\n    return this;\n  }\n\n  await this.client.close(force);\n  // Defer because the driver will wait at least 1ms before finishing closing\n  // the pool, see https://github.com/mongodb-js/mongodb-core/blob/a8f8e4ce41936babc3b9112bf42d609779f03b39/lib/connection/pool.js#L1026-L1030.\n  // If there's queued operations, you may still get some background work\n  // after the callback is called.\n  await new Promise(resolve => setTimeout(resolve, 1));\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nNativeConnection.prototype.createClient = async function createClient(uri, options) {\n  if (typeof uri !== 'string') {\n    throw new MongooseError('The `uri` parameter to `openUri()` must be a ' +\n      `string, got \"${typeof uri}\". Make sure the first parameter to ` +\n      '`mongoose.connect()` or `mongoose.createConnection()` is a string.');\n  }\n\n  if (this._destroyCalled) {\n    throw new MongooseError(\n      'Connection has been closed and destroyed, and cannot be used for re-opening the connection. ' +\n      'Please create a new connection with `mongoose.createConnection()` or `mongoose.connect()`.'\n    );\n  }\n\n  if (this.readyState === STATES.connecting || this.readyState === STATES.connected) {\n    if (this._connectionString !== uri) {\n      throw new MongooseError('Can\\'t call `openUri()` on an active connection with ' +\n        'different connection strings. Make sure you aren\\'t calling `mongoose.connect()` ' +\n        'multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections');\n    }\n  }\n\n  options = processConnectionOptions(uri, options);\n\n  if (options) {\n\n    const autoIndex = options.config && options.config.autoIndex != null ?\n      options.config.autoIndex :\n      options.autoIndex;\n    if (autoIndex != null) {\n      this.config.autoIndex = autoIndex !== false;\n      delete options.config;\n      delete options.autoIndex;\n    }\n\n    if ('autoCreate' in options) {\n      this.config.autoCreate = !!options.autoCreate;\n      delete options.autoCreate;\n    }\n\n    if ('sanitizeFilter' in options) {\n      this.config.sanitizeFilter = options.sanitizeFilter;\n      delete options.sanitizeFilter;\n    }\n\n    // Backwards compat\n    if (options.user || options.pass) {\n      options.auth = options.auth || {};\n      options.auth.username = options.user;\n      options.auth.password = options.pass;\n\n      this.user = options.user;\n      this.pass = options.pass;\n    }\n    delete options.user;\n    delete options.pass;\n\n    if (options.bufferCommands != null) {\n      this.config.bufferCommands = options.bufferCommands;\n      delete options.bufferCommands;\n    }\n  } else {\n    options = {};\n  }\n\n  this._connectionOptions = options;\n  const dbName = options.dbName;\n  if (dbName != null) {\n    this.$dbName = dbName;\n  }\n  delete options.dbName;\n\n  if (!utils.hasUserDefinedProperty(options, 'driverInfo')) {\n    options.driverInfo = {\n      name: 'Mongoose',\n      version: pkg.version\n    };\n  }\n\n  this.readyState = STATES.connecting;\n  this._connectionString = uri;\n\n  let client;\n  try {\n    client = new mongodb.MongoClient(uri, options);\n  } catch (error) {\n    this.readyState = STATES.disconnected;\n    throw error;\n  }\n  this.client = client;\n\n  client.setMaxListeners(0);\n  await client.connect();\n\n  _setClient(this, client, options, dbName);\n\n  for (const db of this.otherDbs) {\n    _setClient(db, client, {}, db.name);\n  }\n  return this;\n};\n\n/*!\n * ignore\n */\n\nNativeConnection.prototype.setClient = function setClient(client) {\n  if (!(client instanceof mongodb.MongoClient)) {\n    throw new MongooseError('Must call `setClient()` with an instance of MongoClient');\n  }\n  if (this.readyState !== STATES.disconnected) {\n    throw new MongooseError('Cannot call `setClient()` on a connection that is already connected.');\n  }\n  if (client.topology == null) {\n    throw new MongooseError('Cannot call `setClient()` with a MongoClient that you have not called `connect()` on yet.');\n  }\n\n  this._connectionString = client.s.url;\n  _setClient(this, client, {}, client.s.options.dbName);\n\n  for (const model of Object.values(this.models)) {\n    // Errors handled internally, so safe to ignore error\n    model.init().catch(function $modelInitNoop() {});\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _setClient(conn, client, options, dbName) {\n  const db = dbName != null ? client.db(dbName) : client.db();\n  conn.db = db;\n  conn.client = client;\n  conn.host = client &&\n    client.s &&\n    client.s.options &&\n    client.s.options.hosts &&\n    client.s.options.hosts[0] &&\n    client.s.options.hosts[0].host || void 0;\n  conn.port = client &&\n    client.s &&\n    client.s.options &&\n    client.s.options.hosts &&\n    client.s.options.hosts[0] &&\n    client.s.options.hosts[0].port || void 0;\n  conn.name = dbName != null ? dbName : client && client.s && client.s.options && client.s.options.dbName || void 0;\n  conn._closeCalled = client._closeCalled;\n\n  const _handleReconnect = () => {\n    // If we aren't disconnected, we assume this reconnect is due to a\n    // socket timeout. If there's no activity on a socket for\n    // `socketTimeoutMS`, the driver will attempt to reconnect and emit\n    // this event.\n    if (conn.readyState !== STATES.connected) {\n      conn.readyState = STATES.connected;\n      conn.emit('reconnect');\n      conn.emit('reconnected');\n      conn.onOpen();\n    }\n  };\n\n  const type = client &&\n  client.topology &&\n  client.topology.description &&\n  client.topology.description.type || '';\n\n  if (type === 'Single') {\n    client.on('serverDescriptionChanged', ev => {\n      const newDescription = ev.newDescription;\n      if (newDescription.type === 'Unknown') {\n        conn.readyState = STATES.disconnected;\n      } else {\n        _handleReconnect();\n      }\n    });\n  } else if (type.startsWith('ReplicaSet')) {\n    client.on('topologyDescriptionChanged', ev => {\n      // Emit disconnected if we've lost connectivity to the primary\n      const description = ev.newDescription;\n      if (conn.readyState === STATES.connected && description.type !== 'ReplicaSetWithPrimary') {\n        // Implicitly emits 'disconnected'\n        conn.readyState = STATES.disconnected;\n      } else if (conn.readyState === STATES.disconnected && description.type === 'ReplicaSetWithPrimary') {\n        _handleReconnect();\n      }\n    });\n  }\n\n  conn.onOpen();\n\n  for (const i in conn.collections) {\n    if (utils.object.hasOwnProperty(conn.collections, i)) {\n      conn.collections[i].onOpen();\n    }\n  }\n}\n\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeConnection;\n", "/*!\n * Module exports.\n */\n\n'use strict';\n\nexports.Collection = require('./collection');\nexports.Connection = require('./connection');\n", "\n/*!\n * Valid mongoose options\n */\n\n'use strict';\n\nconst VALID_OPTIONS = Object.freeze([\n  'allowDiskUse',\n  'applyPluginsToChildSchemas',\n  'applyPluginsToDiscriminators',\n  'autoCreate',\n  'autoIndex',\n  'bufferCommands',\n  'bufferTimeoutMS',\n  'cloneSchemas',\n  'debug',\n  'id',\n  'timestamps.createdAt.immutable',\n  'maxTimeMS',\n  'objectIdGetter',\n  'overwriteModels',\n  'returnOriginal',\n  'runValidators',\n  'sanitizeFilter',\n  'sanitizeProjection',\n  'selectPopulatedPaths',\n  'setDefaultsOnInsert',\n  'strict',\n  'strictPopulate',\n  'strictQuery',\n  'toJSON',\n  'toObject',\n  'translateAliases'\n]);\n\nmodule.exports = VALID_OPTIONS;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\n/**\n * If `eachAsync()` is called with `continueOnError: true`, there can be\n * multiple errors. This error class contains an `errors` property, which\n * contains an array of all errors that occurred in `eachAsync()`.\n *\n * @api private\n */\n\nclass EachAsyncMultiError extends MongooseError {\n  /**\n   * @param {String} connectionString\n   */\n  constructor(errors) {\n    let preview = errors.map(e => e.message).join(', ');\n    if (preview.length > 50) {\n      preview = preview.slice(0, 50) + '...';\n    }\n    super(`eachAsync() finished with ${errors.length} errors: ${preview}`);\n\n    this.errors = errors;\n  }\n}\n\nObject.defineProperty(EachAsyncMultiError.prototype, 'name', {\n  value: 'EachAsyncMultiError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = EachAsyncMultiError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst EachAsyncMultiError = require('../../error/eachAsyncMultiError');\nconst immediate = require('../immediate');\n\n/**\n * Execute `fn` for every document in the cursor. If `fn` returns a promise,\n * will wait for the promise to resolve before iterating on to the next one.\n * Returns a promise that resolves when done.\n *\n * @param {Function} next the thunk to call to get the next document\n * @param {Function} fn\n * @param {Object} options\n * @param {Number} [options.batchSize=null] if set, Mongoose will call `fn` with an array of at most `batchSize` documents, instead of a single document\n * @param {Number} [options.parallel=1] maximum number of `fn` calls that Mongoose will run in parallel\n * @param {AbortSignal} [options.signal] allow cancelling this eachAsync(). Once the abort signal is fired, `eachAsync()` will immediately fulfill the returned promise (or call the callback) and not fetch any more documents.\n * @return {Promise}\n * @api public\n * @method eachAsync\n */\n\nmodule.exports = async function eachAsync(next, fn, options) {\n  const parallel = options.parallel || 1;\n  const batchSize = options.batchSize;\n  const signal = options.signal;\n  const continueOnError = options.continueOnError;\n  const aggregatedErrors = [];\n  const enqueue = asyncQueue();\n\n  let aborted = false;\n\n  return new Promise((resolve, reject) => {\n    if (signal != null) {\n      if (signal.aborted) {\n        return resolve(null);\n      }\n\n      signal.addEventListener('abort', () => {\n        aborted = true;\n        return resolve(null);\n      }, { once: true });\n    }\n\n    if (batchSize != null) {\n      if (typeof batchSize !== 'number') {\n        throw new TypeError('batchSize must be a number');\n      } else if (!Number.isInteger(batchSize)) {\n        throw new TypeError('batchSize must be an integer');\n      } else if (batchSize < 1) {\n        throw new TypeError('batchSize must be at least 1');\n      }\n    }\n\n    iterate((err, res) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n\n  function iterate(finalCallback) {\n    let handleResultsInProgress = 0;\n    let currentDocumentIndex = 0;\n\n    let error = null;\n    for (let i = 0; i < parallel; ++i) {\n      enqueue(createFetch());\n    }\n\n    function createFetch() {\n      let documentsBatch = [];\n      let drained = false;\n\n      return fetch;\n\n      function fetch(done) {\n        if (drained || aborted) {\n          return done();\n        } else if (error) {\n          return done();\n        }\n\n        next(function(err, doc) {\n          if (error != null) {\n            return done();\n          }\n          if (err != null) {\n            if (err.name === 'MongoCursorExhaustedError') {\n              // We may end up calling `next()` multiple times on an exhausted\n              // cursor, which leads to an error. In case cursor is exhausted,\n              // just treat it as if the cursor returned no document, which is\n              // how a cursor indicates it is exhausted.\n              doc = null;\n            } else if (continueOnError) {\n              aggregatedErrors.push(err);\n            } else {\n              error = err;\n              finalCallback(err);\n              return done();\n            }\n          }\n          if (doc == null) {\n            drained = true;\n            if (handleResultsInProgress <= 0) {\n              const finalErr = continueOnError ?\n                createEachAsyncMultiError(aggregatedErrors) :\n                error;\n\n              finalCallback(finalErr);\n            } else if (batchSize && documentsBatch.length) {\n              handleNextResult(documentsBatch, currentDocumentIndex++, handleNextResultCallBack);\n            }\n            return done();\n          }\n\n          ++handleResultsInProgress;\n\n          // Kick off the subsequent `next()` before handling the result, but\n          // make sure we know that we still have a result to handle re: #8422\n          immediate(() => done());\n\n          if (batchSize) {\n            documentsBatch.push(doc);\n          }\n\n          // If the current documents size is less than the provided batch size don't process the documents yet\n          if (batchSize && documentsBatch.length !== batchSize) {\n            immediate(() => enqueue(fetch));\n            return;\n          }\n\n          const docsToProcess = batchSize ? documentsBatch : doc;\n\n          function handleNextResultCallBack(err) {\n            if (batchSize) {\n              handleResultsInProgress -= documentsBatch.length;\n              documentsBatch = [];\n            } else {\n              --handleResultsInProgress;\n            }\n            if (err != null) {\n              if (continueOnError) {\n                aggregatedErrors.push(err);\n              } else {\n                error = err;\n                return finalCallback(err);\n              }\n            }\n            if ((drained || aborted) && handleResultsInProgress <= 0) {\n              const finalErr = continueOnError ?\n                createEachAsyncMultiError(aggregatedErrors) :\n                error;\n              return finalCallback(finalErr);\n            }\n\n            immediate(() => enqueue(fetch));\n          }\n\n          handleNextResult(docsToProcess, currentDocumentIndex++, handleNextResultCallBack);\n        });\n      }\n    }\n  }\n\n  function handleNextResult(doc, i, callback) {\n    let maybePromise;\n    try {\n      maybePromise = fn(doc, i);\n    } catch (err) {\n      return callback(err);\n    }\n    if (maybePromise && typeof maybePromise.then === 'function') {\n      maybePromise.then(\n        function() { callback(null); },\n        function(error) {\n          callback(error || new Error('`eachAsync()` promise rejected without error'));\n        });\n    } else {\n      callback(null);\n    }\n  }\n};\n\n// `next()` can only execute one at a time, so make sure we always execute\n// `next()` in series, while still allowing multiple `fn()` instances to run\n// in parallel.\nfunction asyncQueue() {\n  const _queue = [];\n  let inProgress = null;\n  let id = 0;\n\n  return function enqueue(fn) {\n    if (\n      inProgress === null &&\n      _queue.length === 0\n    ) {\n      inProgress = id++;\n      return fn(_step);\n    }\n    _queue.push(fn);\n  };\n\n  function _step() {\n    if (_queue.length !== 0) {\n      inProgress = id++;\n      const fn = _queue.shift();\n      fn(_step);\n    } else {\n      inProgress = null;\n    }\n  }\n}\n\nfunction createEachAsyncMultiError(aggregatedErrors) {\n  if (aggregatedErrors.length === 0) {\n    return null;\n  }\n\n  return new EachAsyncMultiError(aggregatedErrors);\n}\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('../error/mongooseError');\nconst Readable = require('stream').Readable;\nconst eachAsync = require('../helpers/cursor/eachAsync');\nconst helpers = require('../queryhelpers');\nconst kareem = require('kareem');\nconst immediate = require('../helpers/immediate');\nconst util = require('util');\n\n/**\n * A QueryCursor is a concurrency primitive for processing query results\n * one document at a time. A QueryCursor fulfills the Node.js streams3 API,\n * in addition to several other mechanisms for loading documents from MongoDB\n * one at a time.\n *\n * QueryCursors execute the model's pre `find` hooks before loading any documents\n * from MongoDB, and the model's post `find` hooks after loading each document.\n *\n * Unless you're an advanced user, do **not** instantiate this class directly.\n * Use [`Query#cursor()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.cursor()) instead.\n *\n * @param {Query} query\n * @param {Object} options query options passed to `.find()`\n * @inherits Readable https://nodejs.org/api/stream.html#class-streamreadable\n * @event `cursor`: Emitted when the cursor is created\n * @event `error`: Emitted when an error occurred\n * @event `data`: Emitted when the stream is flowing and the next doc is ready\n * @event `end`: Emitted when the stream is exhausted\n * @api public\n */\n\nfunction QueryCursor(query, options) {\n  // set autoDestroy=true because on node 12 it's by default false\n  // gh-10902 need autoDestroy to destroy correctly and emit 'close' event\n  Readable.call(this, { autoDestroy: true, objectMode: true });\n\n  this.cursor = null;\n  this.skipped = false;\n  this.query = query;\n  const model = query.model;\n  this._mongooseOptions = {};\n  this._transforms = [];\n  this.model = model;\n  this.options = options || {};\n  model.hooks.execPre('find', query, (err) => {\n    if (err != null) {\n      if (err instanceof kareem.skipWrappedFunction) {\n        const resultValue = err.args[0];\n        if (resultValue != null && (!Array.isArray(resultValue) || resultValue.length)) {\n          const err = new MongooseError(\n            'Cannot `skipMiddlewareFunction()` with a value when using ' +\n            '`.find().cursor()`, value must be nullish or empty array, got \"' +\n            util.inspect(resultValue) +\n            '\".'\n          );\n          this._markError(err);\n          this.listeners('error').length > 0 && this.emit('error', err);\n          return;\n        }\n        this.skipped = true;\n        this.emit('cursor', null);\n        return;\n      }\n      this._markError(err);\n      this.listeners('error').length > 0 && this.emit('error', err);\n      return;\n    }\n    this._transforms = this._transforms.concat(query._transforms.slice());\n    if (this.options.transform) {\n      this._transforms.push(options.transform);\n    }\n    // Re: gh-8039, you need to set the `cursor.batchSize` option, top-level\n    // `batchSize` option doesn't work.\n    if (this.options.batchSize) {\n      this.options.cursor = options.cursor || {};\n      this.options.cursor.batchSize = options.batchSize;\n\n      // Max out the number of documents we'll populate in parallel at 5000.\n      this.options._populateBatchSize = Math.min(this.options.batchSize, 5000);\n    }\n    Object.assign(this.options, query._optionsForExec());\n    if (model.collection._shouldBufferCommands() && model.collection.buffer) {\n      model.collection.queue.push([\n        () => _getRawCursor(query, this)\n      ]);\n    } else {\n      _getRawCursor(query, this);\n    }\n  });\n}\n\nutil.inherits(QueryCursor, Readable);\n\n/*!\n * ignore\n */\n\nfunction _getRawCursor(query, queryCursor) {\n  try {\n    const cursor = query.model.collection.find(query._conditions, queryCursor.options);\n    queryCursor.cursor = cursor;\n    queryCursor.emit('cursor', cursor);\n  } catch (err) {\n    queryCursor._markError(err);\n    queryCursor.listeners('error').length > 0 && queryCursor.emit('error', queryCursor._error);\n  }\n}\n\n/**\n * Necessary to satisfy the Readable API\n * @method _read\n * @memberOf QueryCursor\n * @instance\n * @api private\n */\n\nQueryCursor.prototype._read = function() {\n  _next(this, (error, doc) => {\n    if (error) {\n      return this.emit('error', error);\n    }\n    if (!doc) {\n      this.push(null);\n      this.cursor.close(function(error) {\n        if (error) {\n          return this.emit('error', error);\n        }\n      });\n      return;\n    }\n    this.push(doc);\n  });\n};\n\n/**\n * Registers a transform function which subsequently maps documents retrieved\n * via the streams interface or `.next()`\n *\n * #### Example:\n *\n *     // Map documents returned by `data` events\n *     Thing.\n *       find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *        doc.foo = \"bar\";\n *        return doc;\n *       })\n *       on('data', function(doc) { console.log(doc.foo); });\n *\n *     // Or map documents returned by `.next()`\n *     const cursor = Thing.find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *         doc.foo = \"bar\";\n *         return doc;\n *       });\n *     cursor.next(function(error, doc) {\n *       console.log(doc.foo);\n *     });\n *\n * @param {Function} fn\n * @return {QueryCursor}\n * @memberOf QueryCursor\n * @api public\n * @method map\n */\n\nObject.defineProperty(QueryCursor.prototype, 'map', {\n  value: function(fn) {\n    this._transforms.push(fn);\n    return this;\n  },\n  enumerable: true,\n  configurable: true,\n  writable: true\n});\n\n/**\n * Marks this cursor as errored\n * @method _markError\n * @memberOf QueryCursor\n * @instance\n * @api private\n */\n\nQueryCursor.prototype._markError = function(error) {\n  this._error = error;\n  return this;\n};\n\n/**\n * Marks this cursor as closed. Will stop streaming and subsequent calls to\n * `next()` will error.\n *\n * @return {Promise}\n * @api public\n * @method close\n * @emits close\n * @see AggregationCursor.close https://mongodb.github.io/node-mongodb-native/4.9/classes/AggregationCursor.html#close\n */\n\nQueryCursor.prototype.close = async function close() {\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('QueryCursor.prototype.close() no longer accepts a callback');\n  }\n  try {\n    await this.cursor.close();\n    this.emit('close');\n  } catch (error) {\n    this.listeners('error').length > 0 && this.emit('error', error);\n    throw error;\n  }\n};\n\n/**\n * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n * if the resultant data has already been retrieved by this cursor.\n *\n * @return {AggregationCursor} this\n * @api public\n * @method rewind\n */\n\nQueryCursor.prototype.rewind = function() {\n  _waitForCursor(this, () => {\n    this.cursor.rewind();\n  });\n  return this;\n};\n\n/**\n * Get the next document from this cursor. Will return `null` when there are\n * no documents left.\n *\n * @return {Promise}\n * @api public\n * @method next\n */\n\nQueryCursor.prototype.next = async function next() {\n  if (arguments[0] === 'function') {\n    throw new MongooseError('QueryCursor.prototype.next() no longer accepts a callback');\n  }\n  return new Promise((resolve, reject) => {\n    _next(this, function(error, doc) {\n      if (error) {\n        return reject(error);\n      }\n      resolve(doc);\n    });\n  });\n};\n\n/**\n * Execute `fn` for every document in the cursor. If `fn` returns a promise,\n * will wait for the promise to resolve before iterating on to the next one.\n * Returns a promise that resolves when done.\n *\n * #### Example:\n *\n *     // Iterate over documents asynchronously\n *     Thing.\n *       find({ name: /^hello/ }).\n *       cursor().\n *       eachAsync(async function (doc, i) {\n *         doc.foo = doc.bar + i;\n *         await doc.save();\n *       })\n *\n * @param {Function} fn\n * @param {Object} [options]\n * @param {Number} [options.parallel] the number of promises to execute in parallel. Defaults to 1.\n * @param {Number} [options.batchSize] if set, will call `fn()` with arrays of documents with length at most `batchSize`\n * @param {Boolean} [options.continueOnError=false] if true, `eachAsync()` iterates through all docs even if `fn` throws an error. If false, `eachAsync()` throws an error immediately if the given function `fn()` throws an error.\n * @param {Function} [callback] executed when all docs have been processed\n * @return {Promise}\n * @api public\n * @method eachAsync\n */\n\nQueryCursor.prototype.eachAsync = function(fn, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  return eachAsync((cb) => _next(this, cb), fn, opts, callback);\n};\n\n/**\n * The `options` passed in to the `QueryCursor` constructor.\n *\n * @api public\n * @property options\n */\n\nQueryCursor.prototype.options;\n\n/**\n * Adds a [cursor flag](https://mongodb.github.io/node-mongodb-native/4.9/classes/FindCursor.html#addCursorFlag).\n * Useful for setting the `noCursorTimeout` and `tailable` flags.\n *\n * @param {String} flag\n * @param {Boolean} value\n * @return {AggregationCursor} this\n * @api public\n * @method addCursorFlag\n */\n\nQueryCursor.prototype.addCursorFlag = function(flag, value) {\n  _waitForCursor(this, () => {\n    this.cursor.addCursorFlag(flag, value);\n  });\n  return this;\n};\n\n/*!\n * ignore\n */\n\nQueryCursor.prototype.transformNull = function(val) {\n  if (arguments.length === 0) {\n    val = true;\n  }\n  this._mongooseOptions.transformNull = val;\n  return this;\n};\n\n/*!\n * ignore\n */\n\nQueryCursor.prototype._transformForAsyncIterator = function() {\n  if (this._transforms.indexOf(_transformForAsyncIterator) === -1) {\n    this.map(_transformForAsyncIterator);\n  }\n  return this;\n};\n\n/**\n * Returns an asyncIterator for use with [`for/await/of` loops](https://thecodebarbarian.com/getting-started-with-async-iterators-in-node-js).\n * You do not need to call this function explicitly, the JavaScript runtime\n * will call it for you.\n *\n * #### Example:\n *\n *     // Works without using `cursor()`\n *     for await (const doc of Model.find([{ $sort: { name: 1 } }])) {\n *       console.log(doc.name);\n *     }\n *\n *     // Can also use `cursor()`\n *     for await (const doc of Model.find([{ $sort: { name: 1 } }]).cursor()) {\n *       console.log(doc.name);\n *     }\n *\n * Node.js 10.x supports async iterators natively without any flags. You can\n * enable async iterators in Node.js 8.x using the [`--harmony_async_iteration` flag](https://github.com/tc39/proposal-async-iteration/issues/117#issuecomment-346695187).\n *\n * **Note:** This function is not if `Symbol.asyncIterator` is undefined. If\n * `Symbol.asyncIterator` is undefined, that means your Node.js version does not\n * support async iterators.\n *\n * @method [Symbol.asyncIterator]\n * @memberOf QueryCursor\n * @instance\n * @api public\n */\n\nif (Symbol.asyncIterator != null) {\n  QueryCursor.prototype[Symbol.asyncIterator] = function() {\n    return this.transformNull()._transformForAsyncIterator();\n  };\n}\n\n/*!\n * ignore\n */\n\nfunction _transformForAsyncIterator(doc) {\n  return doc == null ? { done: true } : { value: doc, done: false };\n}\n\n/**\n * Get the next doc from the underlying cursor and mongooseify it\n * (populate, etc.)\n * @param {Any} ctx\n * @param {Function} cb\n * @api private\n */\n\nfunction _next(ctx, cb) {\n  let callback = cb;\n  if (ctx._transforms.length) {\n    callback = function(err, doc) {\n      if (err || (doc === null && !ctx._mongooseOptions.transformNull)) {\n        return cb(err, doc);\n      }\n      cb(err, ctx._transforms.reduce(function(doc, fn) {\n        return fn.call(ctx, doc);\n      }, doc));\n    };\n  }\n\n  if (ctx._error) {\n    return immediate(function() {\n      callback(ctx._error);\n    });\n  }\n  if (ctx.skipped) {\n    return immediate(() => callback(null, null));\n  }\n\n  if (ctx.cursor) {\n    if (ctx.query._mongooseOptions.populate && !ctx._pop) {\n      ctx._pop = helpers.preparePopulationOptionsMQ(ctx.query,\n        ctx.query._mongooseOptions);\n      ctx._pop.__noPromise = true;\n    }\n    if (ctx.query._mongooseOptions.populate && ctx.options._populateBatchSize > 1) {\n      if (ctx._batchDocs && ctx._batchDocs.length) {\n        // Return a cached populated doc\n        return _nextDoc(ctx, ctx._batchDocs.shift(), ctx._pop, callback);\n      } else if (ctx._batchExhausted) {\n        // Internal cursor reported no more docs. Act the same here\n        return callback(null, null);\n      } else {\n        // Request as many docs as batchSize, to populate them also in batch\n        ctx._batchDocs = [];\n        ctx.cursor.next().then(\n          res => { _onNext.call({ ctx, callback }, null, res); },\n          err => { _onNext.call({ ctx, callback }, err); }\n        );\n        return;\n      }\n    } else {\n      return ctx.cursor.next().then(\n        doc => {\n          if (!doc) {\n            callback(null, null);\n            return;\n          }\n\n          if (!ctx.query._mongooseOptions.populate) {\n            return _nextDoc(ctx, doc, null, callback);\n          }\n\n          ctx.query.model.populate(doc, ctx._pop).then(\n            doc => {\n              _nextDoc(ctx, doc, ctx._pop, callback);\n            },\n            err => {\n              callback(err);\n            }\n          );\n        },\n        error => {\n          callback(error);\n        }\n      );\n    }\n  } else {\n    ctx.once('error', cb);\n\n    ctx.once('cursor', function(cursor) {\n      ctx.removeListener('error', cb);\n      if (cursor == null) {\n        if (ctx.skipped) {\n          return cb(null, null);\n        }\n        return;\n      }\n      _next(ctx, cb);\n    });\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _onNext(error, doc) {\n  if (error) {\n    return this.callback(error);\n  }\n  if (!doc) {\n    this.ctx._batchExhausted = true;\n    return _populateBatch.call(this);\n  }\n\n  this.ctx._batchDocs.push(doc);\n\n  if (this.ctx._batchDocs.length < this.ctx.options._populateBatchSize) {\n    // If both `batchSize` and `_populateBatchSize` are huge, calling `next()` repeatedly may\n    // cause a stack overflow. So make sure we clear the stack regularly.\n    if (this.ctx._batchDocs.length > 0 && this.ctx._batchDocs.length % 1000 === 0) {\n      return immediate(() => this.ctx.cursor.next().then(\n        res => { _onNext.call(this, null, res); },\n        err => { _onNext.call(this, err); }\n      ));\n    }\n    this.ctx.cursor.next().then(\n      res => { _onNext.call(this, null, res); },\n      err => { _onNext.call(this, err); }\n    );\n  } else {\n    _populateBatch.call(this);\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _populateBatch() {\n  if (!this.ctx._batchDocs.length) {\n    return this.callback(null, null);\n  }\n  this.ctx.query.model.populate(this.ctx._batchDocs, this.ctx._pop).then(\n    () => {\n      _nextDoc(this.ctx, this.ctx._batchDocs.shift(), this.ctx._pop, this.callback);\n    },\n    err => {\n      this.callback(err);\n    }\n  );\n}\n\n/*!\n * ignore\n */\n\nfunction _nextDoc(ctx, doc, pop, callback) {\n  if (ctx.query._mongooseOptions.lean) {\n    return ctx.model.hooks.execPost('find', ctx.query, [[doc]], err => {\n      if (err != null) {\n        return callback(err);\n      }\n      callback(null, doc);\n    });\n  }\n\n  const { model, _fields, _userProvidedFields, options } = ctx.query;\n  helpers.createModelAndInit(model, doc, _fields, _userProvidedFields, options, pop, (err, doc) => {\n    if (err != null) {\n      return callback(err);\n    }\n    ctx.model.hooks.execPost('find', ctx.query, [[doc]], err => {\n      if (err != null) {\n        return callback(err);\n      }\n      callback(null, doc);\n    });\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction _waitForCursor(ctx, cb) {\n  if (ctx.cursor) {\n    return cb();\n  }\n  ctx.once('cursor', function(cursor) {\n    if (cursor == null) {\n      return;\n    }\n    cb();\n  });\n}\n\nmodule.exports = QueryCursor;\n", "'use strict';\n\nconst utils = require('../../utils');\n\nfunction applyGlobalMaxTimeMS(options, model) {\n  applyGlobalOption(options, model, 'maxTimeMS');\n}\n\nfunction applyGlobalDiskUse(options, model) {\n  applyGlobalOption(options, model, 'allowDiskUse');\n}\n\nmodule.exports = {\n  applyGlobalMaxTimeMS,\n  applyGlobalDiskUse\n};\n\n\nfunction applyGlobalOption(options, model, optionName) {\n  if (utils.hasUserDefinedProperty(options, optionName)) {\n    return;\n  }\n\n  if (utils.hasUserDefinedProperty(model.db.options, optionName)) {\n    options[optionName] = model.db.options[optionName];\n  } else if (utils.hasUserDefinedProperty(model.base.options, optionName)) {\n    options[optionName] = model.base.options[optionName];\n  }\n}\n", "'use strict';\n\nconst get = require('../get');\n\nmodule.exports = function applyWriteConcern(schema, options) {\n  if (options.writeConcern != null) {\n    return;\n  }\n  const writeConcern = get(schema, 'options.writeConcern', {});\n  if (Object.keys(writeConcern).length != 0) {\n    options.writeConcern = {};\n    if (!('w' in options) && writeConcern.w != null) {\n      options.writeConcern.w = writeConcern.w;\n    }\n    if (!('j' in options) && writeConcern.j != null) {\n      options.writeConcern.j = writeConcern.j;\n    }\n    if (!('wtimeout' in options) && writeConcern.wtimeout != null) {\n      options.writeConcern.wtimeout = writeConcern.wtimeout;\n    }\n  }\n  else {\n    if (!('w' in options) && writeConcern.w != null) {\n      options.w = writeConcern.w;\n    }\n    if (!('j' in options) && writeConcern.j != null) {\n      options.j = writeConcern.j;\n    }\n    if (!('wtimeout' in options) && writeConcern.wtimeout != null) {\n      options.wtimeout = writeConcern.wtimeout;\n    }\n  }\n};\n", "'use strict';\n\nconst isOperator = require('./isOperator');\n\nmodule.exports = function castFilterPath(query, schematype, val) {\n  const ctx = query;\n  const any$conditionals = Object.keys(val).some(isOperator);\n\n  if (!any$conditionals) {\n    return schematype.castForQuery(\n      null,\n      val,\n      ctx\n    );\n  }\n\n  const ks = Object.keys(val);\n\n  let k = ks.length;\n\n  while (k--) {\n    const $cond = ks[k];\n    const nested = val[$cond];\n\n    if ($cond === '$not') {\n      if (nested && schematype && !schematype.caster) {\n        const _keys = Object.keys(nested);\n        if (_keys.length && isOperator(_keys[0])) {\n          for (const key of Object.keys(nested)) {\n            nested[key] = schematype.castForQuery(\n              key,\n              nested[key],\n              ctx\n            );\n          }\n        } else {\n          val[$cond] = schematype.castForQuery(\n            $cond,\n            nested,\n            ctx\n          );\n        }\n        continue;\n      }\n    } else {\n      val[$cond] = schematype.castForQuery(\n        $cond,\n        nested,\n        ctx\n      );\n    }\n  }\n\n  return val;\n};\n", "'use strict';\n\nconst numberRE = /^\\d+$/;\n\n/**\n * Behaves like `Schema#path()`, except for it also digs into arrays without\n * needing to put `.0.`, so `getPath(schema, 'docArr.elProp')` works.\n * @api private\n */\n\nmodule.exports = function getPath(schema, path) {\n  let schematype = schema.path(path);\n  if (schematype != null) {\n    return schematype;\n  }\n  const pieces = path.split('.');\n  let cur = '';\n  let isArray = false;\n\n  for (const piece of pieces) {\n    if (isArray && numberRE.test(piece)) {\n      continue;\n    }\n    cur = cur.length === 0 ? piece : cur + '.' + piece;\n\n    schematype = schema.path(cur);\n    if (schematype != null && schematype.schema) {\n      schema = schematype.schema;\n      cur = '';\n      if (!isArray && schematype.$isMongooseDocumentArray) {\n        isArray = true;\n      }\n    }\n  }\n\n  return schematype;\n};\n", "'use strict';\n\nconst _modifiedPaths = require('../common').modifiedPaths;\n\n/**\n * Given an update document with potential update operators (`$set`, etc.)\n * returns an object whose keys are the directly modified paths.\n *\n * If there are any top-level keys that don't start with `$`, we assume those\n * will get wrapped in a `$set`. The Mongoose Query is responsible for wrapping\n * top-level keys in `$set`.\n *\n * @param {Object} update\n * @return {Object} modified\n */\n\nmodule.exports = function modifiedPaths(update) {\n  const keys = Object.keys(update);\n  const res = {};\n\n  const withoutDollarKeys = {};\n  for (const key of keys) {\n    if (key.startsWith('$')) {\n      _modifiedPaths(update[key], '', res);\n      continue;\n    }\n    withoutDollarKeys[key] = update[key];\n  }\n\n  _modifiedPaths(withoutDollarKeys, '', res);\n\n  return res;\n};\n", "'use strict';\n\nconst modifiedPaths = require('./modifiedPaths');\n\nmodule.exports = function updatedPathsByArrayFilter(update) {\n  if (update == null) {\n    return {};\n  }\n  const updatedPaths = modifiedPaths(update);\n\n  return Object.keys(updatedPaths).reduce((cur, path) => {\n    const matches = path.match(/\\$\\[[^\\]]+\\]/g);\n    if (matches == null) {\n      return cur;\n    }\n    for (const match of matches) {\n      const firstMatch = path.indexOf(match);\n      if (firstMatch !== path.lastIndexOf(match)) {\n        throw new Error(`Path '${path}' contains the same array filter multiple times`);\n      }\n      cur[match.substring(2, match.length - 1)] = path.\n        substring(0, firstMatch - 1).\n        replace(/\\$\\[[^\\]]+\\]/g, '0');\n    }\n    return cur;\n  }, {});\n};\n", "'use strict';\n\nconst castFilterPath = require('../query/castFilterPath');\nconst cleanPositionalOperators = require('../schema/cleanPositionalOperators');\nconst getPath = require('../schema/getPath');\nconst updatedPathsByArrayFilter = require('./updatedPathsByArrayFilter');\n\nmodule.exports = function castArrayFilters(query) {\n  const arrayFilters = query.options.arrayFilters;\n  const update = query.getUpdate();\n  const schema = query.schema;\n  const updatedPathsByFilter = updatedPathsByArrayFilter(update);\n\n  let strictQuery = schema.options.strict;\n  if (query._mongooseOptions.strict != null) {\n    strictQuery = query._mongooseOptions.strict;\n  }\n  if (query.model && query.model.base.options.strictQuery != null) {\n    strictQuery = query.model.base.options.strictQuery;\n  }\n  if (schema._userProvidedOptions.strictQuery != null) {\n    strictQuery = schema._userProvidedOptions.strictQuery;\n  }\n  if (query._mongooseOptions.strictQuery != null) {\n    strictQuery = query._mongooseOptions.strictQuery;\n  }\n\n  _castArrayFilters(arrayFilters, schema, strictQuery, updatedPathsByFilter, query);\n};\n\nfunction _castArrayFilters(arrayFilters, schema, strictQuery, updatedPathsByFilter, query) {\n  if (!Array.isArray(arrayFilters)) {\n    return;\n  }\n\n  for (const filter of arrayFilters) {\n    if (filter == null) {\n      throw new Error(`Got null array filter in ${arrayFilters}`);\n    }\n    const keys = Object.keys(filter).filter(key => filter[key] != null);\n    if (keys.length === 0) {\n      continue;\n    }\n\n    const firstKey = keys[0];\n    if (firstKey === '$and' || firstKey === '$or') {\n      for (const key of keys) {\n        _castArrayFilters(filter[key], schema, strictQuery, updatedPathsByFilter, query);\n      }\n      continue;\n    }\n    const dot = firstKey.indexOf('.');\n    const filterWildcardPath = dot === -1 ? firstKey : firstKey.substring(0, dot);\n    if (updatedPathsByFilter[filterWildcardPath] == null) {\n      continue;\n    }\n    const baseFilterPath = cleanPositionalOperators(\n      updatedPathsByFilter[filterWildcardPath]\n    );\n\n    const baseSchematype = getPath(schema, baseFilterPath);\n    let filterBaseSchema = baseSchematype != null ? baseSchematype.schema : null;\n    if (filterBaseSchema != null &&\n        filterBaseSchema.discriminators != null &&\n        filter[filterWildcardPath + '.' + filterBaseSchema.options.discriminatorKey]) {\n      filterBaseSchema = filterBaseSchema.discriminators[filter[filterWildcardPath + '.' + filterBaseSchema.options.discriminatorKey]] || filterBaseSchema;\n    }\n\n    for (const key of keys) {\n      if (updatedPathsByFilter[key] === null) {\n        continue;\n      }\n      if (Object.keys(updatedPathsByFilter).length === 0) {\n        continue;\n      }\n      const dot = key.indexOf('.');\n\n      let filterPathRelativeToBase = dot === -1 ? null : key.substring(dot);\n      let schematype;\n      if (filterPathRelativeToBase == null || filterBaseSchema == null) {\n        schematype = baseSchematype;\n      } else {\n        // If there are multiple array filters in the path being updated, make sure\n        // to replace them so we can get the schema path.\n        filterPathRelativeToBase = cleanPositionalOperators(filterPathRelativeToBase);\n        schematype = getPath(filterBaseSchema, filterPathRelativeToBase);\n      }\n\n      if (schematype == null) {\n        if (!strictQuery) {\n          return;\n        }\n        const filterPath = filterPathRelativeToBase == null ?\n          baseFilterPath + '.0' :\n          baseFilterPath + '.0' + filterPathRelativeToBase;\n        // For now, treat `strictQuery = true` and `strictQuery = 'throw'` as\n        // equivalent for casting array filters. `strictQuery = true` doesn't\n        // quite work in this context because we never want to silently strip out\n        // array filters, even if the path isn't in the schema.\n        throw new Error(`Could not find path \"${filterPath}\" in schema`);\n      }\n      if (typeof filter[key] === 'object') {\n        filter[key] = castFilterPath(query, schematype, filter[key]);\n      } else {\n        filter[key] = schematype.castForQuery(null, filter[key]);\n      }\n    }\n  }\n}\n", "'use strict';\n\nconst cleanPositionalOperators = require('../schema/cleanPositionalOperators');\nconst get = require('../get');\nconst getDiscriminatorByValue = require('../discriminator/getDiscriminatorByValue');\nconst updatedPathsByArrayFilter = require('../update/updatedPathsByArrayFilter');\n\n/**\n * Like `schema.path()`, except with a document, because impossible to\n * determine path type without knowing the embedded discriminator key.\n * @param {Schema} schema\n * @param {Object} [update]\n * @param {Object} [filter]\n * @param {String} path\n * @param {Object} [options]\n * @api private\n */\n\nmodule.exports = function getEmbeddedDiscriminatorPath(schema, update, filter, path, options) {\n  const parts = path.split('.');\n  let schematype = null;\n  let type = 'adhocOrUndefined';\n\n  filter = filter || {};\n  update = update || {};\n  const arrayFilters = options != null && Array.isArray(options.arrayFilters) ?\n    options.arrayFilters : [];\n  const updatedPathsByFilter = updatedPathsByArrayFilter(update);\n\n  for (let i = 0; i < parts.length; ++i) {\n    const subpath = cleanPositionalOperators(parts.slice(0, i + 1).join('.'));\n    schematype = schema.path(subpath);\n    if (schematype == null) {\n      continue;\n    }\n\n    type = schema.pathType(subpath);\n    if ((schematype.$isSingleNested || schematype.$isMongooseDocumentArrayElement) &&\n        schematype.schema.discriminators != null) {\n      const key = get(schematype, 'schema.options.discriminatorKey');\n      const discriminatorValuePath = subpath + '.' + key;\n      const discriminatorFilterPath =\n        discriminatorValuePath.replace(/\\.\\d+\\./, '.');\n      let discriminatorKey = null;\n\n      if (discriminatorValuePath in filter) {\n        discriminatorKey = filter[discriminatorValuePath];\n      }\n      if (discriminatorFilterPath in filter) {\n        discriminatorKey = filter[discriminatorFilterPath];\n      }\n\n      const wrapperPath = subpath.replace(/\\.\\d+$/, '');\n      if (schematype.$isMongooseDocumentArrayElement &&\n          get(filter[wrapperPath], '$elemMatch.' + key) != null) {\n        discriminatorKey = filter[wrapperPath].$elemMatch[key];\n      }\n\n      if (discriminatorValuePath in update) {\n        discriminatorKey = update[discriminatorValuePath];\n      }\n\n      for (const filterKey of Object.keys(updatedPathsByFilter)) {\n        const schemaKey = updatedPathsByFilter[filterKey] + '.' + key;\n        const arrayFilterKey = filterKey + '.' + key;\n        if (schemaKey === discriminatorFilterPath) {\n          const filter = arrayFilters.find(filter => filter.hasOwnProperty(arrayFilterKey));\n          if (filter != null) {\n            discriminatorKey = filter[arrayFilterKey];\n          }\n        }\n      }\n\n      if (discriminatorKey == null) {\n        continue;\n      }\n\n      const discriminatorSchema = getDiscriminatorByValue(schematype.caster.discriminators, discriminatorKey).schema;\n\n      const rest = parts.slice(i + 1).join('.');\n      schematype = discriminatorSchema.path(rest);\n      if (schematype != null) {\n        type = discriminatorSchema._getPathType(rest);\n        break;\n      }\n    }\n  }\n\n  return { type: type, schematype: schematype };\n};\n", "'use strict';\n\nconst StrictModeError = require('../../error/strict');\n\nmodule.exports = function handleImmutable(schematype, strict, obj, key, fullPath, ctx) {\n  if (schematype == null || !schematype.options || !schematype.options.immutable) {\n    return false;\n  }\n  let immutable = schematype.options.immutable;\n\n  if (typeof immutable === 'function') {\n    immutable = immutable.call(ctx, ctx);\n  }\n  if (!immutable) {\n    return false;\n  }\n\n  if (strict === false) {\n    return false;\n  }\n  if (strict === 'throw') {\n    throw new StrictModeError(null,\n      `Field ${fullPath} is immutable and strict = 'throw'`);\n  }\n\n  delete obj[key];\n  return true;\n};\n", "'use strict';\n\nconst get = require('../get');\n\n/**\n * Given an update, move all $set on immutable properties to $setOnInsert.\n * This should only be called for upserts, because $setOnInsert bypasses the\n * strictness check for immutable properties.\n */\n\nmodule.exports = function moveImmutableProperties(schema, update, ctx) {\n  if (update == null) {\n    return;\n  }\n\n  const keys = Object.keys(update);\n  for (const key of keys) {\n    const isDollarKey = key.startsWith('$');\n\n    if (key === '$set') {\n      const updatedPaths = Object.keys(update[key]);\n      for (const path of updatedPaths) {\n        _walkUpdatePath(schema, update[key], path, update, ctx);\n      }\n    } else if (!isDollarKey) {\n      _walkUpdatePath(schema, update, key, update, ctx);\n    }\n\n  }\n};\n\nfunction _walkUpdatePath(schema, op, path, update, ctx) {\n  const schematype = schema.path(path);\n  if (schematype == null) {\n    return;\n  }\n\n  let immutable = get(schematype, 'options.immutable', null);\n  if (immutable == null) {\n    return;\n  }\n  if (typeof immutable === 'function') {\n    immutable = immutable.call(ctx, ctx);\n  }\n\n  if (!immutable) {\n    return;\n  }\n\n  update.$setOnInsert = update.$setOnInsert || {};\n  update.$setOnInsert[path] = op[path];\n  delete op[path];\n}\n", "'use strict';\n\nconst specialProperties = require('../specialProperties');\n\n\nmodule.exports = function setDottedPath(obj, path, val) {\n  if (path.indexOf('.') === -1) {\n    if (specialProperties.has(path)) {\n      return;\n    }\n\n    obj[path] = val;\n    return;\n  }\n  const parts = path.split('.');\n\n  const last = parts.pop();\n  let cur = obj;\n  for (const part of parts) {\n    if (specialProperties.has(part)) {\n      continue;\n    }\n    if (cur[part] == null) {\n      cur[part] = {};\n    }\n\n    cur = cur[part];\n  }\n\n  if (!specialProperties.has(last)) {\n    cur[last] = val;\n  }\n};\n", "'use strict';\n\nconst CastError = require('../../error/cast');\nconst MongooseError = require('../../error/mongooseError');\nconst StrictModeError = require('../../error/strict');\nconst ValidationError = require('../../error/validation');\nconst castNumber = require('../../cast/number');\nconst cast = require('../../cast');\nconst getConstructorName = require('../getConstructorName');\nconst getEmbeddedDiscriminatorPath = require('./getEmbeddedDiscriminatorPath');\nconst handleImmutable = require('./handleImmutable');\nconst moveImmutableProperties = require('../update/moveImmutableProperties');\nconst schemaMixedSymbol = require('../../schema/symbols').schemaMixedSymbol;\nconst setDottedPath = require('../path/setDottedPath');\nconst utils = require('../../utils');\n\n/**\n * Casts an update op based on the given schema\n *\n * @param {Schema} schema\n * @param {Object} obj\n * @param {Object} [options]\n * @param {Boolean} [options.overwrite] defaults to false\n * @param {Boolean|String} [options.strict] defaults to true\n * @param {Query} context passed to setters\n * @return {Boolean} true iff the update is non-empty\n * @api private\n */\nmodule.exports = function castUpdate(schema, obj, options, context, filter) {\n  if (obj == null) {\n    return undefined;\n  }\n  options = options || {};\n  // Update pipeline\n  if (Array.isArray(obj)) {\n    const len = obj.length;\n    for (let i = 0; i < len; ++i) {\n      const ops = Object.keys(obj[i]);\n      for (const op of ops) {\n        obj[i][op] = castPipelineOperator(op, obj[i][op]);\n      }\n    }\n    return obj;\n  }\n\n  if (options.upsert && !options.overwrite) {\n    moveImmutableProperties(schema, obj, context);\n  }\n\n  const ops = Object.keys(obj);\n  let i = ops.length;\n  const ret = {};\n  let val;\n  let hasDollarKey = false;\n  const overwrite = options.overwrite;\n\n  filter = filter || {};\n  while (i--) {\n    const op = ops[i];\n    // if overwrite is set, don't do any of the special $set stuff\n    if (op[0] !== '$' && !overwrite) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (obj.$set) {\n          ret.$set = obj.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = obj[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if (op === '$set') {\n      if (!ret.$set) {\n        ret[op] = obj[op];\n      }\n    } else {\n      ret[op] = obj[op];\n    }\n  }\n  // cast each value\n  i = ops.length;\n  while (i--) {\n    const op = ops[i];\n    val = ret[op];\n    hasDollarKey = hasDollarKey || op.startsWith('$');\n\n    if (val &&\n        typeof val === 'object' &&\n        !Buffer.isBuffer(val) &&\n        (!overwrite || hasDollarKey)) {\n      walkUpdatePath(schema, val, op, options, context, filter);\n    } else if (overwrite && ret && typeof ret === 'object') {\n      walkUpdatePath(schema, ret, '$set', options, context, filter);\n    } else {\n      const msg = 'Invalid atomic update value for ' + op + '. '\n          + 'Expected an object, received ' + typeof val;\n      throw new Error(msg);\n    }\n\n    if (op.startsWith('$') && utils.isEmptyObject(val)) {\n      delete ret[op];\n    }\n  }\n\n  if (Object.keys(ret).length === 0 &&\n      options.upsert &&\n      Object.keys(filter).length > 0) {\n    // Trick the driver into allowing empty upserts to work around\n    // https://github.com/mongodb/node-mongodb-native/pull/2490\n    return { $setOnInsert: filter };\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nfunction castPipelineOperator(op, val) {\n  if (op === '$unset') {\n    if (typeof val !== 'string' && (!Array.isArray(val) || val.find(v => typeof v !== 'string'))) {\n      throw new MongooseError('Invalid $unset in pipeline, must be ' +\n        ' a string or an array of strings');\n    }\n    return val;\n  }\n  if (op === '$project') {\n    if (val == null || typeof val !== 'object') {\n      throw new MongooseError('Invalid $project in pipeline, must be an object');\n    }\n    return val;\n  }\n  if (op === '$addFields' || op === '$set') {\n    if (val == null || typeof val !== 'object') {\n      throw new MongooseError('Invalid ' + op + ' in pipeline, must be an object');\n    }\n    return val;\n  } else if (op === '$replaceRoot' || op === '$replaceWith') {\n    if (val == null || typeof val !== 'object') {\n      throw new MongooseError('Invalid ' + op + ' in pipeline, must be an object');\n    }\n    return val;\n  }\n\n  throw new MongooseError('Invalid update pipeline operator: \"' + op + '\"');\n}\n\n/**\n * Walk each path of obj and cast its values\n * according to its schema.\n *\n * @param {Schema} schema\n * @param {Object} obj part of a query\n * @param {String} op the atomic operator ($pull, $set, etc)\n * @param {Object} [options]\n * @param {Boolean|String} [options.strict]\n * @param {Query} context\n * @param {Object} filter\n * @param {String} pref path prefix (internal only)\n * @return {Bool} true if this path has keys to update\n * @api private\n */\n\nfunction walkUpdatePath(schema, obj, op, options, context, filter, pref) {\n  const strict = options.strict;\n  const prefix = pref ? pref + '.' : '';\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let hasKeys = false;\n  let schematype;\n  let key;\n  let val;\n\n  let aggregatedError = null;\n\n  const strictMode = strict != null ? strict : schema.options.strict;\n\n  while (i--) {\n    key = keys[i];\n    val = obj[key];\n\n    // `$pull` is special because we need to cast the RHS as a query, not as\n    // an update.\n    if (op === '$pull') {\n      schematype = schema._getSchema(prefix + key);\n      if (schematype != null && schematype.schema != null) {\n        obj[key] = cast(schematype.schema, obj[key], options, context);\n        hasKeys = true;\n        continue;\n      }\n    }\n\n    const discriminatorKey = (prefix ? prefix + key : key);\n    if (\n      schema.discriminatorMapping != null &&\n      discriminatorKey === schema.options.discriminatorKey &&\n      schema.discriminatorMapping.value !== obj[key] &&\n      !options.overwriteDiscriminatorKey\n    ) {\n      if (strictMode === 'throw') {\n        const err = new Error('Can\\'t modify discriminator key \"' + discriminatorKey + '\" on discriminator model');\n        aggregatedError = _appendError(err, context, discriminatorKey, aggregatedError);\n        continue;\n      } else if (strictMode) {\n        delete obj[key];\n        continue;\n      }\n    }\n\n    if (getConstructorName(val) === 'Object') {\n      // watch for embedded doc schemas\n      schematype = schema._getSchema(prefix + key);\n\n      if (schematype == null) {\n        const _res = getEmbeddedDiscriminatorPath(schema, obj, filter, prefix + key, options);\n        if (_res.schematype != null) {\n          schematype = _res.schematype;\n        }\n      }\n\n      if (op !== '$setOnInsert' &&\n          !options.overwrite &&\n          handleImmutable(schematype, strict, obj, key, prefix + key, context)) {\n        continue;\n      }\n\n      if (schematype && schematype.caster && op in castOps) {\n        // embedded doc schema\n        if ('$each' in val) {\n          hasKeys = true;\n          try {\n            obj[key] = {\n              $each: castUpdateVal(schematype, val.$each, op, key, context, prefix + key)\n            };\n          } catch (error) {\n            aggregatedError = _appendError(error, context, key, aggregatedError);\n          }\n\n          if (val.$slice != null) {\n            obj[key].$slice = val.$slice | 0;\n          }\n\n          if (val.$sort) {\n            obj[key].$sort = val.$sort;\n          }\n\n          if (val.$position != null) {\n            obj[key].$position = castNumber(val.$position);\n          }\n        } else {\n          if (schematype != null && schematype.$isSingleNested) {\n            const _strict = strict == null ? schematype.schema.options.strict : strict;\n            try {\n              obj[key] = schematype.castForQuery(null, val, context, { strict: _strict });\n            } catch (error) {\n              aggregatedError = _appendError(error, context, key, aggregatedError);\n            }\n          } else {\n            try {\n              obj[key] = castUpdateVal(schematype, val, op, key, context, prefix + key);\n            } catch (error) {\n              aggregatedError = _appendError(error, context, key, aggregatedError);\n            }\n          }\n\n          if (obj[key] === void 0) {\n            delete obj[key];\n            continue;\n          }\n\n          hasKeys = true;\n        }\n      } else if ((op === '$currentDate') || (op in castOps && schematype)) {\n        // $currentDate can take an object\n        try {\n          obj[key] = castUpdateVal(schematype, val, op, key, context, prefix + key);\n        } catch (error) {\n          aggregatedError = _appendError(error, context, key, aggregatedError);\n        }\n\n        if (obj[key] === void 0) {\n          delete obj[key];\n          continue;\n        }\n\n        hasKeys = true;\n      } else {\n        const pathToCheck = (prefix + key);\n        const v = schema._getPathType(pathToCheck);\n        let _strict = strict;\n        if (v && v.schema && _strict == null) {\n          _strict = v.schema.options.strict;\n        }\n\n        if (v.pathType === 'undefined') {\n          if (_strict === 'throw') {\n            throw new StrictModeError(pathToCheck);\n          } else if (_strict) {\n            delete obj[key];\n            continue;\n          }\n        }\n\n        // gh-2314\n        // we should be able to set a schema-less field\n        // to an empty object literal\n        hasKeys |= walkUpdatePath(schema, val, op, options, context, filter, prefix + key) ||\n          (utils.isObject(val) && Object.keys(val).length === 0);\n      }\n    } else {\n      const checkPath = (key === '$each' || key === '$or' || key === '$and' || key === '$in') ?\n        pref : prefix + key;\n      schematype = schema._getSchema(checkPath);\n\n      // You can use `$setOnInsert` with immutable keys\n      if (op !== '$setOnInsert' &&\n          !options.overwrite &&\n          handleImmutable(schematype, strict, obj, key, prefix + key, context)) {\n        continue;\n      }\n\n      let pathDetails = schema._getPathType(checkPath);\n\n      // If no schema type, check for embedded discriminators because the\n      // filter or update may imply an embedded discriminator type. See #8378\n      if (schematype == null) {\n        const _res = getEmbeddedDiscriminatorPath(schema, obj, filter, checkPath, options);\n        if (_res.schematype != null) {\n          schematype = _res.schematype;\n          pathDetails = _res.type;\n        }\n      }\n\n      let isStrict = strict;\n      if (pathDetails && pathDetails.schema && strict == null) {\n        isStrict = pathDetails.schema.options.strict;\n      }\n\n      const skip = isStrict &&\n        !schematype &&\n        !/real|nested/.test(pathDetails.pathType);\n\n      if (skip) {\n        // Even if strict is `throw`, avoid throwing an error because of\n        // virtuals because of #6731\n        if (isStrict === 'throw' && schema.virtuals[checkPath] == null) {\n          throw new StrictModeError(prefix + key);\n        } else {\n          delete obj[key];\n        }\n      } else {\n        // gh-1845 temporary fix: ignore $rename. See gh-3027 for tracking\n        // improving this.\n        if (op === '$rename') {\n          hasKeys = true;\n          continue;\n        }\n\n        try {\n          if (prefix.length === 0 || key.indexOf('.') === -1) {\n            obj[key] = castUpdateVal(schematype, val, op, key, context, prefix + key);\n          } else if (isStrict !== false || schematype != null) {\n            // Setting a nested dotted path that's in the schema. We don't allow paths with '.' in\n            // a schema, so replace the dotted path with a nested object to avoid ending up with\n            // dotted properties in the updated object. See (gh-10200)\n            setDottedPath(obj, key, castUpdateVal(schematype, val, op, key, context, prefix + key));\n            delete obj[key];\n          }\n        } catch (error) {\n          aggregatedError = _appendError(error, context, key, aggregatedError);\n        }\n\n        if (Array.isArray(obj[key]) && (op === '$addToSet' || op === '$push') && key !== '$each') {\n          if (schematype &&\n              schematype.caster &&\n              !schematype.caster.$isMongooseArray &&\n              !schematype.caster[schemaMixedSymbol]) {\n            obj[key] = { $each: obj[key] };\n          }\n        }\n\n        if (obj[key] === void 0) {\n          delete obj[key];\n          continue;\n        }\n\n        hasKeys = true;\n      }\n    }\n  }\n\n  if (aggregatedError != null) {\n    throw aggregatedError;\n  }\n\n  return hasKeys;\n}\n\n/*!\n * ignore\n */\n\nfunction _appendError(error, query, key, aggregatedError) {\n  if (typeof query !== 'object' || !query.options.multipleCastError) {\n    throw error;\n  }\n  aggregatedError = aggregatedError || new ValidationError();\n  aggregatedError.addError(key, error);\n  return aggregatedError;\n}\n\n/**\n * These operators should be cast to numbers instead\n * of their path schema type.\n * @api private\n */\n\nconst numberOps = {\n  $pop: 1,\n  $inc: 1\n};\n\n/**\n * These ops require no casting because the RHS doesn't do anything.\n * @api private\n */\n\nconst noCastOps = {\n  $unset: 1\n};\n\n/**\n * These operators require casting docs\n * to real Documents for Update operations.\n * @api private\n */\n\nconst castOps = {\n  $push: 1,\n  $addToSet: 1,\n  $set: 1,\n  $setOnInsert: 1\n};\n\n/*!\n * ignore\n */\n\nconst overwriteOps = {\n  $set: 1,\n  $setOnInsert: 1\n};\n\n/**\n * Casts `val` according to `schema` and atomic `op`.\n *\n * @param {SchemaType} schema\n * @param {Object} val\n * @param {String} op the atomic operator ($pull, $set, etc)\n * @param {String} $conditional\n * @param {Query} context\n * @param {String} path\n * @api private\n */\n\nfunction castUpdateVal(schema, val, op, $conditional, context, path) {\n  if (!schema) {\n    // non-existing schema path\n    if (op in numberOps) {\n      try {\n        return castNumber(val);\n      } catch (err) {\n        throw new CastError('number', val, path);\n      }\n    }\n    return val;\n  }\n\n  // console.log('CastUpdateVal', path, op, val, schema);\n\n  const cond = schema.caster && op in castOps &&\n      (utils.isObject(val) || Array.isArray(val));\n  if (cond && !overwriteOps[op]) {\n    // Cast values for ops that add data to MongoDB.\n    // Ensures embedded documents get ObjectIds etc.\n    let schemaArrayDepth = 0;\n    let cur = schema;\n    while (cur.$isMongooseArray) {\n      ++schemaArrayDepth;\n      cur = cur.caster;\n    }\n    let arrayDepth = 0;\n    let _val = val;\n    while (Array.isArray(_val)) {\n      ++arrayDepth;\n      _val = _val[0];\n    }\n\n    const additionalNesting = schemaArrayDepth - arrayDepth;\n    while (arrayDepth < schemaArrayDepth) {\n      val = [val];\n      ++arrayDepth;\n    }\n\n    let tmp = schema.applySetters(Array.isArray(val) ? val : [val], context);\n\n    for (let i = 0; i < additionalNesting; ++i) {\n      tmp = tmp[0];\n    }\n    return tmp;\n  }\n\n  if (op in noCastOps) {\n    return val;\n  }\n  if (op in numberOps) {\n    // Null and undefined not allowed for $pop, $inc\n    if (val == null) {\n      throw new CastError('number', val, schema.path);\n    }\n    if (op === '$inc') {\n      // Support `$inc` with long, int32, etc. (gh-4283)\n      return schema.castForQuery(\n        null,\n        val,\n        context\n      );\n    }\n    try {\n      return castNumber(val);\n    } catch (error) {\n      throw new CastError('number', val, schema.path);\n    }\n  }\n  if (op === '$currentDate') {\n    if (typeof val === 'object') {\n      return { $type: val.$type };\n    }\n    return Boolean(val);\n  }\n\n  if (/^\\$/.test($conditional)) {\n    return schema.castForQuery(\n      $conditional,\n      val,\n      context\n    );\n  }\n\n  if (overwriteOps[op]) {\n    const skipQueryCastForUpdate = val != null && schema.$isMongooseArray && schema.$fullPath != null && !schema.$fullPath.match(/\\d+$/);\n    const applySetters = schema[schemaMixedSymbol] != null;\n    if (skipQueryCastForUpdate || applySetters) {\n      return schema.applySetters(val, context);\n    }\n    return schema.castForQuery(\n      null,\n      val,\n      context\n    );\n  }\n\n  return schema.castForQuery(null, val, context);\n}\n", "'use strict';\n\nconst helpers = require('../../queryhelpers');\n\nmodule.exports = completeMany;\n\n/**\n * Given a model and an array of docs, hydrates all the docs to be instances\n * of the model. Used to initialize docs returned from the db from `find()`\n *\n * @param {Model} model\n * @param {Array} docs\n * @param {Object} fields the projection used, including `select` from schemas\n * @param {Object} userProvidedFields the user-specified projection\n * @param {Object} [opts]\n * @param {Array} [opts.populated]\n * @param {ClientSession} [opts.session]\n * @param {Function} callback\n * @api private\n */\n\nasync function completeMany(model, docs, fields, userProvidedFields, opts) {\n  return Promise.all(docs.map(doc => new Promise((resolve, reject) => {\n    const rawDoc = doc;\n    doc = helpers.createModel(model, doc, fields, userProvidedFields);\n    if (opts.session != null) {\n      doc.$session(opts.session);\n    }\n    doc.$init(rawDoc, opts, (err) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(doc);\n    });\n  })));\n}\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = function hasDollarKeys(obj) {\n\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  const keys = Object.keys(obj);\n  const len = keys.length;\n\n  for (let i = 0; i < len; ++i) {\n    if (keys[i][0] === '$') {\n      return true;\n    }\n  }\n\n  return false;\n};\n", "'use strict';\n\nconst isDefiningProjection = require('./isDefiningProjection');\n\n/*!\n * ignore\n */\n\nmodule.exports = function isInclusive(projection) {\n  if (projection == null) {\n    return false;\n  }\n\n  const props = Object.keys(projection);\n  const numProps = props.length;\n  if (numProps === 0) {\n    return false;\n  }\n\n  for (let i = 0; i < numProps; ++i) {\n    const prop = props[i];\n    // Plus paths can't define the projection (see gh-7050)\n    if (prop.startsWith('+')) {\n      continue;\n    }\n    // If field is truthy (1, true, etc.) and not an object, then this\n    // projection must be inclusive. If object, assume its $meta, $slice, etc.\n    if (isDefiningProjection(projection[prop]) && !!projection[prop]) {\n      if (projection[prop] != null && typeof projection[prop] === 'object') {\n        return isInclusive(projection[prop]);\n      } else {\n        return !!projection[prop];\n      }\n    }\n  }\n\n  return false;\n};\n", "'use strict';\n\n/**\n * Determines if `path2` is a subpath of or equal to `path1`\n *\n * @param {string} path1\n * @param {string} path2\n * @return {Boolean}\n * @api private\n */\n\nmodule.exports = function isSubpath(path1, path2) {\n  return path1 === path2 || path2.startsWith(path1 + '.');\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst specialProperties = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Clones objects\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @return {Object} the cloned object\n * @api private\n */\n\nconst clone = exports.clone = function clone(obj, options) {\n  if (obj === undefined || obj === null)\n    return obj;\n\n  if (Array.isArray(obj))\n    return exports.cloneArray(obj, options);\n\n  if (obj.constructor) {\n    if (/ObjectI[dD]$/.test(obj.constructor.name)) {\n      return 'function' == typeof obj.clone\n        ? obj.clone()\n        : new obj.constructor(obj.id);\n    }\n\n    if (obj.constructor.name === 'ReadPreference') {\n      return new obj.constructor(obj.mode, clone(obj.tags, options));\n    }\n\n    if ('Binary' == obj._bsontype && obj.buffer && obj.value) {\n      return 'function' == typeof obj.clone\n        ? obj.clone()\n        : new obj.constructor(obj.value(true), obj.sub_type);\n    }\n\n    if ('Date' === obj.constructor.name || 'Function' === obj.constructor.name)\n      return new obj.constructor(+obj);\n\n    if ('RegExp' === obj.constructor.name)\n      return new RegExp(obj);\n\n    if ('Buffer' === obj.constructor.name)\n      return Buffer.from(obj);\n  }\n\n  if (isObject(obj))\n    return exports.cloneObject(obj, options);\n\n  if (obj.valueOf)\n    return obj.valueOf();\n};\n\n/*!\n * ignore\n */\n\nexports.cloneObject = function cloneObject(obj, options) {\n  const minimize = options && options.minimize,\n      ret = {},\n      keys = Object.keys(obj),\n      len = keys.length;\n  let hasKeys = false,\n      val,\n      k = '',\n      i = 0;\n\n  for (i = 0; i < len; ++i) {\n    k = keys[i];\n    // Not technically prototype pollution because this wouldn't merge properties\n    // onto `Object.prototype`, but avoid properties like __proto__ as a precaution.\n    if (specialProperties.indexOf(k) !== -1) {\n      continue;\n    }\n\n    val = clone(obj[k], options);\n\n    if (!minimize || ('undefined' !== typeof val)) {\n      hasKeys || (hasKeys = true);\n      ret[k] = val;\n    }\n  }\n\n  return minimize\n    ? hasKeys && ret\n    : ret;\n};\n\nexports.cloneArray = function cloneArray(arr, options) {\n  const ret = [],\n      l = arr.length;\n  let i = 0;\n  for (; i < l; i++)\n    ret.push(clone(arr[i], options));\n  return ret;\n};\n\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n    if ('undefined' === typeof to[key]) {\n      to[key] = from[key];\n    } else {\n      if (exports.isObject(from[key])) {\n        merge(to[key], from[key]);\n      } else {\n        to[key] = from[key];\n      }\n    }\n  }\n};\n\n/**\n * Same as merge but clones the assigned values.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.mergeClone = function mergeClone(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n    if ('undefined' === typeof to[key]) {\n      to[key] = clone(from[key]);\n    } else {\n      if (exports.isObject(from[key])) {\n        mergeClone(to[key], from[key]);\n      } else {\n        to[key] = clone(from[key]);\n      }\n    }\n  }\n};\n\n/**\n * Read pref helper (mongo 2.2 drivers support this)\n *\n * Allows using aliases instead of full preference names:\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * @param {String} pref\n */\n\nexports.readPref = function readPref(pref) {\n  switch (pref) {\n    case 'p':\n      pref = 'primary';\n      break;\n    case 'pp':\n      pref = 'primaryPreferred';\n      break;\n    case 's':\n      pref = 'secondary';\n      break;\n    case 'sp':\n      pref = 'secondaryPreferred';\n      break;\n    case 'n':\n      pref = 'nearest';\n      break;\n  }\n\n  return pref;\n};\n\n\n/**\n * Read Concern helper (mongo 3.2 drivers support this)\n *\n * Allows using string to specify read concern level:\n *\n *     local          3.2+\n *     available      3.6+\n *     majority       3.2+\n *     linearizable   3.4+\n *     snapshot       4.0+\n *\n * @param {String|Object} concern\n */\n\nexports.readConcern = function readConcern(concern) {\n  if ('string' === typeof concern) {\n    switch (concern) {\n      case 'l':\n        concern = 'local';\n        break;\n      case 'a':\n        concern = 'available';\n        break;\n      case 'm':\n        concern = 'majority';\n        break;\n      case 'lz':\n        concern = 'linearizable';\n        break;\n      case 's':\n        concern = 'snapshot';\n        break;\n    }\n    concern = { level: concern };\n  }\n  return concern;\n};\n\n/**\n * Object.prototype.toString.call helper\n */\n\nconst _toString = Object.prototype.toString;\nexports.toString = function(arg) {\n  return _toString.call(arg);\n};\n\n/**\n * Determines if `arg` is an object.\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @return {Boolean}\n */\n\nconst isObject = exports.isObject = function(arg) {\n  return '[object Object]' == exports.toString(arg);\n};\n\n/**\n * Object.keys helper\n */\n\nexports.keys = Object.keys;\n\n/**\n * Basic Object.create polyfill.\n * Only one argument is supported.\n *\n * Based on https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/create\n */\n\nexports.create = 'function' == typeof Object.create\n  ? Object.create\n  : create;\n\nfunction create(proto) {\n  if (arguments.length > 1) {\n    throw new Error('Adding properties is not supported');\n  }\n\n  function F() { }\n  F.prototype = proto;\n  return new F;\n}\n\n/**\n * inheritance\n */\n\nexports.inherits = function(ctor, superCtor) {\n  ctor.prototype = exports.create(superCtor.prototype);\n  ctor.prototype.constructor = ctor;\n};\n\n/**\n * Check if this object is an arguments object\n *\n * @param {Any} v\n * @return {Boolean}\n */\n\nexports.isArgumentsObject = function(v) {\n  return Object.prototype.toString.call(v) === '[object Arguments]';\n};\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n", "'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "'use strict';\n\nconst denied = exports;\n\ndenied.distinct = function(self) {\n  if (self._fields && Object.keys(self._fields).length > 0) {\n    return 'field selection and slice';\n  }\n\n  const keys = Object.keys(denied.distinct);\n  let err;\n\n  keys.every(function(option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n    return true;\n  });\n\n  return err;\n};\ndenied.distinct.select =\ndenied.distinct.slice =\ndenied.distinct.sort =\ndenied.distinct.limit =\ndenied.distinct.skip =\ndenied.distinct.batchSize =\ndenied.distinct.hint =\ndenied.distinct.tailable = true;\n\n\n// aggregation integration\n\n\ndenied.findOneAndUpdate =\ndenied.findOneAndRemove = function(self) {\n  const keys = Object.keys(denied.findOneAndUpdate);\n  let err;\n\n  keys.every(function(option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n    return true;\n  });\n\n  return err;\n};\ndenied.findOneAndUpdate.limit =\ndenied.findOneAndUpdate.skip =\ndenied.findOneAndUpdate.batchSize =\ndenied.findOneAndUpdate.tailable = true;\n\n\ndenied.count = function(self) {\n  if (self._fields && Object.keys(self._fields).length > 0) {\n    return 'field selection and slice';\n  }\n\n  const keys = Object.keys(denied.count);\n  let err;\n\n  keys.every(function(option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n    return true;\n  });\n\n  return err;\n};\n\ndenied.count.slice =\ndenied.count.batchSize =\ndenied.count.tailable = true;\n", "'use strict';\n\nexports.isNode = 'undefined' != typeof process\n           && 'object' == typeof module\n           && 'object' == typeof global\n           && 'function' == typeof Buffer\n           && process.argv;\n\nexports.isMongo = !exports.isNode\n           && 'function' == typeof printjson\n           && 'function' == typeof ObjectId\n           && 'function' == typeof rs\n           && 'function' == typeof sh;\n\nexports.isBrowser = !exports.isNode\n                 && !exports.isMongo\n                 && 'undefined' != typeof window;\n\nexports.type = exports.isNode ? 'node'\n  : exports.isMongo ? 'mongo'\n    : exports.isBrowser ? 'browser'\n      : 'unknown';\n", "'use strict';\n\n/**\n * methods a collection must implement\n */\n\nconst methods = [\n  'find',\n  'findOne',\n  'updateMany',\n  'updateOne',\n  'replaceOne',\n  'count',\n  'distinct',\n  'findOneAndDelete',\n  'findOneAndUpdate',\n  'aggregate',\n  'findCursor',\n  'deleteOne',\n  'deleteMany'\n];\n\n/**\n * Collection base class from which implementations inherit\n */\n\nfunction Collection() {}\n\nfor (let i = 0, len = methods.length; i < len; ++i) {\n  const method = methods[i];\n  Collection.prototype[method] = notImplemented(method);\n}\n\nmodule.exports = exports = Collection;\nCollection.methods = methods;\n\n/**\n * creates a function which throws an implementation error\n */\n\nfunction notImplemented(method) {\n  return function() {\n    throw new Error('collection.' + method + ' not implemented');\n  };\n}\n", "'use strict';\n\n/**\n * Module dependencies\n */\n\nconst Collection = require('./collection');\n\nclass NodeCollection extends Collection {\n  constructor(col) {\n    super();\n\n    this.collection = col;\n    this.collectionName = col.collectionName;\n  }\n\n  /**\n   * find(match, options)\n   */\n  async find(match, options) {\n    const cursor = this.collection.find(match, options);\n\n    return cursor.toArray();\n  }\n\n  /**\n   * findOne(match, options)\n   */\n  async findOne(match, options) {\n    return this.collection.findOne(match, options);\n  }\n\n  /**\n   * count(match, options)\n   */\n  async count(match, options) {\n    return this.collection.count(match, options);\n  }\n\n  /**\n   * distinct(prop, match, options)\n   */\n  async distinct(prop, match, options) {\n    return this.collection.distinct(prop, match, options);\n  }\n\n  /**\n   * updateMany(match, update, options)\n   */\n  async updateMany(match, update, options) {\n    return this.collection.updateMany(match, update, options);\n  }\n\n  /**\n   * updateOne(match, update, options)\n   */\n  async updateOne(match, update, options) {\n    return this.collection.updateOne(match, update, options);\n  }\n\n  /**\n   * replaceOne(match, update, options)\n   */\n  async replaceOne(match, update, options) {\n    return this.collection.replaceOne(match, update, options);\n  }\n\n  /**\n   * deleteOne(match, options)\n   */\n  async deleteOne(match, options) {\n    return this.collection.deleteOne(match, options);\n  }\n\n  /**\n   * deleteMany(match, options)\n   */\n  async deleteMany(match, options) {\n    return this.collection.deleteMany(match, options);\n  }\n\n  /**\n   * findOneAndDelete(match, options, function(err[, result])\n   */\n  async findOneAndDelete(match, options) {\n    return this.collection.findOneAndDelete(match, options);\n  }\n\n  /**\n   * findOneAndUpdate(match, update, options)\n   */\n  async findOneAndUpdate(match, update, options) {\n    return this.collection.findOneAndUpdate(match, update, options);\n  }\n\n  /**\n   * var cursor = findCursor(match, options)\n   */\n  findCursor(match, options) {\n    return this.collection.find(match, options);\n  }\n\n  /**\n   * aggregation(operators...)\n   * TODO\n   */\n}\n\n\n/**\n * Expose\n */\n\nmodule.exports = exports = NodeCollection;\n", "'use strict';\n\nconst env = require('../env');\n\nif ('unknown' == env.type) {\n  throw new Error('Unknown environment');\n}\n\nmodule.exports =\n  env.isNode ? require('./node') :\n    env.isMongo ? require('./collection') :\n      require('./collection');\n\n", "'use strict';\n\n/**\n * Dependencies\n */\n\nconst assert = require('assert');\nconst util = require('util');\nconst utils = require('./utils');\nconst debug = require('debug')('mquery');\n\n/**\n * Query constructor used for building queries.\n *\n * #### Example:\n *\n *     var query = new Query({ name: 'mquery' });\n *     query.setOptions({ collection: moduleCollection })\n *     await query.where('age').gte(21).exec();\n *\n * @param {Object} [criteria] criteria for the query OR the collection instance to use\n * @param {Object} [options]\n * @api public\n */\n\nfunction Query(criteria, options) {\n  if (!(this instanceof Query))\n    return new Query(criteria, options);\n\n  const proto = this.constructor.prototype;\n\n  this.op = proto.op || undefined;\n\n  this.options = Object.assign({}, proto.options);\n\n  this._conditions = proto._conditions\n    ? utils.clone(proto._conditions)\n    : {};\n\n  this._fields = proto._fields\n    ? utils.clone(proto._fields)\n    : undefined;\n\n  this._updateDoc = proto._updateDoc\n    ? utils.clone(proto._updateDoc)\n    : undefined;\n\n  this._path = proto._path || undefined;\n  this._distinctDoc = proto._distinctDoc || undefined;\n  this._collection = proto._collection || undefined;\n  this._traceFunction = proto._traceFunction || undefined;\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (criteria) {\n    this.find(criteria);\n  }\n}\n\n/**\n * This is a parameter that the user can set which determines if mquery\n * uses $within or $geoWithin for queries. It defaults to true which\n * means $geoWithin will be used. If using MongoDB < 2.4 you should\n * set this to false.\n *\n * @api public\n * @property use$geoWithin\n */\n\nlet $withinCmd = '$geoWithin';\nObject.defineProperty(Query, 'use$geoWithin', {\n  get: function() { return $withinCmd == '$geoWithin'; },\n  set: function(v) {\n    if (true === v) {\n      // mongodb >= 2.4\n      $withinCmd = '$geoWithin';\n    } else {\n      $withinCmd = '$within';\n    }\n  }\n});\n\n/**\n * Converts this query to a constructor function with all arguments and options retained.\n *\n * #### Example:\n *\n *     // Create a query that will read documents with a \"video\" category from\n *     // `aCollection` on the primary node in the replica-set unless it is down,\n *     // in which case we'll read from a secondary node.\n *     var query = mquery({ category: 'video' })\n *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });\n *\n *     // create a constructor based off these settings\n *     var Video = query.toConstructor();\n *\n *     // Video is now a subclass of mquery() and works the same way but with the\n *     // default query parameters and options set.\n *\n *     // run a query with the previous settings but filter for movies with names\n *     // that start with \"Life\".\n *     Video().where({ name: /^Life/ }).exec(cb);\n *\n * @return {Query} new Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor() {\n  function CustomQuery(criteria, options) {\n    if (!(this instanceof CustomQuery))\n      return new CustomQuery(criteria, options);\n    Query.call(this, criteria, options);\n  }\n\n  utils.inherits(CustomQuery, Query);\n\n  // set inherited defaults\n  const p = CustomQuery.prototype;\n\n  p.options = {};\n  p.setOptions(this.options);\n\n  p.op = this.op;\n  p._conditions = utils.clone(this._conditions);\n  p._fields = utils.clone(this._fields);\n  p._updateDoc = utils.clone(this._updateDoc);\n  p._path = this._path;\n  p._distinctDoc = this._distinctDoc;\n  p._collection = this._collection;\n  p._traceFunction = this._traceFunction;\n\n  return CustomQuery;\n};\n\n/**\n * Sets query options.\n *\n * #### Options:\n *\n * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *\n * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *\n * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *\n * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *\n * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *\n * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *\n * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *\n * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *\n * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *\n * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)\n * - collection the collection to query against\n *\n * _* denotes a query helper method is also available_\n *\n * @param {Object} options\n * @api public\n */\n\nQuery.prototype.setOptions = function(options) {\n  if (!(options && utils.isObject(options)))\n    return this;\n\n  // set arbitrary options\n  const methods = utils.keys(options);\n  let method;\n\n  for (let i = 0; i < methods.length; ++i) {\n    method = methods[i];\n\n    // use methods if exist (safer option manipulation)\n    if ('function' == typeof this[method]) {\n      const args = Array.isArray(options[method])\n        ? options[method]\n        : [options[method]];\n      this[method].apply(this, args);\n    } else {\n      this.options[method] = options[method];\n    }\n  }\n\n  return this;\n};\n\n/**\n * Sets this Querys collection.\n *\n * @param {Collection} coll\n * @return {Query} this\n */\n\nQuery.prototype.collection = function collection(coll) {\n  this._collection = new Query.Collection(coll);\n\n  return this;\n};\n\n/**\n * Adds a collation to this op (MongoDB 3.4 and up)\n *\n * #### Example:\n *\n *     query.find().collation({ locale: \"en_US\", strength: 1 })\n *\n * @param {Object} value\n * @return {Query} this\n * @see MongoDB docs https://docs.mongodb.com/manual/reference/method/cursor.collation/#cursor.collation\n * @api public\n */\n\nQuery.prototype.collation = function(value) {\n  this.options.collation = value;\n  return this;\n};\n\n/**\n * Specifies a `$where` condition\n *\n * Use `$where` when you need to select documents using a JavaScript expression.\n *\n * #### Example:\n *\n *     query.$where('this.comments.length > 10 || this.name.length > 5')\n *\n *     query.$where(function () {\n *       return this.comments.length > 10 || this.name.length > 5;\n *     })\n *\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @method $where\n * @api public\n */\n\nQuery.prototype.$where = function(js) {\n  this._conditions.$where = js;\n  return this;\n};\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * #### Example:\n *\n *     // instead of writing:\n *     await User.find({age: {$gte: 21, $lte: 65}});\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     await User\n *       .where('age').gte(21).lte(65)\n *       .where('name', /^vonderful/i)\n *       .where('friends').slice(10)\n *       .exec()\n *\n * @param {String} [path]\n * @param {Object} [val]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.where = function() {\n  if (!arguments.length) return this;\n  if (!this.op) this.op = 'find';\n\n  const type = typeof arguments[0];\n\n  if ('string' == type) {\n    this._path = arguments[0];\n\n    if (2 === arguments.length) {\n      this._conditions[this._path] = arguments[1];\n    }\n\n    return this;\n  }\n\n  if ('object' == type && !Array.isArray(arguments[0])) {\n    return this.merge(arguments[0]);\n  }\n\n  throw new TypeError('path must be a string or object');\n};\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * #### Example:\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.equals = function equals(val) {\n  this._ensurePath('equals');\n  const path = this._path;\n  this._conditions[path] = val;\n  return this;\n};\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n * This is alias of `equals`\n *\n * #### Example:\n *\n *     User.where('age').eq(49);\n *\n *     // is the same as\n *\n *     User.shere('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.eq = function eq(val) {\n  this._ensurePath('eq');\n  const path = this._path;\n  this._conditions[path] = val;\n  return this;\n};\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * #### Example:\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.or = function or(array) {\n  const or = this._conditions.$or || (this._conditions.$or = []);\n  if (!Array.isArray(array)) array = [array];\n  or.push.apply(or, array);\n  return this;\n};\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * #### Example:\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.nor = function nor(array) {\n  const nor = this._conditions.$nor || (this._conditions.$nor = []);\n  if (!Array.isArray(array)) array = [array];\n  nor.push.apply(nor, array);\n  return this;\n};\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * #### Example:\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.and = function and(array) {\n  const and = this._conditions.$and || (this._conditions.$and = []);\n  if (!Array.isArray(array)) array = [array];\n  and.push.apply(and, array);\n  return this;\n};\n\n/**\n * Specifies a $gt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * #### Example:\n *\n *     Thing.find().where('age').gt(21)\n *\n *     // or\n *     Thing.find().gt('age', 21)\n *\n * @method gt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $gte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $ne query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method ne\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $in query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method in\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $nin query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method nin\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $all query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method all\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $size query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method size\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $regex query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method regex\n * @memberOf Query\n * @param {String} [path]\n * @param {String|RegExp} val\n * @api public\n */\n\n/**\n * Specifies a $maxDistance query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method maxDistance\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/*!\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\n\n'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function($conditional) {\n  Query.prototype[$conditional] = function() {\n    let path, val;\n\n    if (1 === arguments.length) {\n      this._ensurePath($conditional);\n      val = arguments[0];\n      path = this._path;\n    } else {\n      val = arguments[1];\n      path = arguments[0];\n    }\n\n    const conds = this._conditions[path] === null || typeof this._conditions[path] === 'object' ?\n      this._conditions[path] :\n      (this._conditions[path] = {});\n    conds['$' + $conditional] = val;\n    return this;\n  };\n});\n\n/**\n * Specifies a `$mod` condition\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.mod = function() {\n  let val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('mod');\n    val = arguments[0];\n    path = this._path;\n  } else if (2 === arguments.length && !Array.isArray(arguments[1])) {\n    this._ensurePath('mod');\n    val = [arguments[0], arguments[1]];\n    path = this._path;\n  } else if (3 === arguments.length) {\n    val = [arguments[1], arguments[2]];\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n};\n\n/**\n * Specifies an `$exists` condition\n *\n * #### Example:\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.exists = function() {\n  let path, val;\n\n  if (0 === arguments.length) {\n    this._ensurePath('exists');\n    path = this._path;\n    val = true;\n  } else if (1 === arguments.length) {\n    if ('boolean' === typeof arguments[0]) {\n      this._ensurePath('exists');\n      path = this._path;\n      val = arguments[0];\n    } else {\n      path = arguments[0];\n      val = true;\n    }\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$exists = val;\n  return this;\n};\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * #### Example:\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @param {String|Object|Function} path\n * @param {Object|Function} criteria\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.elemMatch = function() {\n  if (null == arguments[0])\n    throw new TypeError('Invalid argument');\n\n  let fn, path, criteria;\n\n  if ('function' === typeof arguments[0]) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    fn = arguments[0];\n  } else if (utils.isObject(arguments[0])) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    criteria = arguments[0];\n  } else if ('function' === typeof arguments[1]) {\n    path = arguments[0];\n    fn = arguments[1];\n  } else if (arguments[1] && utils.isObject(arguments[1])) {\n    path = arguments[0];\n    criteria = arguments[1];\n  } else {\n    throw new TypeError('Invalid argument');\n  }\n\n  if (fn) {\n    criteria = new Query;\n    fn(criteria);\n    criteria = criteria._conditions;\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$elemMatch = criteria;\n  return this;\n};\n\n// Spatial queries\n\n/**\n * Sugar for geo-spatial queries.\n *\n * #### Example:\n *\n *     query.within().box()\n *     query.within().circle()\n *     query.within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * #### Note:\n *\n * Must be used after `where()`.\n *\n * @memberOf Query\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.within = function within() {\n  // opinionated, must be used after where\n  this._ensurePath('within');\n  this._geoComparison = $withinCmd;\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  if (2 === arguments.length) {\n    return this.box.apply(this, arguments);\n  } else if (2 < arguments.length) {\n    return this.polygon.apply(this, arguments);\n  }\n\n  const area = arguments[0];\n\n  if (!area)\n    throw new TypeError('Invalid argument');\n\n  if (area.center)\n    return this.circle(area);\n\n  if (area.box)\n    return this.box.apply(this, area.box);\n\n  if (area.polygon)\n    return this.polygon.apply(this, area.polygon);\n\n  if (area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n};\n\n/**\n * Specifies a $box condition\n *\n * #### Example:\n *\n *     var lowerLeft = [40.73083, -73.99756]\n *     var upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box('loc', lowerLeft, upperRight )\n *\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see Query#within #query_Query-within\n * @param {String} path\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.box = function() {\n  let path, box;\n\n  if (3 === arguments.length) {\n    // box('loc', [], [])\n    path = arguments[0];\n    box = [arguments[1], arguments[2]];\n  } else if (2 === arguments.length) {\n    // box([], [])\n    this._ensurePath('box');\n    path = this._path;\n    box = [arguments[0], arguments[1]];\n  } else {\n    throw new TypeError('Invalid argument');\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { $box: box };\n  return this;\n};\n\n/**\n * Specifies a $polygon condition\n *\n * #### Example:\n *\n *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])\n *     query.polygon('loc', [10,20], [13, 25], [7,15])\n *\n * @param {String|Array} [path]\n * @param {Array|Object} [val]\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.polygon = function() {\n  let val, path;\n\n  if ('string' == typeof arguments[0]) {\n    // polygon('loc', [],[],[])\n    val = Array.from(arguments);\n    path = val.shift();\n  } else {\n    // polygon([],[],[])\n    this._ensurePath('polygon');\n    path = this._path;\n    val = Array.from(arguments);\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { $polygon: val };\n  return this;\n};\n\n/**\n * Specifies a $center or $centerSphere condition.\n *\n * #### Example:\n *\n *     var area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n *     // for spherical calculations\n *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.circle = function() {\n  let path, val;\n\n  if (1 === arguments.length) {\n    this._ensurePath('circle');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError('Invalid argument');\n  }\n\n  if (!('radius' in val && val.center))\n    throw new Error('center and radius are required');\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n\n  const type = val.spherical\n    ? '$centerSphere'\n    : '$center';\n\n  const wKey = this._geoComparison || $withinCmd;\n  conds[wKey] = {};\n  conds[wKey][type] = [val.center, val.radius];\n\n  if ('unique' in val)\n    conds[wKey].$uniqueDocs = !!val.unique;\n\n  return this;\n};\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * #### Example:\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *     query.near({ center: { type: 'Point', coordinates: [..] }})\n *     query.near().geometry({ type: 'Point', coordinates: [..] })\n *\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.near = function near() {\n  let path, val;\n\n  this._geoComparison = '$near';\n\n  if (0 === arguments.length) {\n    return this;\n  } else if (1 === arguments.length) {\n    this._ensurePath('near');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError('Invalid argument');\n  }\n\n  if (!val.center) {\n    throw new Error('center is required');\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n\n  const type = val.spherical\n    ? '$nearSphere'\n    : '$near';\n\n  // center could be a GeoJSON object or an Array\n  if (Array.isArray(val.center)) {\n    conds[type] = val.center;\n\n    const radius = 'maxDistance' in val\n      ? val.maxDistance\n      : null;\n\n    if (null != radius) {\n      conds.$maxDistance = radius;\n    }\n    if (null != val.minDistance) {\n      conds.$minDistance = val.minDistance;\n    }\n  } else {\n    // GeoJSON?\n    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {\n      throw new Error(util.format('Invalid GeoJSON specified for %s', type));\n    }\n    conds[type] = { $geometry: val.center };\n\n    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere\n    if ('maxDistance' in val) {\n      conds[type]['$maxDistance'] = val.maxDistance;\n    }\n    if ('minDistance' in val) {\n      conds[type]['$minDistance'] = val.minDistance;\n    }\n  }\n\n  return this;\n};\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * #### Example:\n *\n *     query.where('path').intersects().geometry({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n *     query.where('path').intersects({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n * @param {Object} [arg]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.intersects = function intersects() {\n  // opinionated, must be used after where\n  this._ensurePath('intersects');\n\n  this._geoComparison = '$geoIntersects';\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  const area = arguments[0];\n\n  if (null != area && area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n};\n\n/**\n * Specifies a `$geometry` condition\n *\n * #### Example:\n *\n *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     var polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     var polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * #### Note:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * The most recent path passed to `where()` is used.\n *\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/\n * @api public\n */\n\nQuery.prototype.geometry = function geometry() {\n  if (!('$within' == this._geoComparison ||\n        '$geoWithin' == this._geoComparison ||\n        '$near' == this._geoComparison ||\n        '$geoIntersects' == this._geoComparison)) {\n    throw new Error('geometry() must come after `within()`, `intersects()`, or `near()');\n  }\n\n  let val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('geometry');\n    path = this._path;\n    val = arguments[0];\n  } else {\n    throw new TypeError('Invalid argument');\n  }\n\n  if (!(val.type && Array.isArray(val.coordinates))) {\n    throw new TypeError('Invalid argument');\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison] = { $geometry: val };\n\n  return this;\n};\n\n// end spatial\n\n/**\n * Specifies which document fields to include or exclude\n *\n * #### String syntax\n *\n * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n *\n * #### Example:\n *\n *     // include a and b, exclude c\n *     query.select('a b -c');\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({a: 1, b: 1, c: 0});\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String} arg\n * @return {Query} this\n * @see SchemaType\n * @api public\n */\n\nQuery.prototype.select = function select() {\n  let arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error('Invalid select: select only takes 1 argument');\n  }\n\n  this._validate('select');\n\n  const fields = this._fields || (this._fields = {});\n  const type = typeof arg;\n  let i, len;\n\n  if (('string' == type || utils.isArgumentsObject(arg)) &&\n    'number' == typeof arg.length || Array.isArray(arg)) {\n    if ('string' == type)\n      arg = arg.split(/\\s+/);\n\n    for (i = 0, len = arg.length; i < len; ++i) {\n      let field = arg[i];\n      if (!field) continue;\n      const include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    }\n\n    return this;\n  }\n\n  if (utils.isObject(arg)) {\n    const keys = utils.keys(arg);\n    for (i = 0; i < keys.length; ++i) {\n      fields[keys[i]] = arg[keys[i]];\n    }\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n};\n\n/**\n * Specifies a $slice condition for a `path`\n *\n * #### Example:\n *\n *     query.slice('comments', 5)\n *     query.slice('comments', -5)\n *     query.slice('comments', [10, 5])\n *     query.where('comments').slice(5)\n *     query.where('comments').slice([-10, 5])\n *\n * @param {String} [path]\n * @param {Number} val number/range of elements to slice\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements\n * @api public\n */\n\nQuery.prototype.slice = function() {\n  if (0 === arguments.length)\n    return this;\n\n  this._validate('slice');\n\n  let path, val;\n\n  if (1 === arguments.length) {\n    const arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      const keys = Object.keys(arg);\n      const numKeys = keys.length;\n      for (let i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = [arguments[0], arguments[1]];\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (3 === arguments.length) {\n    path = arguments[0];\n    val = [arguments[1], arguments[2]];\n  }\n\n  const myFields = this._fields || (this._fields = {});\n  myFields[path] = { $slice: val };\n  return this;\n};\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * #### Example:\n *\n *     // these are equivalent\n *     query.sort({ field: 'asc', test: -1 });\n *     query.sort('field -test');\n *     query.sort([['field', 1], ['test', -1]]);\n *\n * #### Note:\n *\n *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver >= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15).\n *  - Cannot be used with `distinct()`\n *\n * @param {Object|String|Array} arg\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.sort = function(arg) {\n  if (!arg) return this;\n  let i, len, field;\n\n  this._validate('sort');\n\n  const type = typeof arg;\n\n  // .sort([['field', 1], ['test', -1]])\n  if (Array.isArray(arg)) {\n    len = arg.length;\n    for (i = 0; i < arg.length; ++i) {\n      if (!Array.isArray(arg[i])) {\n        throw new Error('Invalid sort() argument, must be array of arrays');\n      }\n      _pushArr(this.options, arg[i][0], arg[i][1]);\n    }\n    return this;\n  }\n\n  // .sort('field -test')\n  if (1 === arguments.length && 'string' == type) {\n    arg = arg.split(/\\s+/);\n    len = arg.length;\n    for (i = 0; i < len; ++i) {\n      field = arg[i];\n      if (!field) continue;\n      const ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      push(this.options, field, ascend);\n    }\n\n    return this;\n  }\n\n  // .sort({ field: 1, test: -1 })\n  if (utils.isObject(arg)) {\n    const keys = utils.keys(arg);\n    for (i = 0; i < keys.length; ++i) {\n      field = keys[i];\n      push(this.options, field, arg[field]);\n    }\n\n    return this;\n  }\n\n  if (typeof Map !== 'undefined' && arg instanceof Map) {\n    _pushMap(this.options, arg);\n    return this;\n  }\n  throw new TypeError('Invalid sort() argument. Must be a string, object, or array.');\n};\n\n/*!\n * @ignore\n */\n\nconst _validSortValue = {\n  1: 1,\n  '-1': -1,\n  asc: 1,\n  ascending: 1,\n  desc: -1,\n  descending: -1\n};\n\nfunction push(opts, field, value) {\n  if (Array.isArray(opts.sort)) {\n    throw new TypeError('Can\\'t mix sort syntaxes. Use either array or object:' +\n      '\\n- `.sort([[\\'field\\', 1], [\\'test\\', -1]])`' +\n      '\\n- `.sort({ field: 1, test: -1 })`');\n  }\n\n  let s;\n  if (value && value.$meta) {\n    s = opts.sort || (opts.sort = {});\n    s[field] = { $meta: value.$meta };\n    return;\n  }\n\n  s = opts.sort || (opts.sort = {});\n  let val = String(value || 1).toLowerCase();\n  val = _validSortValue[val];\n  if (!val) throw new TypeError('Invalid sort value: { ' + field + ': ' + value + ' }');\n\n  s[field] = val;\n}\n\nfunction _pushArr(opts, field, value) {\n  opts.sort = opts.sort || [];\n  if (!Array.isArray(opts.sort)) {\n    throw new TypeError('Can\\'t mix sort syntaxes. Use either array or object:' +\n      '\\n- `.sort([[\\'field\\', 1], [\\'test\\', -1]])`' +\n      '\\n- `.sort({ field: 1, test: -1 })`');\n  }\n\n  let val = String(value || 1).toLowerCase();\n  val = _validSortValue[val];\n  if (!val) throw new TypeError('Invalid sort value: [ ' + field + ', ' + value + ' ]');\n\n  opts.sort.push([field, val]);\n}\n\nfunction _pushMap(opts, map) {\n  opts.sort = opts.sort || new Map();\n  if (!(opts.sort instanceof Map)) {\n    throw new TypeError('Can\\'t mix sort syntaxes. Use either array or ' +\n      'object or map consistently');\n  }\n  map.forEach(function(value, key) {\n    let val = String(value || 1).toLowerCase();\n    val = _validSortValue[val];\n    if (!val) throw new TypeError('Invalid sort value: < ' + key + ': ' + value + ' >');\n\n    opts.sort.set(key, val);\n  });\n}\n\n\n/**\n * Specifies the limit option.\n *\n * #### Example:\n *\n *     query.limit(20)\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the skip option.\n *\n * #### Example:\n *\n *     query.skip(100).limit(20)\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the batchSize option.\n *\n * #### Example:\n *\n *     query.batchSize(100)\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the `comment` option.\n *\n * #### Example:\n *\n *     query.comment('login query')\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment\n * @api public\n */\n\n/*!\n * limit, skip, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\n\n['limit', 'skip', 'batchSize', 'comment'].forEach(function(method) {\n  Query.prototype[method] = function(v) {\n    this._validate(method);\n    this.options[method] = v;\n    return this;\n  };\n});\n\n/**\n * Specifies the maxTimeMS option.\n *\n * #### Example:\n *\n *     query.maxTime(100)\n *     query.maxTimeMS(100)\n *\n * @method maxTime\n * @memberOf Query\n * @param {Number} ms\n * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS\n * @api public\n */\n\nQuery.prototype.maxTime = Query.prototype.maxTimeMS = function(ms) {\n  this._validate('maxTime');\n  this.options.maxTimeMS = ms;\n  return this;\n};\n\n/**\n * Sets query hints.\n *\n * #### Example:\n *\n *     query.hint({ indexA: 1, indexB: -1});\n *     query.hint('indexA_1_indexB_1');\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|string} val a hint object or the index name\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint\n * @api public\n */\n\nQuery.prototype.hint = function() {\n  if (0 === arguments.length) return this;\n\n  this._validate('hint');\n\n  const arg = arguments[0];\n  if (utils.isObject(arg)) {\n    const hint = this.options.hint || (this.options.hint = {});\n\n    // must keep object keys in order so don't use Object.keys()\n    for (const k in arg) {\n      hint[k] = arg[k];\n    }\n\n    return this;\n  }\n  if (typeof arg === 'string') {\n    this.options.hint = arg;\n    return this;\n  }\n\n  throw new TypeError('Invalid hint. ' + arg);\n};\n\n/**\n * Requests acknowledgement that this operation has been persisted to MongoDB's\n * on-disk journal.\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the `j` value if it is specified in writeConcern options\n *\n * #### Example:\n *\n *     mquery().w(2).j(true).wtimeout(2000);\n *\n * @method j\n * @memberOf Query\n * @instance\n * @param {boolean} val\n * @see mongodb https://docs.mongodb.com/manual/reference/write-concern/#j-option\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.j = function j(val) {\n  this.options.j = val;\n  return this;\n};\n\n/**\n * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences.\n *\n * #### Example:\n *\n *     query.slaveOk() // true\n *     query.slaveOk(true)\n *     query.slaveOk(false)\n *\n * @deprecated use read() preferences instead if on mongodb >= 2.2\n * @param {Boolean} v defaults to true\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see read()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.slaveOk = function(v) {\n  this.options.slaveOk = arguments.length ? !!v : true;\n  return this;\n};\n\n/**\n * Sets the readPreference option for the query.\n *\n * #### Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // you can also use mongodb.ReadPreference class to also specify tags\n *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))\n *\n *     new Query().setReadPreference('primary') // alias of .read()\n *\n * #### Preferences:\n *\n *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n *     secondary            Read from secondary if available, otherwise error.\n *     primaryPreferred     Read from primary if available, otherwise a secondary.\n *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n *\n * Aliases\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = Query.prototype.setReadPreference = function(pref) {\n  if (arguments.length > 1 && !Query.prototype.read.deprecationWarningIssued) {\n    console.error('Deprecation warning: \\'tags\\' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead.');\n    Query.prototype.read.deprecationWarningIssued = true;\n  }\n  this.options.readPreference = utils.readPref(pref);\n  return this;\n};\n\n/**\n * Sets the readConcern option for the query.\n *\n * #### Example:\n *\n *     new Query().readConcern('local')\n *     new Query().readConcern('l')  // same as local\n *\n *     new Query().readConcern('available')\n *     new Query().readConcern('a')  // same as available\n *\n *     new Query().readConcern('majority')\n *     new Query().readConcern('m')  // same as majority\n *\n *     new Query().readConcern('linearizable')\n *     new Query().readConcern('lz') // same as linearizable\n *\n *     new Query().readConcern('snapshot')\n *     new Query().readConcern('s')  // same as snapshot\n *\n *     new Query().r('s') // r is alias of readConcern\n *\n *\n * #### Read Concern Level:\n *\n *     local         MongoDB 3.2+ The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back).\n *     available     MongoDB 3.6+ The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back).\n *     majority      MongoDB 3.2+ The query returns the data that has been acknowledged by a majority of the replica set members. The documents returned by the read operation are durable, even in the event of failure.\n *     linearizable  MongoDB 3.4+ The query returns data that reflects all successful majority-acknowledged writes that completed prior to the start of the read operation. The query may wait for concurrently executing writes to propagate to a majority of replica set members before returning results.\n *     snapshot      MongoDB 4.0+ Only available for operations within multi-document transactions. Upon transaction commit with write concern \"majority\", the transaction operations are guaranteed to have read from a snapshot of majority-committed data.\n *\n * Aliases\n *\n *     l   local\n *     a   available\n *     m   majority\n *     lz  linearizable\n *     s   snapshot\n *\n * Read more about how to use read concern [here](https://docs.mongodb.com/manual/reference/read-concern/).\n *\n * @param {String} level one of the listed read concern level or their aliases\n * @see mongodb https://docs.mongodb.com/manual/reference/read-concern/\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.readConcern = Query.prototype.r = function(level) {\n  this.options.readConcern = utils.readConcern(level);\n  return this;\n};\n\n/**\n * Sets tailable option.\n *\n * #### Example:\n *\n *     query.tailable() <== true\n *     query.tailable(true)\n *     query.tailable(false)\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} v defaults to true\n * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors\n * @api public\n */\n\nQuery.prototype.tailable = function() {\n  this._validate('tailable');\n\n  this.options.tailable = arguments.length\n    ? !!arguments[0]\n    : true;\n\n  return this;\n};\n\n/**\n * Sets the specified number of `mongod` servers, or tag set of `mongod` servers,\n * that must acknowledge this write before this write is considered successful.\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the `w` value if it is specified in writeConcern options\n *\n * #### Example:\n *\n *     mquery().writeConcern(0)\n *     mquery().writeConcern(1)\n *     mquery().writeConcern({ w: 1, j: true, wtimeout: 2000 })\n *     mquery().writeConcern('majority')\n *     mquery().writeConcern('m') // same as majority\n *     mquery().writeConcern('tagSetName') // if the tag set is 'm', use .writeConcern({ w: 'm' }) instead\n *     mquery().w(1) // w is alias of writeConcern\n *\n * @method writeConcern\n * @memberOf Query\n * @instance\n * @param {String|number|object} concern 0 for fire-and-forget, 1 for acknowledged by one server, 'majority' for majority of the replica set, or [any of the more advanced options](https://docs.mongodb.com/manual/reference/write-concern/#w-option).\n * @see mongodb https://docs.mongodb.com/manual/reference/write-concern/#w-option\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.writeConcern = Query.prototype.w = function writeConcern(concern) {\n  if ('object' === typeof concern) {\n    if ('undefined' !== typeof concern.j) this.options.j = concern.j;\n    if ('undefined' !== typeof concern.w) this.options.w = concern.w;\n    if ('undefined' !== typeof concern.wtimeout) this.options.wtimeout = concern.wtimeout;\n  } else {\n    this.options.w = 'm' === concern ? 'majority' : concern;\n  }\n  return this;\n};\n\n/**\n * Specifies a time limit, in milliseconds, for the write concern.\n * If `ms > 1`, it is maximum amount of time to wait for this write\n * to propagate through the replica set before this operation fails.\n * The default is `0`, which means no timeout.\n *\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to `wtimeout` value if it is specified in writeConcern\n *\n * #### Example:\n *\n *     mquery().w(2).j(true).wtimeout(2000)\n *\n * @method wtimeout\n * @memberOf Query\n * @instance\n * @param {number} ms number of milliseconds to wait\n * @see mongodb https://docs.mongodb.com/manual/reference/write-concern/#wtimeout\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.wtimeout = Query.prototype.wTimeout = function wtimeout(ms) {\n  this.options.wtimeout = ms;\n  return this;\n};\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function(source) {\n  if (!source)\n    return this;\n\n  if (!Query.canMerge(source))\n    throw new TypeError('Invalid argument. Expected instanceof mquery or plain object');\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      utils.merge(this._conditions, source._conditions);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options);\n    }\n\n    if (source._updateDoc) {\n      this._updateDoc || (this._updateDoc = {});\n      utils.mergeClone(this._updateDoc, source._updateDoc);\n    }\n\n    if (source._distinctDoc) {\n      this._distinctDoc = source._distinctDoc;\n    }\n\n    return this;\n  }\n\n  // plain object\n  utils.merge(this._conditions, source);\n\n  return this;\n};\n\n/**\n * Finds documents.\n *\n * #### Example:\n *\n *     query.find()\n *     await query.find()\n *     await query.find({ name: 'Burning Lights' })\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function(criteria) {\n  this.op = 'find';\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `find` Query\n * @returns the result\n */\nQuery.prototype._find = async function _find() {\n  const conds = this._conditions;\n  const options = this._optionsForExec();\n\n  if (this.$useProjection) {\n    options.projection = this._fieldsForExec();\n  } else {\n    options.fields = this._fieldsForExec();\n  }\n\n  debug('_find', this._collection.collectionName, conds, options);\n\n  return this._collection.find(conds, options);\n};\n\n/**\n * Returns the query cursor\n *\n * #### Examples:\n *\n *     query.find().cursor();\n *     query.cursor({ name: 'Burning Lights' });\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Object} cursor\n * @api public\n */\n\nQuery.prototype.cursor = function cursor(criteria) {\n  if (this.op) {\n    if (this.op !== 'find') {\n      throw new TypeError('.cursor only support .find method');\n    }\n  } else {\n    this.find(criteria);\n  }\n\n  const conds = this._conditions;\n  const options = this._optionsForExec();\n\n  if (this.$useProjection) {\n    options.projection = this._fieldsForExec();\n  } else {\n    options.fields = this._fieldsForExec();\n  }\n\n  debug('findCursor', this._collection.collectionName, conds, options);\n  return this._collection.findCursor(conds, options);\n};\n\n/**\n * Executes the query as a findOne() operation.\n *\n * #### Example:\n *\n *     query.findOne().where('name', /^Burning/);\n *\n *     query.findOne({ name: /^Burning/ })\n *\n *     await query.findOne({ name: /^Burning/ }); // executes\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOne = function(criteria) {\n  this.op = 'findOne';\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `findOne` Query\n * @returns the results\n */\nQuery.prototype._findOne = async function _findOne() {\n  const conds = this._conditions;\n  const options = this._optionsForExec();\n\n  if (this.$useProjection) {\n    options.projection = this._fieldsForExec();\n  } else {\n    options.fields = this._fieldsForExec();\n  }\n\n  debug('findOne', this._collection.collectionName, conds, options);\n\n  return this._collection.findOne(conds, options);\n};\n\n/**\n * Exectues the query as a count() operation.\n *\n * #### Example:\n *\n *     query.count().where('color', 'black').exec();\n *\n *     query.count({ color: 'black' })\n *\n *     await query.count({ color: 'black' });\n *\n *     const doc = await query.where('color', 'black').count();\n *     console.log('there are %d kittens', count);\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count\n * @api public\n */\n\nQuery.prototype.count = function(criteria) {\n  this.op = 'count';\n  this._validate();\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `count` Query\n * @returns the results\n */\nQuery.prototype._count = async function _count() {\n  const conds = this._conditions,\n      options = this._optionsForExec();\n\n  debug('count', this._collection.collectionName, conds, options);\n\n  return this._collection.count(conds, options);\n};\n\n/**\n * Declares or executes a distinct() operation.\n *\n * #### Example:\n *\n *     await distinct(criteria, field)\n *     distinct(criteria, field)\n *     await distinct(field)\n *     distinct(field)\n *     await distinct()\n *     distinct()\n *\n * @param {Object|Query} [criteria]\n * @param {String} [field]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct\n * @api public\n */\n\nQuery.prototype.distinct = function(criteria, field) {\n  this.op = 'distinct';\n  this._validate();\n\n  if (!field && typeof criteria === 'string') {\n    field = criteria;\n    criteria = undefined;\n  }\n\n  if ('string' == typeof field) {\n    this._distinctDoc = field;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `distinct` Query\n * @returns the results\n */\nQuery.prototype._distinct = async function _distinct() {\n  if (!this._distinctDoc) {\n    throw new Error('No value for `distinct` has been declared');\n  }\n\n  const conds = this._conditions,\n      options = this._optionsForExec();\n\n  debug('distinct', this._collection.collectionName, conds, options);\n\n  return this._collection.distinct(this._distinctDoc, conds, options);\n};\n\n/**\n * Declare and/or execute this query as an `updateMany()` operation. This function will update _all_ documents that match\n * `criteria`, rather than just the first one.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * #### Example:\n *\n *     // Update every document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateMany = function updateMany(criteria, doc, options) {\n  if (arguments.length === 1) {\n    doc = criteria;\n    criteria = options = undefined;\n  }\n\n  return _update(this, 'updateMany', criteria, doc, options);\n};\n\n/**\n * Executes a `updateMany` Query\n * @returns the results\n */\nQuery.prototype._updateMany = async function() {\n  return _updateExec(this, 'updateMany');\n};\n\n/**\n * Declare and/or execute this query as an `updateOne()` operation. This function will _always_ update just one document,\n * regardless of the `multi` option.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * #### Example:\n *\n *     // Update the first document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateOne = function updateOne(criteria, doc, options) {\n  if (arguments.length === 1) {\n    doc = criteria;\n    criteria = options = undefined;\n  }\n\n  return _update(this, 'updateOne', criteria, doc, options);\n};\n\n/**\n * Executes a `updateOne` Query\n * @returns the results\n */\nQuery.prototype._updateOne = async function() {\n  return _updateExec(this, 'updateOne');\n};\n\n/**\n * Declare and/or execute this query as an `replaceOne()` operation. Similar\n * to `updateOne()`, except `replaceOne()` is not allowed to use atomic\n * modifiers (`$set`, `$push`, etc.). Calling `replaceOne()` will always\n * replace the existing doc.\n *\n * #### Example:\n *\n *     // Replace the document with `_id` 1 with `{ _id: 1, year: 2017 }`\n *     mquery().replaceOne({ _id: 1 }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.replaceOne = function replaceOne(criteria, doc, options) {\n  if (arguments.length === 1) {\n    doc = criteria;\n    criteria = options = undefined;\n  }\n\n  this.setOptions({ overwrite: true });\n  return _update(this, 'replaceOne', criteria, doc, options);\n};\n\n/**\n * Executes a `replaceOne` Query\n * @returns the results\n */\nQuery.prototype._replaceOne = async function() {\n  return _updateExec(this, 'replaceOne');\n};\n\n/*!\n * Internal helper for updateMany, updateOne\n */\n\nfunction _update(query, op, criteria, doc, options) {\n  query.op = op;\n\n  if (Query.canMerge(criteria)) {\n    query.merge(criteria);\n  }\n\n  if (doc) {\n    query._mergeUpdate(doc);\n  }\n\n  if (utils.isObject(options)) {\n    // { overwrite: true }\n    query.setOptions(options);\n  }\n\n  return query;\n}\n\n/**\n * Helper for de-duplicating \"update*\" functions\n * @param {Query} query The Query Object (replacement for \"this\")\n * @param {String} op The Operation to be done\n * @returns the results\n */\nasync function _updateExec(query, op) {\n  const options = query._optionsForExec();\n\n  const criteria = query._conditions;\n  const doc = query._updateForExec();\n\n  debug('update', query._collection.collectionName, criteria, doc, options);\n\n  return query._collection[op](criteria, doc, options);\n}\n\n/**\n * Declare and/or execute this query as a `deleteOne()` operation.\n *\n * #### Example:\n *\n *     await mquery(collection).deleteOne({ artist: 'Anne Murray' })\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteOne = function(criteria) {\n  this.op = 'deleteOne';\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `deleteOne` Query\n * @returns the results\n */\nQuery.prototype._deleteOne = async function() {\n  const options = this._optionsForExec();\n  delete options.justOne;\n\n  const conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n\n  return this._collection.deleteOne(conds, options);\n};\n\n/**\n * Declare and/or execute this query as a `deleteMany()` operation. Always deletes\n * _every_ document that matches `criteria`.\n *\n * #### Example:\n *\n *     await mquery(collection).deleteMany({ artist: 'Anne Murray' })\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteMany = function(criteria) {\n  this.op = 'deleteMany';\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  return this;\n};\n\n/**\n * Executes a `deleteMany` Query\n * @returns the results\n */\nQuery.prototype._deleteMany = async function() {\n  const options = this._optionsForExec();\n  delete options.justOne;\n\n  const conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n\n  return this._collection.deleteMany(conds, options);\n};\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any).\n *\n * #### Available options\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * #### Examples:\n *\n *     await query.findOneAndUpdate(conditions, update, options) // executes\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     await query.findOneAndUpdate(conditions, update) // executes\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     await query.findOneAndUpdate(update)             // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     await query.findOneAndUpdate()                     // executes\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @param {Object|Query} [query]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function(criteria, doc, options) {\n  this.op = 'findOneAndUpdate';\n  this._validate();\n\n  if (arguments.length === 1) {\n    doc = criteria;\n    criteria = options = undefined;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options && this.setOptions(options);\n\n  return this;\n};\n\n/**\n * Executes a `findOneAndUpdate` Query\n * @returns the results\n */\nQuery.prototype._findOneAndUpdate = async function() {\n  const conds = this._conditions;\n  const update = this._updateForExec();\n  const options = this._optionsForExec();\n\n  return this._collection.findOneAndUpdate(conds, update, options);\n};\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command.\n *\n * Finds a matching document, removes it, returning the found document (if any).\n *\n * #### Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * #### Examples:\n *\n *     await A.where().findOneAndRemove(conditions, options) // executes\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     await A.where().findOneAndRemove(conditions) // executes\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     await A.where().findOneAndRemove()   // executes\n *     A.where().findOneAndRemove()           // returns Query\n *     A.where().findOneAndDelete()           // alias of .findOneAndRemove()\n *\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = Query.prototype.findOneAndDelete = function(conditions, options) {\n  this.op = 'findOneAndRemove';\n  this._validate();\n\n  // apply conditions\n  if (Query.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  // apply options\n  options && this.setOptions(options);\n\n  return this;\n};\n\n/**\n * Executes a `findOneAndRemove` Query\n * @returns the results\n */\nQuery.prototype._findOneAndRemove = async function() {\n  const options = this._optionsForExec();\n  const conds = this._conditions;\n\n  return this._collection.findOneAndDelete(conds, options);\n};\n\n/**\n * Add trace function that gets called when the query is executed.\n * The function will be called with (method, queryInfo, query) and\n * should return a callback function which will be called\n * with (err, result, millis) when the query is complete.\n *\n * queryInfo is an object containing: {\n *   collectionName: <name of the collection>,\n *   conditions: <query criteria>,\n *   options: <comment, fields, readPreference, etc>,\n *   doc: [document to update, if applicable]\n * }\n *\n * NOTE: Does not trace stream queries.\n *\n * @param {Function} traceFunction\n * @return {Query} this\n * @api public\n */\nQuery.prototype.setTraceFunction = function(traceFunction) {\n  this._traceFunction = traceFunction;\n  return this;\n};\n\n/**\n * Executes the query\n *\n * #### Examples:\n *\n *     query.exec();\n *     await query.exec();\n *     query.exec('update');\n *     await query.exec('find');\n *\n * @param {String|Function} [operation]\n * @api public\n */\n\nQuery.prototype.exec = async function exec(op) {\n  if (typeof op === 'string') {\n    this.op = op;\n  }\n\n  assert.ok(this.op, 'Missing query type: (find, etc)');\n\n  const fnName = '_' + this.op;\n\n  // better error, because default would list it as \"this[fnName] is not a function\"\n  if (typeof this[fnName] !== 'function') {\n    throw new TypeError(`this[${fnName}] is not a function`);\n  }\n\n  return this[fnName]();\n};\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = async function(res, rej) {\n  return this.exec().then(res, rej);\n};\n\n/**\n * Returns a cursor for the given `find` query.\n *\n * @throws Error if operation is not a find\n * @returns {Cursor} MongoDB driver cursor\n */\n\nQuery.prototype.cursor = function() {\n  if ('find' != this.op)\n    throw new Error('cursor() is only available for find');\n\n  const conds = this._conditions;\n\n  const options = this._optionsForExec();\n  if (this.$useProjection) {\n    options.projection = this._fieldsForExec();\n  } else {\n    options.fields = this._fieldsForExec();\n  }\n\n  debug('cursor', this._collection.collectionName, conds, options);\n\n  return this._collection.findCursor(conds, options);\n};\n\n/**\n * Determines if field selection has been made.\n *\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selected = function selected() {\n  return !!(this._fields && Object.keys(this._fields).length > 0);\n};\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively() // false\n *     query.select('name')\n *     query.selectedInclusively() // true\n *     query.selectedExlusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively() {\n  if (!this._fields) return false;\n\n  const keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (0 === this._fields[key]) return false;\n    if (this._fields[key] &&\n        typeof this._fields[key] === 'object' &&\n        this._fields[key].$meta) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExlusively() // false\n *     query.select('-name')\n *     query.selectedExlusively() // true\n *     query.selectedInclusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively() {\n  if (!this._fields) return false;\n\n  const keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (0 === this._fields[key]) return true;\n  }\n\n  return false;\n};\n\n/**\n * Merges `doc` with the current update object.\n *\n * @param {Object} doc\n */\n\nQuery.prototype._mergeUpdate = function(doc) {\n  if (!this._updateDoc) this._updateDoc = {};\n  if (doc instanceof Query) {\n    if (doc._updateDoc) {\n      utils.mergeClone(this._updateDoc, doc._updateDoc);\n    }\n  } else {\n    utils.mergeClone(this._updateDoc, doc);\n  }\n};\n\n/**\n * Returns default options.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._optionsForExec = function() {\n  const options = utils.clone(this.options);\n  return options;\n};\n\n/**\n * Returns fields selection for this query.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._fieldsForExec = function() {\n  return utils.clone(this._fields);\n};\n\n/**\n * Return an update document with corrected $set operations.\n *\n * @api private\n */\n\nQuery.prototype._updateForExec = function() {\n  const update = utils.clone(this._updateDoc);\n  const ops = utils.keys(update);\n  const ret = {};\n\n  for (const op of ops) {\n    if (this.options.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  this._compiledUpdate = ret;\n  return ret;\n};\n\n/**\n * Make sure _path is set.\n *\n * @parmam {String} method\n */\n\nQuery.prototype._ensurePath = function(method) {\n  if (!this._path) {\n    const msg = method + '() must be used after where() '\n                     + 'when called with these arguments';\n    throw new Error(msg);\n  }\n};\n\n/*!\n * Permissions\n */\n\nQuery.permissions = require('./permissions');\n\nQuery._isPermitted = function(a, b) {\n  const denied = Query.permissions[b];\n  if (!denied) return true;\n  return true !== denied[a];\n};\n\nQuery.prototype._validate = function(action) {\n  let fail;\n  let validator;\n\n  if (undefined === action) {\n\n    validator = Query.permissions[this.op];\n    if ('function' != typeof validator) return true;\n\n    fail = validator(this);\n\n  } else if (!Query._isPermitted(action, this.op)) {\n    fail = action;\n  }\n\n  if (fail) {\n    throw new Error(fail + ' cannot be used with ' + this.op);\n  }\n};\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @param {Object} conds\n * @return {Boolean}\n */\n\nQuery.canMerge = function(conds) {\n  return conds instanceof Query || utils.isObject(conds);\n};\n\n/**\n * Set a trace function that will get called whenever a\n * query is executed.\n *\n * See `setTraceFunction()` for details.\n *\n * @param {Object} conds\n * @return {Boolean}\n */\nQuery.setGlobalTraceFunction = function(traceFunction) {\n  Query.traceFunction = traceFunction;\n};\n\n/*!\n * Exports.\n */\n\nQuery.utils = utils;\nQuery.env = require('./env');\nQuery.Collection = require('./collection');\nQuery.BaseCollection = require('./collection/collection');\nmodule.exports = exports = Query;\n\n// TODO\n// test utils\n", "'use strict';\n\n/**\n * Convert a string or array into a projection object, retaining all\n * `-` and `+` paths.\n */\n\nmodule.exports = function parseProjection(v, retainMinusPaths) {\n  const type = typeof v;\n\n  if (type === 'string') {\n    v = v.split(/\\s+/);\n  }\n  if (!Array.isArray(v) && Object.prototype.toString.call(v) !== '[object Arguments]') {\n    return v;\n  }\n\n  const len = v.length;\n  const ret = {};\n  for (let i = 0; i < len; ++i) {\n    let field = v[i];\n    if (!field) {\n      continue;\n    }\n    const include = '-' == field[0] ? 0 : 1;\n    if (!retainMinusPaths && include === 0) {\n      field = field.substring(1);\n    }\n    ret[field] = include;\n  }\n\n  return ret;\n};\n", "'use strict';\n\n/**\n * MongoDB throws an error if there's unused array filters. That is, if `options.arrayFilters` defines\n * a filter, but none of the `update` keys use it. This should be enough to filter out all unused array\n * filters.\n */\n\nmodule.exports = function removeUnusedArrayFilters(update, arrayFilters) {\n  const updateKeys = Object.keys(update).\n    map(key => Object.keys(update[key])).\n    reduce((cur, arr) => cur.concat(arr), []);\n  return arrayFilters.filter(obj => {\n    return _checkSingleFilterKey(obj, updateKeys);\n  });\n};\n\nfunction _checkSingleFilterKey(arrayFilter, updateKeys) {\n  const firstKey = Object.keys(arrayFilter)[0];\n\n  if (firstKey === '$and' || firstKey === '$or') {\n    if (!Array.isArray(arrayFilter[firstKey])) {\n      return false;\n    }\n    return arrayFilter[firstKey].find(filter => _checkSingleFilterKey(filter, updateKeys)) != null;\n  }\n\n  const firstDot = firstKey.indexOf('.');\n  const arrayFilterKey = firstDot === -1 ? firstKey : firstKey.slice(0, firstDot);\n\n  return updateKeys.find(key => key.includes('$[' + arrayFilterKey + ']')) != null;\n}\n", "'use strict';\n\nconst hasDollarKeys = require('./hasDollarKeys');\nconst { trustedSymbol } = require('./trusted');\n\nmodule.exports = function sanitizeFilter(filter) {\n  if (filter == null || typeof filter !== 'object') {\n    return filter;\n  }\n  if (Array.isArray(filter)) {\n    for (const subfilter of filter) {\n      sanitizeFilter(subfilter);\n    }\n    return filter;\n  }\n\n  const filterKeys = Object.keys(filter);\n  for (const key of filterKeys) {\n    const value = filter[key];\n    if (value != null && value[trustedSymbol]) {\n      continue;\n    }\n    if (key === '$and' || key === '$or') {\n      sanitizeFilter(value);\n      continue;\n    }\n\n    if (hasDollarKeys(value)) {\n      const keys = Object.keys(value);\n      if (keys.length === 1 && keys[0] === '$eq') {\n        continue;\n      }\n      filter[key] = { $eq: filter[key] };\n    }\n  }\n\n  return filter;\n};\n", "'use strict';\n\nmodule.exports = function sanitizeProjection(projection) {\n  if (projection == null) {\n    return;\n  }\n\n  const keys = Object.keys(projection);\n  for (let i = 0; i < keys.length; ++i) {\n    if (typeof projection[keys[i]] === 'string') {\n      projection[keys[i]] = 1;\n    }\n  }\n};\n", "'use strict';\n\nconst isExclusive = require('../projection/isExclusive');\nconst isInclusive = require('../projection/isInclusive');\n\n/*!\n * ignore\n */\n\nmodule.exports = function selectPopulatedFields(fields, userProvidedFields, populateOptions) {\n  if (populateOptions == null) {\n    return;\n  }\n\n  const paths = Object.keys(populateOptions);\n  userProvidedFields = userProvidedFields || {};\n  if (isInclusive(fields)) {\n    for (const path of paths) {\n      if (!isPathInFields(userProvidedFields, path)) {\n        fields[path] = 1;\n      } else if (userProvidedFields[path] === 0) {\n        delete fields[path];\n      }\n    }\n  } else if (isExclusive(fields)) {\n    for (const path of paths) {\n      if (userProvidedFields[path] == null) {\n        delete fields[path];\n      }\n    }\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction isPathInFields(userProvidedFields, path) {\n  const pieces = path.split('.');\n  const len = pieces.length;\n  let cur = pieces[0];\n  for (let i = 1; i < len; ++i) {\n    if (userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null) {\n      return true;\n    }\n    cur += '.' + pieces[i];\n  }\n  return userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null;\n}\n", "'use strict';\nconst modifiedPaths = require('./common').modifiedPaths;\nconst get = require('./get');\n\n/**\n * Applies defaults to update and findOneAndUpdate operations.\n *\n * @param {Object} filter\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method setDefaultsOnInsert\n * @api private\n */\n\nmodule.exports = function(filter, schema, castedDoc, options) {\n  options = options || {};\n\n  const shouldSetDefaultsOnInsert =\n    options.setDefaultsOnInsert != null ?\n      options.setDefaultsOnInsert :\n      schema.base.options.setDefaultsOnInsert;\n\n  if (!options.upsert || shouldSetDefaultsOnInsert === false) {\n    return castedDoc;\n  }\n\n  const keys = Object.keys(castedDoc || {});\n  const updatedKeys = {};\n  const updatedValues = {};\n  const numKeys = keys.length;\n  const modified = {};\n\n  let hasDollarUpdate = false;\n\n  for (let i = 0; i < numKeys; ++i) {\n    if (keys[i].startsWith('$')) {\n      modifiedPaths(castedDoc[keys[i]], '', modified);\n      hasDollarUpdate = true;\n    }\n  }\n\n  if (!hasDollarUpdate) {\n    modifiedPaths(castedDoc, '', modified);\n  }\n\n  const paths = Object.keys(filter);\n  const numPaths = paths.length;\n  for (let i = 0; i < numPaths; ++i) {\n    const path = paths[i];\n    const condition = filter[path];\n    if (condition && typeof condition === 'object') {\n      const conditionKeys = Object.keys(condition);\n      const numConditionKeys = conditionKeys.length;\n      let hasDollarKey = false;\n      for (let j = 0; j < numConditionKeys; ++j) {\n        if (conditionKeys[j].startsWith('$')) {\n          hasDollarKey = true;\n          break;\n        }\n      }\n      if (hasDollarKey) {\n        continue;\n      }\n    }\n    updatedKeys[path] = true;\n    modified[path] = true;\n  }\n\n  if (options && options.overwrite && !hasDollarUpdate) {\n    // Defaults will be set later, since we're overwriting we'll cast\n    // the whole update to a document\n    return castedDoc;\n  }\n\n  schema.eachPath(function(path, schemaType) {\n    // Skip single nested paths if underneath a map\n    if (schemaType.path === '_id' && schemaType.options.auto) {\n      return;\n    }\n    const def = schemaType.getDefault(null, true);\n    if (isModified(modified, path)) {\n      return;\n    }\n    if (typeof def === 'undefined') {\n      return;\n    }\n    if (schemaType.splitPath().includes('$*')) {\n      // Skip defaults underneath maps. We should never do `$setOnInsert` on a path with `$*`\n      return;\n    }\n\n    castedDoc = castedDoc || {};\n    castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n    if (get(castedDoc, path) == null) {\n      castedDoc.$setOnInsert[path] = def;\n    }\n    updatedValues[path] = def;\n  });\n\n  return castedDoc;\n};\n\nfunction isModified(modified, path) {\n  if (modified[path]) {\n    return true;\n  }\n\n  // Is any parent path of `path` modified?\n  const sp = path.split('.');\n  let cur = sp[0];\n  for (let i = 1; i < sp.length; ++i) {\n    if (modified[cur]) {\n      return true;\n    }\n    cur += '.' + sp[i];\n  }\n\n  // Is any child of `path` modified?\n  const modifiedKeys = Object.keys(modified);\n  if (modifiedKeys.length) {\n    const parentPath = path + '.';\n\n    for (const modifiedPath of modifiedKeys) {\n      if (modifiedPath.slice(0, path.length + 1) === parentPath) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ValidationError = require('../error/validation');\nconst cleanPositionalOperators = require('./schema/cleanPositionalOperators');\nconst flatten = require('./common').flatten;\nconst modifiedPaths = require('./common').modifiedPaths;\n\n/**\n * Applies validators and defaults to update and findOneAndUpdate operations,\n * specifically passing a null doc as `this` to validators and defaults\n *\n * @param {Query} query\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method runValidatorsOnUpdate\n * @api private\n */\n\nmodule.exports = function(query, schema, castedDoc, options, callback) {\n  const keys = Object.keys(castedDoc || {});\n  let updatedKeys = {};\n  let updatedValues = {};\n  const isPull = {};\n  const arrayAtomicUpdates = {};\n  const numKeys = keys.length;\n  let hasDollarUpdate = false;\n  const modified = {};\n  let currentUpdate;\n  let key;\n  let i;\n\n  for (i = 0; i < numKeys; ++i) {\n    if (keys[i].startsWith('$')) {\n      hasDollarUpdate = true;\n      if (keys[i] === '$push' || keys[i] === '$addToSet') {\n        const _keys = Object.keys(castedDoc[keys[i]]);\n        for (let ii = 0; ii < _keys.length; ++ii) {\n          currentUpdate = castedDoc[keys[i]][_keys[ii]];\n          if (currentUpdate && currentUpdate.$each) {\n            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).\n              concat(currentUpdate.$each);\n          } else {\n            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).\n              concat([currentUpdate]);\n          }\n        }\n        continue;\n      }\n      modifiedPaths(castedDoc[keys[i]], '', modified);\n      const flat = flatten(castedDoc[keys[i]], null, null, schema);\n      const paths = Object.keys(flat);\n      const numPaths = paths.length;\n      for (let j = 0; j < numPaths; ++j) {\n        const updatedPath = cleanPositionalOperators(paths[j]);\n        key = keys[i];\n        // With `$pull` we might flatten `$in`. Skip stuff nested under `$in`\n        // for the rest of the logic, it will get handled later.\n        if (updatedPath.includes('$')) {\n          continue;\n        }\n        if (key === '$set' || key === '$setOnInsert' ||\n            key === '$pull' || key === '$pullAll') {\n          updatedValues[updatedPath] = flat[paths[j]];\n          isPull[updatedPath] = key === '$pull' || key === '$pullAll';\n        } else if (key === '$unset') {\n          updatedValues[updatedPath] = undefined;\n        }\n        updatedKeys[updatedPath] = true;\n      }\n    }\n  }\n\n  if (!hasDollarUpdate) {\n    modifiedPaths(castedDoc, '', modified);\n    updatedValues = flatten(castedDoc, null, null, schema);\n    updatedKeys = Object.keys(updatedValues);\n  }\n\n  const updates = Object.keys(updatedValues);\n  const numUpdates = updates.length;\n  const validatorsToExecute = [];\n  const validationErrors = [];\n\n  const alreadyValidated = [];\n\n  const context = query;\n  function iter(i, v) {\n    const schemaPath = schema._getSchema(updates[i]);\n    if (schemaPath == null) {\n      return;\n    }\n    if (schemaPath.instance === 'Mixed' && schemaPath.path !== updates[i]) {\n      return;\n    }\n\n    if (v && Array.isArray(v.$in)) {\n      v.$in.forEach((v, i) => {\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(\n            v,\n            function(err) {\n              if (err) {\n                err.path = updates[i] + '.$in.' + i;\n                validationErrors.push(err);\n              }\n              callback(null);\n            },\n            context,\n            { updateValidator: true });\n        });\n      });\n    } else {\n      if (isPull[updates[i]] &&\n          schemaPath.$isMongooseArray) {\n        return;\n      }\n\n      if (schemaPath.$isMongooseDocumentArrayElement && v != null && v.$__ != null) {\n        alreadyValidated.push(updates[i]);\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(v, function(err) {\n            if (err) {\n              if (err.errors) {\n                for (const key of Object.keys(err.errors)) {\n                  const _err = err.errors[key];\n                  _err.path = updates[i] + '.' + key;\n                  validationErrors.push(_err);\n                }\n              } else {\n                err.path = updates[i];\n                validationErrors.push(err);\n              }\n            }\n\n            return callback(null);\n          }, context, { updateValidator: true });\n        });\n      } else {\n        validatorsToExecute.push(function(callback) {\n          for (const path of alreadyValidated) {\n            if (updates[i].startsWith(path + '.')) {\n              return callback(null);\n            }\n          }\n\n          schemaPath.doValidate(v, function(err) {\n            if (schemaPath.schema != null &&\n                schemaPath.schema.options.storeSubdocValidationError === false &&\n                err instanceof ValidationError) {\n              return callback(null);\n            }\n\n            if (err) {\n              err.path = updates[i];\n              validationErrors.push(err);\n            }\n            callback(null);\n          }, context, { updateValidator: true });\n        });\n      }\n    }\n  }\n  for (i = 0; i < numUpdates; ++i) {\n    iter(i, updatedValues[updates[i]]);\n  }\n\n  const arrayUpdates = Object.keys(arrayAtomicUpdates);\n  for (const arrayUpdate of arrayUpdates) {\n    let schemaPath = schema._getSchema(arrayUpdate);\n    if (schemaPath && schemaPath.$isMongooseDocumentArray) {\n      validatorsToExecute.push(function(callback) {\n        schemaPath.doValidate(\n          arrayAtomicUpdates[arrayUpdate],\n          getValidationCallback(arrayUpdate, validationErrors, callback),\n          options && options.context === 'query' ? query : null);\n      });\n    } else {\n      schemaPath = schema._getSchema(arrayUpdate + '.0');\n      for (const atomicUpdate of arrayAtomicUpdates[arrayUpdate]) {\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(\n            atomicUpdate,\n            getValidationCallback(arrayUpdate, validationErrors, callback),\n            options && options.context === 'query' ? query : null,\n            { updateValidator: true });\n        });\n      }\n    }\n  }\n\n  if (callback != null) {\n    let numValidators = validatorsToExecute.length;\n    if (numValidators === 0) {\n      return _done(callback);\n    }\n    for (const validator of validatorsToExecute) {\n      validator(function() {\n        if (--numValidators <= 0) {\n          _done(callback);\n        }\n      });\n    }\n\n    return;\n  }\n\n  return function(callback) {\n    let numValidators = validatorsToExecute.length;\n    if (numValidators === 0) {\n      return _done(callback);\n    }\n    for (const validator of validatorsToExecute) {\n      validator(function() {\n        if (--numValidators <= 0) {\n          _done(callback);\n        }\n      });\n    }\n  };\n\n  function _done(callback) {\n    if (validationErrors.length) {\n      const err = new ValidationError(null);\n\n      for (const validationError of validationErrors) {\n        err.addError(validationError.path, validationError);\n      }\n\n      return callback(err);\n    }\n    callback(null);\n  }\n\n  function getValidationCallback(arrayUpdate, validationErrors, callback) {\n    return function(err) {\n      if (err) {\n        err.path = arrayUpdate;\n        validationErrors.push(err);\n      }\n      callback(null);\n    };\n  }\n};\n\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('./error/cast');\nconst DocumentNotFoundError = require('./error/notFound');\nconst Kareem = require('kareem');\nconst MongooseError = require('./error/mongooseError');\nconst ObjectParameterError = require('./error/objectParameter');\nconst QueryCursor = require('./cursor/QueryCursor');\nconst ValidationError = require('./error/validation');\nconst { applyGlobalMaxTimeMS, applyGlobalDiskUse } = require('./helpers/query/applyGlobalOption');\nconst handleReadPreferenceAliases = require('./helpers/query/handleReadPreferenceAliases');\nconst applyWriteConcern = require('./helpers/schema/applyWriteConcern');\nconst cast = require('./cast');\nconst castArrayFilters = require('./helpers/update/castArrayFilters');\nconst castNumber = require('./cast/number');\nconst castUpdate = require('./helpers/query/castUpdate');\nconst clone = require('./helpers/clone');\nconst completeMany = require('./helpers/query/completeMany');\nconst getDiscriminatorByValue = require('./helpers/discriminator/getDiscriminatorByValue');\nconst hasDollarKeys = require('./helpers/query/hasDollarKeys');\nconst helpers = require('./queryhelpers');\nconst immediate = require('./helpers/immediate');\nconst internalToObjectOptions = require('./options').internalToObjectOptions;\nconst isExclusive = require('./helpers/projection/isExclusive');\nconst isInclusive = require('./helpers/projection/isInclusive');\nconst isPathSelectedInclusive = require('./helpers/projection/isPathSelectedInclusive');\nconst isSubpath = require('./helpers/projection/isSubpath');\nconst mpath = require('mpath');\nconst mquery = require('mquery');\nconst parseProjection = require('./helpers/projection/parseProjection');\nconst removeUnusedArrayFilters = require('./helpers/update/removeUnusedArrayFilters');\nconst sanitizeFilter = require('./helpers/query/sanitizeFilter');\nconst sanitizeProjection = require('./helpers/query/sanitizeProjection');\nconst selectPopulatedFields = require('./helpers/query/selectPopulatedFields');\nconst setDefaultsOnInsert = require('./helpers/setDefaultsOnInsert');\nconst updateValidators = require('./helpers/updateValidators');\nconst util = require('util');\nconst utils = require('./utils');\nconst validOps = require('./helpers/query/validOps');\n\nconst queryOptionMethods = new Set([\n  'allowDiskUse',\n  'batchSize',\n  'collation',\n  'comment',\n  'explain',\n  'hint',\n  'j',\n  'lean',\n  'limit',\n  'maxTimeMS',\n  'populate',\n  'projection',\n  'read',\n  'select',\n  'skip',\n  'slice',\n  'sort',\n  'tailable',\n  'w',\n  'writeConcern',\n  'wtimeout'\n]);\n\n/**\n * Query constructor used for building queries. You do not need\n * to instantiate a `Query` directly. Instead use Model functions like\n * [`Model.find()`](https://mongoosejs.com/docs/api/model.html#Model.find()).\n *\n * #### Example:\n *\n *     const query = MyModel.find(); // `query` is an instance of `Query`\n *     query.setOptions({ lean : true });\n *     query.collection(MyModel.collection);\n *     query.where('age').gte(21).exec(callback);\n *\n *     // You can instantiate a query directly. There is no need to do\n *     // this unless you're an advanced user with a very good reason to.\n *     const query = new mongoose.Query();\n *\n * @param {Object} [options]\n * @param {Object} [model]\n * @param {Object} [conditions]\n * @param {Object} [collection] Mongoose collection\n * @api public\n */\n\nfunction Query(conditions, options, model, collection) {\n  // this stuff is for dealing with custom queries created by #toConstructor\n  if (!this._mongooseOptions) {\n    this._mongooseOptions = {};\n  }\n  options = options || {};\n\n  this._transforms = [];\n  this._hooks = new Kareem();\n  this._executionStack = null;\n\n  // this is the case where we have a CustomQuery, we need to check if we got\n  // options passed in, and if we did, merge them in\n  const keys = Object.keys(options);\n  for (const key of keys) {\n    this._mongooseOptions[key] = options[key];\n  }\n\n  if (collection) {\n    this.mongooseCollection = collection;\n  }\n\n  if (model) {\n    this.model = model;\n    this.schema = model.schema;\n  }\n\n  // this is needed because map reduce returns a model that can be queried, but\n  // all of the queries on said model should be lean\n  if (this.model && this.model._mapreduce) {\n    this.lean();\n  }\n\n  // inherit mquery\n  mquery.call(this, null, options);\n  if (collection) {\n    this.collection(collection);\n  }\n\n  if (conditions) {\n    this.find(conditions);\n  }\n\n  this.options = this.options || {};\n\n  // For gh-6880. mquery still needs to support `fields` by default for old\n  // versions of MongoDB\n  this.$useProjection = true;\n\n  const collation = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.collation || null;\n  if (collation != null) {\n    this.options.collation = collation;\n  }\n}\n\n/*!\n * inherit mquery\n */\n\nQuery.prototype = new mquery();\nQuery.prototype.constructor = Query;\nQuery.base = mquery.prototype;\n\n/*!\n * Overwrite mquery's `_distinct`, because Mongoose uses that name\n * to store the field to apply distinct on.\n */\n\nObject.defineProperty(Query.prototype, '_distinct', {\n  configurable: true,\n  writable: true,\n  enumerable: true,\n  value: undefined\n});\n\n/**\n * Flag to opt out of using `$geoWithin`.\n *\n * ```javascript\n * mongoose.Query.use$geoWithin = false;\n * ```\n *\n * MongoDB 2.4 deprecated the use of `$within`, replacing it with `$geoWithin`. Mongoose uses `$geoWithin` by default (which is 100% backward compatible with `$within`). If you are running an older version of MongoDB, set this flag to `false` so your `within()` queries continue to work.\n *\n * @see geoWithin https://www.mongodb.com/docs/manual/reference/operator/geoWithin/\n * @default true\n * @property use$geoWithin\n * @memberOf Query\n * @static\n * @api public\n */\n\nQuery.use$geoWithin = mquery.use$geoWithin;\n\n/**\n * Converts this query to a customized, reusable query constructor with all arguments and options retained.\n *\n * #### Example:\n *\n *     // Create a query for adventure movies and read from the primary\n *     // node in the replica-set unless it is down, in which case we'll\n *     // read from a secondary node.\n *     const query = Movie.find({ tags: 'adventure' }).read('primaryPreferred');\n *\n *     // create a custom Query constructor based off these settings\n *     const Adventure = query.toConstructor();\n *\n *     // further narrow down our query results while still using the previous settings\n *     await Adventure().where({ name: /^Life/ }).exec();\n *\n *     // since Adventure is a stand-alone constructor we can also add our own\n *     // helper methods and getters without impacting global queries\n *     Adventure.prototype.startsWith = function (prefix) {\n *       this.where({ name: new RegExp('^' + prefix) })\n *       return this;\n *     }\n *     Object.defineProperty(Adventure.prototype, 'highlyRated', {\n *       get: function () {\n *         this.where({ rating: { $gt: 4.5 }});\n *         return this;\n *       }\n *     })\n *     await Adventure().highlyRated.startsWith('Life').exec();\n *\n * @return {Query} subclass-of-Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor() {\n  const model = this.model;\n  const coll = this.mongooseCollection;\n\n  const CustomQuery = function(criteria, options) {\n    if (!(this instanceof CustomQuery)) {\n      return new CustomQuery(criteria, options);\n    }\n    this._mongooseOptions = clone(p._mongooseOptions);\n    Query.call(this, criteria, options || null, model, coll);\n  };\n\n  util.inherits(CustomQuery, model.Query);\n\n  // set inherited defaults\n  const p = CustomQuery.prototype;\n\n  p.options = {};\n\n  // Need to handle `sort()` separately because entries-style `sort()` syntax\n  // `sort([['prop1', 1]])` confuses mquery into losing the outer nested array.\n  // See gh-8159\n  const options = Object.assign({}, this.options);\n  if (options.sort != null) {\n    p.sort(options.sort);\n    delete options.sort;\n  }\n  p.setOptions(options);\n\n  p.op = this.op;\n  p._validateOp();\n  p._conditions = clone(this._conditions);\n  p._fields = clone(this._fields);\n  p._update = clone(this._update, {\n    flattenDecimals: false\n  });\n  p._path = this._path;\n  p._distinct = this._distinct;\n  p._collection = this._collection;\n  p._mongooseOptions = this._mongooseOptions;\n\n  return CustomQuery;\n};\n\n/**\n * Make a copy of this query so you can re-execute it.\n *\n * #### Example:\n *\n *     const q = Book.findOne({ title: 'Casino Royale' });\n *     await q.exec();\n *     await q.exec(); // Throws an error because you can't execute a query twice\n *\n *     await q.clone().exec(); // Works\n *\n * @method clone\n * @return {Query} copy\n * @memberOf Query\n * @instance\n * @api public\n */\n\nQuery.prototype.clone = function() {\n  const model = this.model;\n  const collection = this.mongooseCollection;\n\n  const q = new this.model.Query({}, {}, model, collection);\n\n  // Need to handle `sort()` separately because entries-style `sort()` syntax\n  // `sort([['prop1', 1]])` confuses mquery into losing the outer nested array.\n  // See gh-8159\n  const options = Object.assign({}, this.options);\n  if (options.sort != null) {\n    q.sort(options.sort);\n    delete options.sort;\n  }\n  q.setOptions(options);\n\n  q.op = this.op;\n  q._validateOp();\n  q._conditions = clone(this._conditions);\n  q._fields = clone(this._fields);\n  q._update = clone(this._update, {\n    flattenDecimals: false\n  });\n  q._path = this._path;\n  q._distinct = this._distinct;\n  q._collection = this._collection;\n  q._mongooseOptions = this._mongooseOptions;\n\n  return q;\n};\n\n/**\n * Specifies a javascript function or expression to pass to MongoDBs query system.\n *\n * #### Example:\n *\n *     query.$where('this.comments.length === 10 || this.name.length === 5')\n *\n *     // or\n *\n *     query.$where(function () {\n *       return this.comments.length === 10 || this.name.length === 5;\n *     })\n *\n * #### Note:\n *\n * Only use `$where` when you have a condition that cannot be met using other MongoDB operators like `$lt`.\n * **Be sure to read about all of [its caveats](https://www.mongodb.com/docs/manual/reference/operator/where/) before using.**\n *\n * @see $where https://www.mongodb.com/docs/manual/reference/operator/where/\n * @method $where\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @instance\n * @method $where\n * @api public\n */\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * #### Example:\n *\n *     // instead of writing:\n *     User.find({age: {$gte: 21, $lte: 65}});\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^vonderful/i)\n *     .where('friends').slice(10)\n *     .exec()\n *\n * @method where\n * @memberOf Query\n * @instance\n * @param {String|Object} [path]\n * @param {any} [val]\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies a `$slice` projection for an array.\n *\n * #### Example:\n *\n *     query.slice('comments', 5); // Returns the first 5 comments\n *     query.slice('comments', -5); // Returns the last 5 comments\n *     query.slice('comments', [10, 5]); // Returns the first 5 comments after the 10-th\n *     query.where('comments').slice(5); // Returns the first 5 comments\n *     query.where('comments').slice([-10, 5]); // Returns the first 5 comments after the 10-th to last\n *\n * **Note:** If the absolute value of the number of elements to be sliced is greater than the number of elements in the array, all array elements will be returned.\n *\n *      // Given `arr`: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n *      query.slice('arr', 20); // Returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n *      query.slice('arr', -20); // Returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n *\n * **Note:** If the number of elements to skip is positive and greater than the number of elements in the array, an empty array will be returned.\n *\n *      // Given `arr`: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n *      query.slice('arr', [20, 5]); // Returns []\n *\n * **Note:** If the number of elements to skip is negative and its absolute value is greater than the number of elements in the array, the starting position is the start of the array.\n *\n *      // Given `arr`: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n *      query.slice('arr', [-20, 5]); // Returns [1, 2, 3, 4, 5]\n *\n * @method slice\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number|Array} val number of elements to slice or array with number of elements to skip and number of elements to slice\n * @return {Query} this\n * @see mongodb https://www.mongodb.com/docs/manual/tutorial/query-documents/#projection\n * @see $slice https://www.mongodb.com/docs/manual/reference/projection/slice/#prj._S_slice\n * @api public\n */\n\nQuery.prototype.slice = function() {\n  if (arguments.length === 0) {\n    return this;\n  }\n\n  this._validate('slice');\n\n  let path;\n  let val;\n\n  if (arguments.length === 1) {\n    const arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      const keys = Object.keys(arg);\n      const numKeys = keys.length;\n      for (let i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (arguments.length === 2) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = [arguments[0], arguments[1]];\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (arguments.length === 3) {\n    path = arguments[0];\n    val = [arguments[1], arguments[2]];\n  }\n\n  const p = {};\n  p[path] = { $slice: val };\n  this.select(p);\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nconst validOpsSet = new Set(validOps);\n\nQuery.prototype._validateOp = function() {\n  if (this.op != null && !validOpsSet.has(this.op)) {\n    this.error(new Error('Query has invalid `op`: \"' + this.op + '\"'));\n  }\n};\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * #### Example:\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @method equals\n * @memberOf Query\n * @instance\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * #### Example:\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }]);\n *\n * @see $or https://www.mongodb.com/docs/manual/reference/operator/or/\n * @method or\n * @memberOf Query\n * @instance\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * #### Example:\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }]);\n *\n * @see $nor https://www.mongodb.com/docs/manual/reference/operator/nor/\n * @method nor\n * @memberOf Query\n * @instance\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * #### Example:\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @method and\n * @memberOf Query\n * @instance\n * @see $and https://www.mongodb.com/docs/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies a `$gt` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * #### Example:\n *\n *     Thing.find().where('age').gt(21);\n *\n *     // or\n *     Thing.find().gt('age', 21);\n *\n * @method gt\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @see $gt https://www.mongodb.com/docs/manual/reference/operator/gt/\n * @api public\n */\n\n/**\n * Specifies a `$gte` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @see $gte https://www.mongodb.com/docs/manual/reference/operator/gte/\n * @api public\n */\n\n/**\n * Specifies a `$lt` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @see $lt https://www.mongodb.com/docs/manual/reference/operator/lt/\n * @api public\n */\n\n/**\n * Specifies a `$lte` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @see $lte https://www.mongodb.com/docs/manual/reference/operator/lte/\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a `$ne` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @see $ne https://www.mongodb.com/docs/manual/reference/operator/ne/\n * @method ne\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {any} val\n * @api public\n */\n\n/**\n * Specifies an `$in` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @see $in https://www.mongodb.com/docs/manual/reference/operator/in/\n * @method in\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Array} val\n * @api public\n */\n\n/**\n * Specifies an `$nin` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @see $nin https://www.mongodb.com/docs/manual/reference/operator/nin/\n * @method nin\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Array} val\n * @api public\n */\n\n/**\n * Specifies an `$all` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * #### Example:\n *\n *     MyModel.find().where('pets').all(['dog', 'cat', 'ferret']);\n *     // Equivalent:\n *     MyModel.find().all('pets', ['dog', 'cat', 'ferret']);\n *\n * @see $all https://www.mongodb.com/docs/manual/reference/operator/all/\n * @method all\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Array} val\n * @api public\n */\n\n/**\n * Specifies a `$size` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * #### Example:\n *\n *     const docs = await MyModel.where('tags').size(0).exec();\n *     assert(Array.isArray(docs));\n *     console.log('documents with 0 tags', docs);\n *\n * @see $size https://www.mongodb.com/docs/manual/reference/operator/size/\n * @method size\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a `$regex` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @see $regex https://www.mongodb.com/docs/manual/reference/operator/regex/\n * @method regex\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {String|RegExp} val\n * @api public\n */\n\n/**\n * Specifies a `maxDistance` query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @see $maxDistance https://www.mongodb.com/docs/manual/reference/operator/maxDistance/\n * @method maxDistance\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a `$mod` condition, filters documents for documents whose\n * `path` property is a number that is equal to `remainder` modulo `divisor`.\n *\n * #### Example:\n *\n *     // All find products whose inventory is odd\n *     Product.find().mod('inventory', [2, 1]);\n *     Product.find().where('inventory').mod([2, 1]);\n *     // This syntax is a little strange, but supported.\n *     Product.find().where('inventory').mod(2, 1);\n *\n * @method mod\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Array} val must be of length 2, first element is `divisor`, 2nd element is `remainder`.\n * @return {Query} this\n * @see $mod https://www.mongodb.com/docs/manual/reference/operator/mod/\n * @api public\n */\n\nQuery.prototype.mod = function() {\n  let val;\n  let path;\n\n  if (arguments.length === 1) {\n    this._ensurePath('mod');\n    val = arguments[0];\n    path = this._path;\n  } else if (arguments.length === 2 && !Array.isArray(arguments[1])) {\n    this._ensurePath('mod');\n    val = [arguments[0], arguments[1]];\n    path = this._path;\n  } else if (arguments.length === 3) {\n    val = [arguments[1], arguments[2]];\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  const conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n};\n\n/**\n * Specifies an `$exists` condition\n *\n * #### Example:\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @method exists\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Boolean} val\n * @return {Query} this\n * @see $exists https://www.mongodb.com/docs/manual/reference/operator/exists/\n * @api public\n */\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * #### Example:\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @method elemMatch\n * @memberOf Query\n * @instance\n * @param {String|Object|Function} path\n * @param {Object|Function} filter\n * @return {Query} this\n * @see $elemMatch https://www.mongodb.com/docs/manual/reference/operator/elemMatch/\n * @api public\n */\n\n/**\n * Defines a `$within` or `$geoWithin` argument for geo-spatial queries.\n *\n * #### Example:\n *\n *     query.where(path).within().box()\n *     query.where(path).within().circle()\n *     query.where(path).within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * **MUST** be used after `where()`.\n *\n * #### Note:\n *\n * As of Mongoose 3.7, `$geoWithin` is always used for queries. To change this behavior, see [Query.use$geoWithin](https://mongoosejs.com/docs/api/query.html#Query.prototype.use$geoWithin).\n *\n * #### Note:\n *\n * In Mongoose 3.7, `within` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within).\n *\n * @method within\n * @see $polygon https://www.mongodb.com/docs/manual/reference/operator/polygon/\n * @see $box https://www.mongodb.com/docs/manual/reference/operator/box/\n * @see $geometry https://www.mongodb.com/docs/manual/reference/operator/geometry/\n * @see $center https://www.mongodb.com/docs/manual/reference/operator/center/\n * @see $centerSphere https://www.mongodb.com/docs/manual/reference/operator/centerSphere/\n * @memberOf Query\n * @instance\n * @return {Query} this\n * @api public\n */\n\n/**\n * Specifies the maximum number of documents the query will return.\n *\n * #### Example:\n *\n *     query.limit(20);\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @instance\n * @param {Number} val\n * @api public\n */\n\nQuery.prototype.limit = function limit(v) {\n  this._validate('limit');\n\n  if (typeof v === 'string') {\n    try {\n      v = castNumber(v);\n    } catch (err) {\n      throw new CastError('Number', v, 'limit');\n    }\n  }\n\n  this.options.limit = v;\n  return this;\n};\n\n/**\n * Specifies the number of documents to skip.\n *\n * #### Example:\n *\n *     query.skip(100).limit(20);\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @instance\n * @param {Number} val\n * @see cursor.skip https://www.mongodb.com/docs/manual/reference/method/cursor.skip/\n * @api public\n */\n\nQuery.prototype.skip = function skip(v) {\n  this._validate('skip');\n\n  if (typeof v === 'string') {\n    try {\n      v = castNumber(v);\n    } catch (err) {\n      throw new CastError('Number', v, 'skip');\n    }\n  }\n\n  this.options.skip = v;\n  return this;\n};\n\n/**\n * Specifies the batchSize option.\n *\n * #### Example:\n *\n *     query.batchSize(100)\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @instance\n * @param {Number} val\n * @see batchSize https://www.mongodb.com/docs/manual/reference/method/cursor.batchSize/\n * @api public\n */\n\n/**\n * Specifies the `comment` option.\n *\n * #### Example:\n *\n *     query.comment('login query')\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @instance\n * @param {String} val\n * @see comment https://www.mongodb.com/docs/manual/reference/operator/comment/\n * @api public\n */\n\n/**\n * Sets query hints.\n *\n * #### Example:\n *\n *     query.hint({ indexA: 1, indexB: -1 });\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @method hint\n * @memberOf Query\n * @instance\n * @param {Object} val a hint object\n * @return {Query} this\n * @see $hint https://www.mongodb.com/docs/manual/reference/operator/hint/\n * @api public\n */\n\n/**\n * Get/set the current projection (AKA fields). Pass `null` to remove the\n * current projection.\n *\n * Unlike `projection()`, the `select()` function modifies the current\n * projection in place. This function overwrites the existing projection.\n *\n * #### Example:\n *\n *     const q = Model.find();\n *     q.projection(); // null\n *\n *     q.select('a b');\n *     q.projection(); // { a: 1, b: 1 }\n *\n *     q.projection({ c: 1 });\n *     q.projection(); // { c: 1 }\n *\n *     q.projection(null);\n *     q.projection(); // null\n *\n *\n * @method projection\n * @memberOf Query\n * @instance\n * @param {Object|null} arg\n * @return {Object} the current projection\n * @api public\n */\n\nQuery.prototype.projection = function(arg) {\n  if (arguments.length === 0) {\n    return this._fields;\n  }\n\n  this._fields = {};\n  this._userProvidedFields = {};\n  this.select(arg);\n  return this._fields;\n};\n\n/**\n * Specifies which document fields to include or exclude (also known as the query \"projection\")\n *\n * When using string syntax, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included. Lastly, if a path is prefixed with `+`, it forces inclusion of the path, which is useful for paths excluded at the [schema level](https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.select()).\n *\n * A projection _must_ be either inclusive or exclusive. In other words, you must\n * either list the fields to include (which excludes all others), or list the fields\n * to exclude (which implies all other fields are included). The [`_id` field is the only exception because MongoDB includes it by default](https://www.mongodb.com/docs/manual/tutorial/project-fields-from-query-results/#suppress-id-field).\n *\n * #### Example:\n *\n *     // include a and b, exclude other fields\n *     query.select('a b');\n *     // Equivalent syntaxes:\n *     query.select(['a', 'b']);\n *     query.select({ a: 1, b: 1 });\n *\n *     // exclude c and d, include other fields\n *     query.select('-c -d');\n *\n *     // Use `+` to override schema-level `select: false` without making the\n *     // projection inclusive.\n *     const schema = new Schema({\n *       foo: { type: String, select: false },\n *       bar: String\n *     });\n *     // ...\n *     query.select('+foo'); // Override foo's `select: false` without excluding `bar`\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({ a: 1, b: 1 });\n *     query.select({ c: 0, d: 0 });\n *\n *     Additional calls to select can override the previous selection:\n *     query.select({ a: 1, b: 1 }).select({ b: 0 }); // selection is now { a: 1 }\n *     query.select({ a: 0, b: 0 }).select({ b: 1 }); // selection is now { a: 0 }\n *\n *\n * @method select\n * @memberOf Query\n * @instance\n * @param {Object|String|String[]} arg\n * @return {Query} this\n * @see SchemaType https://mongoosejs.com/docs/api/schematype.html\n * @api public\n */\n\nQuery.prototype.select = function select() {\n  let arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error('Invalid select: select only takes 1 argument');\n  }\n\n  this._validate('select');\n\n  const fields = this._fields || (this._fields = {});\n  const userProvidedFields = this._userProvidedFields || (this._userProvidedFields = {});\n  let sanitizeProjection = undefined;\n  if (this.model != null && utils.hasUserDefinedProperty(this.model.db.options, 'sanitizeProjection')) {\n    sanitizeProjection = this.model.db.options.sanitizeProjection;\n  } else if (this.model != null && utils.hasUserDefinedProperty(this.model.base.options, 'sanitizeProjection')) {\n    sanitizeProjection = this.model.base.options.sanitizeProjection;\n  } else {\n    sanitizeProjection = this._mongooseOptions.sanitizeProjection;\n  }\n\n  function sanitizeValue(value) {\n    return typeof value === 'string' && sanitizeProjection ? value = 1 : value;\n  }\n  arg = parseProjection(arg, true); // we want to keep the minus and pluses, so add boolean arg.\n  if (utils.isObject(arg)) {\n    if (this.selectedInclusively()) {\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          // Add the field to the projection\n          if (fields['-' + key] != null) {\n            delete fields['-' + key];\n          }\n          fields[key] = userProvidedFields[key] = sanitizeValue(value);\n        } else {\n          // Remove the field from the projection\n          Object.keys(userProvidedFields).forEach(field => {\n            if (isSubpath(key, field)) {\n              delete fields[field];\n              delete userProvidedFields[field];\n            }\n          });\n        }\n      });\n    } else if (this.selectedExclusively()) {\n      Object.entries(arg).forEach(([key, value]) => {\n        if (!value) {\n          // Add the field to the projection\n          if (fields['+' + key] != null) {\n            delete fields['+' + key];\n          }\n          fields[key] = userProvidedFields[key] = sanitizeValue(value);\n        } else {\n          // Remove the field from the projection\n          Object.keys(userProvidedFields).forEach(field => {\n            if (isSubpath(key, field)) {\n              delete fields[field];\n              delete userProvidedFields[field];\n            }\n          });\n        }\n      });\n    } else {\n      const keys = Object.keys(arg);\n      for (let i = 0; i < keys.length; ++i) {\n        const value = arg[keys[i]];\n        const key = keys[i];\n        fields[key] = sanitizeValue(value);\n        userProvidedFields[key] = sanitizeValue(value);\n      }\n    }\n\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n};\n\n/**\n * Determines the MongoDB nodes from which to read.\n *\n * #### Preferences:\n *\n * ```\n * primary - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n * secondary            Read from secondary if available, otherwise error.\n * primaryPreferred     Read from primary if available, otherwise a secondary.\n * secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n * nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n * ```\n *\n * Aliases\n *\n * ```\n * p   primary\n * pp  primaryPreferred\n * s   secondary\n * sp  secondaryPreferred\n * n   nearest\n * ```\n *\n * #### Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // read from secondaries with matching tags\n *     new Query().read('s', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }])\n *\n * Read more about how to use read preferences [here](https://www.mongodb.com/docs/manual/applications/replication/#read-preference).\n *\n * @method read\n * @memberOf Query\n * @instance\n * @param {String} mode one of the listed preference options or aliases\n * @param {Array} [tags] optional tags for this query\n * @see mongodb https://www.mongodb.com/docs/manual/applications/replication/#read-preference\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = function read(mode, tags) {\n  if (typeof mode === 'string') {\n    mode = handleReadPreferenceAliases(mode);\n    this.options.readPreference = { mode, tags };\n  } else {\n    this.options.readPreference = mode;\n  }\n  return this;\n};\n\n/**\n * Overwrite default `.toString` to make logging more useful\n *\n * @memberOf Query\n * @instance\n * @method toString\n * @api private\n */\n\nQuery.prototype.toString = function toString() {\n  if (this.op === 'count' ||\n      this.op === 'countDocuments' ||\n      this.op === 'find' ||\n      this.op === 'findOne' ||\n      this.op === 'deleteMany' ||\n      this.op === 'deleteOne' ||\n      this.op === 'findOneAndDelete' ||\n      this.op === 'findOneAndRemove' ||\n      this.op === 'remove') {\n    return `${this.model.modelName}.${this.op}(${util.inspect(this._conditions)})`;\n  }\n  if (this.op === 'distinct') {\n    return `${this.model.modelName}.distinct('${this._distinct}', ${util.inspect(this._conditions)})`;\n  }\n  if (this.op === 'findOneAndReplace' ||\n      this.op === 'findOneAndUpdate' ||\n      this.op === 'replaceOne' ||\n      this.op === 'update' ||\n      this.op === 'updateMany' ||\n      this.op === 'updateOne') {\n    return `${this.model.modelName}.${this.op}(${util.inspect(this._conditions)}, ${util.inspect(this._update)})`;\n  }\n\n  // 'estimatedDocumentCount' or any others\n  return `${this.model.modelName}.${this.op}()`;\n};\n\n/**\n * Sets the [MongoDB session](https://www.mongodb.com/docs/manual/reference/server-sessions/)\n * associated with this query. Sessions are how you mark a query as part of a\n * [transaction](https://mongoosejs.com/docs/transactions.html).\n *\n * Calling `session(null)` removes the session from this query.\n *\n * #### Example:\n *\n *     const s = await mongoose.startSession();\n *     await mongoose.model('Person').findOne({ name: 'Axl Rose' }).session(s);\n *\n * @method session\n * @memberOf Query\n * @instance\n * @param {ClientSession} [session] from `await conn.startSession()`\n * @see Connection.prototype.startSession() https://mongoosejs.com/docs/api/connection.html#Connection.prototype.startSession()\n * @see mongoose.startSession() https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.startSession()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.session = function session(v) {\n  if (v == null) {\n    delete this.options.session;\n  }\n  this.options.session = v;\n  return this;\n};\n\n/**\n * Sets the 3 write concern parameters for this query:\n *\n * - `w`: Sets the specified number of `mongod` servers, or tag set of `mongod` servers, that must acknowledge this write before this write is considered successful.\n * - `j`: Boolean, set to `true` to request acknowledgement that this operation has been persisted to MongoDB's on-disk journal.\n * - `wtimeout`: If [`w > 1`](https://mongoosejs.com/docs/api/query.html#Query.prototype.w()), the maximum amount of time to wait for this write to propagate through the replica set before this operation fails. The default is `0`, which means no timeout.\n *\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndReplace()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the schema's [`writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n *\n * #### Example:\n *\n *     // The 'majority' option means the `deleteOne()` promise won't resolve\n *     // until the `deleteOne()` has propagated to the majority of the replica set\n *     await mongoose.model('Person').\n *       deleteOne({ name: 'Ned Stark' }).\n *       writeConcern({ w: 'majority' });\n *\n * @method writeConcern\n * @memberOf Query\n * @instance\n * @param {Object} writeConcern the write concern value to set\n * @see WriteConcernSettings https://mongodb.github.io/node-mongodb-native/4.9/interfaces/WriteConcernSettings.html\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.writeConcern = function writeConcern(val) {\n  if (val == null) {\n    delete this.options.writeConcern;\n    return this;\n  }\n  this.options.writeConcern = val;\n  return this;\n};\n\n/**\n * Sets the specified number of `mongod` servers, or tag set of `mongod` servers,\n * that must acknowledge this write before this write is considered successful.\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndReplace()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the schema's [`writeConcern.w` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n *\n * #### Example:\n *\n *     // The 'majority' option means the `deleteOne()` promise won't resolve\n *     // until the `deleteOne()` has propagated to the majority of the replica set\n *     await mongoose.model('Person').\n *       deleteOne({ name: 'Ned Stark' }).\n *       w('majority');\n *\n * @method w\n * @memberOf Query\n * @instance\n * @param {String|number} val 0 for fire-and-forget, 1 for acknowledged by one server, 'majority' for majority of the replica set, or [any of the more advanced options](https://www.mongodb.com/docs/manual/reference/write-concern/#w-option).\n * @see mongodb https://www.mongodb.com/docs/manual/reference/write-concern/#w-option\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.w = function w(val) {\n  if (val == null) {\n    delete this.options.w;\n  }\n  if (this.options.writeConcern != null) {\n    this.options.writeConcern.w = val;\n  } else {\n    this.options.w = val;\n  }\n  return this;\n};\n\n/**\n * Requests acknowledgement that this operation has been persisted to MongoDB's\n * on-disk journal.\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndReplace()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the schema's [`writeConcern.j` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n *\n * #### Example:\n *\n *     await mongoose.model('Person').deleteOne({ name: 'Ned Stark' }).j(true);\n *\n * @method j\n * @memberOf Query\n * @instance\n * @param {boolean} val\n * @see mongodb https://www.mongodb.com/docs/manual/reference/write-concern/#j-option\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.j = function j(val) {\n  if (val == null) {\n    delete this.options.j;\n  }\n  if (this.options.writeConcern != null) {\n    this.options.writeConcern.j = val;\n  } else {\n    this.options.j = val;\n  }\n  return this;\n};\n\n/**\n * If [`w > 1`](https://mongoosejs.com/docs/api/query.html#Query.prototype.w()), the maximum amount of time to\n * wait for this write to propagate through the replica set before this\n * operation fails. The default is `0`, which means no timeout.\n *\n * This option is only valid for operations that write to the database:\n *\n * - `deleteOne()`\n * - `deleteMany()`\n * - `findOneAndDelete()`\n * - `findOneAndReplace()`\n * - `findOneAndUpdate()`\n * - `updateOne()`\n * - `updateMany()`\n *\n * Defaults to the schema's [`writeConcern.wtimeout` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n *\n * #### Example:\n *\n *     // The `deleteOne()` promise won't resolve until this `deleteOne()` has\n *     // propagated to at least `w = 2` members of the replica set. If it takes\n *     // longer than 1 second, this `deleteOne()` will fail.\n *     await mongoose.model('Person').\n *       deleteOne({ name: 'Ned Stark' }).\n *       w(2).\n *       wtimeout(1000);\n *\n * @method wtimeout\n * @memberOf Query\n * @instance\n * @param {number} ms number of milliseconds to wait\n * @see mongodb https://www.mongodb.com/docs/manual/reference/write-concern/#wtimeout\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.wtimeout = function wtimeout(ms) {\n  if (ms == null) {\n    delete this.options.wtimeout;\n  }\n  if (this.options.writeConcern != null) {\n    this.options.writeConcern.wtimeout = ms;\n  } else {\n    this.options.wtimeout = ms;\n  }\n  return this;\n};\n\n/**\n * Sets the readConcern option for the query.\n *\n * #### Example:\n *\n *     new Query().readConcern('local')\n *     new Query().readConcern('l')  // same as local\n *\n *     new Query().readConcern('available')\n *     new Query().readConcern('a')  // same as available\n *\n *     new Query().readConcern('majority')\n *     new Query().readConcern('m')  // same as majority\n *\n *     new Query().readConcern('linearizable')\n *     new Query().readConcern('lz') // same as linearizable\n *\n *     new Query().readConcern('snapshot')\n *     new Query().readConcern('s')  // same as snapshot\n *\n *\n * #### Read Concern Level:\n *\n * ```\n * local         MongoDB 3.2+ The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back).\n * available     MongoDB 3.6+ The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back).\n * majority      MongoDB 3.2+ The query returns the data that has been acknowledged by a majority of the replica set members. The documents returned by the read operation are durable, even in the event of failure.\n * linearizable  MongoDB 3.4+ The query returns data that reflects all successful majority-acknowledged writes that completed prior to the start of the read operation. The query may wait for concurrently executing writes to propagate to a majority of replica set members before returning results.\n * snapshot      MongoDB 4.0+ Only available for operations within multi-document transactions. Upon transaction commit with write concern \"majority\", the transaction operations are guaranteed to have read from a snapshot of majority-committed data.\n * ```\n *\n * Aliases\n *\n * ```\n * l   local\n * a   available\n * m   majority\n * lz  linearizable\n * s   snapshot\n * ```\n *\n * Read more about how to use read concern [here](https://www.mongodb.com/docs/manual/reference/read-concern/).\n *\n * @memberOf Query\n * @method readConcern\n * @param {String} level one of the listed read concern level or their aliases\n * @see mongodb https://www.mongodb.com/docs/manual/reference/read-concern/\n * @return {Query} this\n * @api public\n */\n\n/**\n * Gets query options.\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.limit(10);\n *     query.setOptions({ maxTimeMS: 1000 });\n *     query.getOptions(); // { limit: 10, maxTimeMS: 1000 }\n *\n * @return {Object} the options\n * @api public\n */\n\nQuery.prototype.getOptions = function() {\n  return this.options;\n};\n\n/**\n * Sets query options. Some options only make sense for certain operations.\n *\n * #### Options:\n *\n * The following options are only for `find()`:\n *\n * - [tailable](https://www.mongodb.com/docs/manual/core/tailable-cursors/)\n * - [limit](https://www.mongodb.com/docs/manual/reference/method/cursor.limit/)\n * - [skip](https://www.mongodb.com/docs/manual/reference/method/cursor.skip/)\n * - [allowDiskUse](https://www.mongodb.com/docs/manual/reference/method/cursor.allowDiskUse/)\n * - [batchSize](https://www.mongodb.com/docs/manual/reference/method/cursor.batchSize/)\n * - [readPreference](https://www.mongodb.com/docs/manual/applications/replication/#read-preference)\n * - [hint](https://www.mongodb.com/docs/manual/reference/method/cursor.hint/)\n * - [comment](https://www.mongodb.com/docs/manual/reference/method/cursor.comment/)\n *\n * The following options are only for write operations: `updateOne()`, `updateMany()`, `replaceOne()`, `findOneAndUpdate()`, and `findByIdAndUpdate()`:\n *\n * - [upsert](https://www.mongodb.com/docs/manual/reference/method/db.collection.update/)\n * - [writeConcern](https://www.mongodb.com/docs/manual/reference/method/db.collection.update/)\n * - [timestamps](https://mongoosejs.com/docs/guide.html#timestamps): If `timestamps` is set in the schema, set this option to `false` to skip timestamps for that particular update. Has no effect if `timestamps` is not enabled in the schema options.\n * - overwriteDiscriminatorKey: allow setting the discriminator key in the update. Will use the correct discriminator schema if the update changes the discriminator key.\n *\n * The following options are only for `find()`, `findOne()`, `findById()`, `findOneAndUpdate()`, `findOneAndReplace()`, `findOneAndDelete()`, and `findByIdAndUpdate()`:\n *\n * - [lean](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean())\n * - [populate](https://mongoosejs.com/docs/populate.html)\n * - [projection](https://mongoosejs.com/docs/api/query.html#Query.prototype.projection())\n * - sanitizeProjection\n * - useBigInt64\n *\n * The following options are only for all operations **except** `updateOne()`, `updateMany()`, `deleteOne()`, and `deleteMany()`:\n *\n * - [maxTimeMS](https://www.mongodb.com/docs/manual/reference/operator/meta/maxTimeMS/)\n *\n * The following options are for `find()`, `findOne()`, `findOneAndUpdate()`, `findOneAndRemove()`, `findOneAndDelete()`, `updateOne()`, and `deleteOne()`:\n *\n * - [sort](https://www.mongodb.com/docs/manual/reference/method/cursor.sort/)\n *\n * The following options are for `findOneAndUpdate()` and `findOneAndRemove()`\n *\n * - rawResult\n *\n * The following options are for all operations:\n *\n * - [strict](https://mongoosejs.com/docs/guide.html#strict)\n * - [collation](https://www.mongodb.com/docs/manual/reference/collation/)\n * - [session](https://www.mongodb.com/docs/manual/reference/server-sessions/)\n * - [explain](https://www.mongodb.com/docs/manual/reference/method/cursor.explain/)\n *\n * @param {Object} options\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.setOptions = function(options, overwrite) {\n  // overwrite is only for internal use\n  if (overwrite) {\n    // ensure that _mongooseOptions & options are two different objects\n    this._mongooseOptions = (options && clone(options)) || {};\n    this.options = options || {};\n\n    if ('populate' in options) {\n      this.populate(this._mongooseOptions);\n    }\n    return this;\n  }\n  if (options == null) {\n    return this;\n  }\n  if (typeof options !== 'object') {\n    throw new Error('Options must be an object, got \"' + options + '\"');\n  }\n\n  options = Object.assign({}, options);\n\n  if (Array.isArray(options.populate)) {\n    const populate = options.populate;\n    delete options.populate;\n    const _numPopulate = populate.length;\n    for (let i = 0; i < _numPopulate; ++i) {\n      this.populate(populate[i]);\n    }\n  }\n\n  if ('setDefaultsOnInsert' in options) {\n    this._mongooseOptions.setDefaultsOnInsert = options.setDefaultsOnInsert;\n    delete options.setDefaultsOnInsert;\n  }\n  if ('overwriteDiscriminatorKey' in options) {\n    this._mongooseOptions.overwriteDiscriminatorKey = options.overwriteDiscriminatorKey;\n    delete options.overwriteDiscriminatorKey;\n  }\n  if ('sanitizeProjection' in options) {\n    if (options.sanitizeProjection && !this._mongooseOptions.sanitizeProjection) {\n      sanitizeProjection(this._fields);\n    }\n\n    this._mongooseOptions.sanitizeProjection = options.sanitizeProjection;\n    delete options.sanitizeProjection;\n  }\n  if ('sanitizeFilter' in options) {\n    this._mongooseOptions.sanitizeFilter = options.sanitizeFilter;\n    delete options.sanitizeFilter;\n  }\n  if ('overwrite' in options) {\n    this._mongooseOptions.overwrite = options.overwrite;\n    delete options.overwrite;\n  }\n  if ('timestamps' in options) {\n    this._mongooseOptions.timestamps = options.timestamps;\n    delete options.timestamps;\n  }\n  if ('defaults' in options) {\n    this._mongooseOptions.defaults = options.defaults;\n    // deleting options.defaults will cause 7287 to fail\n  }\n  if ('translateAliases' in options) {\n    this._mongooseOptions.translateAliases = options.translateAliases;\n    delete options.translateAliases;\n  }\n\n  if ('rawResult' in options) {\n    printRawResultDeprecationWarning();\n  }\n\n  if (options.lean == null && this.schema && 'lean' in this.schema.options) {\n    this._mongooseOptions.lean = this.schema.options.lean;\n  }\n\n  if (typeof options.limit === 'string') {\n    try {\n      options.limit = castNumber(options.limit);\n    } catch (err) {\n      throw new CastError('Number', options.limit, 'limit');\n    }\n  }\n  if (typeof options.skip === 'string') {\n    try {\n      options.skip = castNumber(options.skip);\n    } catch (err) {\n      throw new CastError('Number', options.skip, 'skip');\n    }\n  }\n\n  // set arbitrary options\n  for (const key of Object.keys(options)) {\n    if (queryOptionMethods.has(key)) {\n      const args = Array.isArray(options[key]) ?\n        options[key] :\n        [options[key]];\n      this[key].apply(this, args);\n    } else {\n      this.options[key] = options[key];\n    }\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nconst printRawResultDeprecationWarning = util.deprecate(\n  function printRawResultDeprecationWarning() {},\n  'The `rawResult` option for Mongoose queries is deprecated. Use `includeResultMetadata: false` as a replacement for `rawResult: true`.'\n);\n\n/**\n * Sets the [`explain` option](https://www.mongodb.com/docs/manual/reference/method/cursor.explain/),\n * which makes this query return detailed execution stats instead of the actual\n * query result. This method is useful for determining what index your queries\n * use.\n *\n * Calling `query.explain(v)` is equivalent to `query.setOptions({ explain: v })`\n *\n * #### Example:\n *\n *     const query = new Query();\n *     const res = await query.find({ a: 1 }).explain('queryPlanner');\n *     console.log(res);\n *\n * @param {String} [verbose] The verbosity mode. Either 'queryPlanner', 'executionStats', or 'allPlansExecution'. The default is 'queryPlanner'\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.explain = function explain(verbose) {\n  if (arguments.length === 0) {\n    this.options.explain = true;\n  } else if (verbose === false) {\n    delete this.options.explain;\n  } else {\n    this.options.explain = verbose;\n  }\n  return this;\n};\n\n/**\n * Sets the [`allowDiskUse` option](https://www.mongodb.com/docs/manual/reference/method/cursor.allowDiskUse/),\n * which allows the MongoDB server to use more than 100 MB for this query's `sort()`. This option can\n * let you work around `QueryExceededMemoryLimitNoDiskUseAllowed` errors from the MongoDB server.\n *\n * Note that this option requires MongoDB server >= 4.4. Setting this option is a no-op for MongoDB 4.2\n * and earlier.\n *\n * Calling `query.allowDiskUse(v)` is equivalent to `query.setOptions({ allowDiskUse: v })`\n *\n * #### Example:\n *\n *     await query.find().sort({ name: 1 }).allowDiskUse(true);\n *     // Equivalent:\n *     await query.find().sort({ name: 1 }).allowDiskUse();\n *\n * @param {Boolean} [v] Enable/disable `allowDiskUse`. If called with 0 arguments, sets `allowDiskUse: true`\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.allowDiskUse = function(v) {\n  if (arguments.length === 0) {\n    this.options.allowDiskUse = true;\n  } else if (v === false) {\n    delete this.options.allowDiskUse;\n  } else {\n    this.options.allowDiskUse = v;\n  }\n  return this;\n};\n\n/**\n * Sets the [maxTimeMS](https://www.mongodb.com/docs/manual/reference/method/cursor.maxTimeMS/)\n * option. This will tell the MongoDB server to abort if the query or write op\n * has been running for more than `ms` milliseconds.\n *\n * Calling `query.maxTimeMS(v)` is equivalent to `query.setOptions({ maxTimeMS: v })`\n *\n * #### Example:\n *\n *     const query = new Query();\n *     // Throws an error 'operation exceeded time limit' as long as there's\n *     // >= 1 doc in the queried collection\n *     const res = await query.find({ $where: 'sleep(1000) || true' }).maxTimeMS(100);\n *\n * @param {Number} [ms] The number of milliseconds\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.maxTimeMS = function(ms) {\n  this.options.maxTimeMS = ms;\n  return this;\n};\n\n/**\n * Returns the current query filter (also known as conditions) as a [POJO](https://masteringjs.io/tutorials/fundamentals/pojo).\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.find({ a: 1 }).where('b').gt(2);\n *     query.getFilter(); // { a: 1, b: { $gt: 2 } }\n *\n * @return {Object} current query filter\n * @api public\n */\n\nQuery.prototype.getFilter = function() {\n  return this._conditions;\n};\n\n/**\n * Returns the current query filter. Equivalent to `getFilter()`.\n *\n * You should use `getFilter()` instead of `getQuery()` where possible. `getQuery()`\n * will likely be deprecated in a future release.\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.find({ a: 1 }).where('b').gt(2);\n *     query.getQuery(); // { a: 1, b: { $gt: 2 } }\n *\n * @return {Object} current query filter\n * @api public\n */\n\nQuery.prototype.getQuery = function() {\n  return this._conditions;\n};\n\n/**\n * Sets the query conditions to the provided JSON object.\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.find({ a: 1 })\n *     query.setQuery({ a: 2 });\n *     query.getQuery(); // { a: 2 }\n *\n * @param {Object} new query conditions\n * @return {undefined}\n * @api public\n */\n\nQuery.prototype.setQuery = function(val) {\n  this._conditions = val;\n};\n\n/**\n * Returns the current update operations as a JSON object.\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.updateOne({}, { $set: { a: 5 } });\n *     query.getUpdate(); // { $set: { a: 5 } }\n *\n * @return {Object} current update operations\n * @api public\n */\n\nQuery.prototype.getUpdate = function() {\n  return this._update;\n};\n\n/**\n * Sets the current update operation to new value.\n *\n * #### Example:\n *\n *     const query = new Query();\n *     query.updateOne({}, { $set: { a: 5 } });\n *     query.setUpdate({ $set: { b: 6 } });\n *     query.getUpdate(); // { $set: { b: 6 } }\n *\n * @param {Object} new update operation\n * @return {undefined}\n * @api public\n */\n\nQuery.prototype.setUpdate = function(val) {\n  this._update = val;\n};\n\n/**\n * Returns fields selection for this query.\n *\n * @method _fieldsForExec\n * @return {Object}\n * @api private\n * @memberOf Query\n */\n\nQuery.prototype._fieldsForExec = function() {\n  if (this._fields == null) {\n    return null;\n  }\n  if (Object.keys(this._fields).length === 0) {\n    return null;\n  }\n  return clone(this._fields);\n};\n\n\n/**\n * Return an update document with corrected `$set` operations.\n *\n * @method _updateForExec\n * @return {Object}\n * @api private\n * @memberOf Query\n */\n\nQuery.prototype._updateForExec = function() {\n  const update = clone(this._update, {\n    transform: false,\n    depopulate: true\n  });\n  const ops = Object.keys(update);\n  let i = ops.length;\n  const ret = {};\n\n  while (i--) {\n    const op = ops[i];\n\n    if (this._mongooseOptions.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Makes sure _path is set.\n *\n * This method is inherited by `mquery`\n *\n * @method _ensurePath\n * @param {String} method\n * @api private\n * @memberOf Query\n */\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @method canMerge\n * @memberOf Query\n * @instance\n * @param {Object} conds\n * @return {Boolean}\n * @api private\n */\n\n/**\n * Returns default options for this query.\n *\n * @param {Model} model\n * @api private\n */\n\nQuery.prototype._optionsForExec = function(model) {\n  const options = clone(this.options);\n  delete options.populate;\n  model = model || this.model;\n\n  if (!model) {\n    return options;\n  }\n  // Apply schema-level `writeConcern` option\n  applyWriteConcern(model.schema, options);\n\n  const readPreference = model &&\n  model.schema &&\n  model.schema.options &&\n  model.schema.options.read;\n  if (!('readPreference' in options) && readPreference) {\n    options.readPreference = readPreference;\n  }\n\n  if (options.upsert !== void 0) {\n    options.upsert = !!options.upsert;\n  }\n  if (options.writeConcern) {\n    if (options.j) {\n      options.writeConcern.j = options.j;\n      delete options.j;\n    }\n    if (options.w) {\n      options.writeConcern.w = options.w;\n      delete options.w;\n    }\n    if (options.wtimeout) {\n      options.writeConcern.wtimeout = options.wtimeout;\n      delete options.wtimeout;\n    }\n  }\n\n  this._applyPaths();\n  if (this._fields != null) {\n    this._fields = this._castFields(this._fields);\n    const projection = this._fieldsForExec();\n    if (projection != null) {\n      options.projection = projection;\n    }\n  }\n\n  return options;\n};\n\n/**\n * Sets the lean option.\n *\n * Documents returned from queries with the `lean` option enabled are plain\n * javascript objects, not [Mongoose Documents](https://mongoosejs.com/docs/api/document.html). They have no\n * `save` method, getters/setters, virtuals, or other Mongoose features.\n *\n * #### Example:\n *\n *     new Query().lean() // true\n *     new Query().lean(true)\n *     new Query().lean(false)\n *\n *     const docs = await Model.find().lean();\n *     docs[0] instanceof mongoose.Document; // false\n *\n * [Lean is great for high-performance, read-only cases](https://mongoosejs.com/docs/tutorials/lean.html),\n * especially when combined\n * with [cursors](https://mongoosejs.com/docs/queries.html#streaming).\n *\n * If you need virtuals, getters/setters, or defaults with `lean()`, you need\n * to use a plugin. See:\n *\n * - [mongoose-lean-virtuals](https://plugins.mongoosejs.io/plugins/lean-virtuals)\n * - [mongoose-lean-getters](https://plugins.mongoosejs.io/plugins/lean-getters)\n * - [mongoose-lean-defaults](https://www.npmjs.com/package/mongoose-lean-defaults)\n *\n * @param {Boolean|Object} bool defaults to true\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.lean = function(v) {\n  this._mongooseOptions.lean = arguments.length ? v : true;\n  return this;\n};\n\n/**\n * Adds a `$set` to this query's update without changing the operation.\n * This is useful for query middleware so you can add an update regardless\n * of whether you use `updateOne()`, `updateMany()`, `findOneAndUpdate()`, etc.\n *\n * #### Example:\n *\n *     // Updates `{ $set: { updatedAt: new Date() } }`\n *     new Query().updateOne({}, {}).set('updatedAt', new Date());\n *     new Query().updateMany({}, {}).set({ updatedAt: new Date() });\n *\n * @param {String|Object} path path or object of key/value pairs to set\n * @param {Any} [val] the value to set\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.set = function(path, val) {\n  if (typeof path === 'object') {\n    const keys = Object.keys(path);\n    for (const key of keys) {\n      this.set(key, path[key]);\n    }\n    return this;\n  }\n\n  this._update = this._update || {};\n  if (path in this._update) {\n    delete this._update[path];\n  }\n  this._update.$set = this._update.$set || {};\n  this._update.$set[path] = val;\n  return this;\n};\n\n/**\n * For update operations, returns the value of a path in the update's `$set`.\n * Useful for writing getters/setters that can work with both update operations\n * and `save()`.\n *\n * #### Example:\n *\n *     const query = Model.updateOne({}, { $set: { name: 'Jean-Luc Picard' } });\n *     query.get('name'); // 'Jean-Luc Picard'\n *\n * @param {String|Object} path path or object of key/value pairs to get\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.get = function get(path) {\n  const update = this._update;\n  if (update == null) {\n    return void 0;\n  }\n  const $set = update.$set;\n  if ($set == null) {\n    return update[path];\n  }\n\n  if (utils.hasUserDefinedProperty(update, path)) {\n    return update[path];\n  }\n  if (utils.hasUserDefinedProperty($set, path)) {\n    return $set[path];\n  }\n\n  return void 0;\n};\n\n/**\n * Gets/sets the error flag on this query. If this flag is not null or\n * undefined, the `exec()` promise will reject without executing.\n *\n * #### Example:\n *\n *     Query().error(); // Get current error value\n *     Query().error(null); // Unset the current error\n *     Query().error(new Error('test')); // `exec()` will resolve with test\n *     Schema.pre('find', function() {\n *       if (!this.getQuery().userId) {\n *         this.error(new Error('Not allowed to query without setting userId'));\n *       }\n *     });\n *\n * Note that query casting runs **after** hooks, so cast errors will override\n * custom errors.\n *\n * #### Example:\n *\n *     const TestSchema = new Schema({ num: Number });\n *     const TestModel = db.model('Test', TestSchema);\n *     TestModel.find({ num: 'not a number' }).error(new Error('woops')).exec(function(error) {\n *       // `error` will be a cast error because `num` failed to cast\n *     });\n *\n * @param {Error|null} err if set, `exec()` will fail fast before sending the query to MongoDB\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.error = function error(err) {\n  if (arguments.length === 0) {\n    return this._error;\n  }\n\n  this._error = err;\n  return this;\n};\n\n/**\n * ignore\n * @method _unsetCastError\n * @instance\n * @memberOf Query\n * @api private\n */\n\nQuery.prototype._unsetCastError = function _unsetCastError() {\n  if (this._error != null && !(this._error instanceof CastError)) {\n    return;\n  }\n  return this.error(null);\n};\n\n/**\n * Getter/setter around the current mongoose-specific options for this query\n * Below are the current Mongoose-specific options.\n *\n * - `populate`: an array representing what paths will be populated. Should have one entry for each call to [`Query.prototype.populate()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.populate())\n * - `lean`: if truthy, Mongoose will not [hydrate](https://mongoosejs.com/docs/api/model.html#Model.hydrate()) any documents that are returned from this query. See [`Query.prototype.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) for more information.\n * - `strict`: controls how Mongoose handles keys that aren't in the schema for updates. This option is `true` by default, which means Mongoose will silently strip any paths in the update that aren't in the schema. See the [`strict` mode docs](https://mongoosejs.com/docs/guide.html#strict) for more information.\n * - `strictQuery`: controls how Mongoose handles keys that aren't in the schema for the query `filter`. This option is `false` by default, which means Mongoose will allow `Model.find({ foo: 'bar' })` even if `foo` is not in the schema. See the [`strictQuery` docs](https://mongoosejs.com/docs/guide.html#strictQuery) for more information.\n * - `nearSphere`: use `$nearSphere` instead of `near()`. See the [`Query.prototype.nearSphere()` docs](https://mongoosejs.com/docs/api/query.html#Query.prototype.nearSphere())\n *\n * Mongoose maintains a separate object for internal options because\n * Mongoose sends `Query.prototype.options` to the MongoDB server, and the\n * above options are not relevant for the MongoDB server.\n *\n * @param {Object} options if specified, overwrites the current options\n * @return {Object} the options\n * @api public\n */\n\nQuery.prototype.mongooseOptions = function(v) {\n  if (arguments.length > 0) {\n    this._mongooseOptions = v;\n  }\n  return this._mongooseOptions;\n};\n\n/**\n * ignore\n * @method _castConditions\n * @memberOf Query\n * @api private\n * @instance\n */\n\nQuery.prototype._castConditions = function() {\n  let sanitizeFilterOpt = undefined;\n  if (this.model != null && utils.hasUserDefinedProperty(this.model.db.options, 'sanitizeFilter')) {\n    sanitizeFilterOpt = this.model.db.options.sanitizeFilter;\n  } else if (this.model != null && utils.hasUserDefinedProperty(this.model.base.options, 'sanitizeFilter')) {\n    sanitizeFilterOpt = this.model.base.options.sanitizeFilter;\n  } else {\n    sanitizeFilterOpt = this._mongooseOptions.sanitizeFilter;\n  }\n\n  if (sanitizeFilterOpt) {\n    sanitizeFilter(this._conditions);\n  }\n\n  try {\n    this.cast(this.model);\n    this._unsetCastError();\n  } catch (err) {\n    this.error(err);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction _castArrayFilters(query) {\n  try {\n    castArrayFilters(query);\n  } catch (err) {\n    query.error(err);\n  }\n}\n\n/**\n * Execute a `find()`\n *\n * @return {Query} this\n * @api private\n */\nQuery.prototype._find = async function _find() {\n  this._castConditions();\n\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  const mongooseOptions = this._mongooseOptions;\n  const _this = this;\n  const userProvidedFields = _this._userProvidedFields || {};\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  // Separate options to pass down to `completeMany()` in case we need to\n  // set a session on the document\n  const completeManyOptions = Object.assign({}, {\n    session: this && this.options && this.options.session || null,\n    lean: mongooseOptions.lean || null\n  });\n\n  const options = this._optionsForExec();\n\n  this._applyTranslateAliases(options);\n\n  const filter = this._conditions;\n  const fields = options.projection;\n\n  const cursor = await this._collection.collection.find(filter, options);\n  if (options.explain) {\n    return cursor.explain();\n  }\n\n  let docs = await cursor.toArray();\n  if (docs.length === 0) {\n    return docs;\n  }\n\n  if (!mongooseOptions.populate) {\n    const versionKey = _this.schema.options.versionKey;\n    if (mongooseOptions.lean && mongooseOptions.lean.versionKey === false && versionKey) {\n      docs.forEach((doc) => {\n        if (versionKey in doc) {\n          delete doc[versionKey];\n        }\n      });\n    }\n    return mongooseOptions.lean ?\n      _completeManyLean(_this.model.schema, docs, null, completeManyOptions) :\n      completeMany(_this.model, docs, fields, userProvidedFields, completeManyOptions);\n  }\n\n  const pop = helpers.preparePopulationOptionsMQ(_this, mongooseOptions);\n\n  if (mongooseOptions.lean) {\n    return _this.model.populate(docs, pop);\n  }\n\n  docs = await completeMany(_this.model, docs, fields, userProvidedFields, completeManyOptions);\n  await this.model.populate(docs, pop);\n\n  return docs;\n};\n\n/**\n * Find all documents that match `selector`. The result will be an array of documents.\n *\n * If there are too many documents in the result to fit in memory, use\n * [`Query.prototype.cursor()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.cursor())\n *\n * #### Example:\n *\n *     const arr = await Movie.find({ year: { $gte: 1980, $lte: 1989 } });\n *\n * @param {Object|ObjectId} [filter] mongodb filter. If not specified, returns all documents.\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function(conditions) {\n  if (typeof conditions === 'function' ||\n      typeof arguments[1] === 'function') {\n    throw new MongooseError('Query.prototype.find() no longer accepts a callback');\n  }\n\n  this.op = 'find';\n\n  if (mquery.canMerge(conditions)) {\n    this.merge(conditions);\n\n    prepareDiscriminatorCriteria(this);\n  } else if (conditions != null) {\n    this.error(new ObjectParameterError(conditions, 'filter', 'find'));\n  }\n\n  Query.base.find.call(this);\n\n  return this;\n};\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function(source) {\n  if (!source) {\n    return this;\n  }\n\n  const opts = { overwrite: true };\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      opts.omit = {};\n      if (this._conditions && this._conditions.$and && source._conditions.$and) {\n        opts.omit['$and'] = true;\n        this._conditions.$and = this._conditions.$and.concat(source._conditions.$and);\n      }\n      if (this._conditions && this._conditions.$or && source._conditions.$or) {\n        opts.omit['$or'] = true;\n        this._conditions.$or = this._conditions.$or.concat(source._conditions.$or);\n      }\n      utils.merge(this._conditions, source._conditions, opts);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields, opts);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options, opts);\n    }\n\n    if (source._update) {\n      this._update || (this._update = {});\n      utils.mergeClone(this._update, source._update);\n    }\n\n    if (source._distinct) {\n      this._distinct = source._distinct;\n    }\n\n    utils.merge(this._mongooseOptions, source._mongooseOptions);\n\n    return this;\n  } else if (this.model != null && source instanceof this.model.base.Types.ObjectId) {\n    utils.merge(this._conditions, { _id: source }, opts);\n\n    return this;\n  } else if (source && source.$__) {\n    source = source.toObject(internalToObjectOptions);\n  }\n\n  opts.omit = {};\n  if (this._conditions && this._conditions.$and && source.$and) {\n    opts.omit['$and'] = true;\n    this._conditions.$and = this._conditions.$and.concat(source.$and);\n  }\n  if (this._conditions && this._conditions.$or && source.$or) {\n    opts.omit['$or'] = true;\n    this._conditions.$or = this._conditions.$or.concat(source.$or);\n  }\n\n  // plain object\n  utils.merge(this._conditions, source, opts);\n\n  return this;\n};\n\n/**\n * Adds a collation to this op (MongoDB 3.4 and up)\n *\n * @param {Object} value\n * @return {Query} this\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/method/cursor.collation/#cursor.collation\n * @api public\n */\n\nQuery.prototype.collation = function(value) {\n  if (this.options == null) {\n    this.options = {};\n  }\n  this.options.collation = value;\n  return this;\n};\n\n/**\n * Hydrate a single doc from `findOne()`, `findOneAndUpdate()`, etc.\n *\n * @api private\n */\n\nQuery.prototype._completeOne = function(doc, res, callback) {\n  if (!doc && !this.options.rawResult && !this.options.includeResultMetadata) {\n    return callback(null, null);\n  }\n\n  const model = this.model;\n  const projection = clone(this._fields);\n  const userProvidedFields = this._userProvidedFields || {};\n  // `populate`, `lean`\n  const mongooseOptions = this._mongooseOptions;\n  // `rawResult`\n  const options = this.options;\n  if (!options.lean && mongooseOptions.lean) {\n    options.lean = mongooseOptions.lean;\n  }\n\n  if (options.explain) {\n    return callback(null, doc);\n  }\n\n  if (!mongooseOptions.populate) {\n    const versionKey = this.schema.options.versionKey;\n    if (mongooseOptions.lean && mongooseOptions.lean.versionKey === false && versionKey) {\n      if (versionKey in doc) {\n        delete doc[versionKey];\n      }\n    }\n    return mongooseOptions.lean ?\n      _completeOneLean(model.schema, doc, null, res, options, callback) :\n      completeOne(model, doc, res, options, projection, userProvidedFields,\n        null, callback);\n  }\n\n  const pop = helpers.preparePopulationOptionsMQ(this, this._mongooseOptions);\n  if (mongooseOptions.lean) {\n    return model.populate(doc, pop).then(\n      doc => {\n        _completeOneLean(model.schema, doc, null, res, options, callback);\n      },\n      error => {\n        callback(error);\n      }\n    );\n  }\n\n  completeOne(model, doc, res, options, projection, userProvidedFields, [], (err, doc) => {\n    if (err != null) {\n      return callback(err);\n    }\n    model.populate(doc, pop).then(res => { callback(null, res); }, err => { callback(err); });\n  });\n};\n\n/**\n * Internal helper to execute a findOne() operation\n *\n * @see findOne https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/\n * @api private\n */\n\nQuery.prototype._findOne = async function _findOne() {\n  this._castConditions();\n\n  if (this.error()) {\n    const err = this.error();\n    throw err;\n  }\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  const options = this._optionsForExec();\n\n  this._applyTranslateAliases(options);\n\n  // don't pass in the conditions because we already merged them in\n  const doc = await this._collection.collection.findOne(this._conditions, options);\n  return new Promise((resolve, reject) => {\n    this._completeOne(doc, null, _wrapThunkCallback(this, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    }));\n  });\n};\n\n/**\n * Declares the query a findOne operation. When executed, the first found document is passed to the callback.\n *\n * The result of the query is a single document, or `null` if no document was found.\n *\n * * *Note:* `conditions` is optional, and if `conditions` is null or undefined,\n * mongoose will send an empty `findOne` command to MongoDB, which will return\n * an arbitrary document. If you're querying by `_id`, use `Model.findById()`\n * instead.\n *\n * This function triggers the following middleware.\n *\n * - `findOne()`\n *\n * #### Example:\n *\n *     const query = Kitten.where({ color: 'white' });\n *     const kitten = await query.findOne();\n *\n * @param {Object} [filter] mongodb selector\n * @param {Object} [projection] optional fields to return\n * @param {Object} [options] see [`setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query} this\n * @see findOne https://www.mongodb.com/docs/manual/reference/method/db.collection.findOne/\n * @see Query.select https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @api public\n */\n\nQuery.prototype.findOne = function(conditions, projection, options) {\n  if (typeof conditions === 'function' ||\n      typeof projection === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[3] === 'function') {\n    throw new MongooseError('Query.prototype.findOne() no longer accepts a callback');\n  }\n\n  this.op = 'findOne';\n  this._validateOp();\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (projection) {\n    this.select(projection);\n  }\n\n  if (mquery.canMerge(conditions)) {\n    this.merge(conditions);\n\n    prepareDiscriminatorCriteria(this);\n  } else if (conditions != null) {\n    this.error(new ObjectParameterError(conditions, 'filter', 'findOne'));\n  }\n\n  Query.base.findOne.call(this);\n\n  return this;\n};\n\n/**\n * Execute a count query\n *\n * @see count https://www.mongodb.com/docs/manual/reference/method/db.collection.count/\n * @api private\n */\n\nQuery.prototype._count = async function _count() {\n  try {\n    this.cast(this.model);\n  } catch (err) {\n    this.error(err);\n  }\n\n  if (this.error()) {\n    throw this.error();\n  }\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  const options = this._optionsForExec();\n\n  this._applyTranslateAliases(options);\n\n  const conds = this._conditions;\n\n  return this._collection.collection.count(conds, options);\n};\n\n/**\n * Execute a countDocuments query\n *\n * @see countDocuments https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#countDocuments\n * @api private\n */\n\nQuery.prototype._countDocuments = async function _countDocuments() {\n  try {\n    this.cast(this.model);\n  } catch (err) {\n    this.error(err);\n  }\n\n  if (this.error()) {\n    throw this.error();\n  }\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  const options = this._optionsForExec();\n\n  this._applyTranslateAliases(options);\n\n  const conds = this._conditions;\n\n  return this._collection.collection.countDocuments(conds, options);\n};\n\n/*!\n * If `translateAliases` option is set, call `Model.translateAliases()`\n * on the following query properties: filter, projection, update, distinct.\n */\n\nQuery.prototype._applyTranslateAliases = function _applyTranslateAliases(options) {\n  let applyTranslateAliases = false;\n  if ('translateAliases' in this._mongooseOptions) {\n    applyTranslateAliases = this._mongooseOptions.translateAliases;\n  } else if (this.model?.schema?._userProvidedOptions?.translateAliases != null) {\n    applyTranslateAliases = this.model.schema._userProvidedOptions.translateAliases;\n  } else if (this.model?.base?.options?.translateAliases != null) {\n    applyTranslateAliases = this.model.base.options.translateAliases;\n  }\n  if (!applyTranslateAliases) {\n    return;\n  }\n\n  if (this.model?.schema?.aliases && Object.keys(this.model.schema.aliases).length > 0) {\n    this.model.translateAliases(this._conditions, true);\n    this.model.translateAliases(options.projection, true);\n    this.model.translateAliases(this._update, true);\n    if (this._distinct != null && this.model.schema.aliases[this._distinct] != null) {\n      this._distinct = this.model.schema.aliases[this._distinct];\n    }\n  }\n};\n\n/**\n * Execute a estimatedDocumentCount() query\n *\n * @see estimatedDocumentCount https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#estimatedDocumentCount\n * @api private\n */\n\nQuery.prototype._estimatedDocumentCount = async function _estimatedDocumentCount() {\n  if (this.error()) {\n    throw this.error();\n  }\n\n  const options = this._optionsForExec();\n\n  return this._collection.collection.estimatedDocumentCount(options);\n};\n\n/**\n * Specifies this query as a `count` query.\n *\n * This method is deprecated. If you want to count the number of documents in\n * a collection, e.g. `count({})`, use the [`estimatedDocumentCount()` function](https://mongoosejs.com/docs/api/query.html#Query.prototype.estimatedDocumentCount())\n * instead. Otherwise, use the [`countDocuments()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.countDocuments()) function instead.\n *\n * This function triggers the following middleware.\n *\n * - `count()`\n *\n * #### Example:\n *\n *     const countQuery = model.where({ 'color': 'black' }).count();\n *\n *     query.count({ color: 'black' }).count().exec();\n *\n *     await query.count({ color: 'black' });\n *\n *     query.where('color', 'black').count();\n *\n * @deprecated\n * @param {Object} [filter] count documents that match this object\n * @return {Query} this\n * @see count https://www.mongodb.com/docs/manual/reference/method/db.collection.count/\n * @api public\n */\n\nQuery.prototype.count = function(filter) {\n  if (typeof filter === 'function' ||\n      typeof arguments[1] === 'function') {\n    throw new MongooseError('Query.prototype.count() no longer accepts a callback');\n  }\n\n  this.op = 'count';\n  this._validateOp();\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n  }\n\n  return this;\n};\n\n/**\n * Specifies this query as a `estimatedDocumentCount()` query. Faster than\n * using `countDocuments()` for large collections because\n * `estimatedDocumentCount()` uses collection metadata rather than scanning\n * the entire collection.\n *\n * `estimatedDocumentCount()` does **not** accept a filter. `Model.find({ foo: bar }).estimatedDocumentCount()`\n * is equivalent to `Model.find().estimatedDocumentCount()`\n *\n * This function triggers the following middleware.\n *\n * - `estimatedDocumentCount()`\n *\n * #### Example:\n *\n *     await Model.find().estimatedDocumentCount();\n *\n * @param {Object} [options] passed transparently to the [MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/EstimatedDocumentCountOptions.html)\n * @return {Query} this\n * @see estimatedDocumentCount https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#estimatedDocumentCount\n * @api public\n */\n\nQuery.prototype.estimatedDocumentCount = function(options) {\n  if (typeof options === 'function' ||\n      typeof arguments[1] === 'function') {\n    throw new MongooseError('Query.prototype.estimatedDocumentCount() no longer accepts a callback');\n  }\n\n  this.op = 'estimatedDocumentCount';\n  this._validateOp();\n\n  if (typeof options === 'object' && options != null) {\n    this.setOptions(options);\n  }\n\n  return this;\n};\n\n/**\n * Specifies this query as a `countDocuments()` query. Behaves like `count()`,\n * except it always does a full collection scan when passed an empty filter `{}`.\n *\n * There are also minor differences in how `countDocuments()` handles\n * [`$where` and a couple geospatial operators](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#countDocuments).\n * versus `count()`.\n *\n * This function triggers the following middleware.\n *\n * - `countDocuments()`\n *\n * #### Example:\n *\n *     const countQuery = model.where({ 'color': 'black' }).countDocuments();\n *\n *     query.countDocuments({ color: 'black' }).count().exec();\n *\n *     await query.countDocuments({ color: 'black' });\n *\n *     query.where('color', 'black').countDocuments().exec();\n *\n * The `countDocuments()` function is similar to `count()`, but there are a\n * [few operators that `countDocuments()` does not support](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#countDocuments).\n * Below are the operators that `count()` supports but `countDocuments()` does not,\n * and the suggested replacement:\n *\n * - `$where`: [`$expr`](https://www.mongodb.com/docs/manual/reference/operator/query/expr/)\n * - `$near`: [`$geoWithin`](https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/) with [`$center`](https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center)\n * - `$nearSphere`: [`$geoWithin`](https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/) with [`$centerSphere`](https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere)\n *\n * @param {Object} [filter] mongodb selector\n * @param {Object} [options]\n * @return {Query} this\n * @see countDocuments https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#countDocuments\n * @api public\n */\n\nQuery.prototype.countDocuments = function(conditions, options) {\n  if (typeof conditions === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.countDocuments() no longer accepts a callback');\n  }\n\n  this.op = 'countDocuments';\n  this._validateOp();\n\n  if (mquery.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  if (typeof options === 'object' && options != null) {\n    this.setOptions(options);\n  }\n\n  return this;\n};\n\n/**\n * Execute a `distinct()` query\n *\n * @see distinct https://www.mongodb.com/docs/manual/reference/method/db.collection.distinct/\n * @api private\n */\n\nQuery.prototype.__distinct = async function __distinct() {\n  this._castConditions();\n\n  if (this.error()) {\n    throw this.error();\n  }\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  const options = this._optionsForExec();\n  this._applyTranslateAliases(options);\n\n  return this._collection.collection.\n    distinct(this._distinct, this._conditions, options);\n};\n\n/**\n * Declares or executes a distinct() operation.\n *\n * This function does not trigger any middleware.\n *\n * #### Example:\n *\n *     distinct(field, conditions)\n *     distinct(field)\n *     distinct()\n *\n * @param {String} [field]\n * @param {Object|Query} [filter]\n * @return {Query} this\n * @see distinct https://www.mongodb.com/docs/manual/reference/method/db.collection.distinct/\n * @api public\n */\n\nQuery.prototype.distinct = function(field, conditions) {\n  if (typeof field === 'function' ||\n      typeof conditions === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.distinct() no longer accepts a callback');\n  }\n\n  this.op = 'distinct';\n  this._validateOp();\n\n  if (mquery.canMerge(conditions)) {\n    this.merge(conditions);\n\n    prepareDiscriminatorCriteria(this);\n  } else if (conditions != null) {\n    this.error(new ObjectParameterError(conditions, 'filter', 'distinct'));\n  }\n\n  if (field != null) {\n    this._distinct = field;\n  }\n\n  return this;\n};\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`.\n *\n * If a string is passed, it must be a space delimited list of path names. The\n * sort order of each path is ascending unless the path name is prefixed with `-`\n * which will be treated as descending.\n *\n * #### Example:\n *\n *     // sort by \"field\" ascending and \"test\" descending\n *     query.sort({ field: 'asc', test: -1 });\n *\n *     // equivalent\n *     query.sort('field -test');\n *\n *     // also possible is to use a array with array key-value pairs\n *     query.sort([['field', 'asc']]);\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String|Array<Array<(string | number)>>} arg\n * @return {Query} this\n * @see cursor.sort https://www.mongodb.com/docs/manual/reference/method/cursor.sort/\n * @api public\n */\n\nQuery.prototype.sort = function(arg) {\n  if (arguments.length > 1) {\n    throw new Error('sort() only takes 1 Argument');\n  }\n\n  return Query.base.sort.call(this, arg);\n};\n\n/**\n * Declare and/or execute this query as a `deleteOne()` operation. Works like\n * remove, except it deletes at most one document regardless of the `single`\n * option.\n *\n * This function triggers `deleteOne` middleware.\n *\n * #### Example:\n *\n *     await Character.deleteOne({ name: 'Eddard Stark' });\n *\n * This function calls the MongoDB driver's [`Collection#deleteOne()` function](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#deleteOne).\n * The returned [promise](https://mongoosejs.com/docs/queries.html) resolves to an\n * object that contains 3 properties:\n *\n * - `ok`: `1` if no errors occurred\n * - `deletedCount`: the number of documents deleted\n * - `n`: the number of documents deleted. Equal to `deletedCount`.\n *\n * #### Example:\n *\n *     const res = await Character.deleteOne({ name: 'Eddard Stark' });\n *     // `1` if MongoDB deleted a doc, `0` if no docs matched the filter `{ name: ... }`\n *     res.deletedCount;\n *\n * @param {Object|Query} [filter] mongodb selector\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @return {Query} this\n * @see DeleteResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/DeleteResult.html\n * @see deleteOne https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#deleteOne\n * @api public\n */\n\nQuery.prototype.deleteOne = function deleteOne(filter, options) {\n  if (typeof filter === 'function' || typeof options === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.deleteOne() no longer accepts a callback');\n  }\n  this.op = 'deleteOne';\n  this.setOptions(options);\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n\n    prepareDiscriminatorCriteria(this);\n  } else if (filter != null) {\n    this.error(new ObjectParameterError(filter, 'filter', 'deleteOne'));\n  }\n\n  Query.base.deleteOne.call(this);\n\n  return this;\n};\n\n/**\n * Internal thunk for `deleteOne()`\n *\n * @method _deleteOne\n * @instance\n * @memberOf Query\n * @api private\n */\n\nQuery.prototype._deleteOne = async function _deleteOne() {\n  this._castConditions();\n\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  const options = this._optionsForExec();\n  this._applyTranslateAliases(options);\n\n  return this._collection.collection.deleteOne(this._conditions, options);\n};\n\n/**\n * Declare and/or execute this query as a `deleteMany()` operation. Works like\n * remove, except it deletes _every_ document that matches `filter` in the\n * collection, regardless of the value of `single`.\n *\n * This function triggers `deleteMany` middleware.\n *\n * #### Example:\n *\n *     await Character.deleteMany({ name: /Stark/, age: { $gte: 18 } });\n *\n * This function calls the MongoDB driver's [`Collection#deleteMany()` function](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#deleteMany).\n * The returned [promise](https://mongoosejs.com/docs/queries.html) resolves to an\n * object that contains 3 properties:\n *\n * - `ok`: `1` if no errors occurred\n * - `deletedCount`: the number of documents deleted\n * - `n`: the number of documents deleted. Equal to `deletedCount`.\n *\n * #### Example:\n *\n *     const res = await Character.deleteMany({ name: /Stark/, age: { $gte: 18 } });\n *     // `0` if no docs matched the filter, number of docs deleted otherwise\n *     res.deletedCount;\n *\n * @param {Object|Query} [filter] mongodb selector\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @return {Query} this\n * @see DeleteResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/DeleteResult.html\n * @see deleteMany https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#deleteMany\n * @api public\n */\n\nQuery.prototype.deleteMany = function(filter, options) {\n  if (typeof filter === 'function' || typeof options === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.deleteMany() no longer accepts a callback');\n  }\n  this.setOptions(options);\n  this.op = 'deleteMany';\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n\n    prepareDiscriminatorCriteria(this);\n  } else if (filter != null) {\n    this.error(new ObjectParameterError(filter, 'filter', 'deleteMany'));\n  }\n\n  Query.base.deleteMany.call(this);\n\n  return this;\n};\n\n/**\n * Execute a `deleteMany()` query\n *\n * @param {Function} callback\n * @method _deleteMany\n * @instance\n * @memberOf Query\n * @api private\n */\n\nQuery.prototype._deleteMany = async function _deleteMany() {\n  this._castConditions();\n\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  const options = this._optionsForExec();\n  this._applyTranslateAliases(options);\n\n  return this._collection.collection.deleteMany(this._conditions, options);\n};\n\n/**\n * hydrates a document\n *\n * @param {Model} model\n * @param {Document} doc\n * @param {Object} res 3rd parameter to callback\n * @param {Object} fields\n * @param {Query} self\n * @param {Array} [pop] array of paths used in population\n * @param {Function} callback\n * @api private\n */\n\nfunction completeOne(model, doc, res, options, fields, userProvidedFields, pop, callback) {\n  if ((options.rawResult || options.includeResultMetadata) && doc == null) {\n    _init(null);\n    return null;\n  }\n\n  helpers.createModelAndInit(model, doc, fields, userProvidedFields, options, pop, _init);\n\n  function _init(err, casted) {\n    if (err) {\n      return immediate(() => callback(err));\n    }\n\n\n    if (options.rawResult || options.includeResultMetadata) {\n      if (doc && casted) {\n        if (options.session != null) {\n          casted.$session(options.session);\n        }\n        res.value = casted;\n      } else {\n        res.value = null;\n      }\n      return immediate(() => callback(null, res));\n    }\n    if (options.session != null) {\n      casted.$session(options.session);\n    }\n    immediate(() => callback(null, casted));\n  }\n}\n\n/**\n * If the model is a discriminator type and not root, then add the key & value to the criteria.\n * @param {Query} query\n * @api private\n */\n\nfunction prepareDiscriminatorCriteria(query) {\n  if (!query || !query.model || !query.model.schema) {\n    return;\n  }\n\n  const schema = query.model.schema;\n\n  if (schema && schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    query._conditions[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n\n/**\n * Issues a mongodb `findOneAndUpdate()` command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found\n * document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndUpdate()`\n *\n * #### Available options\n *\n * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `fields`: {Object|String} - Field selection. Equivalent to `.select(fields).findOneAndUpdate()`\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0\n * - `runValidators`: if true, runs [update validators](https://mongoosejs.com/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema.\n * - `setDefaultsOnInsert`: `true` by default. If `setDefaultsOnInsert` and `upsert` are true, mongoose will apply the [defaults](https://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created.\n * - `rawResult`: if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n *\n * #### Example:\n *\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @method findOneAndUpdate\n * @memberOf Query\n * @instance\n * @param {Object|Query} [filter]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean} [options.multipleCastError] by default, mongoose only returns the first error that occurred in casting the query. Turn on this option to aggregate all the cast errors.\n * @param {Boolean} [options.new=false] By default, `findOneAndUpdate()` returns the document as it was **before** `update` was applied. If you set `new: true`, `findOneAndUpdate()` will instead give you the object after `update` was applied.\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and [the Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.returnOriginal=null] An alias for the `new` option. `returnOriginal: false` is equivalent to `new: true`.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @see Tutorial https://mongoosejs.com/docs/tutorials/findoneandupdate.html\n * @see findAndModify command https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @see ModifyResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html\n * @see findOneAndUpdate https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#findOneAndUpdate\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function(filter, doc, options) {\n  if (typeof filter === 'function' ||\n      typeof doc === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[3] === 'function') {\n    throw new MongooseError('Query.prototype.findOneAndUpdate() no longer accepts a callback');\n  }\n\n  this.op = 'findOneAndUpdate';\n  this._validateOp();\n  this._validate();\n\n  switch (arguments.length) {\n    case 2:\n      options = undefined;\n      break;\n    case 1:\n      doc = filter;\n      filter = options = undefined;\n      break;\n  }\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n  } else if (filter != null) {\n    this.error(\n      new ObjectParameterError(filter, 'filter', 'findOneAndUpdate')\n    );\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options = options ? clone(options) : {};\n\n  if (options.projection) {\n    this.select(options.projection);\n    delete options.projection;\n  }\n  if (options.fields) {\n    this.select(options.fields);\n    delete options.fields;\n  }\n\n  const returnOriginal = this &&\n    this.model &&\n    this.model.base &&\n    this.model.base.options &&\n    this.model.base.options.returnOriginal;\n  if (options.new == null && options.returnDocument == null && options.returnOriginal == null && returnOriginal != null) {\n    options.returnOriginal = returnOriginal;\n  }\n\n  this.setOptions(options);\n\n  return this;\n};\n\n/**\n * Execute a findOneAndUpdate operation\n *\n * @method _findOneAndUpdate\n * @memberOf Query\n * @api private\n */\n\nQuery.prototype._findOneAndUpdate = async function _findOneAndUpdate() {\n  // For backwards compability with Mongoose 6 re: #13550\n  if (this._mongooseOptions.overwrite) {\n    this.op = 'findOneAndReplace';\n    return this._findOneAndReplace();\n  }\n\n  this._castConditions();\n\n  _castArrayFilters(this);\n\n  if (this.error()) {\n    throw this.error();\n  }\n\n  applyGlobalMaxTimeMS(this.options, this.model);\n  applyGlobalDiskUse(this.options, this.model);\n\n  if (this.options.rawResult && this.options.includeResultMetadata === false) {\n    throw new MongooseError('Cannot set `rawResult` option when `includeResultMetadata` is false');\n  }\n\n  if ('strict' in this.options) {\n    this._mongooseOptions.strict = this.options.strict;\n  }\n  const options = this._optionsForExec(this.model);\n  convertNewToReturnDocument(options);\n  this._applyTranslateAliases(options);\n\n  this._update = this._castUpdate(this._update, false);\n\n  const _opts = Object.assign({}, options, {\n    setDefaultsOnInsert: this._mongooseOptions.setDefaultsOnInsert\n  });\n  this._update = setDefaultsOnInsert(this._conditions, this.model.schema,\n    this._update, _opts);\n\n  if (!this._update || Object.keys(this._update).length === 0) {\n    if (options.upsert) {\n      // still need to do the upsert to empty doc\n      const doc = clone(this._update);\n      delete doc._id;\n      this._update = { $set: doc };\n    } else {\n      this._executionStack = null;\n      const res = await this._findOne();\n      return res;\n    }\n  } else if (this._update instanceof Error) {\n    throw this._update;\n  } else {\n    // In order to make MongoDB 2.6 happy (see\n    // https://jira.mongodb.org/browse/SERVER-12266 and related issues)\n    // if we have an actual update document but $set is empty, junk the $set.\n    if (this._update.$set && Object.keys(this._update.$set).length === 0) {\n      delete this._update.$set;\n    }\n  }\n\n  const runValidators = _getOption(this, 'runValidators', false);\n  if (runValidators) {\n    await this.validate(this._update, options, false);\n  }\n\n  if (this._update.toBSON) {\n    this._update = this._update.toBSON();\n  }\n\n  let res = await this._collection.collection.findOneAndUpdate(this._conditions, this._update, options);\n  for (const fn of this._transforms) {\n    res = fn(res);\n  }\n  const doc = options.includeResultMetadata === false ? res : res.value;\n\n  return new Promise((resolve, reject) => {\n    this._completeOne(doc, res, _wrapThunkCallback(this, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    }));\n  });\n};\n\n/**\n * Legacy alias for `findOneAndDelete()`.\n *\n * Finds a matching document, removes it, returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndRemove()`\n *\n * #### Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0\n * - `rawResult`: if true, resolves to the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n *\n * #### Example:\n *\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     A.where().findOneAndRemove()           // returns Query\n *\n * @method findOneAndRemove\n * @memberOf Query\n * @instance\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @return {Query} this\n * @see findAndModify command https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = function(conditions, options) {\n  if (typeof conditions === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.findOneAndRemove() no longer accepts a callback');\n  }\n\n  this.op = 'findOneAndRemove';\n  this._validateOp();\n  this._validate();\n\n  if (mquery.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  options && this.setOptions(options);\n\n  return this;\n};\n\n/**\n * Issues a MongoDB [findOneAndDelete](https://www.mongodb.com/docs/manual/reference/method/db.collection.findOneAndDelete/) command.\n *\n * Finds a matching document, removes it, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndDelete()`\n *\n * #### Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0\n * - `rawResult`: if true, resolves to the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n *\n * #### Callback Signature\n *\n *     function(error, doc) {\n *       // error: any errors that occurred\n *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`\n *     }\n *\n * #### Example:\n *\n *     A.where().findOneAndDelete(conditions, options)  // return Query\n *     A.where().findOneAndDelete(conditions) // returns Query\n *     A.where().findOneAndDelete()           // returns Query\n *\n * @method findOneAndDelete\n * @memberOf Query\n * @param {Object} [filter]\n * @param {Object} [options]\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @return {Query} this\n * @see findAndModify command https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @api public\n */\n\nQuery.prototype.findOneAndDelete = function(filter, options) {\n  if (typeof filter === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Query.prototype.findOneAndDelete() no longer accepts a callback');\n  }\n\n  this.op = 'findOneAndDelete';\n  this._validateOp();\n  this._validate();\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n  }\n\n  options && this.setOptions(options);\n\n  return this;\n};\n\n/**\n * Execute a `findOneAndDelete()` query\n *\n * @return {Query} this\n * @method _findOneAndDelete\n * @memberOf Query\n * @api private\n */\nQuery.prototype._findOneAndDelete = async function _findOneAndDelete() {\n  this._castConditions();\n\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  const includeResultMetadata = this.options.includeResultMetadata;\n  if (this.options.rawResult && includeResultMetadata === false) {\n    throw new MongooseError('Cannot set `rawResult` option when `includeResultMetadata` is false');\n  }\n\n  const filter = this._conditions;\n  const options = this._optionsForExec(this.model);\n  this._applyTranslateAliases(options);\n\n  let res = await this._collection.collection.findOneAndDelete(filter, options);\n  for (const fn of this._transforms) {\n    res = fn(res);\n  }\n  const doc = includeResultMetadata === false ? res : res.value;\n\n  return new Promise((resolve, reject) => {\n    this._completeOne(doc, res, _wrapThunkCallback(this, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    }));\n  });\n};\n\n/**\n * Issues a MongoDB [findOneAndReplace](https://www.mongodb.com/docs/manual/reference/method/db.collection.findOneAndReplace/) command.\n *\n * Finds a matching document, removes it, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndReplace()`\n *\n * #### Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0\n * - `rawResult`: if true, resolves to the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n *\n * #### Callback Signature\n *\n *     function(error, doc) {\n *       // error: any errors that occurred\n *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`\n *     }\n *\n * #### Example:\n *\n *     A.where().findOneAndReplace(filter, replacement, options); // return Query\n *     A.where().findOneAndReplace(filter); // returns Query\n *     A.where().findOneAndReplace(); // returns Query\n *\n * @method findOneAndReplace\n * @memberOf Query\n * @param {Object} [filter]\n * @param {Object} [replacement]\n * @param {Object} [options]\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.new=false] By default, `findOneAndUpdate()` returns the document as it was **before** `update` was applied. If you set `new: true`, `findOneAndUpdate()` will instead give you the object after `update` was applied.\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and [the Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.returnOriginal=null] An alias for the `new` option. `returnOriginal: false` is equivalent to `new: true`.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndReplace = function(filter, replacement, options) {\n  if (typeof filter === 'function' ||\n      typeof replacement === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[4] === 'function') {\n    throw new MongooseError('Query.prototype.findOneAndReplace() no longer accepts a callback');\n  }\n\n  this.op = 'findOneAndReplace';\n  this._validateOp();\n  this._validate();\n\n  if (mquery.canMerge(filter)) {\n    this.merge(filter);\n  } else if (filter != null) {\n    this.error(\n      new ObjectParameterError(filter, 'filter', 'findOneAndReplace')\n    );\n  }\n\n  if (replacement != null) {\n    if (hasDollarKeys(replacement)) {\n      throw new Error('The replacement document must not contain atomic operators.');\n    }\n    this._mergeUpdate(replacement);\n  }\n\n  options = options || {};\n\n  const returnOriginal = this &&\n  this.model &&\n  this.model.base &&\n  this.model.base.options &&\n  this.model.base.options.returnOriginal;\n  if (options.new == null && options.returnDocument == null && options.returnOriginal == null && returnOriginal != null) {\n    options.returnOriginal = returnOriginal;\n  }\n  this.setOptions(options);\n  this.setOptions({ overwrite: true });\n\n  return this;\n};\n\n/**\n * Execute a findOneAndReplace() query\n *\n * @return {Query} this\n * @method _findOneAndReplace\n * @instance\n * @memberOf Query\n * @api private\n */\nQuery.prototype._findOneAndReplace = async function _findOneAndReplace() {\n  this._castConditions();\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  if ('strict' in this.options) {\n    this._mongooseOptions.strict = this.options.strict;\n    delete this.options.strict;\n  }\n\n  const filter = this._conditions;\n  const options = this._optionsForExec();\n  this._applyTranslateAliases(options);\n  convertNewToReturnDocument(options);\n\n  const includeResultMetadata = this.options.includeResultMetadata;\n  if (this.options.rawResult && includeResultMetadata === false) {\n    throw new MongooseError('Cannot set `rawResult` option when `includeResultMetadata` is false');\n  }\n\n  const modelOpts = { skipId: true };\n  if ('strict' in this._mongooseOptions) {\n    modelOpts.strict = this._mongooseOptions.strict;\n  }\n\n  const runValidators = _getOption(this, 'runValidators', false);\n\n  try {\n    const update = new this.model(this._update, null, modelOpts);\n    if (runValidators) {\n      await update.validate();\n    } else if (update.$__.validationError) {\n      throw update.$__.validationError;\n    }\n    this._update = update.toBSON();\n  } catch (err) {\n    if (err instanceof ValidationError) {\n      throw err;\n    }\n    const validationError = new ValidationError();\n    validationError.errors[err.path] = err;\n    throw validationError;\n  }\n\n  let res = await this._collection.collection.findOneAndReplace(filter, this._update, options);\n\n  for (const fn of this._transforms) {\n    res = fn(res);\n  }\n\n  const doc = includeResultMetadata === false ? res : res.value;\n  return new Promise((resolve, reject) => {\n    this._completeOne(doc, res, _wrapThunkCallback(this, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    }));\n  });\n};\n\n/**\n * Support the `new` option as an alternative to `returnOriginal` for backwards\n * compat.\n * @api private\n */\n\nfunction convertNewToReturnDocument(options) {\n  if ('new' in options) {\n    options.returnDocument = options['new'] ? 'after' : 'before';\n    delete options['new'];\n  }\n  if ('returnOriginal' in options) {\n    options.returnDocument = options['returnOriginal'] ? 'before' : 'after';\n    delete options['returnOriginal'];\n  }\n  // Temporary since driver 4.0.0-beta does not support `returnDocument`\n  if (typeof options.returnDocument === 'string') {\n    options.returnOriginal = options.returnDocument === 'before';\n  }\n}\n\n/**\n * Execute a `findOneAndRemove`. Alias for `findOneAndDelete`\n *\n * @return {Query} this\n * @method _findOneAndRemove\n * @memberOf Query\n * @instance\n * @api private\n */\nQuery.prototype._findOneAndRemove = async function _findOneAndRemove() {\n  return this._findOneAndDelete();\n};\n\n/**\n * Get options from query opts, falling back to the base mongoose object.\n * @param {Query} query\n * @param {Object} option\n * @param {Any} def\n * @api private\n */\n\nfunction _getOption(query, option, def) {\n  const opts = query._optionsForExec(query.model);\n\n  if (option in opts) {\n    return opts[option];\n  }\n  if (option in query.model.base.options) {\n    return query.model.base.options[option];\n  }\n  return def;\n}\n\n/*!\n * ignore\n */\n\nfunction _completeOneLean(schema, doc, path, res, opts, callback) {\n  if (opts.lean && typeof opts.lean.transform === 'function') {\n    opts.lean.transform(doc);\n\n    for (let i = 0; i < schema.childSchemas.length; i++) {\n      const childPath = path ? path + '.' + schema.childSchemas[i].model.path : schema.childSchemas[i].model.path;\n      const _schema = schema.childSchemas[i].schema;\n      const obj = mpath.get(childPath, doc);\n      if (obj == null) {\n        continue;\n      }\n      if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n          opts.lean.transform(obj[i]);\n        }\n      } else {\n        opts.lean.transform(obj);\n      }\n      _completeOneLean(_schema, obj, childPath, res, opts);\n    }\n    if (callback) {\n      return callback(null, doc);\n    } else {\n      return;\n    }\n  }\n  if (opts.rawResult) {\n    return callback(null, res);\n  }\n  return callback(null, doc);\n}\n\n/*!\n * ignore\n */\n\nfunction _completeManyLean(schema, docs, path, opts) {\n  if (opts.lean && typeof opts.lean.transform === 'function') {\n    for (const doc of docs) {\n      opts.lean.transform(doc);\n    }\n\n    for (let i = 0; i < schema.childSchemas.length; i++) {\n      const childPath = path ? path + '.' + schema.childSchemas[i].model.path : schema.childSchemas[i].model.path;\n      const _schema = schema.childSchemas[i].schema;\n      let doc = mpath.get(childPath, docs);\n      if (doc == null) {\n        continue;\n      }\n      doc = doc.flat();\n      for (let i = 0; i < doc.length; i++) {\n        opts.lean.transform(doc[i]);\n      }\n      _completeManyLean(_schema, doc, childPath, opts);\n    }\n  }\n\n  return docs;\n}\n/**\n * Override mquery.prototype._mergeUpdate to handle mongoose objects in\n * updates.\n *\n * @param {Object} doc\n * @method _mergeUpdate\n * @memberOf Query\n * @instance\n * @api private\n */\n\nQuery.prototype._mergeUpdate = function(doc) {\n  if (doc == null || (typeof doc === 'object' && Object.keys(doc).length === 0)) {\n    return;\n  }\n\n  if (!this._update) {\n    this._update = Array.isArray(doc) ? [] : {};\n  }\n  if (doc instanceof Query) {\n    if (Array.isArray(this._update)) {\n      throw new Error('Cannot mix array and object updates');\n    }\n    if (doc._update) {\n      utils.mergeClone(this._update, doc._update);\n    }\n  } else if (Array.isArray(doc)) {\n    if (!Array.isArray(this._update)) {\n      throw new Error('Cannot mix array and object updates');\n    }\n    this._update = this._update.concat(doc);\n  } else {\n    if (Array.isArray(this._update)) {\n      throw new Error('Cannot mix array and object updates');\n    }\n    utils.mergeClone(this._update, doc);\n  }\n};\n\n/*!\n * ignore\n */\n\nasync function _updateThunk(op) {\n  this._castConditions();\n\n  _castArrayFilters(this);\n\n  if (this.error() != null) {\n    throw this.error();\n  }\n\n  const castedQuery = this._conditions;\n  const options = this._optionsForExec(this.model);\n  this._applyTranslateAliases(options);\n\n  this._update = clone(this._update, options);\n  const isOverwriting = this._mongooseOptions.overwrite && !hasDollarKeys(this._update);\n  if (isOverwriting) {\n    if (op === 'updateOne' || op === 'updateMany') {\n      throw new MongooseError('The MongoDB server disallows ' +\n        'overwriting documents using `' + op + '`. See: ' +\n        'https://mongoosejs.com/docs/deprecations.html#update');\n    }\n    this._update = new this.model(this._update, null, true);\n  } else {\n    this._update = this._castUpdate(this._update, this._mongooseOptions.overwrite);\n\n    if (this._update == null || Object.keys(this._update).length === 0) {\n      return { acknowledged: false };\n    }\n\n    const _opts = Object.assign({}, options, {\n      setDefaultsOnInsert: this._mongooseOptions.setDefaultsOnInsert\n    });\n    this._update = setDefaultsOnInsert(this._conditions, this.model.schema,\n      this._update, _opts);\n  }\n\n  if (Array.isArray(options.arrayFilters)) {\n    options.arrayFilters = removeUnusedArrayFilters(this._update, options.arrayFilters);\n  }\n\n  const runValidators = _getOption(this, 'runValidators', false);\n  if (runValidators) {\n    await this.validate(this._update, options, isOverwriting);\n  }\n\n  if (this._update.toBSON) {\n    this._update = this._update.toBSON();\n  }\n\n  return this._collection.collection[op](castedQuery, this._update, options);\n}\n\n/**\n * Mongoose calls this function internally to validate the query if\n * `runValidators` is set\n *\n * @param {Object} castedDoc the update, after casting\n * @param {Object} options the options from `_optionsForExec()`\n * @param {Boolean} isOverwriting\n * @method validate\n * @memberOf Query\n * @instance\n * @api private\n */\n\nQuery.prototype.validate = async function validate(castedDoc, options, isOverwriting) {\n  if (typeof arguments[3] === 'function') {\n    throw new MongooseError('Query.prototype.validate() no longer accepts a callback');\n  }\n\n  await _executePreHooks(this, 'validate');\n\n  if (isOverwriting) {\n    await castedDoc.$validate();\n  } else {\n    await new Promise((resolve, reject) => {\n      updateValidators(this, this.model.schema, castedDoc, options, (err) => {\n        if (err != null) {\n          return reject(err);\n        }\n        resolve();\n      });\n    });\n  }\n\n  await _executePostHooks(this, null, null, 'validate');\n};\n\n/**\n * Execute an updateMany query\n *\n * @see Model.update https://mongoosejs.com/docs/api/model.html#Model.update()\n * @method _updateMany\n * @memberOf Query\n * @instance\n * @api private\n */\nQuery.prototype._updateMany = async function _updateMany() {\n  return _updateThunk.call(this, 'updateMany');\n};\n\n/**\n * Execute an updateOne query\n *\n * @see Model.update https://mongoosejs.com/docs/api/model.html#Model.update()\n * @method _updateOne\n * @memberOf Query\n * @instance\n * @api private\n */\nQuery.prototype._updateOne = async function _updateOne() {\n  return _updateThunk.call(this, 'updateOne');\n};\n\n/**\n * Execute a replaceOne query\n *\n * @see Model.replaceOne https://mongoosejs.com/docs/api/model.html#Model.replaceOne()\n * @method _replaceOne\n * @memberOf Query\n * @instance\n * @api private\n */\nQuery.prototype._replaceOne = async function _replaceOne() {\n  return _updateThunk.call(this, 'replaceOne');\n};\n\n/**\n * Declare and/or execute this query as an updateMany() operation.\n * MongoDB will update _all_ documents that match `filter` (as opposed to just the first one).\n *\n * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`\n * and `post('updateMany')` instead.\n *\n * #### Example:\n *\n *     const res = await Person.updateMany({ name: /Stark$/ }, { isDeleted: true });\n *     res.n; // Number of documents matched\n *     res.nModified; // Number of documents modified\n *\n * This function triggers the following middleware.\n *\n * - `updateMany()`\n *\n * @param {Object} [filter]\n * @param {Object|Array} [update] the update command\n * @param {Object} [options]\n * @param {Boolean} [options.multipleCastError] by default, mongoose only returns the first error that occurred in casting the query. Turn on this option to aggregate all the cast errors.\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @param {Function} [callback] params are (error, writeOpResult)\n * @return {Query} this\n * @see Model.update https://mongoosejs.com/docs/api/model.html#Model.update()\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see update https://www.mongodb.com/docs/manual/reference/method/db.collection.update/\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/command/update/#update-command-output\n * @api public\n */\n\nQuery.prototype.updateMany = function(conditions, doc, options, callback) {\n  if (typeof options === 'function') {\n    // .update(conditions, doc, callback)\n    callback = options;\n    options = null;\n  } else if (typeof doc === 'function') {\n    // .update(doc, callback);\n    callback = doc;\n    doc = conditions;\n    conditions = {};\n    options = null;\n  } else if (typeof conditions === 'function') {\n    // .update(callback)\n    callback = conditions;\n    conditions = undefined;\n    doc = undefined;\n    options = undefined;\n  } else if (typeof conditions === 'object' && !doc && !options && !callback) {\n    // .update(doc)\n    doc = conditions;\n    conditions = undefined;\n    options = undefined;\n    callback = undefined;\n  }\n\n  return _update(this, 'updateMany', conditions, doc, options, callback);\n};\n\n/**\n * Declare and/or execute this query as an updateOne() operation.\n * MongoDB will update _only_ the first document that matches `filter`.\n *\n * - Use `replaceOne()` if you want to overwrite an entire document rather than using [atomic operators](https://www.mongodb.com/docs/manual/tutorial/model-data-for-atomic-operations/#pattern) like `$set`.\n *\n * **Note** updateOne will _not_ fire update middleware. Use `pre('updateOne')`\n * and `post('updateOne')` instead.\n *\n * #### Example:\n *\n *     const res = await Person.updateOne({ name: 'Jean-Luc Picard' }, { ship: 'USS Enterprise' });\n *     res.acknowledged; // Indicates if this write result was acknowledged. If not, then all other members of this result will be undefined.\n *     res.matchedCount; // Number of documents that matched the filter\n *     res.modifiedCount; // Number of documents that were modified\n *     res.upsertedCount; // Number of documents that were upserted\n *     res.upsertedId; // Identifier of the inserted document (if an upsert took place)\n *\n * This function triggers the following middleware.\n *\n * - `updateOne()`\n *\n * @param {Object} [filter]\n * @param {Object|Array} [update] the update command\n * @param {Object} [options]\n * @param {Boolean} [options.multipleCastError] by default, mongoose only returns the first error that occurred in casting the query. Turn on this option to aggregate all the cast errors.\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @param {Function} [callback] params are (error, writeOpResult)\n * @return {Query} this\n * @see Model.update https://mongoosejs.com/docs/api/model.html#Model.update()\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see update https://www.mongodb.com/docs/manual/reference/method/db.collection.update/\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/command/update/#update-command-output\n * @api public\n */\n\nQuery.prototype.updateOne = function(conditions, doc, options, callback) {\n  if (typeof options === 'function') {\n    // .update(conditions, doc, callback)\n    callback = options;\n    options = null;\n  } else if (typeof doc === 'function') {\n    // .update(doc, callback);\n    callback = doc;\n    doc = conditions;\n    conditions = {};\n    options = null;\n  } else if (typeof conditions === 'function') {\n    // .update(callback)\n    callback = conditions;\n    conditions = undefined;\n    doc = undefined;\n    options = undefined;\n  } else if (typeof conditions === 'object' && !doc && !options && !callback) {\n    // .update(doc)\n    doc = conditions;\n    conditions = undefined;\n    options = undefined;\n    callback = undefined;\n  }\n\n  return _update(this, 'updateOne', conditions, doc, options, callback);\n};\n\n/**\n * Declare and/or execute this query as a replaceOne() operation.\n * MongoDB will replace the existing document and will not accept any [atomic operators](https://www.mongodb.com/docs/manual/tutorial/model-data-for-atomic-operations/#pattern) (`$set`, etc.)\n *\n * **Note** replaceOne will _not_ fire update middleware. Use `pre('replaceOne')`\n * and `post('replaceOne')` instead.\n *\n * #### Example:\n *\n *     const res = await Person.replaceOne({ _id: 24601 }, { name: 'Jean Valjean' });\n *     res.acknowledged; // Indicates if this write result was acknowledged. If not, then all other members of this result will be undefined.\n *     res.matchedCount; // Number of documents that matched the filter\n *     res.modifiedCount; // Number of documents that were modified\n *     res.upsertedCount; // Number of documents that were upserted\n *     res.upsertedId; // Identifier of the inserted document (if an upsert took place)\n *\n * This function triggers the following middleware.\n *\n * - `replaceOne()`\n *\n * @param {Object} [filter]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Boolean} [options.multipleCastError] by default, mongoose only returns the first error that occurred in casting the query. Turn on this option to aggregate all the cast errors.\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @param {Function} [callback] params are (error, writeOpResult)\n * @return {Query} this\n * @see Model.update https://mongoosejs.com/docs/api/model.html#Model.update()\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see update https://www.mongodb.com/docs/manual/reference/method/db.collection.update/\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/command/update/#update-command-output\n * @api public\n */\n\nQuery.prototype.replaceOne = function(conditions, doc, options, callback) {\n  if (typeof options === 'function') {\n    // .update(conditions, doc, callback)\n    callback = options;\n    options = null;\n  } else if (typeof doc === 'function') {\n    // .update(doc, callback);\n    callback = doc;\n    doc = conditions;\n    conditions = {};\n    options = null;\n  } else if (typeof conditions === 'function') {\n    // .update(callback)\n    callback = conditions;\n    conditions = undefined;\n    doc = undefined;\n    options = undefined;\n  } else if (typeof conditions === 'object' && !doc && !options && !callback) {\n    // .update(doc)\n    doc = conditions;\n    conditions = undefined;\n    options = undefined;\n    callback = undefined;\n  }\n\n  this.setOptions({ overwrite: true });\n  return _update(this, 'replaceOne', conditions, doc, options, callback);\n};\n\n/**\n * Internal helper for update, updateMany, updateOne, replaceOne\n * @param {Query} query\n * @param {String} op\n * @param {Object} filter\n * @param {Document} [doc]\n * @param {Object} [options]\n * @param {Function} callback\n * @api private\n */\n\nfunction _update(query, op, filter, doc, options, callback) {\n  // make sure we don't send in the whole Document to merge()\n  query.op = op;\n  query._validateOp();\n  doc = doc || {};\n\n  // strict is an option used in the update checking, make sure it gets set\n  if (options != null) {\n    if ('strict' in options) {\n      query._mongooseOptions.strict = options.strict;\n    }\n  }\n\n  if (!(filter instanceof Query) &&\n      filter != null &&\n      filter.toString() !== '[object Object]') {\n    query.error(new ObjectParameterError(filter, 'filter', op));\n  } else {\n    query.merge(filter);\n  }\n\n  if (utils.isObject(options)) {\n    query.setOptions(options);\n  }\n\n  query._mergeUpdate(doc);\n\n  // Hooks\n  if (callback) {\n    query.exec(callback);\n\n    return query;\n  }\n\n  return Query.base[op].call(query, filter, void 0, options, callback);\n}\n\n/**\n * Runs a function `fn` and treats the return value of `fn` as the new value\n * for the query to resolve to.\n *\n * Any functions you pass to `transform()` will run **after** any post hooks.\n *\n * #### Example:\n *\n *     const res = await MyModel.findOne().transform(res => {\n *       // Sets a `loadedAt` property on the doc that tells you the time the\n *       // document was loaded.\n *       return res == null ?\n *         res :\n *         Object.assign(res, { loadedAt: new Date() });\n *     });\n *\n * @method transform\n * @memberOf Query\n * @instance\n * @param {Function} fn function to run to transform the query result\n * @return {Query} this\n */\n\nQuery.prototype.transform = function(fn) {\n  this._transforms.push(fn);\n  return this;\n};\n\n/**\n * Make this query throw an error if no documents match the given `filter`.\n * This is handy for integrating with async/await, because `orFail()` saves you\n * an extra `if` statement to check if no document was found.\n *\n * #### Example:\n *\n *     // Throws if no doc returned\n *     await Model.findOne({ foo: 'bar' }).orFail();\n *\n *     // Throws if no document was updated. Note that `orFail()` will still\n *     // throw if the only document that matches is `{ foo: 'bar', name: 'test' }`,\n *     // because `orFail()` will throw if no document was _updated_, not\n *     // if no document was _found_.\n *     await Model.updateOne({ foo: 'bar' }, { name: 'test' }).orFail();\n *\n *     // Throws \"No docs found!\" error if no docs match `{ foo: 'bar' }`\n *     await Model.find({ foo: 'bar' }).orFail(new Error('No docs found!'));\n *\n *     // Throws \"Not found\" error if no document was found\n *     await Model.findOneAndUpdate({ foo: 'bar' }, { name: 'test' }).\n *       orFail(() => Error('Not found'));\n *\n * @method orFail\n * @memberOf Query\n * @instance\n * @param {Function|Error} [err] optional error to throw if no docs match `filter`. If not specified, `orFail()` will throw a `DocumentNotFoundError`\n * @return {Query} this\n */\n\nQuery.prototype.orFail = function(err) {\n  this.transform(res => {\n    switch (this.op) {\n      case 'find':\n        if (res.length === 0) {\n          throw _orFailError(err, this);\n        }\n        break;\n      case 'findOne':\n        if (res == null) {\n          throw _orFailError(err, this);\n        }\n        break;\n      case 'replaceOne':\n      case 'updateMany':\n      case 'updateOne':\n        if (res && res.matchedCount === 0) {\n          throw _orFailError(err, this);\n        }\n        break;\n      case 'findOneAndDelete':\n      case 'findOneAndRemove':\n        if ((res && res.lastErrorObject && res.lastErrorObject.n) === 0) {\n          throw _orFailError(err, this);\n        }\n        break;\n      case 'findOneAndUpdate':\n      case 'findOneAndReplace':\n        if ((res && res.lastErrorObject && res.lastErrorObject.updatedExisting) === false) {\n          throw _orFailError(err, this);\n        }\n        break;\n      case 'deleteMany':\n      case 'deleteOne':\n        if (res.deletedCount === 0) {\n          throw _orFailError(err, this);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return res;\n  });\n  return this;\n};\n\n/**\n * Get the error to throw for `orFail()`\n * @param {Error|undefined} err\n * @param {Query} query\n * @api private\n */\n\nfunction _orFailError(err, query) {\n  if (typeof err === 'function') {\n    err = err.call(query);\n  }\n\n  if (err == null) {\n    err = new DocumentNotFoundError(query.getQuery(), query.model.modelName);\n  }\n\n  return err;\n}\n\n/**\n * Wrapper function to call isPathSelectedInclusive on a query.\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.isPathSelectedInclusive = function(path) {\n  return isPathSelectedInclusive(this._fields, path);\n};\n\n/**\n * Executes the query\n *\n * #### Example:\n *\n *     const promise = query.exec();\n *     const promise = query.exec('update');\n *\n * @param {String|Function} [operation]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.exec = async function exec(op) {\n  if (typeof op === 'function' || (arguments.length >= 2 && typeof arguments[1] === 'function')) {\n    throw new MongooseError('Query.prototype.exec() no longer accepts a callback');\n  }\n\n  if (typeof op === 'string') {\n    this.op = op;\n  }\n\n  if (this.op == null) {\n    throw new MongooseError('Query must have `op` before executing');\n  }\n  if (this.model == null) {\n    throw new MongooseError('Query must have an associated model before executing');\n  }\n  this._validateOp();\n\n  if (!this.op) {\n    return;\n  }\n\n  if (this.options && this.options.sort) {\n    const keys = Object.keys(this.options.sort);\n    if (keys.includes('')) {\n      throw new Error('Invalid field \"\" passed to sort()');\n    }\n  }\n\n  let thunk = '_' + this.op;\n  if (this.op === 'distinct') {\n    thunk = '__distinct';\n  }\n\n  if (this._executionStack != null) {\n    let str = this.toString();\n    if (str.length > 60) {\n      str = str.slice(0, 60) + '...';\n    }\n    const err = new MongooseError('Query was already executed: ' + str);\n    err.originalStack = this._executionStack.stack;\n    throw err;\n  } else {\n    this._executionStack = new Error();\n  }\n\n  await _executePreExecHooks(this);\n\n  let res;\n\n  let error = null;\n  try {\n    await _executePreHooks(this);\n    res = await this[thunk]();\n\n    for (const fn of this._transforms) {\n      res = fn(res);\n    }\n  } catch (err) {\n    if (err instanceof Kareem.skipWrappedFunction) {\n      res = err.args[0];\n    } else {\n      error = err;\n    }\n  }\n\n  res = await _executePostHooks(this, res, error);\n\n  await _executePostExecHooks(this);\n\n  return res;\n};\n\n/*!\n * ignore\n */\n\nfunction _executePostExecHooks(query) {\n  return new Promise((resolve, reject) => {\n    query._hooks.execPost('exec', query, [], {}, (error) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve();\n    });\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction _executePostHooks(query, res, error, op) {\n  if (query._queryMiddleware == null) {\n    if (error != null) {\n      throw error;\n    }\n    return res;\n  }\n\n  return new Promise((resolve, reject) => {\n    const opts = error ? { error } : {};\n\n    query._queryMiddleware.execPost(op || query.op, query, [res], opts, (error, res) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(res);\n    });\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction _executePreExecHooks(query) {\n  return new Promise((resolve, reject) => {\n    query._hooks.execPre('exec', query, [], (error) => {\n      if (error != null) {\n        return reject(error);\n      }\n      resolve();\n    });\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction _executePreHooks(query, op) {\n  if (query._queryMiddleware == null) {\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    query._queryMiddleware.execPre(op || query.op, query, [], (error) => {\n      if (error != null) {\n        return reject(error);\n      }\n      resolve();\n    });\n  });\n}\n\n/*!\n * ignore\n */\n\nfunction _wrapThunkCallback(query, cb) {\n  return function(error, res) {\n    if (error != null) {\n      return cb(error);\n    }\n\n    for (const fn of query._transforms) {\n      try {\n        res = fn(res);\n      } catch (error) {\n        return cb(error);\n      }\n    }\n\n    return cb(null, res);\n  };\n}\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * More about [`then()` in JavaScript](https://masteringjs.io/tutorials/fundamentals/then).\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = function(resolve, reject) {\n  return this.exec().then(resolve, reject);\n};\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n * Like `.then()`, but only takes a rejection handler.\n *\n * More about [Promise `catch()` in JavaScript](https://masteringjs.io/tutorials/fundamentals/catch).\n *\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.catch = function(reject) {\n  return this.exec().then(null, reject);\n};\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with `.finally()` chained.\n *\n * More about [Promise `finally()` in JavaScript](https://thecodebarbarian.com/using-promise-finally-in-node-js.html).\n *\n * @param {Function} [onFinally]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.finally = function(onFinally) {\n  return this.exec().finally(onFinally);\n};\n\n/**\n * Returns a string representation of this query.\n *\n * More about [`toString()` in JavaScript](https://masteringjs.io/tutorials/fundamentals/tostring).\n *\n * #### Example:\n *     const q = Model.find();\n *     console.log(q); // Prints \"Query { find }\"\n *\n * @return {String}\n * @api public\n * @method [Symbol.toStringTag]\n * @memberOf Query\n */\n\nQuery.prototype[Symbol.toStringTag] = function toString() {\n  return `Query { ${this.op} }`;\n};\n\n/**\n * Add pre [middleware](https://mongoosejs.com/docs/middleware.html) to this query instance. Doesn't affect\n * other queries.\n *\n * #### Example:\n *\n *     const q1 = Question.find({ answer: 42 });\n *     q1.pre(function middleware() {\n *       console.log(this.getFilter());\n *     });\n *     await q1.exec(); // Prints \"{ answer: 42 }\"\n *\n *     // Doesn't print anything, because `middleware()` is only\n *     // registered on `q1`.\n *     await Question.find({ answer: 42 });\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.pre = function(fn) {\n  this._hooks.pre('exec', fn);\n  return this;\n};\n\n/**\n * Add post [middleware](https://mongoosejs.com/docs/middleware.html) to this query instance. Doesn't affect\n * other queries.\n *\n * #### Example:\n *\n *     const q1 = Question.find({ answer: 42 });\n *     q1.post(function middleware() {\n *       console.log(this.getFilter());\n *     });\n *     await q1.exec(); // Prints \"{ answer: 42 }\"\n *\n *     // Doesn't print anything, because `middleware()` is only\n *     // registered on `q1`.\n *     await Question.find({ answer: 42 });\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.post = function(fn) {\n  this._hooks.post('exec', fn);\n  return this;\n};\n\n/**\n * Casts obj for an update command.\n *\n * @param {Object} obj\n * @param {Boolean} overwrite\n * @return {Object} obj after casting its values\n * @method _castUpdate\n * @memberOf Query\n * @instance\n * @api private\n */\n\nQuery.prototype._castUpdate = function _castUpdate(obj, overwrite) {\n  let schema = this.schema;\n\n  const discriminatorKey = schema.options.discriminatorKey;\n  const baseSchema = schema._baseSchema ? schema._baseSchema : schema;\n  if (this._mongooseOptions.overwriteDiscriminatorKey &&\n      obj[discriminatorKey] != null &&\n      baseSchema.discriminators) {\n    const _schema = Object.values(baseSchema.discriminators).find(\n      discriminator => discriminator.discriminatorMapping.value === obj[discriminatorKey]\n    );\n    if (_schema != null) {\n      schema = _schema;\n    }\n  }\n\n  let upsert;\n  if ('upsert' in this.options) {\n    upsert = this.options.upsert;\n  }\n\n  const filter = this._conditions;\n  if (schema != null &&\n      utils.hasUserDefinedProperty(filter, schema.options.discriminatorKey) &&\n      typeof filter[schema.options.discriminatorKey] !== 'object' &&\n      schema.discriminators != null) {\n    const discriminatorValue = filter[schema.options.discriminatorKey];\n    const byValue = getDiscriminatorByValue(this.model.discriminators, discriminatorValue);\n    schema = schema.discriminators[discriminatorValue] ||\n      (byValue && byValue.schema) ||\n      schema;\n  }\n\n  return castUpdate(schema, obj, {\n    overwrite: overwrite,\n    strict: this._mongooseOptions.strict,\n    upsert: upsert,\n    arrayFilters: this.options.arrayFilters,\n    overwriteDiscriminatorKey: this._mongooseOptions.overwriteDiscriminatorKey\n  }, this, this._conditions);\n};\n\n/**\n * Specifies paths which should be populated with other documents.\n *\n * #### Example:\n *\n *     let book = await Book.findOne().populate('authors');\n *     book.title; // 'Node.js in Action'\n *     book.authors[0].name; // 'TJ Holowaychuk'\n *     book.authors[1].name; // 'Nathan Rajlich'\n *\n *     let books = await Book.find().populate({\n *       path: 'authors',\n *       // `match` and `sort` apply to the Author model,\n *       // not the Book model. These options do not affect\n *       // which documents are in `books`, just the order and\n *       // contents of each book document's `authors`.\n *       match: { name: new RegExp('.*h.*', 'i') },\n *       sort: { name: -1 }\n *     });\n *     books[0].title; // 'Node.js in Action'\n *     // Each book's `authors` are sorted by name, descending.\n *     books[0].authors[0].name; // 'TJ Holowaychuk'\n *     books[0].authors[1].name; // 'Marc Harter'\n *\n *     books[1].title; // 'Professional AngularJS'\n *     // Empty array, no authors' name has the letter 'h'\n *     books[1].authors; // []\n *\n * Paths are populated after the query executes and a response is received. A\n * separate query is then executed for each path specified for population. After\n * a response for each query has also been returned, the results are passed to\n * the callback.\n *\n * @param {Object|String|String[]} path either the path(s) to populate or an object specifying all parameters\n * @param {Object|String} [select] Field selection for the population query\n * @param {Model} [model] The model you wish to use for population. If not specified, populate will look up the model by the name in the Schema's `ref` field.\n * @param {Object} [match] Conditions for the population query\n * @param {Object} [options] Options for the population query (sort, etc)\n * @param {String} [options.path=null] The path to populate.\n * @param {boolean} [options.retainNullValues=false] by default, Mongoose removes null and undefined values from populated arrays. Use this option to make `populate()` retain `null` and `undefined` array entries.\n * @param {boolean} [options.getters=false] if true, Mongoose will call any getters defined on the `localField`. By default, Mongoose gets the raw value of `localField`. For example, you would need to set this option to `true` if you wanted to [add a `lowercase` getter to your `localField`](https://mongoosejs.com/docs/schematypes.html#schematype-options).\n * @param {boolean} [options.clone=false] When you do `BlogPost.find().populate('author')`, blog posts with the same author will share 1 copy of an `author` doc. Enable this option to make Mongoose clone populated docs before assigning them.\n * @param {Object|Function} [options.match=null] Add an additional filter to the populate query. Can be a filter object containing [MongoDB query syntax](https://www.mongodb.com/docs/manual/tutorial/query-documents/), or a function that returns a filter object.\n * @param {Function} [options.transform=null] Function that Mongoose will call on every populated document that allows you to transform the populated document.\n * @param {Object} [options.options=null] Additional options like `limit` and `lean`.\n * @see population https://mongoosejs.com/docs/populate.html\n * @see Query#select https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @see Model.populate https://mongoosejs.com/docs/api/model.html#Model.populate()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.populate = function() {\n  // Bail when given no truthy arguments\n  if (!Array.from(arguments).some(Boolean)) {\n    return this;\n  }\n\n  const res = utils.populate.apply(null, arguments);\n\n  // Propagate readConcern and readPreference and lean from parent query,\n  // unless one already specified\n  if (this.options != null) {\n    const readConcern = this.options.readConcern;\n    const readPref = this.options.readPreference;\n\n    for (const populateOptions of res) {\n      if (readConcern != null && (populateOptions && populateOptions.options && populateOptions.options.readConcern) == null) {\n        populateOptions.options = populateOptions.options || {};\n        populateOptions.options.readConcern = readConcern;\n      }\n      if (readPref != null && (populateOptions && populateOptions.options && populateOptions.options.readPreference) == null) {\n        populateOptions.options = populateOptions.options || {};\n        populateOptions.options.readPreference = readPref;\n      }\n    }\n  }\n\n  const opts = this._mongooseOptions;\n\n  if (opts.lean != null) {\n    const lean = opts.lean;\n    for (const populateOptions of res) {\n      if ((populateOptions && populateOptions.options && populateOptions.options.lean) == null) {\n        populateOptions.options = populateOptions.options || {};\n        populateOptions.options.lean = lean;\n      }\n    }\n  }\n\n  if (!utils.isObject(opts.populate)) {\n    opts.populate = {};\n  }\n\n  const pop = opts.populate;\n\n  for (const populateOptions of res) {\n    const path = populateOptions.path;\n    if (pop[path] && pop[path].populate && populateOptions.populate) {\n      populateOptions.populate = pop[path].populate.concat(populateOptions.populate);\n    }\n\n    pop[populateOptions.path] = populateOptions;\n  }\n  return this;\n};\n\n/**\n * Gets a list of paths to be populated by this query\n *\n * #### Example:\n *\n *      bookSchema.pre('findOne', function() {\n *        let keys = this.getPopulatedPaths(); // ['author']\n *      });\n *      ...\n *      Book.findOne({}).populate('author');\n *\n * #### Example:\n *\n *      // Deep populate\n *      const q = L1.find().populate({\n *        path: 'level2',\n *        populate: { path: 'level3' }\n *      });\n *      q.getPopulatedPaths(); // ['level2', 'level2.level3']\n *\n * @return {Array} an array of strings representing populated paths\n * @api public\n */\n\nQuery.prototype.getPopulatedPaths = function getPopulatedPaths() {\n  const obj = this._mongooseOptions.populate || {};\n  const ret = Object.keys(obj);\n  for (const path of Object.keys(obj)) {\n    const pop = obj[path];\n    if (!Array.isArray(pop.populate)) {\n      continue;\n    }\n    _getPopulatedPaths(ret, pop.populate, path + '.');\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nfunction _getPopulatedPaths(list, arr, prefix) {\n  for (const pop of arr) {\n    list.push(prefix + pop.path);\n    if (!Array.isArray(pop.populate)) {\n      continue;\n    }\n    _getPopulatedPaths(list, pop.populate, prefix + pop.path + '.');\n  }\n}\n\n/**\n * Casts this query to the schema of `model`\n *\n * #### Note:\n *\n * If `obj` is present, it is cast instead of this query.\n *\n * @param {Model} [model] the model to cast to. If not set, defaults to `this.model`\n * @param {Object} [obj]\n * @return {Object}\n * @api public\n */\n\nQuery.prototype.cast = function(model, obj) {\n  obj || (obj = this._conditions);\n\n  model = model || this.model;\n  const discriminatorKey = model.schema.options.discriminatorKey;\n  if (obj != null &&\n      obj.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, obj[discriminatorKey]) || model;\n  }\n\n  const opts = { upsert: this.options && this.options.upsert };\n  if (this.options) {\n    if ('strict' in this.options) {\n      opts.strict = this.options.strict;\n    }\n    if ('strictQuery' in this.options) {\n      opts.strictQuery = this.options.strictQuery;\n    }\n  }\n\n  try {\n    return cast(model.schema, obj, opts, this);\n  } catch (err) {\n    // CastError, assign model\n    if (typeof err.setModel === 'function') {\n      err.setModel(model);\n    }\n    throw err;\n  }\n};\n\n/**\n * Casts selected field arguments for field selection with mongo 2.2\n *\n *     query.select({ ids: { $elemMatch: { $in: [hexString] }})\n *\n * @param {Object} fields\n * @see https://github.com/Automattic/mongoose/issues/1091\n * @see https://www.mongodb.com/docs/manual/reference/projection/elemMatch/\n * @api private\n */\n\nQuery.prototype._castFields = function _castFields(fields) {\n  let selected,\n      elemMatchKeys,\n      keys,\n      key,\n      out,\n      i;\n\n  if (fields) {\n    keys = Object.keys(fields);\n    elemMatchKeys = [];\n    i = keys.length;\n\n    // collect $elemMatch args\n    while (i--) {\n      key = keys[i];\n      if (fields[key].$elemMatch) {\n        selected || (selected = {});\n        selected[key] = fields[key];\n        elemMatchKeys.push(key);\n      }\n    }\n  }\n\n  if (selected) {\n    // they passed $elemMatch, cast em\n    try {\n      out = this.cast(this.model, selected);\n    } catch (err) {\n      return err;\n    }\n\n    // apply the casted field args\n    i = elemMatchKeys.length;\n    while (i--) {\n      key = elemMatchKeys[i];\n      fields[key] = out[key];\n    }\n  }\n\n  return fields;\n};\n\n/**\n * Applies schematype selected options to this query.\n * @api private\n */\n\nQuery.prototype._applyPaths = function applyPaths() {\n  if (!this.model) {\n    return;\n  }\n  this._fields = this._fields || {};\n  helpers.applyPaths(this._fields, this.model.schema);\n\n  let _selectPopulatedPaths = true;\n\n  if ('selectPopulatedPaths' in this.model.base.options) {\n    _selectPopulatedPaths = this.model.base.options.selectPopulatedPaths;\n  }\n  if ('selectPopulatedPaths' in this.model.schema.options) {\n    _selectPopulatedPaths = this.model.schema.options.selectPopulatedPaths;\n  }\n\n  if (_selectPopulatedPaths) {\n    selectPopulatedFields(this._fields, this._userProvidedFields, this._mongooseOptions.populate);\n  }\n};\n\n/**\n * Returns a wrapper around a [mongodb driver cursor](https://mongodb.github.io/node-mongodb-native/4.9/classes/FindCursor.html).\n * A QueryCursor exposes a Streams3 interface, as well as a `.next()` function.\n *\n * The `.cursor()` function triggers pre find hooks, but **not** post find hooks.\n *\n * #### Example:\n *\n *     // There are 2 ways to use a cursor. First, as a stream:\n *     Thing.\n *       find({ name: /^hello/ }).\n *       cursor().\n *       on('data', function(doc) { console.log(doc); }).\n *       on('end', function() { console.log('Done!'); });\n *\n *     // Or you can use `.next()` to manually get the next doc in the stream.\n *     // `.next()` returns a promise, so you can use promises or callbacks.\n *     const cursor = Thing.find({ name: /^hello/ }).cursor();\n *     cursor.next(function(error, doc) {\n *       console.log(doc);\n *     });\n *\n *     // Because `.next()` returns a promise, you can use co\n *     // to easily iterate through all documents without loading them\n *     // all into memory.\n *     const cursor = Thing.find({ name: /^hello/ }).cursor();\n *     for (let doc = await cursor.next(); doc != null; doc = await cursor.next()) {\n *       console.log(doc);\n *     }\n *\n * #### Valid options\n *\n *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data` and returned by `.next()`.\n *\n * @return {QueryCursor}\n * @param {Object} [options]\n * @see QueryCursor https://mongoosejs.com/docs/api/querycursor.html\n * @api public\n */\n\nQuery.prototype.cursor = function cursor(opts) {\n  if (opts) {\n    this.setOptions(opts);\n  }\n\n  const options = this._optionsForExec();\n\n  try {\n    this.cast(this.model);\n  } catch (err) {\n    return (new QueryCursor(this, options))._markError(err);\n  }\n\n  return new QueryCursor(this, options);\n};\n\n// the rest of these are basically to support older Mongoose syntax with mquery\n\n/**\n * Sets the tailable option (for use with capped collections).\n *\n * #### Example:\n *\n *     query.tailable(); // true\n *     query.tailable(true);\n *     query.tailable(false);\n *\n *     // Set both `tailable` and `awaitData` options\n *     query.tailable({ awaitData: true });\n *\n * #### Note:\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} bool defaults to true\n * @param {Object} [opts] options to set\n * @param {Boolean} [opts.awaitData] false by default. Set to true to keep the cursor open even if there's no data.\n * @param {Number} [opts.maxAwaitTimeMS] the maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true\n * @see tailable https://www.mongodb.com/docs/manual/tutorial/create-tailable-cursor/\n * @api public\n */\n\nQuery.prototype.tailable = function(val, opts) {\n  // we need to support the tailable({ awaitData : true }) as well as the\n  // tailable(true, {awaitData :true}) syntax that mquery does not support\n  if (val != null && typeof val.constructor === 'function' && val.constructor.name === 'Object') {\n    opts = val;\n    val = true;\n  }\n\n  if (val === undefined) {\n    val = true;\n  }\n\n  if (opts && typeof opts === 'object') {\n    for (const key of Object.keys(opts)) {\n      if (key === 'awaitData' || key === 'awaitdata') { // backwards compat, see gh-10875\n        // For backwards compatibility\n        this.options['awaitData'] = !!opts[key];\n      } else {\n        this.options[key] = opts[key];\n      }\n    }\n  }\n\n  return Query.base.tailable.call(this, val);\n};\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * #### Example:\n *\n *     query.where('path').intersects().geometry({\n *       type: 'LineString',\n *       coordinates: [[180.0, 11.0], [180, 9.0]]\n *     });\n *\n *     query.where('path').intersects({\n *       type: 'LineString',\n *       coordinates: [[180.0, 11.0], [180, 9.0]]\n *     });\n *\n * #### Note:\n *\n * **MUST** be used after `where()`.\n *\n * #### Note:\n *\n * In Mongoose 3.7, `intersects` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within).\n *\n * @method intersects\n * @memberOf Query\n * @instance\n * @param {Object} [arg]\n * @return {Query} this\n * @see $geometry https://www.mongodb.com/docs/manual/reference/operator/geometry/\n * @see geoIntersects https://www.mongodb.com/docs/manual/reference/operator/geoIntersects/\n * @api public\n */\n\n/**\n * Specifies a `$geometry` condition\n *\n * #### Example:\n *\n *     const polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     const polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     const polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * The argument is assigned to the most recent path passed to `where()`.\n *\n * #### Note:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * @method geometry\n * @memberOf Query\n * @instance\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see $geometry https://www.mongodb.com/docs/manual/reference/operator/geometry/\n * @see Geospatial Support Enhancements https://www.mongodb.com/docs/manual/release-notes/2.4/#geospatial-support-enhancements\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @api public\n */\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * #### Example:\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *\n * @method near\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see $near https://www.mongodb.com/docs/manual/reference/operator/near/\n * @see $nearSphere https://www.mongodb.com/docs/manual/reference/operator/nearSphere/\n * @see $maxDistance https://www.mongodb.com/docs/manual/reference/operator/maxDistance/\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @api public\n */\n\n/**\n * Overwriting mquery is needed to support a couple different near() forms found in older\n * versions of mongoose\n * near([1,1])\n * near(1,1)\n * near(field, [1,2])\n * near(field, 1, 2)\n * In addition to all of the normal forms supported by mquery\n *\n * @method near\n * @memberOf Query\n * @instance\n * @api private\n */\n\nQuery.prototype.near = function() {\n  const params = [];\n  const sphere = this._mongooseOptions.nearSphere;\n\n  // TODO refactor\n\n  if (arguments.length === 1) {\n    if (Array.isArray(arguments[0])) {\n      params.push({ center: arguments[0], spherical: sphere });\n    } else if (typeof arguments[0] === 'string') {\n      // just passing a path\n      params.push(arguments[0]);\n    } else if (utils.isObject(arguments[0])) {\n      if (typeof arguments[0].spherical !== 'boolean') {\n        arguments[0].spherical = sphere;\n      }\n      params.push(arguments[0]);\n    } else {\n      throw new TypeError('invalid argument');\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      params.push({ center: [arguments[0], arguments[1]], spherical: sphere });\n    } else if (typeof arguments[0] === 'string' && Array.isArray(arguments[1])) {\n      params.push(arguments[0]);\n      params.push({ center: arguments[1], spherical: sphere });\n    } else if (typeof arguments[0] === 'string' && utils.isObject(arguments[1])) {\n      params.push(arguments[0]);\n      if (typeof arguments[1].spherical !== 'boolean') {\n        arguments[1].spherical = sphere;\n      }\n      params.push(arguments[1]);\n    } else {\n      throw new TypeError('invalid argument');\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'number'\n        && typeof arguments[2] === 'number') {\n      params.push(arguments[0]);\n      params.push({ center: [arguments[1], arguments[2]], spherical: sphere });\n    } else {\n      throw new TypeError('invalid argument');\n    }\n  } else {\n    throw new TypeError('invalid argument');\n  }\n\n  return Query.base.near.apply(this, params);\n};\n\n/**\n * _DEPRECATED_ Specifies a `$nearSphere` condition\n *\n * #### Example:\n *\n *     query.where('loc').nearSphere({ center: [10, 10], maxDistance: 5 });\n *\n * **Deprecated.** Use `query.near()` instead with the `spherical` option set to `true`.\n *\n * #### Example:\n *\n *     query.where('loc').near({ center: [10, 10], spherical: true });\n *\n * @deprecated\n * @see near() https://mongoosejs.com/docs/api/query.html#Query.prototype.near()\n * @see $near https://www.mongodb.com/docs/manual/reference/operator/near/\n * @see $nearSphere https://www.mongodb.com/docs/manual/reference/operator/nearSphere/\n * @see $maxDistance https://www.mongodb.com/docs/manual/reference/operator/maxDistance/\n */\n\nQuery.prototype.nearSphere = function() {\n  this._mongooseOptions.nearSphere = true;\n  this.near.apply(this, arguments);\n  return this;\n};\n\n/**\n * Returns an asyncIterator for use with [`for/await/of` loops](https://thecodebarbarian.com/getting-started-with-async-iterators-in-node-js)\n * This function *only* works for `find()` queries.\n * You do not need to call this function explicitly, the JavaScript runtime\n * will call it for you.\n *\n * #### Example:\n *\n *     for await (const doc of Model.aggregate([{ $sort: { name: 1 } }])) {\n *       console.log(doc.name);\n *     }\n *\n * Node.js 10.x supports async iterators natively without any flags. You can\n * enable async iterators in Node.js 8.x using the [`--harmony_async_iteration` flag](https://github.com/tc39/proposal-async-iteration/issues/117#issuecomment-346695187).\n *\n * **Note:** This function is not if `Symbol.asyncIterator` is undefined. If\n * `Symbol.asyncIterator` is undefined, that means your Node.js version does not\n * support async iterators.\n *\n * @method [Symbol.asyncIterator]\n * @memberOf Query\n * @instance\n * @api public\n */\n\nif (Symbol.asyncIterator != null) {\n  Query.prototype[Symbol.asyncIterator] = function() {\n    return this.cursor().transformNull()._transformForAsyncIterator();\n  };\n}\n\n/**\n * Specifies a `$polygon` condition\n *\n * #### Example:\n *\n *     query.where('loc').within().polygon([10, 20], [13, 25], [7, 15]);\n *     query.polygon('loc', [10, 20], [13, 25], [7, 15]);\n *\n * @method polygon\n * @memberOf Query\n * @instance\n * @param {String|Array} [path]\n * @param {...Array|Object} [coordinatePairs]\n * @return {Query} this\n * @see $polygon https://www.mongodb.com/docs/manual/reference/operator/polygon/\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @api public\n */\n\n/**\n * Specifies a `$box` condition\n *\n * #### Example:\n *\n *     const lowerLeft = [40.73083, -73.99756]\n *     const upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box({ ll : lowerLeft, ur : upperRight })\n *\n * @method box\n * @memberOf Query\n * @instance\n * @see $box https://www.mongodb.com/docs/manual/reference/operator/box/\n * @see within() Query#within https://mongoosejs.com/docs/api/query.html#Query.prototype.within()\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @param {Object|Array<Number>} val1 Lower Left Coordinates OR a object of lower-left(ll) and upper-right(ur) Coordinates\n * @param {Array<Number>} [val2] Upper Right Coordinates\n * @return {Query} this\n * @api public\n */\n\n/**\n * this is needed to support the mongoose syntax of:\n * box(field, { ll : [x,y], ur : [x2,y2] })\n * box({ ll : [x,y], ur : [x2,y2] })\n *\n * @method box\n * @memberOf Query\n * @instance\n * @api private\n */\n\nQuery.prototype.box = function(ll, ur) {\n  if (!Array.isArray(ll) && utils.isObject(ll)) {\n    ur = ll.ur;\n    ll = ll.ll;\n  }\n  return Query.base.box.call(this, ll, ur);\n};\n\n/**\n * Specifies a `$center` or `$centerSphere` condition.\n *\n * #### Example:\n *\n *     const area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     // alternatively\n *     query.circle('loc', area);\n *\n *     // spherical calculations\n *     const area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     // alternatively\n *     query.circle('loc', area);\n *\n * @method circle\n * @memberOf Query\n * @instance\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see $center https://www.mongodb.com/docs/manual/reference/operator/center/\n * @see $centerSphere https://www.mongodb.com/docs/manual/reference/operator/centerSphere/\n * @see $geoWithin https://www.mongodb.com/docs/manual/reference/operator/geoWithin/\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @api public\n */\n\n/**\n * _DEPRECATED_ Alias for [circle](https://mongoosejs.com/docs/api/query.html#Query.prototype.circle())\n *\n * **Deprecated.** Use [circle](https://mongoosejs.com/docs/api/query.html#Query.prototype.circle()) instead.\n *\n * @deprecated\n * @method center\n * @memberOf Query\n * @instance\n * @api public\n */\n\nQuery.prototype.center = Query.base.circle;\n\n/**\n * _DEPRECATED_ Specifies a `$centerSphere` condition\n *\n * **Deprecated.** Use [circle](https://mongoosejs.com/docs/api/query.html#Query.prototype.circle()) instead.\n *\n * #### Example:\n *\n *     const area = { center: [50, 50], radius: 10 };\n *     query.where('loc').within().centerSphere(area);\n *\n * @deprecated\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see MongoDB Geospatial Indexing https://www.mongodb.com/docs/manual/core/geospatial-indexes/\n * @see $centerSphere https://www.mongodb.com/docs/manual/reference/operator/centerSphere/\n * @api public\n */\n\nQuery.prototype.centerSphere = function() {\n  if (arguments[0] != null && typeof arguments[0].constructor === 'function' && arguments[0].constructor.name === 'Object') {\n    arguments[0].spherical = true;\n  }\n\n  if (arguments[1] != null && typeof arguments[1].constructor === 'function' && arguments[1].constructor.name === 'Object') {\n    arguments[1].spherical = true;\n  }\n\n  Query.base.circle.apply(this, arguments);\n};\n\n/**\n * Determines if field selection has been made.\n *\n * @method selected\n * @memberOf Query\n * @instance\n * @return {Boolean}\n * @api public\n */\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively(); // false\n *     query.select('name');\n *     query.selectedInclusively(); // true\n *\n * @method selectedInclusively\n * @memberOf Query\n * @instance\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively() {\n  return isInclusive(this._fields);\n};\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExclusively(); // false\n *     query.select('-name');\n *     query.selectedExclusively(); // true\n *     query.selectedInclusively(); // false\n *\n * @method selectedExclusively\n * @memberOf Query\n * @instance\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively() {\n  return isExclusive(this._fields);\n};\n\n/**\n * The model this query is associated with.\n *\n * #### Example:\n *\n *     const q = MyModel.find();\n *     q.model === MyModel; // true\n *\n * @api public\n * @property model\n * @memberOf Query\n * @instance\n */\n\nQuery.prototype.model;\n\n/*!\n * Export\n */\n\nmodule.exports = Query;\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('../error/mongooseError');\nconst Readable = require('stream').Readable;\nconst eachAsync = require('../helpers/cursor/eachAsync');\nconst immediate = require('../helpers/immediate');\nconst util = require('util');\n\n/**\n * An AggregationCursor is a concurrency primitive for processing aggregation\n * results one document at a time. It is analogous to QueryCursor.\n *\n * An AggregationCursor fulfills the Node.js streams3 API,\n * in addition to several other mechanisms for loading documents from MongoDB\n * one at a time.\n *\n * Creating an AggregationCursor executes the model's pre aggregate hooks,\n * but **not** the model's post aggregate hooks.\n *\n * Unless you're an advanced user, do **not** instantiate this class directly.\n * Use [`Aggregate#cursor()`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.cursor()) instead.\n *\n * @param {Aggregate} agg\n * @inherits Readable https://nodejs.org/api/stream.html#class-streamreadable\n * @event `cursor`: Emitted when the cursor is created\n * @event `error`: Emitted when an error occurred\n * @event `data`: Emitted when the stream is flowing and the next doc is ready\n * @event `end`: Emitted when the stream is exhausted\n * @api public\n */\n\nfunction AggregationCursor(agg) {\n  // set autoDestroy=true because on node 12 it's by default false\n  // gh-10902 need autoDestroy to destroy correctly and emit 'close' event\n  Readable.call(this, { autoDestroy: true, objectMode: true });\n\n  this.cursor = null;\n  this.agg = agg;\n  this._transforms = [];\n  const model = agg._model;\n  delete agg.options.cursor.useMongooseAggCursor;\n  this._mongooseOptions = {};\n\n  _init(model, this, agg);\n}\n\nutil.inherits(AggregationCursor, Readable);\n\n/*!\n * ignore\n */\n\nfunction _init(model, c, agg) {\n  if (!model.collection.buffer) {\n    model.hooks.execPre('aggregate', agg, function() {\n      c.cursor = model.collection.aggregate(agg._pipeline, agg.options || {});\n      c.emit('cursor', c.cursor);\n    });\n  } else {\n    model.collection.emitter.once('queue', function() {\n      model.hooks.execPre('aggregate', agg, function() {\n        c.cursor = model.collection.aggregate(agg._pipeline, agg.options || {});\n        c.emit('cursor', c.cursor);\n      });\n    });\n  }\n}\n\n/**\n * Necessary to satisfy the Readable API\n * @method _read\n * @memberOf AggregationCursor\n * @instance\n * @api private\n */\n\nAggregationCursor.prototype._read = function() {\n  const _this = this;\n  _next(this, function(error, doc) {\n    if (error) {\n      return _this.emit('error', error);\n    }\n    if (!doc) {\n      _this.push(null);\n      _this.cursor.close(function(error) {\n        if (error) {\n          return _this.emit('error', error);\n        }\n      });\n      return;\n    }\n    _this.push(doc);\n  });\n};\n\nif (Symbol.asyncIterator != null) {\n  const msg = 'Mongoose does not support using async iterators with an ' +\n    'existing aggregation cursor. See https://bit.ly/mongoose-async-iterate-aggregation';\n\n  AggregationCursor.prototype[Symbol.asyncIterator] = function() {\n    throw new MongooseError(msg);\n  };\n}\n\n/**\n * Registers a transform function which subsequently maps documents retrieved\n * via the streams interface or `.next()`\n *\n * #### Example:\n *\n *     // Map documents returned by `data` events\n *     Thing.\n *       find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *        doc.foo = \"bar\";\n *        return doc;\n *       })\n *       on('data', function(doc) { console.log(doc.foo); });\n *\n *     // Or map documents returned by `.next()`\n *     const cursor = Thing.find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *         doc.foo = \"bar\";\n *         return doc;\n *       });\n *     cursor.next(function(error, doc) {\n *       console.log(doc.foo);\n *     });\n *\n * @param {Function} fn\n * @return {AggregationCursor}\n * @memberOf AggregationCursor\n * @api public\n * @method map\n */\n\nObject.defineProperty(AggregationCursor.prototype, 'map', {\n  value: function(fn) {\n    this._transforms.push(fn);\n    return this;\n  },\n  enumerable: true,\n  configurable: true,\n  writable: true\n});\n\n/**\n * Marks this cursor as errored\n * @method _markError\n * @instance\n * @memberOf AggregationCursor\n * @api private\n */\n\nAggregationCursor.prototype._markError = function(error) {\n  this._error = error;\n  return this;\n};\n\n/**\n * Marks this cursor as closed. Will stop streaming and subsequent calls to\n * `next()` will error.\n *\n * @param {Function} callback\n * @return {Promise}\n * @api public\n * @method close\n * @emits close\n * @see AggregationCursor.close https://mongodb.github.io/node-mongodb-native/4.9/classes/AggregationCursor.html#close\n */\n\nAggregationCursor.prototype.close = async function close() {\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('AggregationCursor.prototype.close() no longer accepts a callback');\n  }\n  try {\n    await this.cursor.close();\n  } catch (error) {\n    this.listeners('error').length > 0 && this.emit('error', error);\n    throw error;\n  }\n  this.emit('close');\n};\n\n/**\n * Get the next document from this cursor. Will return `null` when there are\n * no documents left.\n *\n * @return {Promise}\n * @api public\n * @method next\n */\n\nAggregationCursor.prototype.next = async function next() {\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('AggregationCursor.prototype.next() no longer accepts a callback');\n  }\n  return new Promise((resolve, reject) => {\n    _next(this, (err, res) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n};\n\n/**\n * Execute `fn` for every document in the cursor. If `fn` returns a promise,\n * will wait for the promise to resolve before iterating on to the next one.\n * Returns a promise that resolves when done.\n *\n * @param {Function} fn\n * @param {Object} [options]\n * @param {Number} [options.parallel] the number of promises to execute in parallel. Defaults to 1.\n * @param {Function} [callback] executed when all docs have been processed\n * @return {Promise}\n * @api public\n * @method eachAsync\n */\n\nAggregationCursor.prototype.eachAsync = function(fn, opts, callback) {\n  const _this = this;\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  return eachAsync(function(cb) { return _next(_this, cb); }, fn, opts, callback);\n};\n\n/**\n * Returns an asyncIterator for use with [`for/await/of` loops](https://thecodebarbarian.com/getting-started-with-async-iterators-in-node-js)\n * You do not need to call this function explicitly, the JavaScript runtime\n * will call it for you.\n *\n * #### Example:\n *\n *     // Async iterator without explicitly calling `cursor()`. Mongoose still\n *     // creates an AggregationCursor instance internally.\n *     const agg = Model.aggregate([{ $match: { age: { $gte: 25 } } }]);\n *     for await (const doc of agg) {\n *       console.log(doc.name);\n *     }\n *\n *     // You can also use an AggregationCursor instance for async iteration\n *     const cursor = Model.aggregate([{ $match: { age: { $gte: 25 } } }]).cursor();\n *     for await (const doc of cursor) {\n *       console.log(doc.name);\n *     }\n *\n * Node.js 10.x supports async iterators natively without any flags. You can\n * enable async iterators in Node.js 8.x using the [`--harmony_async_iteration` flag](https://github.com/tc39/proposal-async-iteration/issues/117#issuecomment-346695187).\n *\n * **Note:** This function is not set if `Symbol.asyncIterator` is undefined. If\n * `Symbol.asyncIterator` is undefined, that means your Node.js version does not\n * support async iterators.\n *\n * @method [Symbol.asyncIterator]\n * @memberOf AggregationCursor\n * @instance\n * @api public\n */\n\nif (Symbol.asyncIterator != null) {\n  AggregationCursor.prototype[Symbol.asyncIterator] = function() {\n    return this.transformNull()._transformForAsyncIterator();\n  };\n}\n\n/*!\n * ignore\n */\n\nAggregationCursor.prototype._transformForAsyncIterator = function() {\n  if (this._transforms.indexOf(_transformForAsyncIterator) === -1) {\n    this.map(_transformForAsyncIterator);\n  }\n  return this;\n};\n\n/*!\n * ignore\n */\n\nAggregationCursor.prototype.transformNull = function(val) {\n  if (arguments.length === 0) {\n    val = true;\n  }\n  this._mongooseOptions.transformNull = val;\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _transformForAsyncIterator(doc) {\n  return doc == null ? { done: true } : { value: doc, done: false };\n}\n\n/**\n * Adds a [cursor flag](https://mongodb.github.io/node-mongodb-native/4.9/classes/AggregationCursor.html#addCursorFlag).\n * Useful for setting the `noCursorTimeout` and `tailable` flags.\n *\n * @param {String} flag\n * @param {Boolean} value\n * @return {AggregationCursor} this\n * @api public\n * @method addCursorFlag\n */\n\nAggregationCursor.prototype.addCursorFlag = function(flag, value) {\n  const _this = this;\n  _waitForCursor(this, function() {\n    _this.cursor.addCursorFlag(flag, value);\n  });\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction _waitForCursor(ctx, cb) {\n  if (ctx.cursor) {\n    return cb();\n  }\n  ctx.once('cursor', function() {\n    cb();\n  });\n}\n\n/**\n * Get the next doc from the underlying cursor and mongooseify it\n * (populate, etc.)\n * @param {Any} ctx\n * @param {Function} cb\n * @api private\n */\n\nfunction _next(ctx, cb) {\n  let callback = cb;\n  if (ctx._transforms.length) {\n    callback = function(err, doc) {\n      if (err || (doc === null && !ctx._mongooseOptions.transformNull)) {\n        return cb(err, doc);\n      }\n      cb(err, ctx._transforms.reduce(function(doc, fn) {\n        return fn(doc);\n      }, doc));\n    };\n  }\n\n  if (ctx._error) {\n    return immediate(function() {\n      callback(ctx._error);\n    });\n  }\n\n  if (ctx.cursor) {\n    return ctx.cursor.next().then(\n      doc => {\n        if (!doc) {\n          return callback(null, null);\n        }\n\n        callback(null, doc);\n      },\n      err => callback(err)\n    );\n  } else {\n    ctx.once('cursor', function() {\n      _next(ctx, cb);\n    });\n  }\n}\n\nmodule.exports = AggregationCursor;\n", "'use strict';\n\nmodule.exports = function prepareDiscriminatorPipeline(pipeline, schema, prefix) {\n  const discriminatorMapping = schema && schema.discriminatorMapping;\n  prefix = prefix || '';\n\n  if (discriminatorMapping && !discriminatorMapping.isRoot) {\n    const originalPipeline = pipeline;\n    const filterKey = (prefix.length > 0 ? prefix + '.' : prefix) + discriminatorMapping.key;\n    const discriminatorValue = discriminatorMapping.value;\n\n    // If the first pipeline stage is a match and it doesn't specify a `__t`\n    // key, add the discriminator key to it. This allows for potential\n    // aggregation query optimizations not to be disturbed by this feature.\n    if (originalPipeline[0] != null &&\n        originalPipeline[0].$match &&\n        (originalPipeline[0].$match[filterKey] === undefined || originalPipeline[0].$match[filterKey] === discriminatorValue)) {\n      originalPipeline[0].$match[filterKey] = discriminatorValue;\n      // `originalPipeline` is a ref, so there's no need for\n      // aggregate._pipeline = originalPipeline\n    } else if (originalPipeline[0] != null && originalPipeline[0].$geoNear) {\n      originalPipeline[0].$geoNear.query =\n          originalPipeline[0].$geoNear.query || {};\n      originalPipeline[0].$geoNear.query[filterKey] = discriminatorValue;\n    } else if (originalPipeline[0] != null && originalPipeline[0].$search) {\n      if (originalPipeline[1] && originalPipeline[1].$match != null) {\n        originalPipeline[1].$match[filterKey] = originalPipeline[1].$match[filterKey] || discriminatorValue;\n      } else {\n        const match = {};\n        match[filterKey] = discriminatorValue;\n        originalPipeline.splice(1, 0, { $match: match });\n      }\n    } else {\n      const match = {};\n      match[filterKey] = discriminatorValue;\n      originalPipeline.unshift({ $match: match });\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = function stringifyFunctionOperators(pipeline) {\n  if (!Array.isArray(pipeline)) {\n    return;\n  }\n\n  for (const stage of pipeline) {\n    if (stage == null) {\n      continue;\n    }\n\n    const canHaveAccumulator = stage.$group || stage.$bucket || stage.$bucketAuto;\n    if (canHaveAccumulator != null) {\n      for (const key of Object.keys(canHaveAccumulator)) {\n        handleAccumulator(canHaveAccumulator[key]);\n      }\n    }\n\n    const stageType = Object.keys(stage)[0];\n    if (stageType && typeof stage[stageType] === 'object') {\n      const stageOptions = stage[stageType];\n      for (const key of Object.keys(stageOptions)) {\n        if (stageOptions[key] != null &&\n            stageOptions[key].$function != null &&\n            typeof stageOptions[key].$function.body === 'function') {\n          stageOptions[key].$function.body = stageOptions[key].$function.body.toString();\n        }\n      }\n    }\n\n    if (stage.$facet != null) {\n      for (const key of Object.keys(stage.$facet)) {\n        stringifyFunctionOperators(stage.$facet[key]);\n      }\n    }\n  }\n};\n\nfunction handleAccumulator(operator) {\n  if (operator == null || operator.$accumulator == null) {\n    return;\n  }\n\n  for (const key of ['init', 'accumulate', 'merge', 'finalize']) {\n    if (typeof operator.$accumulator[key] === 'function') {\n      operator.$accumulator[key] = String(operator.$accumulator[key]);\n    }\n  }\n}\n", "'use strict';\n\n/*!\n * Module dependencies\n */\n\nconst AggregationCursor = require('./cursor/AggregationCursor');\nconst MongooseError = require('./error/mongooseError');\nconst Query = require('./query');\nconst { applyGlobalMaxTimeMS, applyGlobalDiskUse } = require('./helpers/query/applyGlobalOption');\nconst clone = require('./helpers/clone');\nconst getConstructorName = require('./helpers/getConstructorName');\nconst prepareDiscriminatorPipeline = require('./helpers/aggregate/prepareDiscriminatorPipeline');\nconst stringifyFunctionOperators = require('./helpers/aggregate/stringifyFunctionOperators');\nconst utils = require('./utils');\nconst read = Query.prototype.read;\nconst readConcern = Query.prototype.readConcern;\n\nconst validRedactStringValues = new Set(['$$DESCEND', '$$PRUNE', '$$KEEP']);\n\n/**\n * Aggregate constructor used for building aggregation pipelines. Do not\n * instantiate this class directly, use [Model.aggregate()](https://mongoosejs.com/docs/api/model.html#Model.aggregate()) instead.\n *\n * #### Example:\n *\n *     const aggregate = Model.aggregate([\n *       { $project: { a: 1, b: 1 } },\n *       { $skip: 5 }\n *     ]);\n *\n *     Model.\n *       aggregate([{ $match: { age: { $gte: 21 }}}]).\n *       unwind('tags').\n *       exec();\n *\n * #### Note:\n *\n * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).\n * - Mongoose does **not** cast pipeline stages. The below will **not** work unless `_id` is a string in the database\n *\n *     new Aggregate([{ $match: { _id: '00000000000000000000000a' } }]);\n *     // Do this instead to cast to an ObjectId\n *     new Aggregate([{ $match: { _id: new mongoose.Types.ObjectId('00000000000000000000000a') } }]);\n *\n * @see MongoDB https://www.mongodb.com/docs/manual/applications/aggregation/\n * @see driver https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#aggregate\n * @param {Array} [pipeline] aggregation pipeline as an array of objects\n * @param {Model} [model] the model to use with this aggregate.\n * @api public\n */\n\nfunction Aggregate(pipeline, model) {\n  this._pipeline = [];\n  this._model = model;\n  this.options = {};\n\n  if (arguments.length === 1 && Array.isArray(pipeline)) {\n    this.append.apply(this, pipeline);\n  }\n}\n\n/**\n * Contains options passed down to the [aggregate command](https://www.mongodb.com/docs/manual/reference/command/aggregate/).\n * Supported options are:\n *\n * - [`allowDiskUse`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.allowDiskUse())\n * - `bypassDocumentValidation`\n * - [`collation`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.collation())\n * - `comment`\n * - [`cursor`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.cursor())\n * - [`explain`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.explain())\n * - `fieldsAsRaw`\n * - [`hint`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.hint())\n * - `let`\n * - `maxTimeMS`\n * - `raw`\n * - [`readConcern`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.readConcern())\n * - `readPreference`\n * - [`session`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.session())\n * - `writeConcern`\n *\n * @property options\n * @memberOf Aggregate\n * @api public\n */\n\nAggregate.prototype.options;\n\n/**\n * Get/set the model that this aggregation will execute on.\n *\n * #### Example:\n *\n *     const aggregate = MyModel.aggregate([{ $match: { answer: 42 } }]);\n *     aggregate.model() === MyModel; // true\n *\n *     // Change the model. There's rarely any reason to do this.\n *     aggregate.model(SomeOtherModel);\n *     aggregate.model() === SomeOtherModel; // true\n *\n * @param {Model} [model] Set the model associated with this aggregate. If not provided, returns the already stored model.\n * @return {Model}\n * @api public\n */\n\nAggregate.prototype.model = function(model) {\n  if (arguments.length === 0) {\n    return this._model;\n  }\n\n  this._model = model;\n  if (model.schema != null) {\n    if (this.options.readPreference == null &&\n      model.schema.options.read != null) {\n      this.options.readPreference = model.schema.options.read;\n    }\n    if (this.options.collation == null &&\n      model.schema.options.collation != null) {\n      this.options.collation = model.schema.options.collation;\n    }\n  }\n\n  return model;\n};\n\n/**\n * Appends new operators to this aggregate pipeline\n *\n * #### Example:\n *\n *     aggregate.append({ $project: { field: 1 }}, { $limit: 2 });\n *\n *     // or pass an array\n *     const pipeline = [{ $match: { daw: 'Logic Audio X' }} ];\n *     aggregate.append(pipeline);\n *\n * @param {...Object|Object[]} ops operator(s) to append. Can either be a spread of objects or a single parameter of a object array.\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.append = function() {\n  const args = (arguments.length === 1 && Array.isArray(arguments[0]))\n    ? arguments[0]\n    : [...arguments];\n\n  if (!args.every(isOperator)) {\n    throw new Error('Arguments must be aggregate pipeline operators');\n  }\n\n  this._pipeline = this._pipeline.concat(args);\n\n  return this;\n};\n\n/**\n * Appends a new $addFields operator to this aggregate pipeline.\n * Requires MongoDB v3.4+ to work\n *\n * #### Example:\n *\n *     // adding new fields based on existing fields\n *     aggregate.addFields({\n *         newField: '$b.nested'\n *       , plusTen: { $add: ['$val', 10]}\n *       , sub: {\n *            name: '$a'\n *         }\n *     })\n *\n *     // etc\n *     aggregate.addFields({ salary_k: { $divide: [ \"$salary\", 1000 ] } });\n *\n * @param {Object} arg field specification\n * @see $addFields https://www.mongodb.com/docs/manual/reference/operator/aggregation/addFields/\n * @return {Aggregate}\n * @api public\n */\nAggregate.prototype.addFields = function(arg) {\n  if (typeof arg !== 'object' || arg === null || Array.isArray(arg)) {\n    throw new Error('Invalid addFields() argument. Must be an object');\n  }\n  return this.append({ $addFields: Object.assign({}, arg) });\n};\n\n/**\n * Appends a new $project operator to this aggregate pipeline.\n *\n * Mongoose query [selection syntax](https://mongoosejs.com/docs/api/query.html#Query.prototype.select()) is also supported.\n *\n * #### Example:\n *\n *     // include a, include b, exclude _id\n *     aggregate.project(\"a b -_id\");\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     aggregate.project({a: 1, b: 1, _id: 0});\n *\n *     // reshaping documents\n *     aggregate.project({\n *         newField: '$b.nested'\n *       , plusTen: { $add: ['$val', 10]}\n *       , sub: {\n *            name: '$a'\n *         }\n *     })\n *\n *     // etc\n *     aggregate.project({ salary_k: { $divide: [ \"$salary\", 1000 ] } });\n *\n * @param {Object|String} arg field specification\n * @see projection https://www.mongodb.com/docs/manual/reference/aggregation/project/\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.project = function(arg) {\n  const fields = {};\n\n  if (typeof arg === 'object' && !Array.isArray(arg)) {\n    Object.keys(arg).forEach(function(field) {\n      fields[field] = arg[field];\n    });\n  } else if (arguments.length === 1 && typeof arg === 'string') {\n    arg.split(/\\s+/).forEach(function(field) {\n      if (!field) {\n        return;\n      }\n      const include = field[0] === '-' ? 0 : 1;\n      if (include === 0) {\n        field = field.substring(1);\n      }\n      fields[field] = include;\n    });\n  } else {\n    throw new Error('Invalid project() argument. Must be string or object');\n  }\n\n  return this.append({ $project: fields });\n};\n\n/**\n * Appends a new custom $group operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.group({ _id: \"$department\" });\n *\n * @see $group https://www.mongodb.com/docs/manual/reference/aggregation/group/\n * @method group\n * @memberOf Aggregate\n * @instance\n * @param {Object} arg $group operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new custom $match operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.match({ department: { $in: [ \"sales\", \"engineering\" ] } });\n *\n * @see $match https://www.mongodb.com/docs/manual/reference/aggregation/match/\n * @method match\n * @memberOf Aggregate\n * @instance\n * @param {Object} arg $match operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $skip operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.skip(10);\n *\n * @see $skip https://www.mongodb.com/docs/manual/reference/aggregation/skip/\n * @method skip\n * @memberOf Aggregate\n * @instance\n * @param {Number} num number of records to skip before next stage\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $limit operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.limit(10);\n *\n * @see $limit https://www.mongodb.com/docs/manual/reference/aggregation/limit/\n * @method limit\n * @memberOf Aggregate\n * @instance\n * @param {Number} num maximum number of records to pass to the next stage\n * @return {Aggregate}\n * @api public\n */\n\n\n/**\n * Appends a new $densify operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *      aggregate.densify({\n *        field: 'timestamp',\n *        range: {\n *          step: 1,\n *          unit: 'hour',\n *          bounds: [new Date('2021-05-18T00:00:00.000Z'), new Date('2021-05-18T08:00:00.000Z')]\n *        }\n *      });\n *\n * @see $densify https://www.mongodb.com/docs/manual/reference/operator/aggregation/densify/\n * @method densify\n * @memberOf Aggregate\n * @instance\n * @param {Object} arg $densify operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $fill operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *      aggregate.fill({\n *        output: {\n *          bootsSold: { value: 0 },\n *          sandalsSold: { value: 0 },\n *          sneakersSold: { value: 0 }\n *        }\n *      });\n *\n * @see $fill https://www.mongodb.com/docs/manual/reference/operator/aggregation/fill/\n * @method fill\n * @memberOf Aggregate\n * @instance\n * @param {Object} arg $fill operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $geoNear operator to this aggregate pipeline.\n *\n * #### Note:\n *\n * **MUST** be used as the first operator in the pipeline.\n *\n * #### Example:\n *\n *     aggregate.near({\n *       near: { type: 'Point', coordinates: [40.724, -73.997] },\n *       distanceField: \"dist.calculated\", // required\n *       maxDistance: 0.008,\n *       query: { type: \"public\" },\n *       includeLocs: \"dist.location\",\n *       spherical: true,\n *     });\n *\n * @see $geoNear https://www.mongodb.com/docs/manual/reference/aggregation/geoNear/\n * @method near\n * @memberOf Aggregate\n * @instance\n * @param {Object} arg\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.near = function(arg) {\n  const op = {};\n  op.$geoNear = arg;\n  return this.append(op);\n};\n\n/*!\n * define methods\n */\n\n'group match skip limit out densify fill'.split(' ').forEach(function($operator) {\n  Aggregate.prototype[$operator] = function(arg) {\n    const op = {};\n    op['$' + $operator] = arg;\n    return this.append(op);\n  };\n});\n\n/**\n * Appends new custom $unwind operator(s) to this aggregate pipeline.\n *\n * Note that the `$unwind` operator requires the path name to start with '$'.\n * Mongoose will prepend '$' if the specified field doesn't start '$'.\n *\n * #### Example:\n *\n *     aggregate.unwind(\"tags\");\n *     aggregate.unwind(\"a\", \"b\", \"c\");\n *     aggregate.unwind({ path: '$tags', preserveNullAndEmptyArrays: true });\n *\n * @see $unwind https://www.mongodb.com/docs/manual/reference/aggregation/unwind/\n * @param {String|Object|String[]|Object[]} fields the field(s) to unwind, either as field names or as [objects with options](https://www.mongodb.com/docs/manual/reference/operator/aggregation/unwind/#document-operand-with-options). If passing a string, prefixing the field name with '$' is optional. If passing an object, `path` must start with '$'.\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.unwind = function() {\n  const args = [...arguments];\n\n  const res = [];\n  for (const arg of args) {\n    if (arg && typeof arg === 'object') {\n      res.push({ $unwind: arg });\n    } else if (typeof arg === 'string') {\n      res.push({\n        $unwind: (arg[0] === '$') ? arg : '$' + arg\n      });\n    } else {\n      throw new Error('Invalid arg \"' + arg + '\" to unwind(), ' +\n        'must be string or object');\n    }\n  }\n\n  return this.append.apply(this, res);\n};\n\n/**\n * Appends a new $replaceRoot operator to this aggregate pipeline.\n *\n * Note that the `$replaceRoot` operator requires field strings to start with '$'.\n * If you are passing in a string Mongoose will prepend '$' if the specified field doesn't start '$'.\n * If you are passing in an object the strings in your expression will not be altered.\n *\n * #### Example:\n *\n *     aggregate.replaceRoot(\"user\");\n *\n *     aggregate.replaceRoot({ x: { $concat: ['$this', '$that'] } });\n *\n * @see $replaceRoot https://www.mongodb.com/docs/manual/reference/operator/aggregation/replaceRoot\n * @param {String|Object} newRoot the field or document which will become the new root document\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.replaceRoot = function(newRoot) {\n  let ret;\n\n  if (typeof newRoot === 'string') {\n    ret = newRoot.startsWith('$') ? newRoot : '$' + newRoot;\n  } else {\n    ret = newRoot;\n  }\n\n  return this.append({\n    $replaceRoot: {\n      newRoot: ret\n    }\n  });\n};\n\n/**\n * Appends a new $count operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.count(\"userCount\");\n *\n * @see $count https://www.mongodb.com/docs/manual/reference/operator/aggregation/count\n * @param {String} fieldName The name of the output field which has the count as its value. It must be a non-empty string, must not start with $ and must not contain the . character.\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.count = function(fieldName) {\n  return this.append({ $count: fieldName });\n};\n\n/**\n * Appends a new $sortByCount operator to this aggregate pipeline. Accepts either a string field name\n * or a pipeline object.\n *\n * Note that the `$sortByCount` operator requires the new root to start with '$'.\n * Mongoose will prepend '$' if the specified field name doesn't start with '$'.\n *\n * #### Example:\n *\n *     aggregate.sortByCount('users');\n *     aggregate.sortByCount({ $mergeObjects: [ \"$employee\", \"$business\" ] })\n *\n * @see $sortByCount https://www.mongodb.com/docs/manual/reference/operator/aggregation/sortByCount/\n * @param {Object|String} arg\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.sortByCount = function(arg) {\n  if (arg && typeof arg === 'object') {\n    return this.append({ $sortByCount: arg });\n  } else if (typeof arg === 'string') {\n    return this.append({\n      $sortByCount: (arg[0] === '$') ? arg : '$' + arg\n    });\n  } else {\n    throw new TypeError('Invalid arg \"' + arg + '\" to sortByCount(), ' +\n      'must be string or object');\n  }\n};\n\n/**\n * Appends new custom $lookup operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.lookup({ from: 'users', localField: 'userId', foreignField: '_id', as: 'users' });\n *\n * @see $lookup https://www.mongodb.com/docs/manual/reference/operator/aggregation/lookup/#pipe._S_lookup\n * @param {Object} options to $lookup as described in the above link\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.lookup = function(options) {\n  return this.append({ $lookup: options });\n};\n\n/**\n * Appends new custom $graphLookup operator(s) to this aggregate pipeline, performing a recursive search on a collection.\n *\n * Note that graphLookup can only consume at most 100MB of memory, and does not allow disk use even if `{ allowDiskUse: true }` is specified.\n *\n * #### Example:\n *\n *      // Suppose we have a collection of courses, where a document might look like `{ _id: 0, name: 'Calculus', prerequisite: 'Trigonometry'}` and `{ _id: 0, name: 'Trigonometry', prerequisite: 'Algebra' }`\n *      aggregate.graphLookup({ from: 'courses', startWith: '$prerequisite', connectFromField: 'prerequisite', connectToField: 'name', as: 'prerequisites', maxDepth: 3 }) // this will recursively search the 'courses' collection up to 3 prerequisites\n *\n * @see $graphLookup https://www.mongodb.com/docs/manual/reference/operator/aggregation/graphLookup/#pipe._S_graphLookup\n * @param {Object} options to $graphLookup as described in the above link\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.graphLookup = function(options) {\n  const cloneOptions = {};\n  if (options) {\n    if (!utils.isObject(options)) {\n      throw new TypeError('Invalid graphLookup() argument. Must be an object.');\n    }\n\n    utils.mergeClone(cloneOptions, options);\n    const startWith = cloneOptions.startWith;\n\n    if (startWith && typeof startWith === 'string') {\n      cloneOptions.startWith = cloneOptions.startWith.startsWith('$') ?\n        cloneOptions.startWith :\n        '$' + cloneOptions.startWith;\n    }\n\n  }\n  return this.append({ $graphLookup: cloneOptions });\n};\n\n/**\n * Appends new custom $sample operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.sample(3); // Add a pipeline that picks 3 random documents\n *\n * @see $sample https://www.mongodb.com/docs/manual/reference/operator/aggregation/sample/#pipe._S_sample\n * @param {Number} size number of random documents to pick\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.sample = function(size) {\n  return this.append({ $sample: { size: size } });\n};\n\n/**\n * Appends a new $sort operator to this aggregate pipeline.\n *\n * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * #### Example:\n *\n *     // these are equivalent\n *     aggregate.sort({ field: 'asc', test: -1 });\n *     aggregate.sort('field -test');\n *\n * @see $sort https://www.mongodb.com/docs/manual/reference/aggregation/sort/\n * @param {Object|String} arg\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.sort = function(arg) {\n  // TODO refactor to reuse the query builder logic\n\n  const sort = {};\n\n  if (getConstructorName(arg) === 'Object') {\n    const desc = ['desc', 'descending', -1];\n    Object.keys(arg).forEach(function(field) {\n      // If sorting by text score, skip coercing into 1/-1\n      if (arg[field] instanceof Object && arg[field].$meta) {\n        sort[field] = arg[field];\n        return;\n      }\n      sort[field] = desc.indexOf(arg[field]) === -1 ? 1 : -1;\n    });\n  } else if (arguments.length === 1 && typeof arg === 'string') {\n    arg.split(/\\s+/).forEach(function(field) {\n      if (!field) {\n        return;\n      }\n      const ascend = field[0] === '-' ? -1 : 1;\n      if (ascend === -1) {\n        field = field.substring(1);\n      }\n      sort[field] = ascend;\n    });\n  } else {\n    throw new TypeError('Invalid sort() argument. Must be a string or object.');\n  }\n\n  return this.append({ $sort: sort });\n};\n\n/**\n * Appends new $unionWith operator to this aggregate pipeline.\n *\n * #### Example:\n *\n *     aggregate.unionWith({ coll: 'users', pipeline: [ { $match: { _id: 1 } } ] });\n *\n * @see $unionWith https://www.mongodb.com/docs/manual/reference/operator/aggregation/unionWith\n * @param {Object} options to $unionWith query as described in the above link\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.unionWith = function(options) {\n  return this.append({ $unionWith: options });\n};\n\n\n/**\n * Sets the readPreference option for the aggregation query.\n *\n * #### Example:\n *\n *     await Model.aggregate(pipeline).read('primaryPreferred');\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @param {Array} [tags] optional tags for this query. DEPRECATED\n * @return {Aggregate} this\n * @api public\n * @see mongodb https://www.mongodb.com/docs/manual/applications/replication/#read-preference\n */\n\nAggregate.prototype.read = function(pref, tags) {\n  read.call(this, pref, tags);\n  return this;\n};\n\n/**\n * Sets the readConcern level for the aggregation query.\n *\n * #### Example:\n *\n *     await Model.aggregate(pipeline).readConcern('majority');\n *\n * @param {String} level one of the listed read concern level or their aliases\n * @see mongodb https://www.mongodb.com/docs/manual/reference/read-concern/\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.readConcern = function(level) {\n  readConcern.call(this, level);\n  return this;\n};\n\n/**\n * Appends a new $redact operator to this aggregate pipeline.\n *\n * If 3 arguments are supplied, Mongoose will wrap them with if-then-else of $cond operator respectively\n * If `thenExpr` or `elseExpr` is string, make sure it starts with $$, like `$$DESCEND`, `$$PRUNE` or `$$KEEP`.\n *\n * #### Example:\n *\n *     await Model.aggregate(pipeline).redact({\n *       $cond: {\n *         if: { $eq: [ '$level', 5 ] },\n *         then: '$$PRUNE',\n *         else: '$$DESCEND'\n *       }\n *     });\n *\n *     // $redact often comes with $cond operator, you can also use the following syntax provided by mongoose\n *     await Model.aggregate(pipeline).redact({ $eq: [ '$level', 5 ] }, '$$PRUNE', '$$DESCEND');\n *\n * @param {Object} expression redact options or conditional expression\n * @param {String|Object} [thenExpr] true case for the condition\n * @param {String|Object} [elseExpr] false case for the condition\n * @return {Aggregate} this\n * @see $redact https://www.mongodb.com/docs/manual/reference/operator/aggregation/redact/\n * @api public\n */\n\nAggregate.prototype.redact = function(expression, thenExpr, elseExpr) {\n  if (arguments.length === 3) {\n    if ((typeof thenExpr === 'string' && !validRedactStringValues.has(thenExpr)) ||\n      (typeof elseExpr === 'string' && !validRedactStringValues.has(elseExpr))) {\n      throw new Error('If thenExpr or elseExpr is string, it must be either $$DESCEND, $$PRUNE or $$KEEP');\n    }\n\n    expression = {\n      $cond: {\n        if: expression,\n        then: thenExpr,\n        else: elseExpr\n      }\n    };\n  } else if (arguments.length !== 1) {\n    throw new TypeError('Invalid arguments');\n  }\n\n  return this.append({ $redact: expression });\n};\n\n/**\n * Execute the aggregation with explain\n *\n * #### Example:\n *\n *     Model.aggregate(..).explain()\n *\n * @param {String} [verbosity]\n * @return {Promise}\n */\n\nAggregate.prototype.explain = async function explain(verbosity) {\n  if (typeof verbosity === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Aggregate.prototype.explain() no longer accepts a callback');\n  }\n  const model = this._model;\n\n  if (!this._pipeline.length) {\n    throw new Error('Aggregate has empty pipeline');\n  }\n\n  prepareDiscriminatorPipeline(this._pipeline, this._model.schema);\n\n  await new Promise((resolve, reject) => {\n    model.hooks.execPre('aggregate', this, error => {\n      if (error) {\n        const _opts = { error: error };\n        return model.hooks.execPost('aggregate', this, [null], _opts, error => {\n          reject(error);\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n\n  const cursor = model.collection.aggregate(this._pipeline, this.options);\n\n  if (verbosity == null) {\n    verbosity = true;\n  }\n\n  let result = null;\n  try {\n    result = await cursor.explain(verbosity);\n  } catch (error) {\n    await new Promise((resolve, reject) => {\n      const _opts = { error: error };\n      model.hooks.execPost('aggregate', this, [null], _opts, error => {\n        if (error) {\n          return reject(error);\n        }\n        return resolve();\n      });\n    });\n  }\n\n  const _opts = { error: null };\n  await new Promise((resolve, reject) => {\n    model.hooks.execPost('aggregate', this, [result], _opts, error => {\n      if (error) {\n        return reject(error);\n      }\n      return resolve();\n    });\n  });\n\n  return result;\n};\n\n/**\n * Sets the allowDiskUse option for the aggregation query\n *\n * #### Example:\n *\n *     await Model.aggregate([{ $match: { foo: 'bar' } }]).allowDiskUse(true);\n *\n * @param {Boolean} value Should tell server it can use hard drive to store data during aggregation.\n * @return {Aggregate} this\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/aggregate/\n */\n\nAggregate.prototype.allowDiskUse = function(value) {\n  this.options.allowDiskUse = value;\n  return this;\n};\n\n/**\n * Sets the hint option for the aggregation query\n *\n * #### Example:\n *\n *     Model.aggregate(..).hint({ qty: 1, category: 1 }).exec();\n *\n * @param {Object|String} value a hint object or the index name\n * @return {Aggregate} this\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/aggregate/\n */\n\nAggregate.prototype.hint = function(value) {\n  this.options.hint = value;\n  return this;\n};\n\n/**\n * Sets the session for this aggregation. Useful for [transactions](https://mongoosejs.com/docs/transactions.html).\n *\n * #### Example:\n *\n *     const session = await Model.startSession();\n *     await Model.aggregate(..).session(session);\n *\n * @param {ClientSession} session\n * @return {Aggregate} this\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/aggregate/\n */\n\nAggregate.prototype.session = function(session) {\n  if (session == null) {\n    delete this.options.session;\n  } else {\n    this.options.session = session;\n  }\n  return this;\n};\n\n/**\n * Lets you set arbitrary options, for middleware or plugins.\n *\n * #### Example:\n *\n *     const agg = Model.aggregate(..).option({ allowDiskUse: true }); // Set the `allowDiskUse` option\n *     agg.options; // `{ allowDiskUse: true }`\n *\n * @param {Object} options keys to merge into current options\n * @param {Number} [options.maxTimeMS] number limits the time this aggregation will run, see [MongoDB docs on `maxTimeMS`](https://www.mongodb.com/docs/manual/reference/operator/meta/maxTimeMS/)\n * @param {Boolean} [options.allowDiskUse] boolean if true, the MongoDB server will use the hard drive to store data during this aggregation\n * @param {Object} [options.collation] object see [`Aggregate.prototype.collation()`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.collation())\n * @param {ClientSession} [options.session] ClientSession see [`Aggregate.prototype.session()`](https://mongoosejs.com/docs/api/aggregate.html#Aggregate.prototype.session())\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/aggregate/\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.option = function(value) {\n  for (const key in value) {\n    this.options[key] = value[key];\n  }\n  return this;\n};\n\n/**\n * Sets the `cursor` option and executes this aggregation, returning an aggregation cursor.\n * Cursors are useful if you want to process the results of the aggregation one-at-a-time\n * because the aggregation result is too big to fit into memory.\n *\n * #### Example:\n *\n *     const cursor = Model.aggregate(..).cursor({ batchSize: 1000 });\n *     cursor.eachAsync(function(doc, i) {\n *       // use doc\n *     });\n *\n * @param {Object} options\n * @param {Number} [options.batchSize] set the cursor batch size\n * @param {Boolean} [options.useMongooseAggCursor] use experimental mongoose-specific aggregation cursor (for `eachAsync()` and other query cursor semantics)\n * @return {AggregationCursor} cursor representing this aggregation\n * @api public\n * @see mongodb https://mongodb.github.io/node-mongodb-native/4.9/classes/AggregationCursor.html\n */\n\nAggregate.prototype.cursor = function(options) {\n  this.options.cursor = options || {};\n  return new AggregationCursor(this); // return this;\n};\n\n/**\n * Adds a collation\n *\n * #### Example:\n *\n *     const res = await Model.aggregate(pipeline).collation({ locale: 'en_US', strength: 1 });\n *\n * @param {Object} collation options\n * @return {Aggregate} this\n * @api public\n * @see mongodb https://mongodb.github.io/node-mongodb-native/4.9/interfaces/CollationOptions.html\n */\n\nAggregate.prototype.collation = function(collation) {\n  this.options.collation = collation;\n  return this;\n};\n\n/**\n * Combines multiple aggregation pipelines.\n *\n * #### Example:\n *\n *     const res = await Model.aggregate().facet({\n *       books: [{ groupBy: '$author' }],\n *       price: [{ $bucketAuto: { groupBy: '$price', buckets: 2 } }]\n *     });\n *\n *     // Output: { books: [...], price: [{...}, {...}] }\n *\n * @param {Object} facet options\n * @return {Aggregate} this\n * @see $facet https://www.mongodb.com/docs/manual/reference/operator/aggregation/facet/\n * @api public\n */\n\nAggregate.prototype.facet = function(options) {\n  return this.append({ $facet: options });\n};\n\n/**\n * Helper for [Atlas Text Search](https://www.mongodb.com/docs/atlas/atlas-search/tutorial/)'s\n * `$search` stage.\n *\n * #### Example:\n *\n *     const res = await Model.aggregate().\n *      search({\n *        text: {\n *          query: 'baseball',\n *          path: 'plot'\n *        }\n *      });\n *\n *     // Output: [{ plot: '...', title: '...' }]\n *\n * @param {Object} $search options\n * @return {Aggregate} this\n * @see $search https://www.mongodb.com/docs/atlas/atlas-search/tutorial/\n * @api public\n */\n\nAggregate.prototype.search = function(options) {\n  return this.append({ $search: options });\n};\n\n/**\n * Returns the current pipeline\n *\n * #### Example:\n *\n *     MyModel.aggregate().match({ test: 1 }).pipeline(); // [{ $match: { test: 1 } }]\n *\n * @return {Array} The current pipeline similar to the operation that will be executed\n * @api public\n */\n\nAggregate.prototype.pipeline = function() {\n  return this._pipeline;\n};\n\n/**\n * Executes the aggregate pipeline on the currently bound Model.\n *\n * #### Example:\n *     const result = await aggregate.exec();\n *\n * @return {Promise}\n * @api public\n */\n\nAggregate.prototype.exec = async function exec() {\n  if (!this._model) {\n    throw new Error('Aggregate not bound to any Model');\n  }\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('Aggregate.prototype.exec() no longer accepts a callback');\n  }\n  const model = this._model;\n  const collection = this._model.collection;\n\n  applyGlobalMaxTimeMS(this.options, model);\n  applyGlobalDiskUse(this.options, model);\n\n  if (this.options && this.options.cursor) {\n    return new AggregationCursor(this);\n  }\n\n  prepareDiscriminatorPipeline(this._pipeline, this._model.schema);\n  stringifyFunctionOperators(this._pipeline);\n\n  await new Promise((resolve, reject) => {\n    model.hooks.execPre('aggregate', this, error => {\n      if (error) {\n        const _opts = { error: error };\n        return model.hooks.execPost('aggregate', this, [null], _opts, error => {\n          reject(error);\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n\n  if (!this._pipeline.length) {\n    throw new MongooseError('Aggregate has empty pipeline');\n  }\n\n  const options = clone(this.options || {});\n  let result;\n  try {\n    const cursor = await collection.aggregate(this._pipeline, options);\n    result = await cursor.toArray();\n  } catch (error) {\n    await new Promise((resolve, reject) => {\n      const _opts = { error: error };\n      model.hooks.execPost('aggregate', this, [null], _opts, (error) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve();\n      });\n    });\n  }\n\n  const _opts = { error: null };\n  await new Promise((resolve, reject) => {\n    model.hooks.execPost('aggregate', this, [result], _opts, error => {\n      if (error) {\n        return reject(error);\n      }\n      return resolve();\n    });\n  });\n\n  return result;\n};\n\n/**\n * Provides a Promise-like `then` function, which will call `.exec` without a callback\n * Compatible with `await`.\n *\n * #### Example:\n *\n *     Model.aggregate(..).then(successCallback, errorCallback);\n *\n * @param {Function} [resolve] successCallback\n * @param {Function} [reject]  errorCallback\n * @return {Promise}\n */\nAggregate.prototype.then = function(resolve, reject) {\n  return this.exec().then(resolve, reject);\n};\n\n/**\n * Executes the aggregation returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n * Like [`.then()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.then), but only takes a rejection handler.\n * Compatible with `await`.\n *\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nAggregate.prototype.catch = function(reject) {\n  return this.exec().then(null, reject);\n};\n\n/**\n * Executes the aggregate returning a `Promise` which will be\n * resolved with `.finally()` chained.\n *\n * More about [Promise `finally()` in JavaScript](https://thecodebarbarian.com/using-promise-finally-in-node-js.html).\n *\n * @param {Function} [onFinally]\n * @return {Promise}\n * @api public\n */\n\nAggregate.prototype.finally = function(onFinally) {\n  return this.exec().finally(onFinally);\n};\n\n/**\n * Returns an asyncIterator for use with [`for/await/of` loops](https://thecodebarbarian.com/getting-started-with-async-iterators-in-node-js)\n * You do not need to call this function explicitly, the JavaScript runtime\n * will call it for you.\n *\n * #### Example:\n *\n *     const agg = Model.aggregate([{ $match: { age: { $gte: 25 } } }]);\n *     for await (const doc of agg) {\n *       console.log(doc.name);\n *     }\n *\n * Node.js 10.x supports async iterators natively without any flags. You can\n * enable async iterators in Node.js 8.x using the [`--harmony_async_iteration` flag](https://github.com/tc39/proposal-async-iteration/issues/117#issuecomment-346695187).\n *\n * **Note:** This function is not set if `Symbol.asyncIterator` is undefined. If\n * `Symbol.asyncIterator` is undefined, that means your Node.js version does not\n * support async iterators.\n *\n * @method [Symbol.asyncIterator]\n * @memberOf Aggregate\n * @instance\n * @api public\n */\n\nif (Symbol.asyncIterator != null) {\n  Aggregate.prototype[Symbol.asyncIterator] = function() {\n    return this.cursor({ useMongooseAggCursor: true }).transformNull()._transformForAsyncIterator();\n  };\n}\n\n/*!\n * Helpers\n */\n\n/**\n * Checks whether an object is likely a pipeline operator\n *\n * @param {Object} obj object to check\n * @return {Boolean}\n * @api private\n */\n\nfunction isOperator(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  const k = Object.keys(obj);\n\n  return k.length === 1 && k[0][0] === '$';\n}\n\n/**\n * Adds the appropriate `$match` pipeline step to the top of an aggregate's\n * pipeline, should it's model is a non-root discriminator type. This is\n * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`.\n *\n * @param {Aggregate} aggregate Aggregate to prepare\n * @api private\n */\n\nAggregate._prepareDiscriminatorPipeline = prepareDiscriminatorPipeline;\n\n/*!\n * Exports\n */\n\nmodule.exports = Aggregate;\n", "'use strict';\n\nconst clone = require('../helpers/clone');\n\nclass SaveOptions {\n  constructor(obj) {\n    if (obj == null) {\n      return;\n    }\n    Object.assign(this, clone(obj));\n  }\n}\n\nmodule.exports = SaveOptions;\n", "'use strict';\n\nmodule.exports = function applyDefaultsToPOJO(doc, schema) {\n  const paths = Object.keys(schema.paths);\n  const plen = paths.length;\n\n  for (let i = 0; i < plen; ++i) {\n    let curPath = '';\n    const p = paths[i];\n\n    const type = schema.paths[p];\n    const path = type.splitPath();\n    const len = path.length;\n    let doc_ = doc;\n    for (let j = 0; j < len; ++j) {\n      if (doc_ == null) {\n        break;\n      }\n\n      const piece = path[j];\n      curPath += (!curPath.length ? '' : '.') + piece;\n\n      if (j === len - 1) {\n        if (typeof doc_[piece] !== 'undefined') {\n          if (type.$isSingleNested) {\n            applyDefaultsToPOJO(doc_[piece], type.caster.schema);\n          } else if (type.$isMongooseDocumentArray && Array.isArray(doc_[piece])) {\n            doc_[piece].forEach(el => applyDefaultsToPOJO(el, type.schema));\n          }\n\n          break;\n        }\n\n        const def = type.getDefault(doc, false, { skipCast: true });\n        if (typeof def !== 'undefined') {\n          doc_[piece] = def;\n\n          if (type.$isSingleNested) {\n            applyDefaultsToPOJO(def, type.caster.schema);\n          } else if (type.$isMongooseDocumentArray && Array.isArray(def)) {\n            def.forEach(el => applyDefaultsToPOJO(el, type.schema));\n          }\n        }\n      } else {\n        if (doc_[piece] == null) {\n          doc_[piece] = {};\n        }\n        doc_ = doc_[piece];\n      }\n    }\n  }\n};\n", "'use strict';\n\nconst get = require('../get');\nconst utils = require('../../utils');\n\n/**\n * Register methods for this model\n *\n * @param {Model} model\n * @param {Schema} schema\n * @api private\n */\n\nmodule.exports = function applyMethods(model, schema) {\n  const Model = require('../../model');\n\n  function apply(method, schema) {\n    Object.defineProperty(model.prototype, method, {\n      get: function() {\n        const h = {};\n        for (const k in schema.methods[method]) {\n          h[k] = schema.methods[method][k].bind(this);\n        }\n        return h;\n      },\n      configurable: true\n    });\n  }\n  for (const method of Object.keys(schema.methods)) {\n    const fn = schema.methods[method];\n    if (schema.tree.hasOwnProperty(method)) {\n      throw new Error('You have a method and a property in your schema both ' +\n        'named \"' + method + '\"');\n    }\n\n    // Avoid making custom methods if user sets a method to itself, e.g.\n    // `schema.method(save, Document.prototype.save)`. Can happen when\n    // calling `loadClass()` with a class that `extends Document`. See gh-12254\n    if (typeof fn === 'function' &&\n        Model.prototype[method] === fn) {\n      delete schema.methods[method];\n      continue;\n    }\n\n    if (schema.reserved[method] &&\n        !get(schema, `methodOptions.${method}.suppressWarning`, false)) {\n      utils.warn(`mongoose: the method name \"${method}\" is used by mongoose ` +\n        'internally, overwriting it may cause bugs. If you\\'re sure you know ' +\n        'what you\\'re doing, you can suppress this error by using ' +\n        `\\`schema.method('${method}', fn, { suppressWarning: true })\\`.`);\n    }\n    if (typeof fn === 'function') {\n      model.prototype[method] = fn;\n    } else {\n      apply(method, schema);\n    }\n  }\n\n  // Recursively call `applyMethods()` on child schemas\n  model.$appliedMethods = true;\n  for (const key of Object.keys(schema.paths)) {\n    const type = schema.paths[key];\n    if (type.$isSingleNested && !type.caster.$appliedMethods) {\n      applyMethods(type.caster, type.schema);\n    }\n    if (type.$isMongooseDocumentArray && !type.Constructor.$appliedMethods) {\n      applyMethods(type.Constructor, type.schema);\n    }\n  }\n};\n", "'use strict';\n\nconst hasIncludedChildren = require('./hasIncludedChildren');\nconst isExclusive = require('./isExclusive');\nconst isInclusive = require('./isInclusive');\nconst isPOJO = require('../../utils').isPOJO;\n\nmodule.exports = function applyProjection(doc, projection, _hasIncludedChildren) {\n  if (projection == null) {\n    return doc;\n  }\n  if (doc == null) {\n    return doc;\n  }\n\n  let exclude = null;\n  if (isInclusive(projection)) {\n    exclude = false;\n  } else if (isExclusive(projection)) {\n    exclude = true;\n  }\n\n  if (exclude == null) {\n    return doc;\n  } else if (exclude) {\n    _hasIncludedChildren = _hasIncludedChildren || hasIncludedChildren(projection);\n    return applyExclusiveProjection(doc, projection, _hasIncludedChildren);\n  } else {\n    _hasIncludedChildren = _hasIncludedChildren || hasIncludedChildren(projection);\n    return applyInclusiveProjection(doc, projection, _hasIncludedChildren);\n  }\n};\n\nfunction applyExclusiveProjection(doc, projection, hasIncludedChildren, projectionLimb, prefix) {\n  if (doc == null || typeof doc !== 'object') {\n    return doc;\n  }\n  const ret = { ...doc };\n  projectionLimb = prefix ? (projectionLimb || {}) : projection;\n\n  for (const key of Object.keys(ret)) {\n    const fullPath = prefix ? prefix + '.' + key : key;\n    if (projection.hasOwnProperty(fullPath) || projectionLimb.hasOwnProperty(key)) {\n      if (isPOJO(projection[fullPath]) || isPOJO(projectionLimb[key])) {\n        ret[key] = applyExclusiveProjection(ret[key], projection, hasIncludedChildren, projectionLimb[key], fullPath);\n      } else {\n        delete ret[key];\n      }\n    } else if (hasIncludedChildren[fullPath]) {\n      ret[key] = applyExclusiveProjection(ret[key], projection, hasIncludedChildren, projectionLimb[key], fullPath);\n    }\n  }\n  return ret;\n}\n\nfunction applyInclusiveProjection(doc, projection, hasIncludedChildren, projectionLimb, prefix) {\n  if (doc == null || typeof doc !== 'object') {\n    return doc;\n  }\n  const ret = { ...doc };\n  projectionLimb = prefix ? (projectionLimb || {}) : projection;\n\n  for (const key of Object.keys(ret)) {\n    const fullPath = prefix ? prefix + '.' + key : key;\n    if (projection.hasOwnProperty(fullPath) || projectionLimb.hasOwnProperty(key)) {\n      if (isPOJO(projection[fullPath]) || isPOJO(projectionLimb[key])) {\n        ret[key] = applyInclusiveProjection(ret[key], projection, hasIncludedChildren, projectionLimb[key], fullPath);\n      }\n      continue;\n    } else if (hasIncludedChildren[fullPath]) {\n      ret[key] = applyInclusiveProjection(ret[key], projection, hasIncludedChildren, projectionLimb[key], fullPath);\n    } else {\n      delete ret[key];\n    }\n  }\n  return ret;\n}\n", "'use strict';\n\n/**\n * Returns `true` if the given index options have a `text` option.\n */\n\nmodule.exports = function isTextIndex(indexKeys) {\n  let isTextIndex = false;\n  for (const key of Object.keys(indexKeys)) {\n    if (indexKeys[key] === 'text') {\n      isTextIndex = true;\n    }\n  }\n\n  return isTextIndex;\n};\n", "'use strict';\n\nconst isTextIndex = require('./isTextIndex');\n\nmodule.exports = function applySchemaCollation(indexKeys, indexOptions, schemaOptions) {\n  if (isTextIndex(indexKeys)) {\n    return;\n  }\n\n  if (schemaOptions.hasOwnProperty('collation') && !indexOptions.hasOwnProperty('collation')) {\n    indexOptions.collation = schemaOptions.collation;\n  }\n};\n", "'use strict';\n\nconst middlewareFunctions = require('../query/applyQueryMiddleware').middlewareFunctions;\nconst promiseOrCallback = require('../promiseOrCallback');\n\nmodule.exports = function applyStaticHooks(model, hooks, statics) {\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1\n  };\n\n  hooks = hooks.filter(hook => {\n    // If the custom static overwrites an existing query middleware, don't apply\n    // middleware to it by default. This avoids a potential backwards breaking\n    // change with plugins like `mongoose-delete` that use statics to overwrite\n    // built-in Mongoose functions.\n    if (middlewareFunctions.indexOf(hook.name) !== -1) {\n      return !!hook.model;\n    }\n    return hook.model !== false;\n  });\n\n  model.$__insertMany = hooks.createWrapper('insertMany',\n    model.$__insertMany, model, kareemOptions);\n\n  for (const key of Object.keys(statics)) {\n    if (hooks.hasHooks(key)) {\n      const original = model[key];\n\n      model[key] = function() {\n        const numArgs = arguments.length;\n        const lastArg = numArgs > 0 ? arguments[numArgs - 1] : null;\n        const cb = typeof lastArg === 'function' ? lastArg : null;\n        const args = Array.prototype.slice.\n          call(arguments, 0, cb == null ? numArgs : numArgs - 1);\n        // Special case: can't use `Kareem#wrap()` because it doesn't currently\n        // support wrapped functions that return a promise.\n        return promiseOrCallback(cb, callback => {\n          hooks.execPre(key, model, args, function(err) {\n            if (err != null) {\n              return callback(err);\n            }\n\n            let postCalled = 0;\n            const ret = original.apply(model, args.concat(post));\n            if (ret != null && typeof ret.then === 'function') {\n              ret.then(res => post(null, res), err => post(err));\n            }\n\n            function post(error, res) {\n              if (postCalled++ > 0) {\n                return;\n              }\n\n              if (error != null) {\n                return callback(error);\n              }\n\n              hooks.execPost(key, model, [res], function(error) {\n                if (error != null) {\n                  return callback(error);\n                }\n                callback(null, res);\n              });\n            }\n          });\n        }, model.events);\n      };\n    }\n  }\n};\n", "'use strict';\n\n/**\n * Register statics for this model\n * @param {Model} model\n * @param {Schema} schema\n * @api private\n */\nmodule.exports = function applyStatics(model, schema) {\n  for (const i in schema.statics) {\n    model[i] = schema.statics[i];\n  }\n};\n", "'use strict';\n\nmodule.exports = function SkipPopulateValue(val) {\n  if (!(this instanceof SkipPopulateValue)) {\n    return new SkipPopulateValue(val);\n  }\n\n  this.val = val;\n  return this;\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = new WeakMap();\n", "'use strict';\n\nconst clone = require('../../helpers/clone');\nconst leanPopulateMap = require('./leanPopulateMap');\nconst modelSymbol = require('../symbols').modelSymbol;\nconst utils = require('../../utils');\n\nmodule.exports = assignRawDocsToIdStructure;\n\nconst kHasArray = Symbol('assignRawDocsToIdStructure.hasArray');\n\n/**\n * Assign `vals` returned by mongo query to the `rawIds`\n * structure returned from utils.getVals() honoring\n * query sort order if specified by user.\n *\n * This can be optimized.\n *\n * Rules:\n *\n *   if the value of the path is not an array, use findOne rules, else find.\n *   for findOne the results are assigned directly to doc path (including null results).\n *   for find, if user specified sort order, results are assigned directly\n *   else documents are put back in original order of array if found in results\n *\n * @param {Array} rawIds\n * @param {Array} resultDocs\n * @param {Array} resultOrder\n * @param {Object} options\n * @param {Boolean} recursed\n * @api private\n */\n\nfunction assignRawDocsToIdStructure(rawIds, resultDocs, resultOrder, options, recursed) {\n  // honor user specified sort order\n  const newOrder = [];\n  const sorting = options.sort && rawIds.length > 1;\n  const nullIfNotFound = options.$nullIfNotFound;\n  let doc;\n  let sid;\n  let id;\n\n  if (utils.isMongooseArray(rawIds)) {\n    rawIds = rawIds.__array;\n  }\n\n  let i = 0;\n  const len = rawIds.length;\n\n  if (sorting && recursed && options[kHasArray] === undefined) {\n    options[kHasArray] = false;\n    for (const key in resultOrder) {\n      if (Array.isArray(resultOrder[key])) {\n        options[kHasArray] = true;\n        break;\n      }\n    }\n  }\n\n  for (i = 0; i < len; ++i) {\n    id = rawIds[i];\n\n    if (Array.isArray(id)) {\n      // handle [ [id0, id2], [id3] ]\n      assignRawDocsToIdStructure(id, resultDocs, resultOrder, options, true);\n      newOrder.push(id);\n      continue;\n    }\n\n    if (id === null && sorting === false) {\n      // keep nulls for findOne unless sorting, which always\n      // removes them (backward compat)\n      newOrder.push(id);\n      continue;\n    }\n\n    sid = String(id);\n    doc = resultDocs[sid];\n    // If user wants separate copies of same doc, use this option\n    if (options.clone && doc != null) {\n      if (options.lean) {\n        const _model = leanPopulateMap.get(doc);\n        doc = clone(doc);\n        leanPopulateMap.set(doc, _model);\n      } else {\n        doc = doc.constructor.hydrate(doc._doc);\n      }\n    }\n\n    if (recursed) {\n      if (doc) {\n        if (sorting) {\n          const _resultOrder = resultOrder[sid];\n          if (options[kHasArray]) {\n            // If result arrays, rely on the MongoDB server response for ordering\n            newOrder.push(doc);\n          } else {\n            newOrder[_resultOrder] = doc;\n          }\n        } else {\n          newOrder.push(doc);\n        }\n      } else if (id != null && id[modelSymbol] != null) {\n        newOrder.push(id);\n      } else {\n        newOrder.push(options.retainNullValues || nullIfNotFound ? null : id);\n      }\n    } else {\n      // apply findOne behavior - if document in results, assign, else assign null\n      newOrder[i] = doc || null;\n    }\n  }\n\n  rawIds.length = 0;\n  if (newOrder.length) {\n    // reassign the documents based on corrected order\n\n    // forEach skips over sparse entries in arrays so we\n    // can safely use this to our advantage dealing with sorted\n    // result sets too.\n    newOrder.forEach(function(doc, i) {\n      rawIds[i] = doc;\n    });\n  }\n}\n", "'use strict';\n\nmodule.exports = getVirtual;\n\n/*!\n * ignore\n */\n\nfunction getVirtual(schema, name) {\n  if (schema.virtuals[name]) {\n    return { virtual: schema.virtuals[name], path: void 0 };\n  }\n\n  const parts = name.split('.');\n  let cur = '';\n  let nestedSchemaPath = '';\n  for (let i = 0; i < parts.length; ++i) {\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\n    if (schema.virtuals[cur]) {\n      if (i === parts.length - 1) {\n        return { virtual: schema.virtuals[cur], path: nestedSchemaPath };\n      }\n      continue;\n    }\n\n    if (schema.nested[cur]) {\n      continue;\n    }\n\n    if (schema.paths[cur] && schema.paths[cur].schema) {\n      schema = schema.paths[cur].schema;\n      const rest = parts.slice(i + 1).join('.');\n\n      if (schema.virtuals[rest]) {\n        if (i === parts.length - 2) {\n          return {\n            virtual: schema.virtuals[rest],\n            nestedSchemaPath: [nestedSchemaPath, cur].filter(v => !!v).join('.')\n          };\n        }\n        continue;\n      }\n\n      if (i + 1 < parts.length && schema.discriminators) {\n        for (const key of Object.keys(schema.discriminators)) {\n          const res = getVirtual(schema.discriminators[key], rest);\n          if (res != null) {\n            const _path = [nestedSchemaPath, cur, res.nestedSchemaPath].\n              filter(v => !!v).join('.');\n            return {\n              virtual: res.virtual,\n              nestedSchemaPath: _path\n            };\n          }\n        }\n      }\n\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\n      cur = '';\n      continue;\n    }\n\n    if (schema.discriminators) {\n      for (const discriminatorKey of Object.keys(schema.discriminators)) {\n        const virtualFromDiscriminator = getVirtual(schema.discriminators[discriminatorKey], name);\n        if (virtualFromDiscriminator) return virtualFromDiscriminator;\n      }\n    }\n\n    return null;\n  }\n}\n", "'use strict';\n\nmodule.exports = function lookupLocalFields(cur, path, val) {\n  if (cur == null) {\n    return cur;\n  }\n\n  if (cur._doc != null) {\n    cur = cur._doc;\n  }\n\n  if (arguments.length >= 3) {\n    if (typeof cur !== 'object') {\n      return void 0;\n    }\n    if (val === void 0) {\n      return void 0;\n    }\n    if (cur instanceof Map) {\n      cur.set(path, val);\n    } else {\n      cur[path] = val;\n    }\n    return val;\n  }\n\n\n  // Support populating paths under maps using `map.$*.subpath`\n  if (path === '$*') {\n    return cur instanceof Map ?\n      Array.from(cur.values()) :\n      Object.keys(cur).map(key => cur[key]);\n  }\n\n  if (cur instanceof Map) {\n    return cur.get(path);\n  }\n\n  return cur[path];\n};\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n", null, null, null, null, "const lib = require(\"./lib\");\n\nmodule.exports = lib.default;\nObject.assign(module.exports, lib);\n", "'use strict';\n\nconst MongooseMap = require('../../types/map');\nconst SkipPopulateValue = require('./SkipPopulateValue');\nconst assignRawDocsToIdStructure = require('./assignRawDocsToIdStructure');\nconst get = require('../get');\nconst getVirtual = require('./getVirtual');\nconst leanPopulateMap = require('./leanPopulateMap');\nconst lookupLocalFields = require('./lookupLocalFields');\nconst markArraySubdocsPopulated = require('./markArraySubdocsPopulated');\nconst mpath = require('mpath');\nconst sift = require('sift').default;\nconst utils = require('../../utils');\nconst { populateModelSymbol } = require('../symbols');\n\nmodule.exports = function assignVals(o) {\n  // Options that aren't explicitly listed in `populateOptions`\n  const userOptions = Object.assign({}, get(o, 'allOptions.options.options'), get(o, 'allOptions.options'));\n  // `o.options` contains options explicitly listed in `populateOptions`, like\n  // `match` and `limit`.\n  const populateOptions = Object.assign({}, o.options, userOptions, {\n    justOne: o.justOne\n  });\n  populateOptions.$nullIfNotFound = o.isVirtual;\n  const populatedModel = o.populatedModel;\n\n  const originalIds = [].concat(o.rawIds);\n\n  // replace the original ids in our intermediate _ids structure\n  // with the documents found by query\n  o.allIds = [].concat(o.allIds);\n  assignRawDocsToIdStructure(o.rawIds, o.rawDocs, o.rawOrder, populateOptions);\n\n  // now update the original documents being populated using the\n  // result structure that contains real documents.\n  const docs = o.docs;\n  const rawIds = o.rawIds;\n  const options = o.options;\n  const count = o.count && o.isVirtual;\n  let i;\n\n  function setValue(val) {\n    if (count) {\n      return val;\n    }\n    if (val instanceof SkipPopulateValue) {\n      return val.val;\n    }\n    if (val === void 0) {\n      return val;\n    }\n\n    const _allIds = o.allIds[i];\n\n    if (o.path.endsWith('.$*')) {\n      // Skip maps re: gh-12494\n      return valueFilter(val, options, populateOptions, _allIds);\n    }\n\n    if (o.justOne === true && Array.isArray(val)) {\n      // Might be an embedded discriminator (re: gh-9244) with multiple models, so make sure to pick the right\n      // model before assigning.\n      const ret = [];\n      for (const doc of val) {\n        const _docPopulatedModel = leanPopulateMap.get(doc);\n        if (_docPopulatedModel == null || _docPopulatedModel === populatedModel) {\n          ret.push(doc);\n        }\n      }\n      // Since we don't want to have to create a new mongoosearray, make sure to\n      // modify the array in place\n      while (val.length > ret.length) {\n        Array.prototype.pop.apply(val, []);\n      }\n      for (let i = 0; i < ret.length; ++i) {\n        val[i] = ret[i];\n      }\n\n      return valueFilter(val[0], options, populateOptions, _allIds);\n    } else if (o.justOne === false && !Array.isArray(val)) {\n      return valueFilter([val], options, populateOptions, _allIds);\n    }\n    return valueFilter(val, options, populateOptions, _allIds);\n  }\n\n  for (i = 0; i < docs.length; ++i) {\n    const _path = o.path.endsWith('.$*') ? o.path.slice(0, -3) : o.path;\n    const existingVal = mpath.get(_path, docs[i], lookupLocalFields);\n    if (existingVal == null && !getVirtual(o.originalModel.schema, _path)) {\n      continue;\n    }\n\n    let valueToSet;\n    if (count) {\n      valueToSet = numDocs(rawIds[i]);\n    } else if (Array.isArray(o.match)) {\n      valueToSet = Array.isArray(rawIds[i]) ?\n        rawIds[i].filter(sift(o.match[i])) :\n        [rawIds[i]].filter(sift(o.match[i]))[0];\n    } else {\n      valueToSet = rawIds[i];\n    }\n\n    // If we're populating a map, the existing value will be an object, so\n    // we need to transform again\n    const originalSchema = o.originalModel.schema;\n    const isDoc = get(docs[i], '$__', null) != null;\n    let isMap = isDoc ?\n      existingVal instanceof Map :\n      utils.isPOJO(existingVal);\n    // If we pass the first check, also make sure the local field's schematype\n    // is map (re: gh-6460)\n    isMap = isMap && get(originalSchema._getSchema(_path), '$isSchemaMap');\n    if (!o.isVirtual && isMap) {\n      const _keys = existingVal instanceof Map ?\n        Array.from(existingVal.keys()) :\n        Object.keys(existingVal);\n      valueToSet = valueToSet.reduce((cur, v, i) => {\n        cur.set(_keys[i], v);\n        return cur;\n      }, new Map());\n    }\n\n    if (isDoc && Array.isArray(valueToSet)) {\n      for (const val of valueToSet) {\n        if (val != null && val.$__ != null) {\n          val.$__.parent = docs[i];\n        }\n      }\n    } else if (isDoc && valueToSet != null && valueToSet.$__ != null) {\n      valueToSet.$__.parent = docs[i];\n    }\n\n    if (o.isVirtual && isDoc) {\n      docs[i].$populated(_path, o.justOne ? originalIds[0] : originalIds, o.allOptions);\n      // If virtual populate and doc is already init-ed, need to walk through\n      // the actual doc to set rather than setting `_doc` directly\n      if (Array.isArray(valueToSet)) {\n        valueToSet = valueToSet.map(v => v == null ? void 0 : v);\n      }\n      mpath.set(_path, valueToSet, docs[i], void 0, setValue, false);\n      continue;\n    }\n\n    const parts = _path.split('.');\n    let cur = docs[i];\n    const curPath = parts[0];\n    for (let j = 0; j < parts.length - 1; ++j) {\n      // If we get to an array with a dotted path, like `arr.foo`, don't set\n      // `foo` on the array.\n      if (Array.isArray(cur) && !utils.isArrayIndex(parts[j])) {\n        break;\n      }\n\n      if (parts[j] === '$*') {\n        break;\n      }\n\n      if (cur[parts[j]] == null) {\n        // If nothing to set, avoid creating an unnecessary array. Otherwise\n        // we'll end up with a single doc in the array with only defaults.\n        // See gh-8342, gh-8455\n        const schematype = originalSchema._getSchema(curPath);\n        if (valueToSet == null && schematype != null && schematype.$isMongooseArray) {\n          break;\n        }\n        cur[parts[j]] = {};\n      }\n      cur = cur[parts[j]];\n      // If the property in MongoDB is a primitive, we won't be able to populate\n      // the nested path, so skip it. See gh-7545\n      if (typeof cur !== 'object') {\n        break;\n      }\n    }\n    if (docs[i].$__) {\n      o.allOptions.options[populateModelSymbol] = o.allOptions.model;\n      docs[i].$populated(_path, o.unpopulatedValues[i], o.allOptions.options);\n\n      if (valueToSet != null && valueToSet.$__ != null) {\n        valueToSet.$__.wasPopulated = { value: o.unpopulatedValues[i] };\n      }\n\n      if (valueToSet instanceof Map && !valueToSet.$isMongooseMap) {\n        valueToSet = new MongooseMap(valueToSet, _path, docs[i], docs[i].schema.path(_path).$__schemaType);\n      }\n    }\n\n    // If lean, need to check that each individual virtual respects\n    // `justOne`, because you may have a populated virtual with `justOne`\n    // underneath an array. See gh-6867\n    mpath.set(_path, valueToSet, docs[i], lookupLocalFields, setValue, false);\n\n    if (docs[i].$__) {\n      markArraySubdocsPopulated(docs[i], [o.allOptions.options]);\n    }\n  }\n};\n\nfunction numDocs(v) {\n  if (Array.isArray(v)) {\n    // If setting underneath an array of populated subdocs, we may have an\n    // array of arrays. See gh-7573\n    if (v.some(el => Array.isArray(el) || el === null)) {\n      return v.map(el => {\n        if (el == null) {\n          return 0;\n        }\n        if (Array.isArray(el)) {\n          return el.filter(el => el != null).length;\n        }\n        return 1;\n      });\n    }\n    return v.filter(el => el != null).length;\n  }\n  return v == null ? 0 : 1;\n}\n\n/**\n * 1) Apply backwards compatible find/findOne behavior to sub documents\n *\n *    find logic:\n *      a) filter out non-documents\n *      b) remove _id from sub docs when user specified\n *\n *    findOne\n *      a) if no doc found, set to null\n *      b) remove _id from sub docs when user specified\n *\n * 2) Remove _ids when specified by users query.\n *\n * background:\n * _ids are left in the query even when user excludes them so\n * that population mapping can occur.\n * @param {Any} val\n * @param {Object} assignmentOpts\n * @param {Object} populateOptions\n * @param {Function} [populateOptions.transform]\n * @param {Boolean} allIds\n * @api private\n */\n\nfunction valueFilter(val, assignmentOpts, populateOptions, allIds) {\n  const userSpecifiedTransform = typeof populateOptions.transform === 'function';\n  const transform = userSpecifiedTransform ? populateOptions.transform : noop;\n  if (Array.isArray(val)) {\n    // find logic\n    const ret = [];\n    const numValues = val.length;\n    for (let i = 0; i < numValues; ++i) {\n      let subdoc = val[i];\n      const _allIds = Array.isArray(allIds) ? allIds[i] : allIds;\n      if (!isPopulatedObject(subdoc) && (!populateOptions.retainNullValues || subdoc != null) && !userSpecifiedTransform) {\n        continue;\n      } else if (!populateOptions.retainNullValues && subdoc == null) {\n        continue;\n      } else if (userSpecifiedTransform) {\n        subdoc = transform(isPopulatedObject(subdoc) ? subdoc : null, _allIds);\n      }\n      maybeRemoveId(subdoc, assignmentOpts);\n      ret.push(subdoc);\n      if (assignmentOpts.originalLimit &&\n          ret.length >= assignmentOpts.originalLimit) {\n        break;\n      }\n    }\n\n    const rLen = ret.length;\n    // Since we don't want to have to create a new mongoosearray, make sure to\n    // modify the array in place\n    while (val.length > rLen) {\n      Array.prototype.pop.apply(val, []);\n    }\n    let i = 0;\n    if (utils.isMongooseArray(val)) {\n      for (i = 0; i < rLen; ++i) {\n        val.set(i, ret[i], true);\n      }\n    } else {\n      for (i = 0; i < rLen; ++i) {\n        val[i] = ret[i];\n      }\n    }\n    return val;\n  }\n\n  // findOne\n  if (isPopulatedObject(val) || utils.isPOJO(val)) {\n    maybeRemoveId(val, assignmentOpts);\n    return transform(val, allIds);\n  }\n  if (val instanceof Map) {\n    return val;\n  }\n\n  if (populateOptions.justOne === false) {\n    return [];\n  }\n\n  return val == null ? transform(val, allIds) : transform(null, allIds);\n}\n\n/**\n * Remove _id from `subdoc` if user specified \"lean\" query option\n * @param {Document} subdoc\n * @param {Object} assignmentOpts\n * @api private\n */\n\nfunction maybeRemoveId(subdoc, assignmentOpts) {\n  if (subdoc != null && assignmentOpts.excludeId) {\n    if (typeof subdoc.$__setValue === 'function') {\n      delete subdoc._doc._id;\n    } else {\n      delete subdoc._id;\n    }\n  }\n}\n\n/**\n * Determine if `obj` is something we can set a populated path to. Can be a\n * document, a lean document, or an array/map that contains docs.\n * @param {Any} obj\n * @api private\n */\n\nfunction isPopulatedObject(obj) {\n  if (obj == null) {\n    return false;\n  }\n\n  return Array.isArray(obj) ||\n    obj.$isMongooseMap ||\n    obj.$__ != null ||\n    leanPopulateMap.has(obj);\n}\n\nfunction noop(v) {\n  return v;\n}\n", "'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst getDiscriminatorByValue = require('../../helpers/discriminator/getDiscriminatorByValue');\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst cast = require('../../cast');\nconst castUpdate = require('../query/castUpdate');\nconst { inspect } = require('util');\nconst setDefaultsOnInsert = require('../setDefaultsOnInsert');\n\n/**\n * Given a model and a bulkWrite op, return a thunk that handles casting and\n * validating the individual op.\n * @param {Model} originalModel\n * @param {Object} op\n * @param {Object} [options]\n * @api private\n */\n\nmodule.exports = function castBulkWrite(originalModel, op, options) {\n  const now = originalModel.base.now();\n  if (op['insertOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['insertOne']['document']);\n\n      const doc = new model(op['insertOne']['document']);\n      if (model.schema.options.timestamps && options.timestamps !== false) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      op['insertOne']['document'] = doc;\n\n      if (options.skipValidation || op['insertOne'].skipValidation) {\n        callback(null);\n        return;\n      }\n\n      op['insertOne']['document'].$validate().then(\n        () => { callback(null); },\n        err => { callback(err, null); }\n      );\n    };\n  } else if (op['updateOne']) {\n    return (callback) => {\n      try {\n        if (!op['updateOne']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateOne']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateOne']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        _addDiscriminatorToObject(schema, op['updateOne']['filter']);\n\n        if (model.schema.$timestamps != null && op['updateOne'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateOne']['update'], {});\n        }\n\n        if (op['updateOne'].timestamps !== false) {\n          applyTimestampsToChildren(now, op['updateOne']['update'], model.schema);\n        }\n\n        if (op['updateOne'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateOne']['filter'], model.schema, op['updateOne']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateOne'].upsert\n          });\n        }\n\n        op['updateOne']['filter'] = cast(model.schema, op['updateOne']['filter'], {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        });\n\n        op['updateOne']['update'] = castUpdate(model.schema, op['updateOne']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateOne'].upsert\n        }, model, op['updateOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['updateMany']) {\n    return (callback) => {\n      try {\n        if (!op['updateMany']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateMany']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateMany']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        if (op['updateMany'].setDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateMany']['filter'], model.schema, op['updateMany']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateMany'].upsert\n          });\n        }\n\n        if (model.schema.$timestamps != null && op['updateMany'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateMany']['update'], {});\n        }\n        if (op['updateMany'].timestamps !== false) {\n          applyTimestampsToChildren(now, op['updateMany']['update'], model.schema);\n        }\n\n        _addDiscriminatorToObject(schema, op['updateMany']['filter']);\n\n        op['updateMany']['filter'] = cast(model.schema, op['updateMany']['filter'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        });\n\n        op['updateMany']['update'] = castUpdate(model.schema, op['updateMany']['update'], {\n          strict: strict,\n          overwrite: false,\n          upsert: op['updateMany'].upsert\n        }, model, op['updateMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['replaceOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['replaceOne']['filter']);\n      const schema = model.schema;\n      const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n      _addDiscriminatorToObject(schema, op['replaceOne']['filter']);\n      try {\n        op['replaceOne']['filter'] = cast(model.schema, op['replaceOne']['filter'], {\n          strict: strict,\n          upsert: op['replaceOne'].upsert\n        });\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      // set `skipId`, otherwise we get \"_id field cannot be changed\"\n      const doc = new model(op['replaceOne']['replacement'], strict, true);\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      op['replaceOne']['replacement'] = doc;\n\n      if (options.skipValidation || op['replaceOne'].skipValidation) {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n        return;\n      }\n\n      op['replaceOne']['replacement'].$validate().then(\n        () => {\n          op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n          callback(null);\n        },\n        error => {\n          callback(error, null);\n        }\n      );\n    };\n  } else if (op['deleteOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteOne']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteOne']['filter']);\n\n      try {\n        op['deleteOne']['filter'] = cast(model.schema,\n          op['deleteOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['deleteMany']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteMany']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteMany']['filter']);\n\n      try {\n        op['deleteMany']['filter'] = cast(model.schema,\n          op['deleteMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else {\n    return (callback) => {\n      const error = new MongooseError(`Invalid op passed to \\`bulkWrite()\\`: ${inspect(op)}`);\n      callback(error, null);\n    };\n  }\n};\n\nfunction _addDiscriminatorToObject(schema, obj) {\n  if (schema == null) {\n    return;\n  }\n  if (schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    obj[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n\n/**\n * gets discriminator model if discriminator key is present in object\n * @api private\n */\n\nfunction decideModelByObject(model, object) {\n  const discriminatorKey = model.schema.options.discriminatorKey;\n  if (object != null && object.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, object[discriminatorKey]) || model;\n  }\n  return model;\n}\n", "'use strict';\n\nconst SkipPopulateValue = require('./SkipPopulateValue');\nconst parentPaths = require('../path/parentPaths');\nconst { trusted } = require('../query/trusted');\nconst hasDollarKeys = require('../query/hasDollarKeys');\n\nmodule.exports = function createPopulateQueryFilter(ids, _match, _foreignField, model, skipInvalidIds) {\n  const match = _formatMatch(_match);\n\n  if (_foreignField.size === 1) {\n    const foreignField = Array.from(_foreignField)[0];\n    const foreignSchemaType = model.schema.path(foreignField);\n    if (foreignField !== '_id' || !match['_id']) {\n      ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n      match[foreignField] = trusted({ $in: ids });\n    } else if (foreignField === '_id' && match['_id']) {\n      const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ?\n        match[foreignField] :\n        { $eq: match[foreignField] };\n      match[foreignField] = { ...trusted({ $in: ids }), ...userSpecifiedMatch };\n    }\n\n    const _parentPaths = parentPaths(foreignField);\n    for (let i = 0; i < _parentPaths.length - 1; ++i) {\n      const cur = _parentPaths[i];\n      if (match[cur] != null && match[cur].$elemMatch != null) {\n        match[cur].$elemMatch[foreignField.slice(cur.length + 1)] = trusted({ $in: ids });\n        delete match[foreignField];\n        break;\n      }\n    }\n  } else {\n    const $or = [];\n    if (Array.isArray(match.$or)) {\n      match.$and = [{ $or: match.$or }, { $or: $or }];\n      delete match.$or;\n    } else {\n      match.$or = $or;\n    }\n    for (const foreignField of _foreignField) {\n      if (foreignField !== '_id' || !match['_id']) {\n        const foreignSchemaType = model.schema.path(foreignField);\n        ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n        $or.push({ [foreignField]: { $in: ids } });\n      } else if (foreignField === '_id' && match['_id']) {\n        const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ?\n          match[foreignField] :\n          { $eq: match[foreignField] };\n        match[foreignField] = { ...trusted({ $in: ids }), ...userSpecifiedMatch };\n      }\n    }\n  }\n\n  return match;\n};\n\n/**\n * Optionally filter out invalid ids that don't conform to foreign field's schema\n * to avoid cast errors (gh-7706)\n * @param {Array} ids\n * @param {SchemaType} foreignSchemaType\n * @param {Boolean} [skipInvalidIds]\n * @api private\n */\n\nfunction _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds) {\n  ids = ids.filter(v => !(v instanceof SkipPopulateValue));\n  if (!skipInvalidIds) {\n    return ids;\n  }\n  return ids.filter(id => {\n    try {\n      foreignSchemaType.cast(id);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n}\n\n/**\n * Format `mod.match` given that it may be an array that we need to $or if\n * the client has multiple docs with match functions\n * @param {Array|Any} match\n * @api private\n */\n\nfunction _formatMatch(match) {\n  if (Array.isArray(match)) {\n    if (match.length > 1) {\n      return { $or: [].concat(match.map(m => Object.assign({}, m))) };\n    }\n    return Object.assign({}, match[0]);\n  }\n  return Object.assign({}, match);\n}\n", "'use strict';\nfunction getDefaultBulkwriteResult() {\n  return {\n    result: {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    },\n    insertedCount: 0,\n    matchedCount: 0,\n    modifiedCount: 0,\n    deletedCount: 0,\n    upsertedCount: 0,\n    upsertedIds: {},\n    insertedIds: {},\n    n: 0\n  };\n}\n\nmodule.exports = getDefaultBulkwriteResult;\n", "'use strict';\n\nmodule.exports = function firstKey(obj) {\n  if (obj == null) {\n    return null;\n  }\n  return Object.keys(obj)[0];\n};\n", "'use strict';\n\n/*!\n * ignore\n */\n\nconst Mixed = require('../../schema/mixed');\nconst get = require('../get');\nconst getDiscriminatorByValue = require('../discriminator/getDiscriminatorByValue');\nconst leanPopulateMap = require('./leanPopulateMap');\nconst mpath = require('mpath');\n\nconst populateModelSymbol = require('../symbols').populateModelSymbol;\n\n/**\n * Given a model and its schema, find all possible schema types for `path`,\n * including searching through discriminators. If `doc` is specified, will\n * use the doc's values for discriminator keys when searching, otherwise\n * will search all discriminators.\n *\n * @param {Model} model\n * @param {Schema} schema\n * @param {Object} doc POJO\n * @param {string} path\n * @api private\n */\n\nmodule.exports = function getSchemaTypes(model, schema, doc, path) {\n  const pathschema = schema.path(path);\n  const topLevelDoc = doc;\n  if (pathschema) {\n    return pathschema;\n  }\n\n  const discriminatorKey = schema.discriminatorMapping &&\n    schema.discriminatorMapping.key;\n  if (discriminatorKey && model != null) {\n    if (doc != null && doc[discriminatorKey] != null) {\n      const discriminator = getDiscriminatorByValue(model.discriminators, doc[discriminatorKey]);\n      schema = discriminator ? discriminator.schema : schema;\n    } else if (model.discriminators != null) {\n      return Object.keys(model.discriminators).reduce((arr, name) => {\n        const disc = model.discriminators[name];\n        return arr.concat(getSchemaTypes(disc, disc.schema, null, path));\n      }, []);\n    }\n  }\n\n  function search(parts, schema, subdoc, nestedPath) {\n    let p = parts.length + 1;\n    let foundschema;\n    let trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema == null) {\n        continue;\n      }\n\n      if (foundschema.caster) {\n        // array of Mixed?\n        if (foundschema.caster instanceof Mixed) {\n          return foundschema.caster;\n        }\n\n        let schemas = null;\n        if (foundschema.schema != null && foundschema.schema.discriminators != null) {\n          const discriminators = foundschema.schema.discriminators;\n          const discriminatorKeyPath = trypath + '.' +\n            foundschema.schema.options.discriminatorKey;\n          const keys = subdoc ? mpath.get(discriminatorKeyPath, subdoc) || [] : [];\n          schemas = Object.keys(discriminators).\n            reduce(function(cur, discriminator) {\n              const tiedValue = discriminators[discriminator].discriminatorMapping.value;\n              if (doc == null || keys.indexOf(discriminator) !== -1 || keys.indexOf(tiedValue) !== -1) {\n                cur.push(discriminators[discriminator]);\n              }\n              return cur;\n            }, []);\n        }\n\n        // Now that we found the array, we need to check if there\n        // are remaining document paths to look up for casting.\n        // Also we need to handle array.$.path since schema.path\n        // doesn't work for that.\n        // If there is no foundschema.schema we are dealing with\n        // a path like array.$\n        if (p !== parts.length && foundschema.schema) {\n          let ret;\n          if (parts[p] === '$') {\n            if (p + 1 === parts.length) {\n              // comments.$\n              return foundschema;\n            }\n            // comments.$.comments.$.title\n            ret = search(\n              parts.slice(p + 1),\n              schema,\n              subdoc ? mpath.get(trypath, subdoc) : null,\n              nestedPath.concat(parts.slice(0, p))\n            );\n            if (ret) {\n              ret.$parentSchemaDocArray = ret.$parentSchemaDocArray ||\n                (foundschema.schema.$isSingleNested ? null : foundschema);\n            }\n            return ret;\n          }\n\n          if (schemas != null && schemas.length > 0) {\n            ret = [];\n            for (const schema of schemas) {\n              const _ret = search(\n                parts.slice(p),\n                schema,\n                subdoc ? mpath.get(trypath, subdoc) : null,\n                nestedPath.concat(parts.slice(0, p))\n              );\n              if (_ret != null) {\n                _ret.$parentSchemaDocArray = _ret.$parentSchemaDocArray ||\n                  (foundschema.schema.$isSingleNested ? null : foundschema);\n                if (_ret.$parentSchemaDocArray) {\n                  ret.$parentSchemaDocArray = _ret.$parentSchemaDocArray;\n                }\n                ret.push(_ret);\n              }\n            }\n            return ret;\n          } else {\n            ret = search(\n              parts.slice(p),\n              foundschema.schema,\n              subdoc ? mpath.get(trypath, subdoc) : null,\n              nestedPath.concat(parts.slice(0, p))\n            );\n\n            if (ret) {\n              ret.$parentSchemaDocArray = ret.$parentSchemaDocArray ||\n                (foundschema.schema.$isSingleNested ? null : foundschema);\n            }\n            return ret;\n          }\n        } else if (p !== parts.length &&\n            foundschema.$isMongooseArray &&\n            foundschema.casterConstructor.$isMongooseArray) {\n          // Nested arrays. Drill down to the bottom of the nested array.\n          let type = foundschema;\n          while (type.$isMongooseArray && !type.$isMongooseDocumentArray) {\n            type = type.casterConstructor;\n          }\n\n          const ret = search(\n            parts.slice(p),\n            type.schema,\n            null,\n            nestedPath.concat(parts.slice(0, p))\n          );\n          if (ret != null) {\n            return ret;\n          }\n\n          if (type.schema.discriminators) {\n            const discriminatorPaths = [];\n            for (const discriminatorName of Object.keys(type.schema.discriminators)) {\n              const _schema = type.schema.discriminators[discriminatorName] || type.schema;\n              const ret = search(parts.slice(p), _schema, null, nestedPath.concat(parts.slice(0, p)));\n              if (ret != null) {\n                discriminatorPaths.push(ret);\n              }\n            }\n            if (discriminatorPaths.length > 0) {\n              return discriminatorPaths;\n            }\n          }\n        }\n      } else if (foundschema.$isSchemaMap && foundschema.$__schemaType instanceof Mixed) {\n        return foundschema.$__schemaType;\n      }\n\n      const fullPath = nestedPath.concat([trypath]).join('.');\n      if (topLevelDoc != null && topLevelDoc.$__ && topLevelDoc.$populated(fullPath) && p < parts.length) {\n        const model = doc.$__.populated[fullPath].options[populateModelSymbol];\n        if (model != null) {\n          const ret = search(\n            parts.slice(p),\n            model.schema,\n            subdoc ? mpath.get(trypath, subdoc) : null,\n            nestedPath.concat(parts.slice(0, p))\n          );\n\n          return ret;\n        }\n      }\n\n      const _val = get(topLevelDoc, trypath);\n      if (_val != null) {\n        const model = Array.isArray(_val) && _val.length > 0 ?\n          leanPopulateMap.get(_val[0]) :\n          leanPopulateMap.get(_val);\n        // Populated using lean, `leanPopulateMap` value is the foreign model\n        const schema = model != null ? model.schema : null;\n        if (schema != null) {\n          const ret = search(\n            parts.slice(p),\n            schema,\n            subdoc ? mpath.get(trypath, subdoc) : null,\n            nestedPath.concat(parts.slice(0, p))\n          );\n\n          if (ret != null) {\n            ret.$parentSchemaDocArray = ret.$parentSchemaDocArray ||\n              (schema.$isSingleNested ? null : schema);\n            return ret;\n          }\n        }\n      }\n      return foundschema;\n    }\n  }\n  // look for arrays\n  const parts = path.split('.');\n  for (let i = 0; i < parts.length; ++i) {\n    if (parts[i] === '$') {\n      // Re: gh-5628, because `schema.path()` doesn't take $ into account.\n      parts[i] = '0';\n    }\n  }\n  return search(parts, schema, doc, []);\n};\n", "'use strict';\n\nconst isDefiningProjection = require('./isDefiningProjection');\n\n/**\n * Determines if `path` is excluded by `projection`\n *\n * @param {Object} projection\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nmodule.exports = function isPathExcluded(projection, path) {\n  if (projection == null) {\n    return false;\n  }\n\n  if (path === '_id') {\n    return projection._id === 0;\n  }\n\n  const paths = Object.keys(projection);\n  let type = null;\n\n  for (const _path of paths) {\n    if (isDefiningProjection(projection[_path])) {\n      type = projection[path] === 1 ? 'inclusive' : 'exclusive';\n      break;\n    }\n  }\n\n  if (type === 'inclusive') {\n    return projection[path] !== 1;\n  }\n  if (type === 'exclusive') {\n    return projection[path] === 0;\n  }\n  return false;\n};\n", "'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst isPathExcluded = require('../projection/isPathExcluded');\nconst lookupLocalFields = require('./lookupLocalFields');\nconst mpath = require('mpath');\nconst util = require('util');\nconst utils = require('../../utils');\n\nconst hasNumericPropRE = /(\\.\\d+$|\\.\\d+\\.)/g;\n\nmodule.exports = function modelNamesFromRefPath(refPath, doc, populatedPath, modelSchema, queryProjection) {\n  if (refPath == null) {\n    return [];\n  }\n\n  if (typeof refPath === 'string' && queryProjection != null && isPathExcluded(queryProjection, refPath)) {\n    throw new MongooseError('refPath `' + refPath + '` must not be excluded in projection, got ' +\n      util.inspect(queryProjection));\n  }\n\n  // If populated path has numerics, the end `refPath` should too. For example,\n  // if populating `a.0.b` instead of `a.b` and `b` has `refPath = a.c`, we\n  // should return `a.0.c` for the refPath.\n\n  if (hasNumericPropRE.test(populatedPath)) {\n    const chunks = populatedPath.split(hasNumericPropRE);\n\n    if (chunks[chunks.length - 1] === '') {\n      throw new Error('Can\\'t populate individual element in an array');\n    }\n\n    let _refPath = '';\n    let _remaining = refPath;\n    // 2nd, 4th, etc. will be numeric props. For example: `[ 'a', '.0.', 'b' ]`\n    for (let i = 0; i < chunks.length; i += 2) {\n      const chunk = chunks[i];\n      if (_remaining.startsWith(chunk + '.')) {\n        _refPath += _remaining.substring(0, chunk.length) + chunks[i + 1];\n        _remaining = _remaining.substring(chunk.length + 1);\n      } else if (i === chunks.length - 1) {\n        _refPath += _remaining;\n        _remaining = '';\n        break;\n      } else {\n        throw new Error('Could not normalize ref path, chunk ' + chunk + ' not in populated path');\n      }\n    }\n\n    const refValue = mpath.get(_refPath, doc, lookupLocalFields);\n    let modelNames = Array.isArray(refValue) ? refValue : [refValue];\n    modelNames = utils.array.flatten(modelNames);\n    return modelNames;\n  }\n\n  const refValue = mpath.get(refPath, doc, lookupLocalFields);\n\n  let modelNames;\n  if (modelSchema != null && modelSchema.virtuals.hasOwnProperty(refPath)) {\n    modelNames = [modelSchema.virtuals[refPath].applyGetters(void 0, doc)];\n  } else {\n    modelNames = Array.isArray(refValue) ? refValue : [refValue];\n  }\n\n  modelNames = utils.array.flatten(modelNames);\n\n  return modelNames;\n};\n", "'use strict';\n\nconst MongooseError = require('../../error/index');\nconst SkipPopulateValue = require('./SkipPopulateValue');\nconst clone = require('../clone');\nconst get = require('../get');\nconst getDiscriminatorByValue = require('../discriminator/getDiscriminatorByValue');\nconst getConstructorName = require('../getConstructorName');\nconst getSchemaTypes = require('./getSchemaTypes');\nconst getVirtual = require('./getVirtual');\nconst lookupLocalFields = require('./lookupLocalFields');\nconst mpath = require('mpath');\nconst modelNamesFromRefPath = require('./modelNamesFromRefPath');\nconst utils = require('../../utils');\n\nconst modelSymbol = require('../symbols').modelSymbol;\nconst populateModelSymbol = require('../symbols').populateModelSymbol;\nconst schemaMixedSymbol = require('../../schema/symbols').schemaMixedSymbol;\nconst StrictPopulate = require('../../error/strictPopulate');\n\nmodule.exports = function getModelsMapForPopulate(model, docs, options) {\n  let doc;\n  const len = docs.length;\n  const map = [];\n  const modelNameFromQuery = options.model && options.model.modelName || options.model;\n  let schema;\n  let refPath;\n  let modelNames;\n  const available = {};\n\n  const modelSchema = model.schema;\n\n  // Populating a nested path should always be a no-op re: #9073.\n  // People shouldn't do this, but apparently they do.\n  if (options._localModel != null && options._localModel.schema.nested[options.path]) {\n    return [];\n  }\n\n  const _virtualRes = getVirtual(model.schema, options.path);\n  const virtual = _virtualRes == null ? null : _virtualRes.virtual;\n  if (virtual != null) {\n    return _virtualPopulate(model, docs, options, _virtualRes);\n  }\n\n  let allSchemaTypes = getSchemaTypes(model, modelSchema, null, options.path);\n  allSchemaTypes = Array.isArray(allSchemaTypes) ? allSchemaTypes : [allSchemaTypes].filter(v => v != null);\n\n  if (allSchemaTypes.length === 0 && options.strictPopulate !== false && options._localModel != null) {\n    return new StrictPopulate(options._fullPath || options.path);\n  }\n\n  for (let i = 0; i < len; i++) {\n    doc = docs[i];\n    let justOne = null;\n\n    const docSchema = doc != null && doc.$__ != null ? doc.$__schema : modelSchema;\n    schema = getSchemaTypes(model, docSchema, doc, options.path);\n\n    // Special case: populating a path that's a DocumentArray unless\n    // there's an explicit `ref` or `refPath` re: gh-8946\n    if (schema != null &&\n        schema.$isMongooseDocumentArray &&\n        schema.options.ref == null &&\n        schema.options.refPath == null) {\n      continue;\n    }\n    const isUnderneathDocArray = schema && schema.$parentSchemaDocArray;\n    if (isUnderneathDocArray && get(options, 'options.sort') != null) {\n      return new MongooseError('Cannot populate with `sort` on path ' + options.path +\n        ' because it is a subproperty of a document array');\n    }\n\n    modelNames = null;\n    let isRefPath = false;\n    let normalizedRefPath = null;\n    let schemaOptions = null;\n    let modelNamesInOrder = null;\n\n    if (schema != null && schema.instance === 'Embedded') {\n      if (schema.options.ref) {\n        const data = {\n          localField: options.path + '._id',\n          foreignField: '_id',\n          justOne: true\n        };\n        const res = _getModelNames(doc, schema, modelNameFromQuery, model);\n\n        const unpopulatedValue = mpath.get(options.path, doc);\n        const id = mpath.get('_id', unpopulatedValue);\n        addModelNamesToMap(model, map, available, res.modelNames, options, data, id, doc, schemaOptions, unpopulatedValue);\n      }\n      // No-op if no `ref` set. See gh-11538\n      continue;\n    }\n\n    if (Array.isArray(schema)) {\n      const schemasArray = schema;\n      for (const _schema of schemasArray) {\n        let _modelNames;\n        let res;\n        try {\n          res = _getModelNames(doc, _schema, modelNameFromQuery, model);\n          _modelNames = res.modelNames;\n          isRefPath = isRefPath || res.isRefPath;\n          normalizedRefPath = normalizedRefPath || res.refPath;\n          justOne = res.justOne;\n        } catch (error) {\n          return error;\n        }\n\n        if (isRefPath && !res.isRefPath) {\n          continue;\n        }\n        if (!_modelNames) {\n          continue;\n        }\n        modelNames = modelNames || [];\n        for (const modelName of _modelNames) {\n          if (modelNames.indexOf(modelName) === -1) {\n            modelNames.push(modelName);\n          }\n        }\n      }\n    } else {\n      try {\n        const res = _getModelNames(doc, schema, modelNameFromQuery, model);\n        modelNames = res.modelNames;\n        isRefPath = res.isRefPath;\n        normalizedRefPath = normalizedRefPath || res.refPath;\n        justOne = res.justOne;\n        schemaOptions = get(schema, 'options.populate', null);\n        // Dedupe, because `refPath` can return duplicates of the same model name,\n        // and that causes perf issues.\n        if (isRefPath) {\n          modelNamesInOrder = modelNames;\n          modelNames = Array.from(new Set(modelNames));\n        }\n      } catch (error) {\n        return error;\n      }\n\n      if (!modelNames) {\n        continue;\n      }\n    }\n\n    const data = {};\n    const localField = options.path;\n    const foreignField = '_id';\n\n    // `justOne = null` means we don't know from the schema whether the end\n    // result should be an array or a single doc. This can result from\n    // populating a POJO using `Model.populate()`\n    if ('justOne' in options && options.justOne !== void 0) {\n      justOne = options.justOne;\n    } else if (schema && !schema[schemaMixedSymbol]) {\n      // Skip Mixed types because we explicitly don't do casting on those.\n      if (options.path.endsWith('.' + schema.path) || options.path === schema.path) {\n        justOne = Array.isArray(schema) ?\n          schema.every(schema => !schema.$isMongooseArray) :\n          !schema.$isMongooseArray;\n      }\n    }\n\n    if (!modelNames) {\n      continue;\n    }\n\n    data.isVirtual = false;\n    data.justOne = justOne;\n    data.localField = localField;\n    data.foreignField = foreignField;\n\n    // Get local fields\n    const ret = _getLocalFieldValues(doc, localField, model, options, null, schema);\n\n    const id = String(utils.getValue(foreignField, doc));\n    options._docs[id] = Array.isArray(ret) ? ret.slice() : ret;\n\n    let match = get(options, 'match', null);\n\n    const hasMatchFunction = typeof match === 'function';\n    if (hasMatchFunction) {\n      match = match.call(doc, doc);\n    }\n    data.match = match;\n    data.hasMatchFunction = hasMatchFunction;\n    data.isRefPath = isRefPath;\n    data.modelNamesInOrder = modelNamesInOrder;\n\n    if (isRefPath) {\n      const embeddedDiscriminatorModelNames = _findRefPathForDiscriminators(doc,\n        modelSchema, data, options, normalizedRefPath, ret);\n\n      modelNames = embeddedDiscriminatorModelNames || modelNames;\n    }\n\n    try {\n      addModelNamesToMap(model, map, available, modelNames, options, data, ret, doc, schemaOptions);\n    } catch (err) {\n      return err;\n    }\n  }\n  return map;\n\n  function _getModelNames(doc, schema, modelNameFromQuery, model) {\n    let modelNames;\n    let isRefPath = false;\n    let justOne = null;\n\n    const originalSchema = schema;\n    if (schema && schema.instance === 'Array') {\n      schema = schema.caster;\n    }\n    if (schema && schema.$isSchemaMap) {\n      schema = schema.$__schemaType;\n    }\n\n    const ref = schema && schema.options && schema.options.ref;\n    refPath = schema && schema.options && schema.options.refPath;\n    if (schema != null &&\n        schema[schemaMixedSymbol] &&\n        !ref &&\n        !refPath &&\n        !modelNameFromQuery) {\n      return { modelNames: null };\n    }\n\n    if (modelNameFromQuery) {\n      modelNames = [modelNameFromQuery]; // query options\n    } else if (refPath != null) {\n      if (typeof refPath === 'function') {\n        const subdocPath = options.path.slice(0, options.path.length - schema.path.length - 1);\n        const vals = mpath.get(subdocPath, doc, lookupLocalFields);\n        const subdocsBeingPopulated = Array.isArray(vals) ?\n          utils.array.flatten(vals) :\n          (vals ? [vals] : []);\n\n        modelNames = new Set();\n        for (const subdoc of subdocsBeingPopulated) {\n          refPath = refPath.call(subdoc, subdoc, options.path);\n          modelNamesFromRefPath(refPath, doc, options.path, modelSchema, options._queryProjection).\n            forEach(name => modelNames.add(name));\n        }\n        modelNames = Array.from(modelNames);\n      } else {\n        modelNames = modelNamesFromRefPath(refPath, doc, options.path, modelSchema, options._queryProjection);\n      }\n\n      isRefPath = true;\n    } else {\n      let ref;\n      let refPath;\n      let schemaForCurrentDoc;\n      let discriminatorValue;\n      let modelForCurrentDoc = model;\n      const discriminatorKey = model.schema.options.discriminatorKey;\n\n      if (!schema && discriminatorKey && (discriminatorValue = utils.getValue(discriminatorKey, doc))) {\n        // `modelNameForFind` is the discriminator value, so we might need\n        // find the discriminated model name\n        const discriminatorModel = getDiscriminatorByValue(model.discriminators, discriminatorValue) || model;\n        if (discriminatorModel != null) {\n          modelForCurrentDoc = discriminatorModel;\n        } else {\n          try {\n            modelForCurrentDoc = _getModelFromConn(model.db, discriminatorValue);\n          } catch (error) {\n            return error;\n          }\n        }\n\n        schemaForCurrentDoc = modelForCurrentDoc.schema._getSchema(options.path);\n\n        if (schemaForCurrentDoc && schemaForCurrentDoc.caster) {\n          schemaForCurrentDoc = schemaForCurrentDoc.caster;\n        }\n      } else {\n        schemaForCurrentDoc = schema;\n      }\n\n      if (originalSchema && originalSchema.path.endsWith('.$*')) {\n        justOne = !originalSchema.$isMongooseArray && !originalSchema._arrayPath;\n      } else if (schemaForCurrentDoc != null) {\n        justOne = !schemaForCurrentDoc.$isMongooseArray && !schemaForCurrentDoc._arrayPath;\n      }\n\n      if ((ref = get(schemaForCurrentDoc, 'options.ref')) != null) {\n        if (schemaForCurrentDoc != null &&\n            typeof ref === 'function' &&\n            options.path.endsWith('.' + schemaForCurrentDoc.path)) {\n          // Ensure correct context for ref functions: subdoc, not top-level doc. See gh-8469\n          modelNames = new Set();\n\n          const subdocPath = options.path.slice(0, options.path.length - schemaForCurrentDoc.path.length - 1);\n          const vals = mpath.get(subdocPath, doc, lookupLocalFields);\n          const subdocsBeingPopulated = Array.isArray(vals) ?\n            utils.array.flatten(vals) :\n            (vals ? [vals] : []);\n          for (const subdoc of subdocsBeingPopulated) {\n            modelNames.add(handleRefFunction(ref, subdoc));\n          }\n\n          if (subdocsBeingPopulated.length === 0) {\n            modelNames = [handleRefFunction(ref, doc)];\n          } else {\n            modelNames = Array.from(modelNames);\n          }\n        } else {\n          ref = handleRefFunction(ref, doc);\n          modelNames = [ref];\n        }\n      } else if ((schemaForCurrentDoc = get(schema, 'options.refPath')) != null) {\n        isRefPath = true;\n        if (typeof refPath === 'function') {\n          const subdocPath = options.path.slice(0, options.path.length - schemaForCurrentDoc.path.length - 1);\n          const vals = mpath.get(subdocPath, doc, lookupLocalFields);\n          const subdocsBeingPopulated = Array.isArray(vals) ?\n            utils.array.flatten(vals) :\n            (vals ? [vals] : []);\n\n          modelNames = new Set();\n          for (const subdoc of subdocsBeingPopulated) {\n            refPath = refPath.call(subdoc, subdoc, options.path);\n            modelNamesFromRefPath(refPath, doc, options.path, modelSchema, options._queryProjection).\n              forEach(name => modelNames.add(name));\n          }\n          modelNames = Array.from(modelNames);\n        } else {\n          modelNames = modelNamesFromRefPath(refPath, doc, options.path, modelSchema, options._queryProjection);\n        }\n      }\n    }\n\n    if (!modelNames) {\n      // `Model.populate()` on a POJO with no known local model. Default to using the `Model`\n      if (options._localModel == null) {\n        modelNames = [model.modelName];\n      } else {\n        return { modelNames: modelNames, justOne: justOne, isRefPath: isRefPath, refPath: refPath };\n      }\n    }\n\n    if (!Array.isArray(modelNames)) {\n      modelNames = [modelNames];\n    }\n\n    return { modelNames: modelNames, justOne: justOne, isRefPath: isRefPath, refPath: refPath };\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction _virtualPopulate(model, docs, options, _virtualRes) {\n  const map = [];\n  const available = {};\n  const virtual = _virtualRes.virtual;\n\n  for (const doc of docs) {\n    let modelNames = null;\n    const data = {};\n\n    // localField and foreignField\n    let localField;\n    const virtualPrefix = _virtualRes.nestedSchemaPath ?\n      _virtualRes.nestedSchemaPath + '.' : '';\n    if (typeof options.localField === 'string') {\n      localField = options.localField;\n    } else if (typeof virtual.options.localField === 'function') {\n      localField = virtualPrefix + virtual.options.localField.call(doc, doc);\n    } else if (Array.isArray(virtual.options.localField)) {\n      localField = virtual.options.localField.map(field => virtualPrefix + field);\n    } else {\n      localField = virtualPrefix + virtual.options.localField;\n    }\n    data.count = virtual.options.count;\n\n    if (virtual.options.skip != null && !options.hasOwnProperty('skip')) {\n      options.skip = virtual.options.skip;\n    }\n    if (virtual.options.limit != null && !options.hasOwnProperty('limit')) {\n      options.limit = virtual.options.limit;\n    }\n    if (virtual.options.perDocumentLimit != null && !options.hasOwnProperty('perDocumentLimit')) {\n      options.perDocumentLimit = virtual.options.perDocumentLimit;\n    }\n    let foreignField = virtual.options.foreignField;\n\n    if (!localField || !foreignField) {\n      return new MongooseError(`Cannot populate virtual \\`${options.path}\\` on model \\`${model.modelName}\\`, because options \\`localField\\` and / or \\`foreignField\\` are missing`);\n    }\n\n    if (typeof localField === 'function') {\n      localField = localField.call(doc, doc);\n    }\n    if (typeof foreignField === 'function') {\n      foreignField = foreignField.call(doc, doc);\n    }\n\n    data.isRefPath = false;\n\n    // `justOne = null` means we don't know from the schema whether the end\n    // result should be an array or a single doc. This can result from\n    // populating a POJO using `Model.populate()`\n    let justOne = null;\n    if ('justOne' in options && options.justOne !== void 0) {\n      justOne = options.justOne;\n    }\n\n    if (virtual.options.refPath) {\n      modelNames =\n        modelNamesFromRefPath(virtual.options.refPath, doc, options.path);\n      justOne = !!virtual.options.justOne;\n      data.isRefPath = true;\n    } else if (virtual.options.ref) {\n      let normalizedRef;\n      if (typeof virtual.options.ref === 'function' && !virtual.options.ref[modelSymbol]) {\n        normalizedRef = virtual.options.ref.call(doc, doc);\n      } else {\n        normalizedRef = virtual.options.ref;\n      }\n      justOne = !!virtual.options.justOne;\n      // When referencing nested arrays, the ref should be an Array\n      // of modelNames.\n      if (Array.isArray(normalizedRef)) {\n        modelNames = normalizedRef;\n      } else {\n        modelNames = [normalizedRef];\n      }\n    }\n\n    data.isVirtual = true;\n    data.virtual = virtual;\n    data.justOne = justOne;\n\n    // `match`\n    const baseMatch = get(data, 'virtual.options.match', null) ||\n      get(data, 'virtual.options.options.match', null);\n    let match = get(options, 'match', null) || baseMatch;\n\n    let hasMatchFunction = typeof match === 'function';\n    if (hasMatchFunction) {\n      match = match.call(doc, doc, data.virtual);\n    }\n\n    if (Array.isArray(localField) && Array.isArray(foreignField) && localField.length === foreignField.length) {\n      match = Object.assign({}, match);\n      for (let i = 1; i < localField.length; ++i) {\n        match[foreignField[i]] = convertTo_id(mpath.get(localField[i], doc, lookupLocalFields), model.schema);\n        hasMatchFunction = true;\n      }\n\n      localField = localField[0];\n      foreignField = foreignField[0];\n    }\n    data.localField = localField;\n    data.foreignField = foreignField;\n    data.match = match;\n    data.hasMatchFunction = hasMatchFunction;\n\n    // Get local fields\n    const ret = _getLocalFieldValues(doc, localField, model, options, virtual);\n\n    try {\n      addModelNamesToMap(model, map, available, modelNames, options, data, ret, doc);\n    } catch (err) {\n      return err;\n    }\n  }\n\n  return map;\n}\n\n/*!\n * ignore\n */\n\nfunction addModelNamesToMap(model, map, available, modelNames, options, data, ret, doc, schemaOptions, unpopulatedValue) {\n  // `PopulateOptions#connection`: if the model is passed as a string, the\n  // connection matters because different connections have different models.\n  const connection = options.connection != null ? options.connection : model.db;\n\n  unpopulatedValue = unpopulatedValue === void 0 ? ret : unpopulatedValue;\n  if (Array.isArray(unpopulatedValue)) {\n    unpopulatedValue = utils.cloneArrays(unpopulatedValue);\n  }\n\n  if (modelNames == null) {\n    return;\n  }\n\n  let k = modelNames.length;\n  while (k--) {\n    const modelName = modelNames[k];\n    if (modelName == null) {\n      continue;\n    }\n\n    let Model;\n    if (options.model && options.model[modelSymbol]) {\n      Model = options.model;\n    } else if (modelName[modelSymbol]) {\n      Model = modelName;\n    } else {\n      try {\n        Model = _getModelFromConn(connection, modelName);\n      } catch (err) {\n        if (ret !== void 0) {\n          throw err;\n        }\n        Model = null;\n      }\n    }\n\n    let ids = ret;\n    const flat = Array.isArray(ret) ? utils.array.flatten(ret) : [];\n\n    const modelNamesForRefPath = data.modelNamesInOrder ? data.modelNamesInOrder : modelNames;\n    if (data.isRefPath && Array.isArray(ret) && flat.length === modelNamesForRefPath.length) {\n      ids = flat.filter((val, i) => modelNamesForRefPath[i] === modelName);\n    }\n\n    const perDocumentLimit = options.perDocumentLimit == null ?\n      get(options, 'options.perDocumentLimit', null) :\n      options.perDocumentLimit;\n\n    if (!available[modelName] || perDocumentLimit != null) {\n      const currentOptions = {\n        model: Model\n      };\n      if (data.isVirtual && get(data.virtual, 'options.options')) {\n        currentOptions.options = clone(data.virtual.options.options);\n      } else if (schemaOptions != null) {\n        currentOptions.options = Object.assign({}, schemaOptions);\n      }\n      utils.merge(currentOptions, options);\n\n      // Used internally for checking what model was used to populate this\n      // path.\n      options[populateModelSymbol] = Model;\n      currentOptions[populateModelSymbol] = Model;\n      available[modelName] = {\n        model: Model,\n        options: currentOptions,\n        match: data.hasMatchFunction ? [data.match] : data.match,\n        docs: [doc],\n        ids: [ids],\n        allIds: [ret],\n        unpopulatedValues: [unpopulatedValue],\n        localField: new Set([data.localField]),\n        foreignField: new Set([data.foreignField]),\n        justOne: data.justOne,\n        isVirtual: data.isVirtual,\n        virtual: data.virtual,\n        count: data.count,\n        [populateModelSymbol]: Model\n      };\n      map.push(available[modelName]);\n    } else {\n      available[modelName].localField.add(data.localField);\n      available[modelName].foreignField.add(data.foreignField);\n      available[modelName].docs.push(doc);\n      available[modelName].ids.push(ids);\n      available[modelName].allIds.push(ret);\n      available[modelName].unpopulatedValues.push(unpopulatedValue);\n      if (data.hasMatchFunction) {\n        available[modelName].match.push(data.match);\n      }\n    }\n  }\n}\n\nfunction _getModelFromConn(conn, modelName) {\n  /* If this connection has a parent from `useDb()`, bubble up to parent's models */\n  if (conn.models[modelName] == null && conn._parent != null) {\n    return _getModelFromConn(conn._parent, modelName);\n  }\n\n  return conn.model(modelName);\n}\n\n/*!\n * ignore\n */\n\nfunction handleRefFunction(ref, doc) {\n  if (typeof ref === 'function' && !ref[modelSymbol]) {\n    return ref.call(doc, doc);\n  }\n  return ref;\n}\n\n/*!\n * ignore\n */\n\nfunction _getLocalFieldValues(doc, localField, model, options, virtual, schema) {\n  // Get Local fields\n  const localFieldPathType = model.schema._getPathType(localField);\n  const localFieldPath = localFieldPathType === 'real' ?\n    model.schema.path(localField) :\n    localFieldPathType.schema;\n  const localFieldGetters = localFieldPath && localFieldPath.getters ?\n    localFieldPath.getters : [];\n\n  localField = localFieldPath != null && localFieldPath.instance === 'Embedded' ? localField + '._id' : localField;\n\n  const _populateOptions = get(options, 'options', {});\n\n  const getters = 'getters' in _populateOptions ?\n    _populateOptions.getters :\n    get(virtual, 'options.getters', false);\n  if (localFieldGetters.length !== 0 && getters) {\n    const hydratedDoc = (doc.$__ != null) ? doc : model.hydrate(doc);\n    const localFieldValue = utils.getValue(localField, doc);\n    if (Array.isArray(localFieldValue)) {\n      const localFieldHydratedValue = utils.getValue(localField.split('.').slice(0, -1), hydratedDoc);\n      return localFieldValue.map((localFieldArrVal, localFieldArrIndex) =>\n        localFieldPath.applyGetters(localFieldArrVal, localFieldHydratedValue[localFieldArrIndex]));\n    } else {\n      return localFieldPath.applyGetters(localFieldValue, hydratedDoc);\n    }\n  } else {\n    return convertTo_id(mpath.get(localField, doc, lookupLocalFields), schema);\n  }\n}\n\n/**\n * Retrieve the _id of `val` if a Document or Array of Documents.\n *\n * @param {Array|Document|Any} val\n * @param {Schema} schema\n * @return {Array|Document|Any}\n * @api private\n */\n\nfunction convertTo_id(val, schema) {\n  if (val != null && val.$__ != null) {\n    return val._id;\n  }\n  if (val != null && val._id != null && (schema == null || !schema.$isSchemaMap)) {\n    return val._id;\n  }\n\n  if (Array.isArray(val)) {\n    const rawVal = val.__array != null ? val.__array : val;\n    for (let i = 0; i < rawVal.length; ++i) {\n      if (rawVal[i] != null && rawVal[i].$__ != null) {\n        rawVal[i] = rawVal[i]._id;\n      }\n    }\n    if (utils.isMongooseArray(val) && val.$schema()) {\n      return val.$schema()._castForPopulate(val, val.$parent());\n    }\n\n    return [].concat(val);\n  }\n\n  // `populate('map')` may be an object if populating on a doc that hasn't\n  // been hydrated yet\n  if (getConstructorName(val) === 'Object' &&\n      // The intent here is we should only flatten the object if we expect\n      // to get a Map in the end. Avoid doing this for mixed types.\n      (schema == null || schema[schemaMixedSymbol] == null)) {\n    const ret = [];\n    for (const key of Object.keys(val)) {\n      ret.push(val[key]);\n    }\n    return ret;\n  }\n  // If doc has already been hydrated, e.g. `doc.populate('map')`\n  // then `val` will already be a map\n  if (val instanceof Map) {\n    return Array.from(val.values());\n  }\n\n  return val;\n}\n\n/*!\n * ignore\n */\n\nfunction _findRefPathForDiscriminators(doc, modelSchema, data, options, normalizedRefPath, ret) {\n  // Re: gh-8452. Embedded discriminators may not have `refPath`, so clear\n  // out embedded discriminator docs that don't have a `refPath` on the\n  // populated path.\n  if (!data.isRefPath || normalizedRefPath == null) {\n    return;\n  }\n\n  const pieces = normalizedRefPath.split('.');\n  let cur = '';\n  let modelNames = void 0;\n  for (let i = 0; i < pieces.length; ++i) {\n    const piece = pieces[i];\n    cur = cur + (cur.length === 0 ? '' : '.') + piece;\n    const schematype = modelSchema.path(cur);\n    if (schematype != null &&\n        schematype.$isMongooseArray &&\n        schematype.caster.discriminators != null &&\n        Object.keys(schematype.caster.discriminators).length !== 0) {\n      const subdocs = utils.getValue(cur, doc);\n      const remnant = options.path.substring(cur.length + 1);\n      const discriminatorKey = schematype.caster.schema.options.discriminatorKey;\n      modelNames = [];\n      for (const subdoc of subdocs) {\n        const discriminatorName = utils.getValue(discriminatorKey, subdoc);\n        const discriminator = schematype.caster.discriminators[discriminatorName];\n        const discriminatorSchema = discriminator && discriminator.schema;\n        if (discriminatorSchema == null) {\n          continue;\n        }\n        const _path = discriminatorSchema.path(remnant);\n        if (_path == null || _path.options.refPath == null) {\n          const docValue = utils.getValue(data.localField.substring(cur.length + 1), subdoc);\n          ret.forEach((v, i) => {\n            if (v === docValue) {\n              ret[i] = SkipPopulateValue(v);\n            }\n          });\n          continue;\n        }\n        const modelName = utils.getValue(pieces.slice(i + 1).join('.'), subdoc);\n        modelNames.push(modelName);\n      }\n    }\n  }\n\n  return modelNames;\n}\n", "'use strict';\n\nconst get = require('../get');\n\nmodule.exports = function isDefaultIdIndex(index) {\n  if (Array.isArray(index)) {\n    // Mongoose syntax\n    const keys = Object.keys(index[0]);\n    return keys.length === 1 && keys[0] === '_id' && index[0]._id !== 'hashed';\n  }\n\n  if (typeof index !== 'object') {\n    return false;\n  }\n\n  const key = get(index, 'key', {});\n  return Object.keys(key).length === 1 && key.hasOwnProperty('_id');\n};\n", "'use strict';\n\nconst get = require('../get');\nconst utils = require('../../utils');\n/**\n * Given a Mongoose index definition (key + options objects) and a MongoDB server\n * index definition, determine if the two indexes are equal.\n *\n * @param {Object} schemaIndexKeysObject the Mongoose index spec\n * @param {Object} options the Mongoose index definition's options\n * @param {Object} dbIndex the index in MongoDB as returned by `listIndexes()`\n * @api private\n */\n\nmodule.exports = function isIndexEqual(schemaIndexKeysObject, options, dbIndex) {\n  // Special case: text indexes have a special format in the db. For example,\n  // `{ name: 'text' }` becomes:\n  // {\n  //   v: 2,\n  //   key: { _fts: 'text', _ftsx: 1 },\n  //   name: 'name_text',\n  //   ns: 'test.tests',\n  //   background: true,\n  //   weights: { name: 1 },\n  //   default_language: 'english',\n  //   language_override: 'language',\n  //   textIndexVersion: 3\n  // }\n  if (dbIndex.textIndexVersion != null) {\n    delete dbIndex.key._fts;\n    delete dbIndex.key._ftsx;\n    const weights = { ...dbIndex.weights, ...dbIndex.key };\n    if (Object.keys(weights).length !== Object.keys(schemaIndexKeysObject).length) {\n      return false;\n    }\n    for (const prop of Object.keys(weights)) {\n      if (!(prop in schemaIndexKeysObject)) {\n        return false;\n      }\n      const weight = weights[prop];\n      if (weight !== get(options, 'weights.' + prop) && !(weight === 1 && get(options, 'weights.' + prop) == null)) {\n        return false;\n      }\n    }\n\n    if (options['default_language'] !== dbIndex['default_language']) {\n      return dbIndex['default_language'] === 'english' && options['default_language'] == null;\n    }\n\n    return true;\n  }\n\n  const optionKeys = [\n    'unique',\n    'partialFilterExpression',\n    'sparse',\n    'expireAfterSeconds',\n    'collation'\n  ];\n  for (const key of optionKeys) {\n    if (!(key in options) && !(key in dbIndex)) {\n      continue;\n    }\n    if (key === 'collation') {\n      if (options[key] == null || dbIndex[key] == null) {\n        return options[key] == null && dbIndex[key] == null;\n      }\n      const definedKeys = Object.keys(options.collation);\n      const schemaCollation = options.collation;\n      const dbCollation = dbIndex.collation;\n      for (const opt of definedKeys) {\n        if (get(schemaCollation, opt) !== get(dbCollation, opt)) {\n          return false;\n        }\n      }\n    } else if (!utils.deepEqual(options[key], dbIndex[key])) {\n      return false;\n    }\n  }\n\n  const schemaIndexKeys = Object.keys(schemaIndexKeysObject);\n  const dbIndexKeys = Object.keys(dbIndex.key);\n  if (schemaIndexKeys.length !== dbIndexKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < schemaIndexKeys.length; ++i) {\n    if (schemaIndexKeys[i] !== dbIndexKeys[i]) {\n      return false;\n    }\n    if (!utils.deepEqual(schemaIndexKeysObject[schemaIndexKeys[i]], dbIndex.key[dbIndexKeys[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n", "'use strict';\n\nfunction getRelatedSchemaIndexes(model, schemaIndexes) {\n  return getRelatedIndexes({\n    baseModelName: model.baseModelName,\n    discriminatorMapping: model.schema.discriminatorMapping,\n    indexes: schemaIndexes,\n    indexesType: 'schema'\n  });\n}\n\nfunction getRelatedDBIndexes(model, dbIndexes) {\n  return getRelatedIndexes({\n    baseModelName: model.baseModelName,\n    discriminatorMapping: model.schema.discriminatorMapping,\n    indexes: dbIndexes,\n    indexesType: 'db'\n  });\n}\n\nmodule.exports = {\n  getRelatedSchemaIndexes,\n  getRelatedDBIndexes\n};\n\nfunction getRelatedIndexes({\n  baseModelName,\n  discriminatorMapping,\n  indexes,\n  indexesType\n}) {\n  const discriminatorKey = discriminatorMapping && discriminatorMapping.key;\n  const discriminatorValue = discriminatorMapping && discriminatorMapping.value;\n\n  if (!discriminatorKey) {\n    return indexes;\n  }\n\n  const isChildDiscriminatorModel = Boolean(baseModelName);\n  if (isChildDiscriminatorModel) {\n    return indexes.filter(index => {\n      const partialFilterExpression = getPartialFilterExpression(index, indexesType);\n      return partialFilterExpression && partialFilterExpression[discriminatorKey] === discriminatorValue;\n    });\n  }\n\n  return indexes.filter(index => {\n    const partialFilterExpression = getPartialFilterExpression(index, indexesType);\n    return !partialFilterExpression || !partialFilterExpression[discriminatorKey];\n  });\n}\n\nfunction getPartialFilterExpression(index, indexesType) {\n  if (indexesType === 'schema') {\n    const options = index[1];\n    return options && options.partialFilterExpression;\n  }\n  return index.partialFilterExpression;\n}\n", "'use strict';\n\nmodule.exports = parallelLimit;\n\n/*!\n * ignore\n */\n\nfunction parallelLimit(fns, limit, callback) {\n  let numInProgress = 0;\n  let numFinished = 0;\n  let error = null;\n\n  if (limit <= 0) {\n    throw new Error('Limit must be positive');\n  }\n\n  if (fns.length === 0) {\n    return callback(null, []);\n  }\n\n  for (let i = 0; i < fns.length && i < limit; ++i) {\n    _start();\n  }\n\n  function _start() {\n    fns[numFinished + numInProgress](_done(numFinished + numInProgress));\n    ++numInProgress;\n  }\n\n  const results = [];\n\n  function _done(index) {\n    return (err, res) => {\n      --numInProgress;\n      ++numFinished;\n\n      if (error != null) {\n        return;\n      }\n      if (err != null) {\n        error = err;\n        return callback(error);\n      }\n\n      results[index] = res;\n\n      if (numFinished === fns.length) {\n        return callback(null, results);\n      } else if (numFinished + numInProgress < fns.length) {\n        _start();\n      }\n    };\n  }\n}\n", "'use strict';\n\nmodule.exports = function pushNestedArrayPaths(paths, nestedArray, path) {\n  if (nestedArray == null) {\n    return;\n  }\n\n  for (let i = 0; i < nestedArray.length; ++i) {\n    if (Array.isArray(nestedArray[i])) {\n      pushNestedArrayPaths(paths, nestedArray[i], path + '.' + i);\n    } else {\n      paths.push(path + '.' + i);\n    }\n  }\n};\n", "'use strict';\n\nconst get = require('../get');\nconst mpath = require('mpath');\nconst parseProjection = require('../projection/parseProjection');\n\n/*!\n * ignore\n */\n\nmodule.exports = function removeDeselectedForeignField(foreignFields, options, docs) {\n  const projection = parseProjection(get(options, 'select', null), true) ||\n    parseProjection(get(options, 'options.select', null), true);\n\n  if (projection == null) {\n    return;\n  }\n  for (const foreignField of foreignFields) {\n    if (!projection.hasOwnProperty('-' + foreignField)) {\n      continue;\n    }\n\n    for (const val of docs) {\n      if (val.$__ != null) {\n        mpath.unset(foreignField, val._doc);\n      } else {\n        mpath.unset(foreignField, val);\n      }\n    }\n  }\n};\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n\n/**\n * If `bulkWrite()` or `insertMany()` has validation errors, but\n * all valid operations succeed, and 'throwOnValidationError' is true,\n * Mongoose will throw this error.\n *\n * @api private\n */\n\nclass MongooseBulkWriteError extends MongooseError {\n  constructor(validationErrors, results, rawResult, operation) {\n    let preview = validationErrors.map(e => e.message).join(', ');\n    if (preview.length > 200) {\n      preview = preview.slice(0, 200) + '...';\n    }\n    super(`${operation} failed with ${validationErrors.length} Mongoose validation errors: ${preview}`);\n\n    this.validationErrors = validationErrors;\n    this.results = results;\n    this.rawResult = rawResult;\n    this.operation = operation;\n  }\n}\n\nObject.defineProperty(MongooseBulkWriteError.prototype, 'name', {\n  value: 'MongooseBulkWriteError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = MongooseBulkWriteError;\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst Aggregate = require('./aggregate');\nconst ChangeStream = require('./cursor/ChangeStream');\nconst Document = require('./document');\nconst DocumentNotFoundError = require('./error/notFound');\nconst DivergentArrayError = require('./error/divergentArray');\nconst EventEmitter = require('events').EventEmitter;\nconst MongooseBuffer = require('./types/buffer');\nconst MongooseError = require('./error/index');\nconst OverwriteModelError = require('./error/overwriteModel');\nconst Query = require('./query');\nconst SaveOptions = require('./options/saveOptions');\nconst Schema = require('./schema');\nconst ValidationError = require('./error/validation');\nconst VersionError = require('./error/version');\nconst ParallelSaveError = require('./error/parallelSave');\nconst applyDefaultsHelper = require('./helpers/document/applyDefaults');\nconst applyDefaultsToPOJO = require('./helpers/model/applyDefaultsToPOJO');\nconst applyQueryMiddleware = require('./helpers/query/applyQueryMiddleware');\nconst applyHooks = require('./helpers/model/applyHooks');\nconst applyMethods = require('./helpers/model/applyMethods');\nconst applyProjection = require('./helpers/projection/applyProjection');\nconst applySchemaCollation = require('./helpers/indexes/applySchemaCollation');\nconst applyStaticHooks = require('./helpers/model/applyStaticHooks');\nconst applyStatics = require('./helpers/model/applyStatics');\nconst applyWriteConcern = require('./helpers/schema/applyWriteConcern');\nconst assignVals = require('./helpers/populate/assignVals');\nconst castBulkWrite = require('./helpers/model/castBulkWrite');\nconst clone = require('./helpers/clone');\nconst createPopulateQueryFilter = require('./helpers/populate/createPopulateQueryFilter');\nconst getDefaultBulkwriteResult = require('./helpers/getDefaultBulkwriteResult');\nconst getSchemaDiscriminatorByValue = require('./helpers/discriminator/getSchemaDiscriminatorByValue');\nconst discriminator = require('./helpers/model/discriminator');\nconst firstKey = require('./helpers/firstKey');\nconst each = require('./helpers/each');\nconst get = require('./helpers/get');\nconst getConstructorName = require('./helpers/getConstructorName');\nconst getDiscriminatorByValue = require('./helpers/discriminator/getDiscriminatorByValue');\nconst getModelsMapForPopulate = require('./helpers/populate/getModelsMapForPopulate');\nconst immediate = require('./helpers/immediate');\nconst internalToObjectOptions = require('./options').internalToObjectOptions;\nconst isDefaultIdIndex = require('./helpers/indexes/isDefaultIdIndex');\nconst isIndexEqual = require('./helpers/indexes/isIndexEqual');\nconst {\n  getRelatedDBIndexes,\n  getRelatedSchemaIndexes\n} = require('./helpers/indexes/getRelatedIndexes');\nconst isPathExcluded = require('./helpers/projection/isPathExcluded');\nconst decorateDiscriminatorIndexOptions = require('./helpers/indexes/decorateDiscriminatorIndexOptions');\nconst isPathSelectedInclusive = require('./helpers/projection/isPathSelectedInclusive');\nconst leanPopulateMap = require('./helpers/populate/leanPopulateMap');\nconst modifiedPaths = require('./helpers/update/modifiedPaths');\nconst parallelLimit = require('./helpers/parallelLimit');\nconst parentPaths = require('./helpers/path/parentPaths');\nconst prepareDiscriminatorPipeline = require('./helpers/aggregate/prepareDiscriminatorPipeline');\nconst pushNestedArrayPaths = require('./helpers/model/pushNestedArrayPaths');\nconst removeDeselectedForeignField = require('./helpers/populate/removeDeselectedForeignField');\nconst setDottedPath = require('./helpers/path/setDottedPath');\nconst STATES = require('./connectionstate');\nconst util = require('util');\nconst utils = require('./utils');\nconst MongooseBulkWriteError = require('./error/bulkWriteError');\n\nconst VERSION_WHERE = 1;\nconst VERSION_INC = 2;\nconst VERSION_ALL = VERSION_WHERE | VERSION_INC;\n\nconst arrayAtomicsSymbol = require('./helpers/symbols').arrayAtomicsSymbol;\nconst modelCollectionSymbol = Symbol('mongoose#Model#collection');\nconst modelDbSymbol = Symbol('mongoose#Model#db');\nconst modelSymbol = require('./helpers/symbols').modelSymbol;\nconst subclassedSymbol = Symbol('mongoose#Model#subclassed');\n\nconst saveToObjectOptions = Object.assign({}, internalToObjectOptions, {\n  bson: true,\n  flattenObjectIds: false\n});\n\n/**\n * A Model is a class that's your primary tool for interacting with MongoDB.\n * An instance of a Model is called a [Document](https://mongoosejs.com/docs/api/document.html#Document).\n *\n * In Mongoose, the term \"Model\" refers to subclasses of the `mongoose.Model`\n * class. You should not use the `mongoose.Model` class directly. The\n * [`mongoose.model()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.model()) and\n * [`connection.model()`](https://mongoosejs.com/docs/api/connection.html#Connection.prototype.model()) functions\n * create subclasses of `mongoose.Model` as shown below.\n *\n * #### Example:\n *\n *     // `UserModel` is a \"Model\", a subclass of `mongoose.Model`.\n *     const UserModel = mongoose.model('User', new Schema({ name: String }));\n *\n *     // You can use a Model to create new documents using `new`:\n *     const userDoc = new UserModel({ name: 'Foo' });\n *     await userDoc.save();\n *\n *     // You also use a model to create queries:\n *     const userFromDb = await UserModel.findOne({ name: 'Foo' });\n *\n * @param {Object} doc values for initial set\n * @param {Object} [fields] optional object containing the fields that were selected in the query which returned this document. You do **not** need to set this parameter to ensure Mongoose handles your [query projection](https://mongoosejs.com/docs/api/query.html#Query.prototype.select()).\n * @param {Boolean} [skipId=false] optional boolean. If true, mongoose doesn't add an `_id` field to the document.\n * @inherits Document https://mongoosejs.com/docs/api/document.html\n * @event `error`: If listening to this event, 'error' is emitted when a document was saved and an `error` occurred. If not listening, the event bubbles to the connection used to create this Model.\n * @event `index`: Emitted after `Model#ensureIndexes` completes. If an error occurred it is passed with the event.\n * @event `index-single-start`: Emitted when an individual index starts within `Model#ensureIndexes`. The fields and options being used to build the index are also passed with the event.\n * @event `index-single-done`: Emitted when an individual index finishes within `Model#ensureIndexes`. If an error occurred it is passed with the event. The fields, options, and index name are also passed.\n * @api public\n */\n\nfunction Model(doc, fields, skipId) {\n  if (fields instanceof Schema) {\n    throw new TypeError('2nd argument to `Model` must be a POJO or string, ' +\n      '**not** a schema. Make sure you\\'re calling `mongoose.model()`, not ' +\n      '`mongoose.Model()`.');\n  }\n  Document.call(this, doc, fields, skipId);\n}\n\n/**\n * Inherits from Document.\n *\n * All Model.prototype features are available on\n * top level (non-sub) documents.\n * @api private\n */\n\nObject.setPrototypeOf(Model.prototype, Document.prototype);\nModel.prototype.$isMongooseModelPrototype = true;\n\n/**\n * Connection the model uses.\n *\n * @api public\n * @property db\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.db;\n\n/**\n * The collection instance this model uses.\n * A Mongoose collection is a thin wrapper around a [MongoDB Node.js driver collection]([MongoDB Node.js driver collection](https://mongodb.github.io/node-mongodb-native/Next/classes/Collection.html)).\n * Using `Model.collection` means you bypass Mongoose middleware, validation, and casting.\n *\n * This property is read-only. Modifying this property is a no-op.\n *\n * @api public\n * @property collection\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.collection;\n\n/**\n * Internal collection the model uses.\n *\n * This property is read-only. Modifying this property is a no-op.\n *\n * @api private\n * @property collection\n * @memberOf Model\n * @instance\n */\n\n\nModel.prototype.$__collection;\n\n/**\n * The name of the model\n *\n * @api public\n * @property modelName\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.modelName;\n\n/**\n * Additional properties to attach to the query when calling `save()` and\n * `isNew` is false.\n *\n * @api public\n * @property $where\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.$where;\n\n/**\n * If this is a discriminator model, `baseModelName` is the name of\n * the base model.\n *\n * @api public\n * @property baseModelName\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.baseModelName;\n\n/**\n * Event emitter that reports any errors that occurred. Useful for global error\n * handling.\n *\n * #### Example:\n *\n *     MyModel.events.on('error', err => console.log(err.message));\n *\n *     // Prints a 'CastError' because of the above handler\n *     await MyModel.findOne({ _id: 'Not a valid ObjectId' }).catch(noop);\n *\n * @api public\n * @property events\n * @fires error whenever any query or model function errors\n * @memberOf Model\n * @static\n */\n\nModel.events;\n\n/**\n * Compiled middleware for this model. Set in `applyHooks()`.\n *\n * @api private\n * @property _middleware\n * @memberOf Model\n * @static\n */\n\nModel._middleware;\n\n/*!\n * ignore\n */\n\nfunction _applyCustomWhere(doc, where) {\n  if (doc.$where == null) {\n    return;\n  }\n  for (const key of Object.keys(doc.$where)) {\n    where[key] = doc.$where[key];\n  }\n}\n\n/*!\n * ignore\n */\n\nModel.prototype.$__handleSave = function(options, callback) {\n  const saveOptions = {};\n\n  applyWriteConcern(this.$__schema, options);\n  if (typeof options.writeConcern !== 'undefined') {\n    saveOptions.writeConcern = {};\n    if ('w' in options.writeConcern) {\n      saveOptions.writeConcern.w = options.writeConcern.w;\n    }\n    if ('j' in options.writeConcern) {\n      saveOptions.writeConcern.j = options.writeConcern.j;\n    }\n    if ('wtimeout' in options.writeConcern) {\n      saveOptions.writeConcern.wtimeout = options.writeConcern.wtimeout;\n    }\n  } else {\n    if ('w' in options) {\n      saveOptions.w = options.w;\n    }\n    if ('j' in options) {\n      saveOptions.j = options.j;\n    }\n    if ('wtimeout' in options) {\n      saveOptions.wtimeout = options.wtimeout;\n    }\n  }\n  if ('checkKeys' in options) {\n    saveOptions.checkKeys = options.checkKeys;\n  }\n\n  const session = this.$session();\n  if (!saveOptions.hasOwnProperty('session') && session != null) {\n    saveOptions.session = session;\n  }\n\n  if (this.$isNew) {\n    // send entire doc\n    const obj = this.toObject(saveToObjectOptions);\n    if ((obj || {})._id === void 0) {\n      // documents must have an _id else mongoose won't know\n      // what to update later if more changes are made. the user\n      // wouldn't know what _id was generated by mongodb either\n      // nor would the ObjectId generated by mongodb necessarily\n      // match the schema definition.\n      immediate(function() {\n        callback(new MongooseError('document must have an _id before saving'));\n      });\n      return;\n    }\n\n    this.$__version(true, obj);\n    this[modelCollectionSymbol].insertOne(obj, saveOptions).then(\n      ret => callback(null, ret),\n      err => {\n        _setIsNew(this, true);\n\n        callback(err, null);\n      }\n    );\n\n    this.$__reset();\n    _setIsNew(this, false);\n    // Make it possible to retry the insert\n    this.$__.inserting = true;\n    return;\n  }\n\n  // Make sure we don't treat it as a new object on error,\n  // since it already exists\n  this.$__.inserting = false;\n  const delta = this.$__delta();\n  if (delta) {\n    if (delta instanceof MongooseError) {\n      callback(delta);\n      return;\n    }\n\n    const where = this.$__where(delta[0]);\n    if (where instanceof MongooseError) {\n      callback(where);\n      return;\n    }\n\n    _applyCustomWhere(this, where);\n    this[modelCollectionSymbol].updateOne(where, delta[1], saveOptions).then(\n      ret => {\n        ret.$where = where;\n        callback(null, ret);\n      },\n      err => {\n        this.$__undoReset();\n\n        callback(err);\n      }\n    );\n  } else {\n    const optionsWithCustomValues = Object.assign({}, options, saveOptions);\n    const where = this.$__where();\n    const optimisticConcurrency = this.$__schema.options.optimisticConcurrency;\n    if (optimisticConcurrency && !Array.isArray(optimisticConcurrency)) {\n      const key = this.$__schema.options.versionKey;\n      const val = this.$__getValue(key);\n      if (val != null) {\n        where[key] = val;\n      }\n    }\n    this.constructor.collection.findOne(where, optionsWithCustomValues)\n      .then(documentExists => {\n        const matchedCount = !documentExists ? 0 : 1;\n        callback(null, { $where: where, matchedCount });\n      })\n      .catch(callback);\n    return;\n  }\n\n  // store the modified paths before the document is reset\n  this.$__.modifiedPaths = this.modifiedPaths();\n  this.$__reset();\n\n  _setIsNew(this, false);\n};\n\n/*!\n * ignore\n */\n\nModel.prototype.$__save = function(options, callback) {\n  this.$__handleSave(options, (error, result) => {\n    if (error) {\n      const hooks = this.$__schema.s.hooks;\n      return hooks.execPost('save:error', this, [this], { error: error }, (error) => {\n        callback(error, this);\n      });\n    }\n    let numAffected = 0;\n    const writeConcern = options != null ?\n      options.writeConcern != null ?\n        options.writeConcern.w :\n        options.w :\n      0;\n    if (writeConcern !== 0) {\n      // Skip checking if write succeeded if writeConcern is set to\n      // unacknowledged writes, because otherwise `numAffected` will always be 0\n      if (result != null) {\n        if (Array.isArray(result)) {\n          numAffected = result.length;\n        } else if (result.matchedCount != null) {\n          numAffected = result.matchedCount;\n        } else {\n          numAffected = result;\n        }\n      }\n\n      const versionBump = this.$__.version;\n      // was this an update that required a version bump?\n      if (versionBump && !this.$__.inserting) {\n        const doIncrement = VERSION_INC === (VERSION_INC & this.$__.version);\n        this.$__.version = undefined;\n        const key = this.$__schema.options.versionKey;\n        const version = this.$__getValue(key) || 0;\n        if (numAffected <= 0) {\n          // the update failed. pass an error back\n          this.$__undoReset();\n          const err = this.$__.$versionError ||\n            new VersionError(this, version, this.$__.modifiedPaths);\n          return callback(err);\n        }\n\n        // increment version if was successful\n        if (doIncrement) {\n          this.$__setValue(key, version + 1);\n        }\n      }\n      if (result != null && numAffected <= 0) {\n        this.$__undoReset();\n        error = new DocumentNotFoundError(result.$where,\n          this.constructor.modelName, numAffected, result);\n        const hooks = this.$__schema.s.hooks;\n        return hooks.execPost('save:error', this, [this], { error: error }, (error) => {\n          callback(error, this);\n        });\n      }\n    }\n    this.$__.saving = undefined;\n    this.$__.savedState = {};\n    this.$emit('save', this, numAffected);\n    this.constructor.emit('save', this, numAffected);\n    callback(null, this);\n  });\n};\n\n/*!\n * ignore\n */\n\nfunction generateVersionError(doc, modifiedPaths) {\n  const key = doc.$__schema.options.versionKey;\n  if (!key) {\n    return null;\n  }\n  const version = doc.$__getValue(key) || 0;\n  return new VersionError(doc, version, modifiedPaths);\n}\n\n/**\n * Saves this document by inserting a new document into the database if [document.isNew](https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew) is `true`,\n * or sends an [updateOne](https://mongoosejs.com/docs/api/document.html#Document.prototype.updateOne()) operation with just the modified paths if `isNew` is `false`.\n *\n * #### Example:\n *\n *     product.sold = Date.now();\n *     product = await product.save();\n *\n * If save is successful, the returned promise will fulfill with the document\n * saved.\n *\n * #### Example:\n *\n *     const newProduct = await product.save();\n *     newProduct === product; // true\n *\n * @param {Object} [options] options optional options\n * @param {Session} [options.session=null] the [session](https://www.mongodb.com/docs/manual/reference/server-sessions/) associated with this save operation. If not specified, defaults to the [document's associated session](https://mongoosejs.com/docs/api/document.html#Document.prototype.session()).\n * @param {Object} [options.safe] (DEPRECATED) overrides [schema's safe option](https://mongoosejs.com/docs/guide.html#safe). Use the `w` option instead.\n * @param {Boolean} [options.validateBeforeSave] set to false to save without validating.\n * @param {Boolean} [options.validateModifiedOnly=false] if `true`, Mongoose will only validate modified paths, as opposed to modified paths and `required` paths.\n * @param {Number|String} [options.w] set the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/#w-option). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.j] set to true for MongoDB to wait until this `save()` has been [journaled before resolving the returned promise](https://www.mongodb.com/docs/manual/reference/write-concern/#j-option). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Number} [options.wtimeout] sets a [timeout for the write concern](https://www.mongodb.com/docs/manual/reference/write-concern/#wtimeout). Overrides the [schema-level `writeConcern` option](https://mongoosejs.com/docs/guide.html#writeConcern).\n * @param {Boolean} [options.checkKeys=true] the MongoDB driver prevents you from saving keys that start with '$' or contain '.' by default. Set this option to `false` to skip that check. See [restrictions on field names](https://docs.mongodb.com/manual/reference/limits/#mongodb-limit-Restrictions-on-Field-Names)\n * @param {Boolean} [options.timestamps=true] if `false` and [timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this `save()`.\n * @throws {DocumentNotFoundError} if this [save updates an existing document](https://mongoosejs.com/docs/api/document.html#Document.prototype.isNew) but the document doesn't exist in the database. For example, you will get this error if the document is [deleted between when you retrieved the document and when you saved it](documents.html#updating).\n * @return {Promise}\n * @api public\n * @see middleware https://mongoosejs.com/docs/middleware.html\n */\n\nModel.prototype.save = async function save(options) {\n  if (typeof options === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.prototype.save() no longer accepts a callback');\n  }\n\n  let parallelSave;\n  this.$op = 'save';\n\n  if (this.$__.saving) {\n    parallelSave = new ParallelSaveError(this);\n  } else {\n    this.$__.saving = new ParallelSaveError(this);\n  }\n\n  options = new SaveOptions(options);\n  if (options.hasOwnProperty('session')) {\n    this.$session(options.session);\n  }\n  if (this.$__.timestamps != null) {\n    options.timestamps = this.$__.timestamps;\n  }\n  this.$__.$versionError = generateVersionError(this, this.modifiedPaths());\n\n  if (parallelSave) {\n    this.$__handleReject(parallelSave);\n    throw parallelSave;\n  }\n\n  this.$__.saveOptions = options;\n\n  await new Promise((resolve, reject) => {\n    this.$__save(options, error => {\n      this.$__.saving = null;\n      this.$__.saveOptions = null;\n      this.$__.$versionError = null;\n      this.$op = null;\n      if (error != null) {\n        this.$__handleReject(error);\n        return reject(error);\n      }\n\n      resolve();\n    });\n  });\n\n  return this;\n};\n\nModel.prototype.$save = Model.prototype.save;\n\n/**\n * Determines whether versioning should be skipped for the given path\n *\n * @param {Document} self\n * @param {String} path\n * @return {Boolean} true if versioning should be skipped for the given path\n * @api private\n */\nfunction shouldSkipVersioning(self, path) {\n  const skipVersioning = self.$__schema.options.skipVersioning;\n  if (!skipVersioning) return false;\n\n  // Remove any array indexes from the path\n  path = path.replace(/\\.\\d+\\./, '.');\n\n  return skipVersioning[path];\n}\n\n/**\n * Apply the operation to the delta (update) clause as\n * well as track versioning for our where clause.\n *\n * @param {Document} self\n * @param {Object} where Unused\n * @param {Object} delta\n * @param {Object} data\n * @param {Mixed} val\n * @param {String} [op]\n * @api private\n */\n\nfunction operand(self, where, delta, data, val, op) {\n  // delta\n  op || (op = '$set');\n  if (!delta[op]) delta[op] = {};\n  delta[op][data.path] = val;\n  // disabled versioning?\n  if (self.$__schema.options.versionKey === false) return;\n\n  // path excluded from versioning?\n  if (shouldSkipVersioning(self, data.path)) return;\n\n  // already marked for versioning?\n  if (VERSION_ALL === (VERSION_ALL & self.$__.version)) return;\n\n  if (self.$__schema.options.optimisticConcurrency) {\n    return;\n  }\n\n  switch (op) {\n    case '$set':\n    case '$unset':\n    case '$pop':\n    case '$pull':\n    case '$pullAll':\n    case '$push':\n    case '$addToSet':\n    case '$inc':\n      break;\n    default:\n      // nothing to do\n      return;\n  }\n\n  // ensure updates sent with positional notation are\n  // editing the correct array element.\n  // only increment the version if an array position changes.\n  // modifying elements of an array is ok if position does not change.\n  if (op === '$push' || op === '$addToSet' || op === '$pullAll' || op === '$pull') {\n    if (/\\.\\d+\\.|\\.\\d+$/.test(data.path)) {\n      increment.call(self);\n    } else {\n      self.$__.version = VERSION_INC;\n    }\n  } else if (/^\\$p/.test(op)) {\n    // potentially changing array positions\n    increment.call(self);\n  } else if (Array.isArray(val)) {\n    // $set an array\n    increment.call(self);\n  } else if (/\\.\\d+\\.|\\.\\d+$/.test(data.path)) {\n    // now handling $set, $unset\n    // subpath of array\n    self.$__.version = VERSION_WHERE;\n  }\n}\n\n/**\n * Compiles an update and where clause for a `val` with _atomics.\n *\n * @param {Document} self\n * @param {Object} where\n * @param {Object} delta\n * @param {Object} data\n * @param {Array} value\n * @api private\n */\n\nfunction handleAtomics(self, where, delta, data, value) {\n  if (delta.$set && delta.$set[data.path]) {\n    // $set has precedence over other atomics\n    return;\n  }\n\n  if (typeof value.$__getAtomics === 'function') {\n    value.$__getAtomics().forEach(function(atomic) {\n      const op = atomic[0];\n      const val = atomic[1];\n      operand(self, where, delta, data, val, op);\n    });\n    return;\n  }\n\n  // legacy support for plugins\n\n  const atomics = value[arrayAtomicsSymbol];\n  const ops = Object.keys(atomics);\n  let i = ops.length;\n  let val;\n  let op;\n\n  if (i === 0) {\n    // $set\n\n    if (utils.isMongooseObject(value)) {\n      value = value.toObject({ depopulate: 1, _isNested: true });\n    } else if (value.valueOf) {\n      value = value.valueOf();\n    }\n\n    return operand(self, where, delta, data, value);\n  }\n\n  function iter(mem) {\n    return utils.isMongooseObject(mem)\n      ? mem.toObject({ depopulate: 1, _isNested: true })\n      : mem;\n  }\n\n  while (i--) {\n    op = ops[i];\n    val = atomics[op];\n\n    if (utils.isMongooseObject(val)) {\n      val = val.toObject({ depopulate: true, transform: false, _isNested: true });\n    } else if (Array.isArray(val)) {\n      val = val.map(iter);\n    } else if (val.valueOf) {\n      val = val.valueOf();\n    }\n\n    if (op === '$addToSet') {\n      val = { $each: val };\n    }\n\n    operand(self, where, delta, data, val, op);\n  }\n}\n\n/**\n * Produces a special query document of the modified properties used in updates.\n *\n * @api private\n * @method $__delta\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.$__delta = function() {\n  const dirty = this.$__dirty();\n\n  const optimisticConcurrency = this.$__schema.options.optimisticConcurrency;\n  if (optimisticConcurrency) {\n    if (Array.isArray(optimisticConcurrency)) {\n      const optCon = new Set(optimisticConcurrency);\n      const modPaths = this.modifiedPaths();\n      if (modPaths.find(path => optCon.has(path))) {\n        this.$__.version = dirty.length ? VERSION_ALL : VERSION_WHERE;\n      }\n    } else {\n      this.$__.version = dirty.length ? VERSION_ALL : VERSION_WHERE;\n    }\n  }\n\n  if (!dirty.length && VERSION_ALL !== this.$__.version) {\n    return;\n  }\n  const where = {};\n  const delta = {};\n  const len = dirty.length;\n  const divergent = [];\n  let d = 0;\n\n  where._id = this._doc._id;\n  // If `_id` is an object, need to depopulate, but also need to be careful\n  // because `_id` can technically be null (see gh-6406)\n  if ((where && where._id && where._id.$__ || null) != null) {\n    where._id = where._id.toObject({ transform: false, depopulate: true });\n  }\n  for (; d < len; ++d) {\n    const data = dirty[d];\n    let value = data.value;\n    const match = checkDivergentArray(this, data.path, value);\n    if (match) {\n      divergent.push(match);\n      continue;\n    }\n\n    const pop = this.$populated(data.path, true);\n    if (!pop && this.$__.selected) {\n      // If any array was selected using an $elemMatch projection, we alter the path and where clause\n      // NOTE: MongoDB only supports projected $elemMatch on top level array.\n      const pathSplit = data.path.split('.');\n      const top = pathSplit[0];\n      if (this.$__.selected[top] && this.$__.selected[top].$elemMatch) {\n        // If the selected array entry was modified\n        if (pathSplit.length > 1 && pathSplit[1] == 0 && typeof where[top] === 'undefined') {\n          where[top] = this.$__.selected[top];\n          pathSplit[1] = '$';\n          data.path = pathSplit.join('.');\n        }\n        // if the selected array was modified in any other way throw an error\n        else {\n          divergent.push(data.path);\n          continue;\n        }\n      }\n    }\n\n    // If this path is set to default, and either this path or one of\n    // its parents is excluded, don't treat this path as dirty.\n    if (this.$isDefault(data.path) && this.$__.selected) {\n      if (data.path.indexOf('.') === -1 && isPathExcluded(this.$__.selected, data.path)) {\n        continue;\n      }\n\n      const pathsToCheck = parentPaths(data.path);\n      if (pathsToCheck.find(path => isPathExcluded(this.$__.isSelected, path))) {\n        continue;\n      }\n    }\n\n    if (divergent.length) continue;\n    if (value === undefined) {\n      operand(this, where, delta, data, 1, '$unset');\n    } else if (value === null) {\n      operand(this, where, delta, data, null);\n    } else if (utils.isMongooseArray(value) && value.$path() && value[arrayAtomicsSymbol]) {\n      // arrays and other custom types (support plugins etc)\n      handleAtomics(this, where, delta, data, value);\n    } else if (value[MongooseBuffer.pathSymbol] && Buffer.isBuffer(value)) {\n      // MongooseBuffer\n      value = value.toObject();\n      operand(this, where, delta, data, value);\n    } else {\n      if (this.$__.primitiveAtomics && this.$__.primitiveAtomics[data.path] != null) {\n        const val = this.$__.primitiveAtomics[data.path];\n        const op = firstKey(val);\n        operand(this, where, delta, data, val[op], op);\n      } else {\n        value = clone(value, {\n          depopulate: true,\n          transform: false,\n          virtuals: false,\n          getters: false,\n          omitUndefined: true,\n          _isNested: true\n        });\n        operand(this, where, delta, data, value);\n      }\n    }\n  }\n\n  if (divergent.length) {\n    return new DivergentArrayError(divergent);\n  }\n\n  if (this.$__.version) {\n    this.$__version(where, delta);\n  }\n\n  if (Object.keys(delta).length === 0) {\n    return [where, null];\n  }\n\n  return [where, delta];\n};\n\n/**\n * Determine if array was populated with some form of filter and is now\n * being updated in a manner which could overwrite data unintentionally.\n *\n * @see https://github.com/Automattic/mongoose/issues/1334\n * @param {Document} doc\n * @param {String} path\n * @param {Any} array\n * @return {String|undefined}\n * @api private\n */\n\nfunction checkDivergentArray(doc, path, array) {\n  // see if we populated this path\n  const pop = doc.$populated(path, true);\n\n  if (!pop && doc.$__.selected) {\n    // If any array was selected using an $elemMatch projection, we deny the update.\n    // NOTE: MongoDB only supports projected $elemMatch on top level array.\n    const top = path.split('.')[0];\n    if (doc.$__.selected[top + '.$']) {\n      return top;\n    }\n  }\n\n  if (!(pop && utils.isMongooseArray(array))) return;\n\n  // If the array was populated using options that prevented all\n  // documents from being returned (match, skip, limit) or they\n  // deselected the _id field, $pop and $set of the array are\n  // not safe operations. If _id was deselected, we do not know\n  // how to remove elements. $pop will pop off the _id from the end\n  // of the array in the db which is not guaranteed to be the\n  // same as the last element we have here. $set of the entire array\n  // would be similarly destructive as we never received all\n  // elements of the array and potentially would overwrite data.\n  const check = pop.options.match ||\n      pop.options.options && utils.object.hasOwnProperty(pop.options.options, 'limit') || // 0 is not permitted\n      pop.options.options && pop.options.options.skip || // 0 is permitted\n      pop.options.select && // deselected _id?\n      (pop.options.select._id === 0 ||\n      /\\s?-_id\\s?/.test(pop.options.select));\n\n  if (check) {\n    const atomics = array[arrayAtomicsSymbol];\n    if (Object.keys(atomics).length === 0 || atomics.$set || atomics.$pop) {\n      return path;\n    }\n  }\n}\n\n/**\n * Appends versioning to the where and update clauses.\n *\n * @api private\n * @method $__version\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.$__version = function(where, delta) {\n  const key = this.$__schema.options.versionKey;\n  if (where === true) {\n    // this is an insert\n    if (key) {\n      setDottedPath(delta, key, 0);\n      this.$__setValue(key, 0);\n    }\n    return;\n  }\n\n  if (key === false) {\n    return;\n  }\n\n  // updates\n\n  // only apply versioning if our versionKey was selected. else\n  // there is no way to select the correct version. we could fail\n  // fast here and force them to include the versionKey but\n  // thats a bit intrusive. can we do this automatically?\n\n  if (!this.$__isSelected(key)) {\n    return;\n  }\n\n  // $push $addToSet don't need the where clause set\n  if (VERSION_WHERE === (VERSION_WHERE & this.$__.version)) {\n    const value = this.$__getValue(key);\n    if (value != null) where[key] = value;\n  }\n\n  if (VERSION_INC === (VERSION_INC & this.$__.version)) {\n    if (get(delta.$set, key, null) != null) {\n      // Version key is getting set, means we'll increment the doc's version\n      // after a successful save, so we should set the incremented version so\n      // future saves don't fail (gh-5779)\n      ++delta.$set[key];\n    } else {\n      delta.$inc = delta.$inc || {};\n      delta.$inc[key] = 1;\n    }\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction increment() {\n  this.$__.version = VERSION_ALL;\n  return this;\n}\n\n/**\n * Signal that we desire an increment of this documents version.\n *\n * #### Example:\n *\n *     const doc = await Model.findById(id);\n *     doc.increment();\n *     await doc.save();\n *\n * @see versionKeys https://mongoosejs.com/docs/guide.html#versionKey\n * @memberOf Model\n * @method increment\n * @api public\n */\n\nModel.prototype.increment = increment;\n\n/**\n * Returns a query object\n *\n * @api private\n * @method $__where\n * @memberOf Model\n * @instance\n */\n\nModel.prototype.$__where = function _where(where) {\n  where || (where = {});\n\n  if (!where._id) {\n    where._id = this._doc._id;\n  }\n\n  if (this._doc._id === void 0) {\n    return new MongooseError('No _id found on document!');\n  }\n\n  return where;\n};\n\n/**\n * Removes this document from the db. Equivalent to `.remove()`.\n *\n * #### Example:\n *\n *     product = await product.deleteOne();\n *     await Product.findById(product._id); // null\n *\n * @return {Promise} Promise\n * @api public\n */\n\nModel.prototype.deleteOne = async function deleteOne(options) {\n  if (typeof options === 'function' ||\n      typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.prototype.deleteOne() no longer accepts a callback');\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (options.hasOwnProperty('session')) {\n    this.$session(options.session);\n  }\n\n  const res = await new Promise((resolve, reject) => {\n    this.$__deleteOne(options, (err, res) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n\n  return res;\n};\n\n/*!\n * ignore\n */\n\nModel.prototype.$__deleteOne = function $__deleteOne(options, cb) {\n  if (this.$__.isDeleted) {\n    return immediate(() => cb(null, this));\n  }\n\n  const where = this.$__where();\n  if (where instanceof MongooseError) {\n    return cb(where);\n  }\n\n  _applyCustomWhere(this, where);\n\n  const session = this.$session();\n  if (!options.hasOwnProperty('session')) {\n    options.session = session;\n  }\n\n  this[modelCollectionSymbol].deleteOne(where, options).then(\n    () => {\n      this.$__.isDeleted = true;\n      this.$emit('deleteOne', this);\n      this.constructor.emit('deleteOne', this);\n      return cb(null, this);\n    },\n    err => {\n      this.$__.isDeleted = false;\n      cb(err);\n    }\n  );\n};\n\n/**\n * Returns another Model instance.\n *\n * #### Example:\n *\n *     const doc = new Tank;\n *     await doc.model('User').findById(id);\n *\n * @param {String} name model name\n * @method model\n * @api public\n * @return {Model}\n */\n\nModel.prototype.model = function model(name) {\n  return this[modelDbSymbol].model(name);\n};\n\n/**\n * Returns another Model instance.\n *\n * #### Example:\n *\n *     const doc = new Tank;\n *     await doc.model('User').findById(id);\n *\n * @param {String} name model name\n * @method $model\n * @api public\n * @return {Model}\n */\n\nModel.prototype.$model = function $model(name) {\n  return this[modelDbSymbol].model(name);\n};\n\n/**\n * Returns a document with `_id` only if at least one document exists in the database that matches\n * the given `filter`, and `null` otherwise.\n *\n * Under the hood, `MyModel.exists({ answer: 42 })` is equivalent to\n * `MyModel.findOne({ answer: 42 }).select({ _id: 1 }).lean()`\n *\n * #### Example:\n *\n *     await Character.deleteMany({});\n *     await Character.create({ name: 'Jean-Luc Picard' });\n *\n *     await Character.exists({ name: /picard/i }); // { _id: ... }\n *     await Character.exists({ name: /riker/i }); // null\n *\n * This function triggers the following middleware.\n *\n * - `findOne()`\n *\n * @param {Object} filter\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @return {Query}\n */\n\nModel.exists = function exists(filter, options) {\n  _checkContext(this, 'exists');\n  if (typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.exists() no longer accepts a callback');\n  }\n\n  const query = this.findOne(filter).\n    select({ _id: 1 }).\n    lean().\n    setOptions(options);\n\n  return query;\n};\n\n/**\n * Adds a discriminator type.\n *\n * #### Example:\n *\n *     function BaseSchema() {\n *       Schema.apply(this, arguments);\n *\n *       this.add({\n *         name: String,\n *         createdAt: Date\n *       });\n *     }\n *     util.inherits(BaseSchema, Schema);\n *\n *     const PersonSchema = new BaseSchema();\n *     const BossSchema = new BaseSchema({ department: String });\n *\n *     const Person = mongoose.model('Person', PersonSchema);\n *     const Boss = Person.discriminator('Boss', BossSchema);\n *     new Boss().__t; // \"Boss\". `__t` is the default `discriminatorKey`\n *\n *     const employeeSchema = new Schema({ boss: ObjectId });\n *     const Employee = Person.discriminator('Employee', employeeSchema, 'staff');\n *     new Employee().__t; // \"staff\" because of 3rd argument above\n *\n * @param {String} name discriminator model name\n * @param {Schema} schema discriminator model schema\n * @param {Object|String} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @param {Boolean} [options.overwriteModels=false] by default, Mongoose does not allow you to define a discriminator with the same name as another discriminator. Set this to allow overwriting discriminators with the same name.\n * @param {Boolean} [options.mergeHooks=true] By default, Mongoose merges the base schema's hooks with the discriminator schema's hooks. Set this option to `false` to make Mongoose use the discriminator schema's hooks instead.\n * @param {Boolean} [options.mergePlugins=true] By default, Mongoose merges the base schema's plugins with the discriminator schema's plugins. Set this option to `false` to make Mongoose use the discriminator schema's plugins instead.\n * @return {Model} The newly created discriminator model\n * @api public\n */\n\nModel.discriminator = function(name, schema, options) {\n  let model;\n  if (typeof name === 'function') {\n    model = name;\n    name = utils.getFunctionName(model);\n    if (!(model.prototype instanceof Model)) {\n      throw new MongooseError('The provided class ' + name + ' must extend Model');\n    }\n  }\n\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean' ? options.clone : true;\n  const mergePlugins = typeof options.mergePlugins === 'boolean' ? options.mergePlugins : true;\n\n  _checkContext(this, 'discriminator');\n\n  if (utils.isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  }\n  if (schema instanceof Schema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this, name, schema, value, mergePlugins, options.mergeHooks);\n  if (this.db.models[name] && !schema.options.overwriteModels) {\n    throw new OverwriteModelError(name);\n  }\n\n  schema.$isRootDiscriminator = true;\n  schema.$globalPluginsApplied = true;\n\n  model = this.db.model(model || name, schema, this.$__collection.name);\n  this.discriminators[name] = model;\n  const d = this.discriminators[name];\n  Object.setPrototypeOf(d.prototype, this.prototype);\n  Object.defineProperty(d, 'baseModelName', {\n    value: this.modelName,\n    configurable: true,\n    writable: false\n  });\n\n  // apply methods and statics\n  applyMethods(d, schema);\n  applyStatics(d, schema);\n\n  if (this[subclassedSymbol] != null) {\n    for (const submodel of this[subclassedSymbol]) {\n      submodel.discriminators = submodel.discriminators || {};\n      submodel.discriminators[name] =\n        model.__subclass(model.db, schema, submodel.collection.name);\n    }\n  }\n\n  return d;\n};\n\n/**\n * Make sure `this` is a model\n * @api private\n */\n\nfunction _checkContext(ctx, fnName) {\n  // Check context, because it is easy to mistakenly type\n  // `new Model.discriminator()` and get an incomprehensible error\n  if (ctx == null || ctx === global) {\n    throw new MongooseError('`Model.' + fnName + '()` cannot run without a ' +\n      'model as `this`. Make sure you are calling `MyModel.' + fnName + '()` ' +\n      'where `MyModel` is a Mongoose model.');\n  } else if (ctx[modelSymbol] == null) {\n    throw new MongooseError('`Model.' + fnName + '()` cannot run without a ' +\n      'model as `this`. Make sure you are not calling ' +\n      '`new Model.' + fnName + '()`');\n  }\n}\n\n// Model (class) features\n\n/*!\n * Give the constructor the ability to emit events.\n */\n\nfor (const i in EventEmitter.prototype) {\n  Model[i] = EventEmitter.prototype[i];\n}\n\n/**\n * This function is responsible for building [indexes](https://www.mongodb.com/docs/manual/indexes/),\n * unless [`autoIndex`](https://mongoosejs.com/docs/guide.html#autoIndex) is turned off.\n *\n * Mongoose calls this function automatically when a model is created using\n * [`mongoose.model()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.model()) or\n * [`connection.model()`](https://mongoosejs.com/docs/api/connection.html#Connection.prototype.model()), so you\n * don't need to call `init()` to trigger index builds.\n *\n * However, you _may_ need to call `init()`  to get back a promise that will resolve when your indexes are finished.\n * Calling `await Model.init()` is helpful if you need to wait for indexes to build before continuing.\n * For example, if you want to wait for unique indexes to build before continuing with a test case.\n *\n * #### Example:\n *\n *     const eventSchema = new Schema({ thing: { type: 'string', unique: true } })\n *     // This calls `Event.init()` implicitly, so you don't need to call\n *     // `Event.init()` on your own.\n *     const Event = mongoose.model('Event', eventSchema);\n *\n *     await Event.init();\n *     console.log('Indexes are done building!');\n *\n * @api public\n * @returns {Promise}\n */\n\nModel.init = function init() {\n  _checkContext(this, 'init');\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('Model.init() no longer accepts a callback');\n  }\n\n  this.schema.emit('init', this);\n\n  if (this.$init != null) {\n    return this.$init;\n  }\n\n  const conn = this.db;\n  const _ensureIndexes = async() => {\n    const autoIndex = utils.getOption(\n      'autoIndex',\n      this.schema.options,\n      conn.config,\n      conn.base.options\n    );\n    if (!autoIndex) {\n      return;\n    }\n    return await this.ensureIndexes({ _automatic: true });\n  };\n  const _createCollection = async() => {\n    if ((conn.readyState === STATES.connecting || conn.readyState === STATES.disconnected) && conn._shouldBufferCommands()) {\n      await new Promise(resolve => {\n        conn._queue.push({ fn: resolve });\n      });\n    }\n    const autoCreate = utils.getOption(\n      'autoCreate',\n      this.schema.options,\n      conn.config,\n      conn.base.options\n    );\n    if (!autoCreate) {\n      return;\n    }\n    return await this.createCollection();\n  };\n\n  this.$init = _createCollection().then(() => _ensureIndexes());\n\n  const _catch = this.$init.catch;\n  const _this = this;\n  this.$init.catch = function() {\n    _this.$caught = true;\n    return _catch.apply(_this.$init, arguments);\n  };\n\n  return this.$init;\n};\n\n\n/**\n * Create the collection for this model. By default, if no indexes are specified,\n * mongoose will not create the collection for the model until any documents are\n * created. Use this method to create the collection explicitly.\n *\n * Note 1: You may need to call this before starting a transaction\n * See https://www.mongodb.com/docs/manual/core/transactions/#transactions-and-operations\n *\n * Note 2: You don't have to call this if your schema contains index or unique field.\n * In that case, just use `Model.init()`\n *\n * #### Example:\n *\n *     const userSchema = new Schema({ name: String })\n *     const User = mongoose.model('User', userSchema);\n *\n *     User.createCollection().then(function(collection) {\n *       console.log('Collection is created!');\n *     });\n *\n * @api public\n * @param {Object} [options] see [MongoDB driver docs](https://mongodb.github.io/node-mongodb-native/4.9/classes/Db.html#createCollection)\n * @returns {Promise}\n */\n\nModel.createCollection = async function createCollection(options) {\n  _checkContext(this, 'createCollection');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.createCollection() no longer accepts a callback');\n  }\n\n  const collectionOptions = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.collectionOptions;\n  if (collectionOptions != null) {\n    options = Object.assign({}, collectionOptions, options);\n  }\n\n  const schemaCollation = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.collation;\n  if (schemaCollation != null) {\n    options = Object.assign({ collation: schemaCollation }, options);\n  }\n  const capped = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.capped;\n  if (capped != null) {\n    if (typeof capped === 'number') {\n      options = Object.assign({ capped: true, size: capped }, options);\n    } else if (typeof capped === 'object') {\n      options = Object.assign({ capped: true }, capped, options);\n    }\n  }\n  const timeseries = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.timeseries;\n  if (timeseries != null) {\n    options = Object.assign({ timeseries }, options);\n    if (options.expireAfterSeconds != null) {\n      // do nothing\n    } else if (options.expires != null) {\n      utils.expires(options);\n    } else if (this.schema.options.expireAfterSeconds != null) {\n      options.expireAfterSeconds = this.schema.options.expireAfterSeconds;\n    } else if (this.schema.options.expires != null) {\n      options.expires = this.schema.options.expires;\n      utils.expires(options);\n    }\n  }\n\n  const clusteredIndex = this &&\n    this.schema &&\n    this.schema.options &&\n    this.schema.options.clusteredIndex;\n  if (clusteredIndex != null) {\n    options = Object.assign({ clusteredIndex: { ...clusteredIndex, unique: true } }, options);\n  }\n\n  try {\n    await this.db.createCollection(this.$__collection.collectionName, options);\n  } catch (err) {\n\n    if (err != null && (err.name !== 'MongoServerError' || err.code !== 48)) {\n      throw err;\n    }\n  }\n  return this.$__collection;\n};\n\n/**\n * Makes the indexes in MongoDB match the indexes defined in this model's\n * schema. This function will drop any indexes that are not defined in\n * the model's schema except the `_id` index, and build any indexes that\n * are in your schema but not in MongoDB.\n *\n * See the [introductory blog post](https://thecodebarbarian.com/whats-new-in-mongoose-5-2-syncindexes)\n * for more information.\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: { type: String, unique: true } });\n *     const Customer = mongoose.model('Customer', schema);\n *     await Customer.collection.createIndex({ age: 1 }); // Index is not in schema\n *     // Will drop the 'age' index and create an index on `name`\n *     await Customer.syncIndexes();\n *\n * @param {Object} [options] options to pass to `ensureIndexes()`\n * @param {Boolean} [options.background=null] if specified, overrides each index's `background` property\n * @return {Promise}\n * @api public\n */\n\nModel.syncIndexes = async function syncIndexes(options) {\n  _checkContext(this, 'syncIndexes');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.syncIndexes() no longer accepts a callback');\n  }\n\n  const model = this;\n\n  try {\n    await model.createCollection();\n  } catch (err) {\n    if (err != null && (err.name !== 'MongoServerError' || err.code !== 48)) {\n      throw err;\n    }\n  }\n\n  const diffIndexesResult = await model.diffIndexes();\n  const dropped = await model.cleanIndexes({ ...options, toDrop: diffIndexesResult.toDrop });\n  await model.createIndexes({ ...options, toCreate: diffIndexesResult.toCreate });\n\n  return dropped;\n};\n\n/**\n * Does a dry-run of Model.syncIndexes(), meaning that\n * the result of this function would be the result of\n * Model.syncIndexes().\n *\n * @param {Object} [options]\n * @returns {Promise} which contains an object, {toDrop, toCreate}, which\n * are indexes that would be dropped in MongoDB and indexes that would be created in MongoDB.\n */\n\nModel.diffIndexes = async function diffIndexes() {\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.syncIndexes() no longer accepts a callback');\n  }\n\n  const model = this;\n\n  let dbIndexes = await model.listIndexes();\n  if (dbIndexes === undefined) {\n    dbIndexes = [];\n  }\n  dbIndexes = getRelatedDBIndexes(model, dbIndexes);\n\n  const schema = model.schema;\n  const schemaIndexes = getRelatedSchemaIndexes(model, schema.indexes());\n\n  const toDrop = getIndexesToDrop(schema, schemaIndexes, dbIndexes);\n  const toCreate = getIndexesToCreate(schema, schemaIndexes, dbIndexes, toDrop);\n\n  return { toDrop, toCreate };\n};\n\nfunction getIndexesToCreate(schema, schemaIndexes, dbIndexes, toDrop) {\n  const toCreate = [];\n\n  for (const [schemaIndexKeysObject, schemaIndexOptions] of schemaIndexes) {\n    let found = false;\n\n    const options = decorateDiscriminatorIndexOptions(schema, clone(schemaIndexOptions));\n\n    for (const index of dbIndexes) {\n      if (isDefaultIdIndex(index)) {\n        continue;\n      }\n      if (\n        isIndexEqual(schemaIndexKeysObject, options, index) &&\n        !toDrop.includes(index.name)\n      ) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      toCreate.push(schemaIndexKeysObject);\n    }\n  }\n\n  return toCreate;\n}\n\nfunction getIndexesToDrop(schema, schemaIndexes, dbIndexes) {\n  const toDrop = [];\n\n  for (const dbIndex of dbIndexes) {\n    let found = false;\n    // Never try to drop `_id` index, MongoDB server doesn't allow it\n    if (isDefaultIdIndex(dbIndex)) {\n      continue;\n    }\n\n    for (const [schemaIndexKeysObject, schemaIndexOptions] of schemaIndexes) {\n      const options = decorateDiscriminatorIndexOptions(schema, clone(schemaIndexOptions));\n      applySchemaCollation(schemaIndexKeysObject, options, schema.options);\n\n      if (isIndexEqual(schemaIndexKeysObject, options, dbIndex)) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      toDrop.push(dbIndex.name);\n    }\n  }\n\n  return toDrop;\n}\n/**\n * Deletes all indexes that aren't defined in this model's schema. Used by\n * `syncIndexes()`.\n *\n * The returned promise resolves to a list of the dropped indexes' names as an array\n *\n * @param {Function} [callback] optional callback\n * @return {Promise|undefined} Returns `undefined` if callback is specified, returns a promise if no callback.\n * @api public\n */\n\nModel.cleanIndexes = async function cleanIndexes(options) {\n  _checkContext(this, 'cleanIndexes');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.cleanIndexes() no longer accepts a callback');\n  }\n  const model = this;\n\n  const collection = model.$__collection;\n\n  if (Array.isArray(options && options.toDrop)) {\n    const res = await _dropIndexes(options.toDrop, collection);\n    return res;\n  }\n\n  const res = await model.diffIndexes();\n  return await _dropIndexes(res.toDrop, collection);\n};\n\nasync function _dropIndexes(toDrop, collection) {\n  if (toDrop.length === 0) {\n    return [];\n  }\n\n  await Promise.all(toDrop.map(indexName => collection.dropIndex(indexName)));\n  return toDrop;\n}\n\n/**\n * Lists the indexes currently defined in MongoDB. This may or may not be\n * the same as the indexes defined in your schema depending on whether you\n * use the [`autoIndex` option](https://mongoosejs.com/docs/guide.html#autoIndex) and if you\n * build indexes manually.\n *\n * @return {Promise}\n * @api public\n */\n\nModel.listIndexes = async function listIndexes() {\n  _checkContext(this, 'listIndexes');\n  if (typeof arguments[0] === 'function') {\n    throw new MongooseError('Model.listIndexes() no longer accepts a callback');\n  }\n\n  if (this.$__collection.buffer) {\n    await new Promise(resolve => {\n      this.$__collection.addQueue(resolve);\n    });\n  }\n\n  return this.$__collection.listIndexes().toArray();\n};\n\n/**\n * Sends `createIndex` commands to mongo for each index declared in the schema.\n * The `createIndex` commands are sent in series.\n *\n * #### Example:\n *\n *     Event.ensureIndexes(function (err) {\n *       if (err) return handleError(err);\n *     });\n *\n * After completion, an `index` event is emitted on this `Model` passing an error if one occurred.\n *\n * #### Example:\n *\n *     const eventSchema = new Schema({ thing: { type: 'string', unique: true } })\n *     const Event = mongoose.model('Event', eventSchema);\n *\n *     Event.on('index', function (err) {\n *       if (err) console.error(err); // error occurred during index creation\n *     })\n *\n * _NOTE: It is not recommended that you run this in production. Index creation may impact database performance depending on your load. Use with caution._\n *\n * @param {Object} [options] internal options\n * @return {Promise}\n * @api public\n */\n\nModel.ensureIndexes = async function ensureIndexes(options) {\n  _checkContext(this, 'ensureIndexes');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.ensureIndexes() no longer accepts a callback');\n  }\n\n  await new Promise((resolve, reject) => {\n    _ensureIndexes(this, options, (err) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve();\n    });\n  });\n};\n\n/**\n * Similar to `ensureIndexes()`, except for it uses the [`createIndex`](https://mongodb.github.io/node-mongodb-native/4.9/classes/Db.html#createIndex)\n * function.\n *\n * @param {Object} [options] internal options\n * @return {Promise}\n * @api public\n */\n\nModel.createIndexes = async function createIndexes(options) {\n  _checkContext(this, 'createIndexes');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.createIndexes() no longer accepts a callback');\n  }\n\n  return this.ensureIndexes(options);\n};\n\n\n/*!\n * ignore\n */\n\nfunction _ensureIndexes(model, options, callback) {\n  const indexes = model.schema.indexes();\n  let indexError;\n\n  options = options || {};\n  const done = function(err) {\n    if (err && !model.$caught) {\n      model.emit('error', err);\n    }\n    model.emit('index', err || indexError);\n    callback && callback(err || indexError);\n  };\n\n  for (const index of indexes) {\n    if (isDefaultIdIndex(index)) {\n      utils.warn('mongoose: Cannot specify a custom index on `_id` for ' +\n        'model name \"' + model.modelName + '\", ' +\n        'MongoDB does not allow overwriting the default `_id` index. See ' +\n        'https://bit.ly/mongodb-id-index');\n    }\n  }\n\n  if (!indexes.length) {\n    immediate(function() {\n      done();\n    });\n    return;\n  }\n  // Indexes are created one-by-one to support how MongoDB < 2.4 deals\n  // with background indexes.\n\n  const indexSingleDone = function(err, fields, options, name) {\n    model.emit('index-single-done', err, fields, options, name);\n  };\n  const indexSingleStart = function(fields, options) {\n    model.emit('index-single-start', fields, options);\n  };\n\n  const baseSchema = model.schema._baseSchema;\n  const baseSchemaIndexes = baseSchema ? baseSchema.indexes() : [];\n\n  immediate(function() {\n    // If buffering is off, do this manually.\n    if (options._automatic && !model.collection.collection) {\n      model.collection.addQueue(create, []);\n    } else {\n      create();\n    }\n  });\n\n\n  function create() {\n    if (options._automatic) {\n      if (model.schema.options.autoIndex === false ||\n          (model.schema.options.autoIndex == null && model.db.config.autoIndex === false)) {\n        return done();\n      }\n    }\n\n    const index = indexes.shift();\n    if (!index) {\n      return done();\n    }\n    if (options._automatic && index[1]._autoIndex === false) {\n      return create();\n    }\n\n    if (baseSchemaIndexes.find(i => utils.deepEqual(i, index))) {\n      return create();\n    }\n\n    const indexFields = clone(index[0]);\n    const indexOptions = clone(index[1]);\n\n    delete indexOptions._autoIndex;\n    decorateDiscriminatorIndexOptions(model.schema, indexOptions);\n    applyWriteConcern(model.schema, indexOptions);\n    applySchemaCollation(indexFields, indexOptions, model.schema.options);\n\n    indexSingleStart(indexFields, options);\n\n    if ('background' in options) {\n      indexOptions.background = options.background;\n    }\n\n    if ('toCreate' in options) {\n      if (options.toCreate.length === 0) {\n        return done();\n      }\n    }\n\n    model.collection.createIndex(indexFields, indexOptions).then(\n      name => {\n        indexSingleDone(null, indexFields, indexOptions, name);\n        create();\n      },\n      err => {\n        if (!indexError) {\n          indexError = err;\n        }\n        if (!model.$caught) {\n          model.emit('error', err);\n        }\n\n        indexSingleDone(err, indexFields, indexOptions);\n        create();\n      }\n    );\n  }\n}\n\n/**\n * Schema the model uses.\n *\n * @property schema\n * @static\n * @api public\n * @memberOf Model\n */\n\nModel.schema;\n\n/**\n * Connection instance the model uses.\n *\n * @property db\n * @static\n * @api public\n * @memberOf Model\n */\n\nModel.db;\n\n/**\n * Collection the model uses.\n *\n * @property collection\n * @api public\n * @memberOf Model\n */\n\nModel.collection;\n\n/**\n * Internal collection the model uses.\n *\n * @property collection\n * @api private\n * @memberOf Model\n */\nModel.$__collection;\n\n/**\n * Base Mongoose instance the model uses.\n *\n * @property base\n * @api public\n * @memberOf Model\n */\n\nModel.base;\n\n/**\n * Registered discriminators for this model.\n *\n * @property discriminators\n * @api public\n * @memberOf Model\n */\n\nModel.discriminators;\n\n/**\n * Translate any aliases fields/conditions so the final query or document object is pure\n *\n * #### Example:\n *\n *     await Character.find(Character.translateAliases({\n *        '\u540D': 'Eddard Stark' // Alias for 'name'\n *     });\n *\n * By default, `translateAliases()` overwrites raw fields with aliased fields.\n * So if `n` is an alias for `name`, `{ n: 'alias', name: 'raw' }` will resolve to `{ name: 'alias' }`.\n * However, you can set the `errorOnDuplicates` option to throw an error if there are potentially conflicting paths.\n * The `translateAliases` option for queries uses `errorOnDuplicates`.\n *\n * #### Note:\n *\n * Only translate arguments of object type anything else is returned raw\n *\n * @param {Object} fields fields/conditions that may contain aliased keys\n * @param {Boolean} [errorOnDuplicates] if true, throw an error if there's both a key and an alias for that key in `fields`\n * @return {Object} the translated 'pure' fields/conditions\n */\nModel.translateAliases = function translateAliases(fields, errorOnDuplicates) {\n  _checkContext(this, 'translateAliases');\n\n  const translate = (key, value) => {\n    let alias;\n    const translated = [];\n    const fieldKeys = key.split('.');\n    let currentSchema = this.schema;\n    for (const i in fieldKeys) {\n      const name = fieldKeys[i];\n      if (currentSchema && currentSchema.aliases[name]) {\n        alias = currentSchema.aliases[name];\n        if (errorOnDuplicates && alias in fields) {\n          throw new MongooseError(`Provided object has both field \"${name}\" and its alias \"${alias}\"`);\n        }\n        // Alias found,\n        translated.push(alias);\n      } else {\n        alias = name;\n        // Alias not found, so treat as un-aliased key\n        translated.push(name);\n      }\n\n      // Check if aliased path is a schema\n      if (currentSchema && currentSchema.paths[alias]) {\n        currentSchema = currentSchema.paths[alias].schema;\n      }\n      else\n        currentSchema = null;\n    }\n\n    const translatedKey = translated.join('.');\n    if (fields instanceof Map)\n      fields.set(translatedKey, value);\n    else\n      fields[translatedKey] = value;\n\n    if (translatedKey !== key) {\n      // We'll be using the translated key instead\n      if (fields instanceof Map) {\n        // Delete from map\n        fields.delete(key);\n      } else {\n        // Delete from object\n        delete fields[key]; // We'll be using the translated key instead\n      }\n    }\n    return fields;\n  };\n\n  if (typeof fields === 'object') {\n    // Fields is an object (query conditions or document fields)\n    if (fields instanceof Map) {\n      // A Map was supplied\n      for (const field of new Map(fields)) {\n        fields = translate(field[0], field[1]);\n      }\n    } else {\n      // Infer a regular object was supplied\n      for (const key of Object.keys(fields)) {\n        fields = translate(key, fields[key]);\n        if (key[0] === '$') {\n          if (Array.isArray(fields[key])) {\n            for (const i in fields[key]) {\n              // Recursively translate nested queries\n              fields[key][i] = this.translateAliases(fields[key][i]);\n            }\n          } else {\n            this.translateAliases(fields[key]);\n          }\n        }\n      }\n    }\n\n    return fields;\n  } else {\n    // Don't know typeof fields\n    return fields;\n  }\n};\n\n/**\n * Deletes the first document that matches `conditions` from the collection.\n * It returns an object with the property `deletedCount` indicating how many documents were deleted.\n * Behaves like `remove()`, but deletes at most one document regardless of the\n * `single` option.\n *\n * #### Example:\n *\n *     await Character.deleteOne({ name: 'Eddard Stark' }); // returns {deletedCount: 1}\n *\n * #### Note:\n *\n * This function triggers `deleteOne` query hooks. Read the\n * [middleware docs](https://mongoosejs.com/docs/middleware.html#naming) to learn more.\n *\n * @param {Object} conditions\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @api public\n */\n\nModel.deleteOne = function deleteOne(conditions, options) {\n  _checkContext(this, 'deleteOne');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.prototype.deleteOne() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.setOptions(options);\n\n  return mq.deleteOne(conditions);\n};\n\n/**\n * Deletes all of the documents that match `conditions` from the collection.\n * It returns an object with the property `deletedCount` containing the number of documents deleted.\n * Behaves like `remove()`, but deletes all documents that match `conditions`\n * regardless of the `single` option.\n *\n * #### Example:\n *\n *     await Character.deleteMany({ name: /Stark/, age: { $gte: 18 } }); // returns {deletedCount: x} where x is the number of documents deleted.\n *\n * #### Note:\n *\n * This function triggers `deleteMany` query hooks. Read the\n * [middleware docs](https://mongoosejs.com/docs/middleware.html#naming) to learn more.\n *\n * @param {Object} conditions\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @api public\n */\n\nModel.deleteMany = function deleteMany(conditions, options) {\n  _checkContext(this, 'deleteMany');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.deleteMany() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.setOptions(options);\n\n  return mq.deleteMany(conditions);\n};\n\n/**\n * Finds documents.\n *\n * Mongoose casts the `filter` to match the model's schema before the command is sent.\n * See our [query casting tutorial](https://mongoosejs.com/docs/tutorials/query_casting.html) for\n * more information on how Mongoose casts `filter`.\n *\n * #### Example:\n *\n *     // find all documents\n *     await MyModel.find({});\n *\n *     // find all documents named john and at least 18\n *     await MyModel.find({ name: 'john', age: { $gte: 18 } }).exec();\n *\n *     // executes, name LIKE john and only selecting the \"name\" and \"friends\" fields\n *     await MyModel.find({ name: /john/i }, 'name friends').exec();\n *\n *     // passing options\n *     await MyModel.find({ name: /john/i }, null, { skip: 10 }).exec();\n *\n * @param {Object|ObjectId} filter\n * @param {Object|String|String[]} [projection] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see field selection https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @see query casting https://mongoosejs.com/docs/tutorials/query_casting.html\n * @api public\n */\n\nModel.find = function find(conditions, projection, options) {\n  _checkContext(this, 'find');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.find() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(projection);\n  mq.setOptions(options);\n\n  return mq.find(conditions);\n};\n\n/**\n * Finds a single document by its _id field. `findById(id)` is almost*\n * equivalent to `findOne({ _id: id })`. If you want to query by a document's\n * `_id`, use `findById()` instead of `findOne()`.\n *\n * The `id` is cast based on the Schema before sending the command.\n *\n * This function triggers the following middleware.\n *\n * - `findOne()`\n *\n * \\* Except for how it treats `undefined`. If you use `findOne()`, you'll see\n * that `findOne(undefined)` and `findOne({ _id: undefined })` are equivalent\n * to `findOne({})` and return arbitrary documents. However, mongoose\n * translates `findById(undefined)` into `findOne({ _id: null })`.\n *\n * #### Example:\n *\n *     // Find the adventure with the given `id`, or `null` if not found\n *     await Adventure.findById(id).exec();\n *\n *     // select only the adventures name and length\n *     await Adventure.findById(id, 'name length').exec();\n *\n * @param {Any} id value of `_id` to query by\n * @param {Object|String|String[]} [projection] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @return {Query}\n * @see field selection https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @see lean queries https://mongoosejs.com/docs/tutorials/lean.html\n * @see findById in Mongoose https://masteringjs.io/tutorials/mongoose/find-by-id\n * @api public\n */\n\nModel.findById = function findById(id, projection, options) {\n  _checkContext(this, 'findById');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.findById() no longer accepts a callback');\n  }\n\n  if (typeof id === 'undefined') {\n    id = null;\n  }\n\n  return this.findOne({ _id: id }, projection, options);\n};\n\n/**\n * Finds one document.\n *\n * The `conditions` are cast to their respective SchemaTypes before the command is sent.\n *\n * *Note:* `conditions` is optional, and if `conditions` is null or undefined,\n * mongoose will send an empty `findOne` command to MongoDB, which will return\n * an arbitrary document. If you're querying by `_id`, use `findById()` instead.\n *\n * #### Example:\n *\n *     // Find one adventure whose `country` is 'Croatia', otherwise `null`\n *     await Adventure.findOne({ country: 'Croatia' }).exec();\n *\n *     // Model.findOne() no longer accepts a callback\n *\n *     // Select only the adventures name and length\n *     await Adventure.findOne({ country: 'Croatia' }, 'name length').exec();\n *\n * @param {Object} [conditions]\n * @param {Object|String|String[]} [projection] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see field selection https://mongoosejs.com/docs/api/query.html#Query.prototype.select()\n * @see lean queries https://mongoosejs.com/docs/tutorials/lean.html\n * @api public\n */\n\nModel.findOne = function findOne(conditions, projection, options) {\n  _checkContext(this, 'findOne');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.findOne() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(projection);\n  mq.setOptions(options);\n\n  return mq.findOne(conditions);\n};\n\n/**\n * Estimates the number of documents in the MongoDB collection. Faster than\n * using `countDocuments()` for large collections because\n * `estimatedDocumentCount()` uses collection metadata rather than scanning\n * the entire collection.\n *\n * #### Example:\n *\n *     const numAdventures = await Adventure.estimatedDocumentCount();\n *\n * @param {Object} [options]\n * @return {Query}\n * @api public\n */\n\nModel.estimatedDocumentCount = function estimatedDocumentCount(options) {\n  _checkContext(this, 'estimatedDocumentCount');\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n\n  return mq.estimatedDocumentCount(options);\n};\n\n/**\n * Counts number of documents matching `filter` in a database collection.\n *\n * #### Example:\n *\n *     Adventure.countDocuments({ type: 'jungle' }, function (err, count) {\n *       console.log('there are %d jungle adventures', count);\n *     });\n *\n * If you want to count all documents in a large collection,\n * use the [`estimatedDocumentCount()` function](https://mongoosejs.com/docs/api/model.html#Model.estimatedDocumentCount())\n * instead. If you call `countDocuments({})`, MongoDB will always execute\n * a full collection scan and **not** use any indexes.\n *\n * The `countDocuments()` function is similar to `count()`, but there are a\n * [few operators that `countDocuments()` does not support](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#countDocuments).\n * Below are the operators that `count()` supports but `countDocuments()` does not,\n * and the suggested replacement:\n *\n * - `$where`: [`$expr`](https://www.mongodb.com/docs/manual/reference/operator/query/expr/)\n * - `$near`: [`$geoWithin`](https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/) with [`$center`](https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center)\n * - `$nearSphere`: [`$geoWithin`](https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/) with [`$centerSphere`](https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere)\n *\n * @param {Object} filter\n * @return {Query}\n * @api public\n */\n\nModel.countDocuments = function countDocuments(conditions, options) {\n  _checkContext(this, 'countDocuments');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.countDocuments() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  if (options != null) {\n    mq.setOptions(options);\n  }\n\n  return mq.countDocuments(conditions);\n};\n\n/**\n * Counts number of documents that match `filter` in a database collection.\n *\n * This method is deprecated. If you want to count the number of documents in\n * a collection, e.g. `count({})`, use the [`estimatedDocumentCount()` function](https://mongoosejs.com/docs/api/model.html#Model.estimatedDocumentCount())\n * instead. Otherwise, use the [`countDocuments()`](https://mongoosejs.com/docs/api/model.html#Model.countDocuments()) function instead.\n *\n * #### Example:\n *\n *     const count = await Adventure.count({ type: 'jungle' });\n *     console.log('there are %d jungle adventures', count);\n *\n * @deprecated\n * @param {Object} [filter]\n * @return {Query}\n * @api public\n */\n\nModel.count = function count(conditions) {\n  _checkContext(this, 'count');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.count() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n\n  return mq.count(conditions);\n};\n\n/**\n * Creates a Query for a `distinct` operation.\n *\n * #### Example:\n *\n *     const query = Link.distinct('url');\n *     query.exec();\n *\n * @param {String} field\n * @param {Object} [conditions] optional\n * @return {Query}\n * @api public\n */\n\nModel.distinct = function distinct(field, conditions) {\n  _checkContext(this, 'distinct');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function') {\n    throw new MongooseError('Model.distinct() no longer accepts a callback');\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n\n  return mq.distinct(field, conditions);\n};\n\n/**\n * Creates a Query, applies the passed conditions, and returns the Query.\n *\n * For example, instead of writing:\n *\n *     User.find({ age: { $gte: 21, $lte: 65 } });\n *\n * we can instead write:\n *\n *     User.where('age').gte(21).lte(65).exec();\n *\n * Since the Query class also supports `where` you can continue chaining\n *\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^b/i)\n *     ... etc\n *\n * @param {String} path\n * @param {Object} [val] optional value\n * @return {Query}\n * @api public\n */\n\nModel.where = function where(path, val) {\n  _checkContext(this, 'where');\n\n  void val; // eslint\n  const mq = new this.Query({}, {}, this, this.$__collection).find({});\n  return mq.where.apply(mq, arguments);\n};\n\n/**\n * Creates a `Query` and specifies a `$where` condition.\n *\n * Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via `find({ $where: javascript })`, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model.\n *\n *     Blog.$where('this.username.indexOf(\"val\") !== -1').exec(function (err, docs) {});\n *\n * @param {String|Function} argument is a javascript string or anonymous function\n * @method $where\n * @memberOf Model\n * @return {Query}\n * @see Query.$where https://mongoosejs.com/docs/api/query.html#Query.prototype.$where\n * @api public\n */\n\nModel.$where = function $where() {\n  _checkContext(this, '$where');\n\n  const mq = new this.Query({}, {}, this, this.$__collection).find({});\n  return mq.$where.apply(mq, arguments);\n};\n\n/**\n * Issues a mongodb findOneAndUpdate command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes if `callback` is passed else a Query object is returned.\n *\n * #### Example:\n *\n *     A.findOneAndUpdate(conditions, update, options)  // returns Query\n *     A.findOneAndUpdate(conditions, update)           // returns Query\n *     A.findOneAndUpdate()                             // returns Query\n *\n * #### Note:\n *\n * All top level update keys which are not `atomic` operation names are treated as set operations:\n *\n * #### Example:\n *\n *     const query = { name: 'borne' };\n *     Model.findOneAndUpdate(query, { name: 'jason bourne' }, options)\n *\n *     // is sent as\n *     Model.findOneAndUpdate(query, { $set: { name: 'jason bourne' }}, options)\n *\n * #### Note:\n *\n * `findOneAndX` and `findByIdAndX` functions support limited validation that\n * you can enable by setting the `runValidators` option.\n *\n * If you need full-fledged validation, use the traditional approach of first\n * retrieving the document.\n *\n *     const doc = await Model.findById(id);\n *     doc.name = 'jason bourne';\n *     await doc.save();\n *\n * @param {Object} [conditions]\n * @param {Object} [update]\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {String} [options.returnDocument='before'] Has two possible values, `'before'` and `'after'`. By default, it will return the document before the update was applied.\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and [the Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.overwrite=false] By default, if you don't include any [update operators](https://www.mongodb.com/docs/manual/reference/operator/update/) in `update`, Mongoose will wrap `update` in `$set` for you. This prevents you from accidentally overwriting the document. This option tells Mongoose to skip adding `$set`. An alternative to this would be using [Model.findOneAndReplace(conditions, update, options, callback)](https://mongoosejs.com/docs/api/model.html#Model.findOneAndReplace()).\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object|String|String[]} [options.projection=null] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Boolean} [options.new=false] if true, return the modified document rather than the original\n * @param {Object|String} [options.fields] Field selection. Equivalent to `.select(fields).findOneAndUpdate()`\n * @param {Number} [options.maxTimeMS] puts a time limit on the query - requires mongodb >= 2.6.0\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Boolean} [options.runValidators] if true, runs [update validators](https://mongoosejs.com/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema\n * @param {Boolean} [options.setDefaultsOnInsert=true] If `setDefaultsOnInsert` and `upsert` are true, mongoose will apply the [defaults](https://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Tutorial https://mongoosejs.com/docs/tutorials/findoneandupdate.html\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @api public\n */\n\nModel.findOneAndUpdate = function(conditions, update, options) {\n  _checkContext(this, 'findOneAndUpdate');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.findOneAndUpdate() no longer accepts a callback');\n  }\n\n  if (arguments.length === 1) {\n    update = conditions;\n    conditions = null;\n    options = null;\n  }\n\n  let fields;\n  if (options) {\n    fields = options.fields || options.projection;\n  }\n\n  update = clone(update, {\n    depopulate: true,\n    _isNested: true\n  });\n\n  _decorateUpdateWithVersionKey(update, options, this.schema.options.versionKey);\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(fields);\n\n  return mq.findOneAndUpdate(conditions, update, options);\n};\n\n/**\n * Decorate the update with a version key, if necessary\n * @api private\n */\n\nfunction _decorateUpdateWithVersionKey(update, options, versionKey) {\n  if (!versionKey || !(options && options.upsert || false)) {\n    return;\n  }\n\n  const updatedPaths = modifiedPaths(update);\n  if (!updatedPaths[versionKey]) {\n    if (options.overwrite) {\n      update[versionKey] = 0;\n    } else {\n      if (!update.$setOnInsert) {\n        update.$setOnInsert = {};\n      }\n      update.$setOnInsert[versionKey] = 0;\n    }\n  }\n}\n\n/**\n * Issues a mongodb findOneAndUpdate command by a document's _id field.\n * `findByIdAndUpdate(id, ...)` is equivalent to `findOneAndUpdate({ _id: id }, ...)`.\n *\n * Finds a matching document, updates it according to the `update` arg,\n * passing any `options`, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndUpdate()`\n *\n * #### Example:\n *\n *     A.findByIdAndUpdate(id, update, options)  // returns Query\n *     A.findByIdAndUpdate(id, update)           // returns Query\n *     A.findByIdAndUpdate()                     // returns Query\n *\n * #### Note:\n *\n * All top level update keys which are not `atomic` operation names are treated as set operations:\n *\n * #### Example:\n *\n *     Model.findByIdAndUpdate(id, { name: 'jason bourne' }, options)\n *\n *     // is sent as\n *     Model.findByIdAndUpdate(id, { $set: { name: 'jason bourne' }}, options)\n *\n * This helps prevent accidentally overwriting your document with `{ name: 'jason bourne' }`.\n * To prevent this behaviour, see the `overwrite` option\n *\n * #### Note:\n *\n * `findOneAndX` and `findByIdAndX` functions support limited validation. You can\n * enable validation by setting the `runValidators` option.\n *\n * If you need full-fledged validation, use the traditional approach of first\n * retrieving the document.\n *\n *     const doc = await Model.findById(id)\n *     doc.name = 'jason bourne';\n *     await doc.save();\n *\n * @param {Object|Number|String} id value of `_id` to query by\n * @param {Object} [update]\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {String} [options.returnDocument='before'] Has two possible values, `'before'` and `'after'`. By default, it will return the document before the update was applied.\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and [the Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.overwrite=false] By default, if you don't include any [update operators](https://www.mongodb.com/docs/manual/reference/operator/update/) in `update`, Mongoose will wrap `update` in `$set` for you. This prevents you from accidentally overwriting the document. This option tells Mongoose to skip adding `$set`. An alternative to this would be using [Model.findOneAndReplace({ _id: id }, update, options)](https://mongoosejs.com/docs/api/model.html#Model.findOneAndReplace()).\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Boolean} [options.runValidators] if true, runs [update validators](https://mongoosejs.com/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema\n * @param {Boolean} [options.setDefaultsOnInsert=true] If `setDefaultsOnInsert` and `upsert` are true, mongoose will apply the [defaults](https://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Boolean} [options.new=false] if true, return the modified document rather than the original\n * @param {Object|String} [options.select] sets the document fields to return.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Model.findOneAndUpdate https://mongoosejs.com/docs/api/model.html#Model.findOneAndUpdate()\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @api public\n */\n\nModel.findByIdAndUpdate = function(id, update, options) {\n  _checkContext(this, 'findByIdAndUpdate');\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.findByIdAndUpdate() no longer accepts a callback');\n  }\n\n  // if a model is passed in instead of an id\n  if (id instanceof Document) {\n    id = id._id;\n  }\n\n  return this.findOneAndUpdate.call(this, { _id: id }, update, options);\n};\n\n/**\n * Issue a MongoDB `findOneAndDelete()` command.\n *\n * Finds a matching document, removes it, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndDelete()`\n *\n * This function differs slightly from `Model.findOneAndRemove()` in that\n * `findOneAndRemove()` becomes a [MongoDB `findAndModify()` command](https://www.mongodb.com/docs/manual/reference/method/db.collection.findAndModify/),\n * as opposed to a `findOneAndDelete()` command. For most mongoose use cases,\n * this distinction is purely pedantic. You should use `findOneAndDelete()`\n * unless you have a good reason not to.\n *\n * #### Example:\n *\n *     A.findOneAndDelete(conditions, options)  // return Query\n *     A.findOneAndDelete(conditions) // returns Query\n *     A.findOneAndDelete()           // returns Query\n *\n * `findOneAndX` and `findByIdAndX` functions support limited validation. You can\n * enable validation by setting the `runValidators` option.\n *\n * If you need full-fledged validation, use the traditional approach of first\n * retrieving the document.\n *\n *     const doc = await Model.findById(id)\n *     doc.name = 'jason bourne';\n *     await doc.save();\n *\n * @param {Object} conditions\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Object|String|String[]} [options.projection=null] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Object|String} [options.select] sets the document fields to return.\n * @param {Number} [options.maxTimeMS] puts a time limit on the query - requires mongodb >= 2.6.0\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @api public\n */\n\nModel.findOneAndDelete = function(conditions, options) {\n  _checkContext(this, 'findOneAndDelete');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.findOneAndDelete() no longer accepts a callback');\n  }\n\n  let fields;\n  if (options) {\n    fields = options.select;\n    options.select = undefined;\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(fields);\n\n  return mq.findOneAndDelete(conditions, options);\n};\n\n/**\n * Issue a MongoDB `findOneAndDelete()` command by a document's _id field.\n * In other words, `findByIdAndDelete(id)` is a shorthand for\n * `findOneAndDelete({ _id: id })`.\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndDelete()`\n *\n * @param {Object|Number|String} id value of `_id` to query by\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Model.findOneAndRemove https://mongoosejs.com/docs/api/model.html#Model.findOneAndRemove()\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n */\n\nModel.findByIdAndDelete = function(id, options) {\n  _checkContext(this, 'findByIdAndDelete');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.findByIdAndDelete() no longer accepts a callback');\n  }\n\n  return this.findOneAndDelete({ _id: id }, options);\n};\n\n/**\n * Issue a MongoDB `findOneAndReplace()` command.\n *\n * Finds a matching document, replaces it with the provided doc, and returns the document.\n *\n * This function triggers the following query middleware.\n *\n * - `findOneAndReplace()`\n *\n * #### Example:\n *\n *     A.findOneAndReplace(filter, replacement, options)  // return Query\n *     A.findOneAndReplace(filter, replacement) // returns Query\n *     A.findOneAndReplace()                    // returns Query\n *\n * @param {Object} filter Replace the first document that matches this filter\n * @param {Object} [replacement] Replace with this document\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {String} [options.returnDocument='before'] Has two possible values, `'before'` and `'after'`. By default, it will return the document before the update was applied.\n * @param {Object} [options.lean] if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See [`Query.lean()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.lean()) and [the Mongoose lean tutorial](https://mongoosejs.com/docs/tutorials/lean.html).\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Object|String|String[]} [options.projection=null] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Object|String} [options.select] sets the document fields to return.\n * @param {Number} [options.maxTimeMS] puts a time limit on the query - requires mongodb >= 2.6.0\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @api public\n */\n\nModel.findOneAndReplace = function(filter, replacement, options) {\n  _checkContext(this, 'findOneAndReplace');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.findOneAndReplace() no longer accepts a callback');\n  }\n\n  let fields;\n  if (options) {\n    fields = options.select;\n    options.select = undefined;\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(fields);\n\n  return mq.findOneAndReplace(filter, replacement, options);\n};\n\n/**\n * Issue a mongodb findOneAndRemove command.\n *\n * Finds a matching document, removes it, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndRemove()`\n *\n * #### Example:\n *\n *     A.findOneAndRemove(conditions, options)  // return Query\n *     A.findOneAndRemove(conditions) // returns Query\n *     A.findOneAndRemove()           // returns Query\n *\n * `findOneAndX` and `findByIdAndX` functions support limited validation. You can\n * enable validation by setting the `runValidators` option.\n *\n * If you need full-fledged validation, use the traditional approach of first\n * retrieving the document.\n *\n *     const doc = await Model.findById(id);\n *     doc.name = 'jason bourne';\n *     await doc.save();\n *\n * @param {Object} conditions\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Object|String|String[]} [options.projection=null] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Object|String} [options.select] sets the document fields to return.\n * @param {Number} [options.maxTimeMS] puts a time limit on the query - requires mongodb >= 2.6.0\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n * @api public\n */\n\nModel.findOneAndRemove = function(conditions, options) {\n  _checkContext(this, 'findOneAndRemove');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.findOneAndRemove() no longer accepts a callback');\n  }\n\n  let fields;\n  if (options) {\n    fields = options.select;\n    options.select = undefined;\n  }\n\n  const mq = new this.Query({}, {}, this, this.$__collection);\n  mq.select(fields);\n\n  return mq.findOneAndRemove(conditions, options);\n};\n\n/**\n * Issue a mongodb findOneAndRemove command by a document's _id field. `findByIdAndRemove(id, ...)` is equivalent to `findOneAndRemove({ _id: id }, ...)`.\n *\n * Finds a matching document, removes it, and returns the found document (if any).\n *\n * This function triggers the following middleware.\n *\n * - `findOneAndRemove()`\n *\n * #### Example:\n *\n *     A.findByIdAndRemove(id, options)  // return Query\n *     A.findByIdAndRemove(id) // returns Query\n *     A.findByIdAndRemove()           // returns Query\n *\n * @param {Object|Number|String} id value of `_id` to query by\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {ClientSession} [options.session=null] The session associated with this query. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {Object|String|String[]} [options.projection=null] optional fields to return, see [`Query.prototype.select()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.select())\n * @param {Object|String} [options.sort] if multiple docs are found by the conditions, sets the sort order to choose which doc to update.\n * @param {Boolean} [options.rawResult] if true, returns the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/ModifyResult.html)\n * @param {Object|String} [options.select] sets the document fields to return.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Model.findOneAndRemove https://mongoosejs.com/docs/api/model.html#Model.findOneAndRemove()\n * @see mongodb https://www.mongodb.com/docs/manual/reference/command/findAndModify/\n */\n\nModel.findByIdAndRemove = function(id, options) {\n  _checkContext(this, 'findByIdAndRemove');\n\n  if (typeof arguments[0] === 'function' || typeof arguments[1] === 'function' || typeof arguments[2] === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.findByIdAndRemove() no longer accepts a callback');\n  }\n\n  return this.findOneAndRemove({ _id: id }, options);\n};\n\n/**\n * Shortcut for saving one or more documents to the database.\n * `MyModel.create(docs)` does `new MyModel(doc).save()` for every doc in\n * docs.\n *\n * This function triggers the following middleware.\n *\n * - `save()`\n *\n * #### Example:\n *\n *     // Insert one new `Character` document\n *     await Character.create({ name: 'Jean-Luc Picard' });\n *\n *     // Insert multiple new `Character` documents\n *     await Character.create([{ name: 'Will Riker' }, { name: 'Geordi LaForge' }]);\n *\n *     // Create a new character within a transaction. Note that you **must**\n *     // pass an array as the first parameter to `create()` if you want to\n *     // specify options.\n *     await Character.create([{ name: 'Jean-Luc Picard' }], { session });\n *\n * @param {Array|Object} docs Documents to insert, as a spread or array\n * @param {Object} [options] Options passed down to `save()`. To specify `options`, `docs` **must** be an array, not a spread. See [Model.save](https://mongoosejs.com/docs/api/model.html#Model.prototype.save()) for available options.\n * @param {Boolean} [options.ordered] saves the docs in series rather than parallel.\n * @param {Boolean} [options.aggregateErrors] Aggregate Errors instead of throwing the first one that occurs. Default: false\n * @return {Promise}\n * @api public\n */\n\nModel.create = async function create(doc, options) {\n  if (typeof options === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.create() no longer accepts a callback');\n  }\n\n  _checkContext(this, 'create');\n\n  let args;\n  const discriminatorKey = this.schema.options.discriminatorKey;\n\n  if (Array.isArray(doc)) {\n    args = doc;\n    options = options != null && typeof options === 'object' ? options : {};\n  } else {\n    const last = arguments[arguments.length - 1];\n    options = {};\n    const hasCallback = typeof last === 'function' ||\n      typeof options === 'function' ||\n      typeof arguments[2] === 'function';\n    if (hasCallback) {\n      throw new MongooseError('Model.create() no longer accepts a callback');\n    } else {\n      args = [...arguments];\n      // For backwards compatibility with 6.x, because of gh-5061 Mongoose 6.x and\n      // older would treat a falsy last arg as a callback. We don't want to throw\n      // an error here, because it would look strange if `Test.create({}, void 0)`\n      // threw a callback error. But we also don't want to create an unnecessary document.\n      if (args.length > 1 && !last) {\n        args.pop();\n      }\n    }\n\n    if (args.length === 2 &&\n        args[0] != null &&\n        args[1] != null &&\n        args[0].session == null &&\n        last &&\n        getConstructorName(last.session) === 'ClientSession' &&\n        !this.schema.path('session')) {\n      // Probably means the user is running into the common mistake of trying\n      // to use a spread to specify options, see gh-7535\n      utils.warn('WARNING: to pass a `session` to `Model.create()` in ' +\n        'Mongoose, you **must** pass an array as the first argument. See: ' +\n        'https://mongoosejs.com/docs/api/model.html#Model.create()');\n    }\n  }\n\n  if (args.length === 0) {\n    return Array.isArray(doc) ? [] : null;\n  }\n  let res = [];\n  const immediateError = typeof options.aggregateErrors === 'boolean' ? !options.aggregateErrors : true;\n\n  delete options.aggregateErrors; // dont pass on the option to \"$save\"\n\n  if (options.ordered) {\n    for (let i = 0; i < args.length; i++) {\n      try {\n        const doc = args[i];\n        const Model = this.discriminators && doc[discriminatorKey] != null ?\n          this.discriminators[doc[discriminatorKey]] || getDiscriminatorByValue(this.discriminators, doc[discriminatorKey]) :\n          this;\n        if (Model == null) {\n          throw new MongooseError(`Discriminator \"${doc[discriminatorKey]}\" not ` +\n          `found for model \"${this.modelName}\"`);\n        }\n        let toSave = doc;\n        if (!(toSave instanceof Model)) {\n          toSave = new Model(toSave);\n        }\n\n        await toSave.$save(options);\n        res.push(toSave);\n      } catch (err) {\n        if (!immediateError) {\n          res.push(err);\n        } else {\n          throw err;\n        }\n      }\n    }\n    return res;\n  } else {\n    // \".bind(Promise)\" is required, otherwise results in \"TypeError: Promise.allSettled called on non-object\"\n    const promiseType = !immediateError ? Promise.allSettled.bind(Promise) : Promise.all.bind(Promise);\n    let p = promiseType(args.map(async doc => {\n      const Model = this.discriminators && doc[discriminatorKey] != null ?\n        this.discriminators[doc[discriminatorKey]] || getDiscriminatorByValue(this.discriminators, doc[discriminatorKey]) :\n        this;\n      if (Model == null) {\n        throw new MongooseError(`Discriminator \"${doc[discriminatorKey]}\" not ` +\n          `found for model \"${this.modelName}\"`);\n      }\n      let toSave = doc;\n\n      if (!(toSave instanceof Model)) {\n        toSave = new Model(toSave);\n      }\n\n      await toSave.$save(options);\n\n      return toSave;\n    }));\n\n    // chain the mapper, only if \"allSettled\" is used\n    if (!immediateError) {\n      p = p.then(presult => presult.map(v => v.status === 'fulfilled' ? v.value : v.reason));\n    }\n\n    res = await p;\n  }\n\n\n  if (!Array.isArray(doc) && args.length === 1) {\n    return res[0];\n  }\n\n  return res;\n};\n\n/**\n * _Requires a replica set running MongoDB >= 3.6.0._ Watches the\n * underlying collection for changes using\n * [MongoDB change streams](https://www.mongodb.com/docs/manual/changeStreams/).\n *\n * This function does **not** trigger any middleware. In particular, it\n * does **not** trigger aggregate middleware.\n *\n * The ChangeStream object is an event emitter that emits the following events:\n *\n * - 'change': A change occurred, see below example\n * - 'error': An unrecoverable error occurred. In particular, change streams currently error out if they lose connection to the replica set primary. Follow [this GitHub issue](https://github.com/Automattic/mongoose/issues/6799) for updates.\n * - 'end': Emitted if the underlying stream is closed\n * - 'close': Emitted if the underlying stream is closed\n *\n * #### Example:\n *\n *     const doc = await Person.create({ name: 'Ned Stark' });\n *     const changeStream = Person.watch().on('change', change => console.log(change));\n *     // Will print from the above `console.log()`:\n *     // { _id: { _data: ... },\n *     //   operationType: 'delete',\n *     //   ns: { db: 'mydb', coll: 'Person' },\n *     //   documentKey: { _id: 5a51b125c5500f5aa094c7bd } }\n *     await doc.remove();\n *\n * @param {Array} [pipeline]\n * @param {Object} [options] see the [mongodb driver options](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#watch)\n * @param {Boolean} [options.hydrate=false] if true and `fullDocument: 'updateLookup'` is set, Mongoose will automatically hydrate `fullDocument` into a fully fledged Mongoose document\n * @return {ChangeStream} mongoose-specific change stream wrapper, inherits from EventEmitter\n * @api public\n */\n\nModel.watch = function(pipeline, options) {\n  _checkContext(this, 'watch');\n\n  const changeStreamThunk = cb => {\n    pipeline = pipeline || [];\n    prepareDiscriminatorPipeline(pipeline, this.schema, 'fullDocument');\n    if (this.$__collection.buffer) {\n      this.$__collection.addQueue(() => {\n        if (this.closed) {\n          return;\n        }\n        const driverChangeStream = this.$__collection.watch(pipeline, options);\n        cb(null, driverChangeStream);\n      });\n    } else {\n      const driverChangeStream = this.$__collection.watch(pipeline, options);\n      cb(null, driverChangeStream);\n    }\n  };\n\n  options = options || {};\n  options.model = this;\n\n  return new ChangeStream(changeStreamThunk, pipeline, options);\n};\n\n/**\n * _Requires MongoDB >= 3.6.0._ Starts a [MongoDB session](https://www.mongodb.com/docs/manual/release-notes/3.6/#client-sessions)\n * for benefits like causal consistency, [retryable writes](https://www.mongodb.com/docs/manual/core/retryable-writes/),\n * and [transactions](https://thecodebarbarian.com/a-node-js-perspective-on-mongodb-4-transactions.html).\n *\n * Calling `MyModel.startSession()` is equivalent to calling `MyModel.db.startSession()`.\n *\n * This function does not trigger any middleware.\n *\n * #### Example:\n *\n *     const session = await Person.startSession();\n *     let doc = await Person.findOne({ name: 'Ned Stark' }, null, { session });\n *     await doc.remove();\n *     // `doc` will always be null, even if reading from a replica set\n *     // secondary. Without causal consistency, it is possible to\n *     // get a doc back from the below query if the query reads from a\n *     // secondary that is experiencing replication lag.\n *     doc = await Person.findOne({ name: 'Ned Stark' }, null, { session, readPreference: 'secondary' });\n *\n * @param {Object} [options] see the [mongodb driver options](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html#startSession)\n * @param {Boolean} [options.causalConsistency=true] set to false to disable causal consistency\n * @return {Promise<ClientSession>} promise that resolves to a MongoDB driver `ClientSession`\n * @api public\n */\n\nModel.startSession = function() {\n  _checkContext(this, 'startSession');\n\n  return this.db.startSession.apply(this.db, arguments);\n};\n\n/**\n * Shortcut for validating an array of documents and inserting them into\n * MongoDB if they're all valid. This function is faster than `.create()`\n * because it only sends one operation to the server, rather than one for each\n * document.\n *\n * Mongoose always validates each document **before** sending `insertMany`\n * to MongoDB. So if one document has a validation error, no documents will\n * be saved, unless you set\n * [the `ordered` option to false](https://www.mongodb.com/docs/manual/reference/method/db.collection.insertMany/#error-handling).\n *\n * This function does **not** trigger save middleware.\n *\n * This function triggers the following middleware.\n *\n * - `insertMany()`\n *\n * #### Example:\n *\n *     await Movies.insertMany([\n *       { name: 'Star Wars' },\n *       { name: 'The Empire Strikes Back' }\n *     ]);\n *\n * @param {Array|Object|*} doc(s)\n * @param {Object} [options] see the [mongodb driver options](https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html#insertMany)\n * @param {Boolean} [options.ordered=true] if true, will fail fast on the first error encountered. If false, will insert all the documents it can and report errors later. An `insertMany()` with `ordered = false` is called an \"unordered\" `insertMany()`.\n * @param {Boolean} [options.rawResult=false] if false, the returned promise resolves to the documents that passed mongoose document validation. If `true`, will return the [raw result from the MongoDB driver](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/InsertManyResult.html) with a `mongoose` property that contains `validationErrors` and `results` if this is an unordered `insertMany`.\n * @param {Boolean} [options.lean=false] if `true`, skips hydrating and validating the documents. This option is useful if you need the extra performance, but Mongoose won't validate the documents before inserting.\n * @param {Number} [options.limit=null] this limits the number of documents being processed (validation/casting) by mongoose in parallel, this does **NOT** send the documents in batches to MongoDB. Use this option if you're processing a large number of documents and your app is running out of memory.\n * @param {String|Object|Array} [options.populate=null] populates the result documents. This option is a no-op if `rawResult` is set.\n * @param {Boolean} [options.throwOnValidationError=false] If true and `ordered: false`, throw an error if one of the operations failed validation, but all valid operations completed successfully.\n * @return {Promise} resolving to the raw result from the MongoDB driver if `options.rawResult` was `true`, or the documents that passed validation, otherwise\n * @api public\n */\n\nModel.insertMany = async function insertMany(arr, options) {\n  _checkContext(this, 'insertMany');\n  if (typeof options === 'function' ||\n    typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.insertMany() no longer accepts a callback');\n  }\n\n  return new Promise((resolve, reject) => {\n    this.$__insertMany(arr, options, (err, res) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n};\n\n/**\n * ignore\n *\n * @param {Array} arr\n * @param {Object} options\n * @param {Function} callback\n * @api private\n * @memberOf Model\n * @method $__insertMany\n * @static\n */\n\nModel.$__insertMany = function(arr, options, callback) {\n  const _this = this;\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  callback = callback || utils.noop;\n  options = options || {};\n  const limit = options.limit || 1000;\n  const rawResult = !!options.rawResult;\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const throwOnValidationError = typeof options.throwOnValidationError === 'boolean' ? options.throwOnValidationError : false;\n  const lean = !!options.lean;\n\n  if (!Array.isArray(arr)) {\n    arr = [arr];\n  }\n\n  const validationErrors = [];\n  const validationErrorsToOriginalOrder = new Map();\n  const results = ordered ? null : new Array(arr.length);\n  const toExecute = arr.map((doc, index) =>\n    callback => {\n      if (!(doc instanceof _this)) {\n        try {\n          doc = new _this(doc);\n        } catch (err) {\n          return callback(err);\n        }\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      // If option `lean` is set to true bypass validation\n      if (lean) {\n        // we have to execute callback at the nextTick to be compatible\n        // with parallelLimit, as `results` variable has TDZ issue if we\n        // execute the callback synchronously\n        return immediate(() => callback(null, doc));\n      }\n      doc.$validate().then(\n        () => { callback(null, doc); },\n        error => {\n          if (ordered === false) {\n            validationErrors.push(error);\n            validationErrorsToOriginalOrder.set(error, index);\n            results[index] = error;\n            return callback(null, null);\n          }\n          callback(error);\n        }\n      );\n    });\n\n  parallelLimit(toExecute, limit, function(error, docs) {\n    if (error) {\n      callback(error, null);\n      return;\n    }\n\n    const originalDocIndex = new Map();\n    const validDocIndexToOriginalIndex = new Map();\n    for (let i = 0; i < docs.length; ++i) {\n      originalDocIndex.set(docs[i], i);\n    }\n\n    // We filter all failed pre-validations by removing nulls\n    const docAttributes = docs.filter(function(doc) {\n      return doc != null;\n    });\n    for (let i = 0; i < docAttributes.length; ++i) {\n      validDocIndexToOriginalIndex.set(i, originalDocIndex.get(docAttributes[i]));\n    }\n\n    // Make sure validation errors are in the same order as the\n    // original documents, so if both doc1 and doc2 both fail validation,\n    // `Model.insertMany([doc1, doc2])` will always have doc1's validation\n    // error before doc2's. Re: gh-12791.\n    if (validationErrors.length > 0) {\n      validationErrors.sort((err1, err2) => {\n        return validationErrorsToOriginalOrder.get(err1) - validationErrorsToOriginalOrder.get(err2);\n      });\n    }\n\n    // Quickly escape while there aren't any valid docAttributes\n    if (docAttributes.length === 0) {\n      if (rawResult) {\n        const res = {\n          acknowledged: true,\n          insertedCount: 0,\n          insertedIds: {},\n          mongoose: {\n            validationErrors: validationErrors\n          }\n        };\n        return callback(null, res);\n      }\n      callback(null, []);\n      return;\n    }\n    const docObjects = docAttributes.map(function(doc) {\n      if (doc.$__schema.options.versionKey) {\n        doc[doc.$__schema.options.versionKey] = 0;\n      }\n      const shouldSetTimestamps = (!options || options.timestamps !== false) && doc.initializeTimestamps && (!doc.$__ || doc.$__.timestamps !== false);\n      if (shouldSetTimestamps) {\n        return doc.initializeTimestamps().toObject(internalToObjectOptions);\n      }\n      return doc.toObject(internalToObjectOptions);\n    });\n\n    _this.$__collection.insertMany(docObjects, options).then(\n      res => {\n        for (const attribute of docAttributes) {\n          attribute.$__reset();\n          _setIsNew(attribute, false);\n        }\n\n        if (ordered === false && throwOnValidationError && validationErrors.length > 0) {\n          for (let i = 0; i < results.length; ++i) {\n            if (results[i] === void 0) {\n              results[i] = docs[i];\n            }\n          }\n          return callback(new MongooseBulkWriteError(\n            validationErrors,\n            results,\n            res,\n            'insertMany'\n          ));\n        }\n\n        if (rawResult) {\n          if (ordered === false) {\n            for (let i = 0; i < results.length; ++i) {\n              if (results[i] === void 0) {\n                results[i] = docs[i];\n              }\n            }\n\n            // Decorate with mongoose validation errors in case of unordered,\n            // because then still do `insertMany()`\n            res.mongoose = {\n              validationErrors: validationErrors,\n              results: results\n            };\n          }\n          return callback(null, res);\n        }\n\n        if (options.populate != null) {\n          return _this.populate(docAttributes, options.populate).then(\n            docs => { callback(null, docs); },\n            err => {\n              if (err != null) {\n                err.insertedDocs = docAttributes;\n              }\n              throw err;\n            }\n          );\n        }\n\n        callback(null, docAttributes);\n      },\n      error => {\n        // `writeErrors` is a property reported by the MongoDB driver,\n        // just not if there's only 1 error.\n        if (error.writeErrors == null &&\n            (error.result && error.result.result && error.result.result.writeErrors) != null) {\n          error.writeErrors = error.result.result.writeErrors;\n        }\n\n        // `insertedDocs` is a Mongoose-specific property\n        const hasWriteErrors = error && error.writeErrors;\n        const erroredIndexes = new Set((error && error.writeErrors || []).map(err => err.index));\n\n        if (error.writeErrors != null) {\n          for (let i = 0; i < error.writeErrors.length; ++i) {\n            const originalIndex = validDocIndexToOriginalIndex.get(error.writeErrors[i].index);\n            error.writeErrors[i] = {\n              ...error.writeErrors[i],\n              index: originalIndex\n            };\n            if (!ordered) {\n              results[originalIndex] = error.writeErrors[i];\n            }\n          }\n        }\n\n        if (!ordered) {\n          for (let i = 0; i < results.length; ++i) {\n            if (results[i] === void 0) {\n              results[i] = docs[i];\n            }\n          }\n\n          error.results = results;\n        }\n\n        let firstErroredIndex = -1;\n        error.insertedDocs = docAttributes.\n          filter((doc, i) => {\n            const isErrored = !hasWriteErrors || erroredIndexes.has(i);\n\n            if (ordered) {\n              if (firstErroredIndex > -1) {\n                return i < firstErroredIndex;\n              }\n\n              if (isErrored) {\n                firstErroredIndex = i;\n              }\n            }\n\n            return !isErrored;\n          }).\n          map(function setIsNewForInsertedDoc(doc) {\n            doc.$__reset();\n            _setIsNew(doc, false);\n            return doc;\n          });\n\n        if (rawResult && ordered === false) {\n          error.mongoose = {\n            validationErrors: validationErrors,\n            results: results\n          };\n        }\n\n        callback(error, null);\n      }\n    );\n  });\n};\n\n/*!\n * ignore\n */\n\nfunction _setIsNew(doc, val) {\n  doc.$isNew = val;\n  doc.$emit('isNew', val);\n  doc.constructor.emit('isNew', val);\n\n  const subdocs = doc.$getAllSubdocs();\n  for (const subdoc of subdocs) {\n    subdoc.$isNew = val;\n    subdoc.$emit('isNew', val);\n  }\n}\n\n/**\n * Sends multiple `insertOne`, `updateOne`, `updateMany`, `replaceOne`,\n * `deleteOne`, and/or `deleteMany` operations to the MongoDB server in one\n * command. This is faster than sending multiple independent operations (e.g.\n * if you use `create()`) because with `bulkWrite()` there is only one round\n * trip to MongoDB.\n *\n * Mongoose will perform casting on all operations you provide.\n *\n * This function does **not** trigger any middleware, neither `save()`, nor `update()`.\n * If you need to trigger\n * `save()` middleware for every document use [`create()`](https://mongoosejs.com/docs/api/model.html#Model.create()) instead.\n *\n * #### Example:\n *\n *     Character.bulkWrite([\n *       {\n *         insertOne: {\n *           document: {\n *             name: 'Eddard Stark',\n *             title: 'Warden of the North'\n *           }\n *         }\n *       },\n *       {\n *         updateOne: {\n *           filter: { name: 'Eddard Stark' },\n *           // If you were using the MongoDB driver directly, you'd need to do\n *           // `update: { $set: { title: ... } }` but mongoose adds $set for\n *           // you.\n *           update: { title: 'Hand of the King' }\n *         }\n *       },\n *       {\n *         deleteOne: {\n *           filter: { name: 'Eddard Stark' }\n *         }\n *       }\n *     ]).then(res => {\n *      // Prints \"1 1 1\"\n *      console.log(res.insertedCount, res.modifiedCount, res.deletedCount);\n *     });\n *\n * The [supported operations](https://www.mongodb.com/docs/manual/reference/method/db.collection.bulkWrite/#db.collection.bulkWrite) are:\n *\n * - `insertOne`\n * - `updateOne`\n * - `updateMany`\n * - `deleteOne`\n * - `deleteMany`\n * - `replaceOne`\n *\n * @param {Array} ops\n * @param {Object} [ops.insertOne.document] The document to insert\n * @param {Object} [ops.updateOne.filter] Update the first document that matches this filter\n * @param {Object} [ops.updateOne.update] An object containing [update operators](https://www.mongodb.com/docs/manual/reference/operator/update/)\n * @param {Boolean} [ops.updateOne.upsert=false] If true, insert a doc if none match\n * @param {Boolean} [ops.updateOne.timestamps=true] If false, do not apply [timestamps](https://mongoosejs.com/docs/guide.html#timestamps) to the operation\n * @param {Object} [ops.updateOne.collation] The [MongoDB collation](https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations) to use\n * @param {Array} [ops.updateOne.arrayFilters] The [array filters](https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html) used in `update`\n * @param {Object} [ops.updateMany.filter] Update all the documents that match this filter\n * @param {Object} [ops.updateMany.update] An object containing [update operators](https://www.mongodb.com/docs/manual/reference/operator/update/)\n * @param {Boolean} [ops.updateMany.upsert=false] If true, insert a doc if no documents match `filter`\n * @param {Boolean} [ops.updateMany.timestamps=true] If false, do not apply [timestamps](https://mongoosejs.com/docs/guide.html#timestamps) to the operation\n * @param {Object} [ops.updateMany.collation] The [MongoDB collation](https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations) to use\n * @param {Array} [ops.updateMany.arrayFilters] The [array filters](https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html) used in `update`\n * @param {Object} [ops.deleteOne.filter] Delete the first document that matches this filter\n * @param {Object} [ops.deleteMany.filter] Delete all documents that match this filter\n * @param {Object} [ops.replaceOne.filter] Replace the first document that matches this filter\n * @param {Object} [ops.replaceOne.replacement] The replacement document\n * @param {Boolean} [ops.replaceOne.upsert=false] If true, insert a doc if no documents match `filter`\n * @param {Object} [options]\n * @param {Boolean} [options.ordered=true] If true, execute writes in order and stop at the first error. If false, execute writes in parallel and continue until all writes have either succeeded or errored.\n * @param {ClientSession} [options.session=null] The session associated with this bulk write. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {String|number} [options.w=1] The [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/). See [`Query#w()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.w()) for more information.\n * @param {number} [options.wtimeout=null] The [write concern timeout](https://www.mongodb.com/docs/manual/reference/write-concern/#wtimeout).\n * @param {Boolean} [options.j=true] If false, disable [journal acknowledgement](https://www.mongodb.com/docs/manual/reference/write-concern/#j-option)\n * @param {Boolean} [options.skipValidation=false] Set to true to skip Mongoose schema validation on bulk write operations. Mongoose currently runs validation on `insertOne` and `replaceOne` operations by default.\n * @param {Boolean} [options.bypassDocumentValidation=false] If true, disable [MongoDB server-side schema validation](https://www.mongodb.com/docs/manual/core/schema-validation/) for all writes in this bulk.\n * @param {Boolean} [options.throwOnValidationError=false] If true and `ordered: false`, throw an error if one of the operations failed validation, but all valid operations completed successfully.\n * @param {Boolean} [options.strict=null] Overwrites the [`strict` option](https://mongoosejs.com/docs/guide.html#strict) on schema. If false, allows filtering and writing fields not defined in the schema for all writes in this bulk.\n * @return {Promise} resolves to a [`BulkWriteOpResult`](https://mongodb.github.io/node-mongodb-native/4.9/classes/BulkWriteResult.html) if the operation succeeds\n * @api public\n */\n\nModel.bulkWrite = async function bulkWrite(ops, options) {\n  _checkContext(this, 'bulkWrite');\n\n  if (typeof options === 'function' ||\n      typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.bulkWrite() no longer accepts a callback');\n  }\n  options = options || {};\n  const ordered = options.ordered == null ? true : options.ordered;\n\n  const validations = ops.map(op => castBulkWrite(this, op, options));\n\n  return new Promise((resolve, reject) => {\n    if (ordered) {\n      each(validations, (fn, cb) => fn(cb), error => {\n        if (error) {\n          return reject(error);\n        }\n\n        if (ops.length === 0) {\n          return resolve(getDefaultBulkwriteResult());\n        }\n\n        try {\n          this.$__collection.bulkWrite(ops, options, (error, res) => {\n            if (error) {\n              return reject(error);\n            }\n\n            resolve(res);\n          });\n        } catch (err) {\n          return reject(err);\n        }\n      });\n\n      return;\n    }\n\n    let remaining = validations.length;\n    let validOps = [];\n    let validationErrors = [];\n    const results = [];\n    if (remaining === 0) {\n      completeUnorderedValidation.call(this);\n    } else {\n      for (let i = 0; i < validations.length; ++i) {\n        validations[i]((err) => {\n          if (err == null) {\n            validOps.push(i);\n          } else {\n            validationErrors.push({ index: i, error: err });\n            results[i] = err;\n          }\n          if (--remaining <= 0) {\n            completeUnorderedValidation.call(this);\n          }\n        });\n      }\n    }\n\n    validationErrors = validationErrors.\n      sort((v1, v2) => v1.index - v2.index).\n      map(v => v.error);\n\n    function completeUnorderedValidation() {\n      const validOpIndexes = validOps;\n      validOps = validOps.sort().map(index => ops[index]);\n\n      this.$__collection.bulkWrite(validOps, options, (error, res) => {\n        if (error) {\n          if (validationErrors.length > 0) {\n            error.mongoose = error.mongoose || {};\n            error.mongoose.validationErrors = validationErrors;\n          }\n\n          return reject(error);\n        }\n\n        for (let i = 0; i < validOpIndexes.length; ++i) {\n          results[validOpIndexes[i]] = null;\n        }\n        if (validationErrors.length > 0) {\n          if (options.throwOnValidationError) {\n            return reject(new MongooseBulkWriteError(\n              validationErrors,\n              results,\n              res,\n              'bulkWrite'\n            ));\n          } else {\n            res.mongoose = res.mongoose || {};\n            res.mongoose.validationErrors = validationErrors;\n            res.mongoose.results = results;\n          }\n        }\n\n        resolve(res);\n      });\n    }\n  });\n};\n\n/**\n *  takes an array of documents, gets the changes and inserts/updates documents in the database\n *  according to whether or not the document is new, or whether it has changes or not.\n *\n * `bulkSave` uses `bulkWrite` under the hood, so it's mostly useful when dealing with many documents (10K+)\n *\n * @param {Array<Document>} documents\n * @param {Object} [options] options passed to the underlying `bulkWrite()`\n * @param {Boolean} [options.timestamps] defaults to `null`, when set to false, mongoose will not add/update timestamps to the documents.\n * @param {ClientSession} [options.session=null] The session associated with this bulk write. See [transactions docs](https://mongoosejs.com/docs/transactions.html).\n * @param {String|number} [options.w=1] The [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/). See [`Query#w()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.w()) for more information.\n * @param {number} [options.wtimeout=null] The [write concern timeout](https://www.mongodb.com/docs/manual/reference/write-concern/#wtimeout).\n * @param {Boolean} [options.j=true] If false, disable [journal acknowledgement](https://www.mongodb.com/docs/manual/reference/write-concern/#j-option)\n *\n */\nModel.bulkSave = async function(documents, options) {\n  options = options || {};\n\n  const writeOperations = this.buildBulkWriteOperations(documents, { skipValidation: true, timestamps: options.timestamps });\n\n  if (options.timestamps != null) {\n    for (const document of documents) {\n      document.$__.saveOptions = document.$__.saveOptions || {};\n      document.$__.saveOptions.timestamps = options.timestamps;\n    }\n  } else {\n    for (const document of documents) {\n      if (document.$__.timestamps != null) {\n        document.$__.saveOptions = document.$__.saveOptions || {};\n        document.$__.saveOptions.timestamps = document.$__.timestamps;\n      }\n    }\n  }\n\n  await Promise.all(documents.map(buildPreSavePromise));\n\n  const { bulkWriteResult, bulkWriteError } = await this.bulkWrite(writeOperations, options).then(\n    (res) => ({ bulkWriteResult: res, bulkWriteError: null }),\n    (err) => ({ bulkWriteResult: null, bulkWriteError: err })\n  );\n\n  await Promise.all(\n    documents.map(async(document) => {\n      const documentError = bulkWriteError && bulkWriteError.writeErrors.find(writeError => {\n        const writeErrorDocumentId = writeError.err.op._id || writeError.err.op.q._id;\n        return writeErrorDocumentId.toString() === document._id.toString();\n      });\n\n      if (documentError == null) {\n        await handleSuccessfulWrite(document);\n      }\n    })\n  );\n\n  if (bulkWriteError && bulkWriteError.writeErrors && bulkWriteError.writeErrors.length) {\n    throw bulkWriteError;\n  }\n\n  return bulkWriteResult;\n};\n\nfunction buildPreSavePromise(document) {\n  return new Promise((resolve, reject) => {\n    document.schema.s.hooks.execPre('save', document, (err) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nfunction handleSuccessfulWrite(document) {\n  return new Promise((resolve, reject) => {\n    if (document.$isNew) {\n      _setIsNew(document, false);\n    }\n\n    document.$__reset();\n    document.schema.s.hooks.execPost('save', document, [document], {}, (err) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve();\n    });\n\n  });\n}\n\n/**\n * Apply defaults to the given document or POJO.\n *\n * @param {Object|Document} obj object or document to apply defaults on\n * @returns {Object|Document}\n * @api public\n */\n\nModel.applyDefaults = function applyDefaults(doc) {\n  if (doc.$__ != null) {\n    applyDefaultsHelper(doc, doc.$__.fields, doc.$__.exclude);\n\n    for (const subdoc of doc.$getAllSubdocs()) {\n      applyDefaults(subdoc, subdoc.$__.fields, subdoc.$__.exclude);\n    }\n\n    return doc;\n  }\n\n  applyDefaultsToPOJO(doc, this.schema);\n\n  return doc;\n};\n\n/**\n * Cast the given POJO to the model's schema\n *\n * #### Example:\n *\n *     const Test = mongoose.model('Test', Schema({ num: Number }));\n *\n *     const obj = Test.castObject({ num: '42' });\n *     obj.num; // 42 as a number\n *\n *     Test.castObject({ num: 'not a number' }); // Throws a ValidationError\n *\n * @param {Object} obj object or document to cast\n * @param {Object} options options passed to castObject\n * @param {Boolean} options.ignoreCastErrors If set to `true` will not throw a ValidationError and only return values that were successfully cast.\n * @returns {Object} POJO casted to the model's schema\n * @throws {ValidationError} if casting failed for at least one path\n * @api public\n */\n\nModel.castObject = function castObject(obj, options) {\n  options = options || {};\n  const ret = {};\n\n  const schema = this.schema;\n  const paths = Object.keys(schema.paths);\n\n  for (const path of paths) {\n    const schemaType = schema.path(path);\n    if (!schemaType || !schemaType.$isMongooseArray) {\n      continue;\n    }\n\n    const val = get(obj, path);\n    pushNestedArrayPaths(paths, val, path);\n  }\n\n  let error = null;\n\n  for (const path of paths) {\n    const schemaType = schema.path(path);\n    if (schemaType == null) {\n      continue;\n    }\n\n    let val = get(obj, path, void 0);\n\n    if (val == null) {\n      continue;\n    }\n\n    const pieces = path.indexOf('.') === -1 ? [path] : path.split('.');\n    let cur = ret;\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      if (cur[pieces[i]] == null) {\n        cur[pieces[i]] = isNaN(pieces[i + 1]) ? {} : [];\n      }\n      cur = cur[pieces[i]];\n    }\n\n    if (schemaType.$isMongooseDocumentArray) {\n      continue;\n    }\n    if (schemaType.$isSingleNested || schemaType.$isMongooseDocumentArrayElement) {\n      try {\n        val = Model.castObject.call(schemaType.caster, val);\n      } catch (err) {\n        if (!options.ignoreCastErrors) {\n          error = error || new ValidationError();\n          error.addError(path, err);\n        }\n        continue;\n      }\n\n      cur[pieces[pieces.length - 1]] = val;\n      continue;\n    }\n\n    try {\n      val = schemaType.cast(val);\n      cur[pieces[pieces.length - 1]] = val;\n    } catch (err) {\n      if (!options.ignoreCastErrors) {\n        error = error || new ValidationError();\n        error.addError(path, err);\n      }\n\n      continue;\n    }\n  }\n\n  if (error != null) {\n    throw error;\n  }\n\n  return ret;\n};\n\n/**\n * Build bulk write operations for `bulkSave()`.\n *\n * @param {Array<Document>} documents The array of documents to build write operations of\n * @param {Object} options\n * @param {Boolean} options.skipValidation defaults to `false`, when set to true, building the write operations will bypass validating the documents.\n * @param {Boolean} options.timestamps defaults to `null`, when set to false, mongoose will not add/update timestamps to the documents.\n * @return {Array<Promise>} Returns a array of all Promises the function executes to be awaited.\n * @api private\n */\n\nModel.buildBulkWriteOperations = function buildBulkWriteOperations(documents, options) {\n  if (!Array.isArray(documents)) {\n    throw new Error(`bulkSave expects an array of documents to be passed, received \\`${documents}\\` instead`);\n  }\n\n  setDefaultOptions();\n\n  const writeOperations = documents.reduce((accumulator, document, i) => {\n    if (!options.skipValidation) {\n      if (!(document instanceof Document)) {\n        throw new Error(`documents.${i} was not a mongoose document, documents must be an array of mongoose documents (instanceof mongoose.Document).`);\n      }\n      const validationError = document.validateSync();\n      if (validationError) {\n        throw validationError;\n      }\n    }\n\n    const isANewDocument = document.isNew;\n    if (isANewDocument) {\n      const writeOperation = { insertOne: { document } };\n      utils.injectTimestampsOption(writeOperation.insertOne, options.timestamps);\n      accumulator.push(writeOperation);\n\n      return accumulator;\n    }\n\n    const delta = document.$__delta();\n    const isDocumentWithChanges = delta != null && !utils.isEmptyObject(delta[0]);\n\n    if (isDocumentWithChanges) {\n      const where = document.$__where(delta[0]);\n      const changes = delta[1];\n\n      _applyCustomWhere(document, where);\n\n      document.$__version(where, delta);\n      const writeOperation = { updateOne: { filter: where, update: changes } };\n      utils.injectTimestampsOption(writeOperation.updateOne, options.timestamps);\n      accumulator.push(writeOperation);\n\n      return accumulator;\n    }\n\n    return accumulator;\n  }, []);\n\n  return writeOperations;\n\n\n  function setDefaultOptions() {\n    options = options || {};\n    if (options.skipValidation == null) {\n      options.skipValidation = false;\n    }\n  }\n};\n\n\n/**\n * Shortcut for creating a new Document from existing raw data, pre-saved in the DB.\n * The document returned has no paths marked as modified initially.\n *\n * #### Example:\n *\n *     // hydrate previous data into a Mongoose document\n *     const mongooseCandy = Candy.hydrate({ _id: '54108337212ffb6d459f854c', type: 'jelly bean' });\n *\n * @param {Object} obj\n * @param {Object|String|String[]} [projection] optional projection containing which fields should be selected for this document\n * @param {Object} [options] optional options\n * @param {Boolean} [options.setters=false] if true, apply schema setters when hydrating\n * @return {Document} document instance\n * @api public\n */\n\nModel.hydrate = function(obj, projection, options) {\n  _checkContext(this, 'hydrate');\n\n  if (projection != null) {\n    if (obj != null && obj.$__ != null) {\n      obj = obj.toObject(internalToObjectOptions);\n    }\n    obj = applyProjection(obj, projection);\n  }\n\n  const document = require('./queryhelpers').createModel(this, obj, projection);\n  document.$init(obj, options);\n  return document;\n};\n\n/**\n * Same as `updateOne()`, except MongoDB will update _all_ documents that match\n * `filter` (as opposed to just the first one) regardless of the value of\n * the `multi` option.\n *\n * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`\n * and `post('updateMany')` instead.\n *\n * #### Example:\n *\n *     const res = await Person.updateMany({ name: /Stark$/ }, { isDeleted: true });\n *     res.matchedCount; // Number of documents matched\n *     res.modifiedCount; // Number of documents modified\n *     res.acknowledged; // Boolean indicating everything went smoothly.\n *     res.upsertedId; // null or an id containing a document that had to be upserted.\n *     res.upsertedCount; // Number indicating how many documents had to be upserted. Will either be 0 or 1.\n *\n * This function triggers the following middleware.\n *\n * - `updateMany()`\n *\n * @param {Object} filter\n * @param {Object|Array} update\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/command/update/#update-command-output\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @api public\n */\n\nModel.updateMany = function updateMany(conditions, doc, options) {\n  _checkContext(this, 'updateMany');\n\n  return _update(this, 'updateMany', conditions, doc, options);\n};\n\n/**\n * Update _only_ the first document that matches `filter`.\n *\n * - Use `replaceOne()` if you want to overwrite an entire document rather than using atomic operators like `$set`.\n *\n * #### Example:\n *\n *     const res = await Person.updateOne({ name: 'Jean-Luc Picard' }, { ship: 'USS Enterprise' });\n *     res.matchedCount; // Number of documents matched\n *     res.modifiedCount; // Number of documents modified\n *     res.acknowledged; // Boolean indicating everything went smoothly.\n *     res.upsertedId; // null or an id containing a document that had to be upserted.\n *     res.upsertedCount; // Number indicating how many documents had to be upserted. Will either be 0 or 1.\n *\n * This function triggers the following middleware.\n *\n * - `updateOne()`\n *\n * @param {Object} filter\n * @param {Object|Array} update\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Note that this allows you to overwrite timestamps. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see MongoDB docs https://www.mongodb.com/docs/manual/reference/command/update/#update-command-output\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @api public\n */\n\nModel.updateOne = function updateOne(conditions, doc, options) {\n  _checkContext(this, 'updateOne');\n\n  return _update(this, 'updateOne', conditions, doc, options);\n};\n\n/**\n * Replace the existing document with the given document (no atomic operators like `$set`).\n *\n * #### Example:\n *\n *     const res = await Person.replaceOne({ _id: 24601 }, { name: 'Jean Valjean' });\n *     res.matchedCount; // Number of documents matched\n *     res.modifiedCount; // Number of documents modified\n *     res.acknowledged; // Boolean indicating everything went smoothly.\n *     res.upsertedId; // null or an id containing a document that had to be upserted.\n *     res.upsertedCount; // Number indicating how many documents had to be upserted. Will either be 0 or 1.\n *\n * This function triggers the following middleware.\n *\n * - `replaceOne()`\n *\n * @param {Object} filter\n * @param {Object} doc\n * @param {Object} [options] optional see [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api/query.html#Query.prototype.setOptions())\n * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](https://mongoosejs.com/docs/guide.html#strict)\n * @param {Boolean} [options.upsert=false] if true, and no documents found, insert a new document\n * @param {Object} [options.writeConcern=null] sets the [write concern](https://www.mongodb.com/docs/manual/reference/write-concern/) for replica sets. Overrides the [schema-level write concern](https://mongoosejs.com/docs/guide.html#writeConcern)\n * @param {Boolean} [options.timestamps=null] If set to `false` and [schema-level timestamps](https://mongoosejs.com/docs/guide.html#timestamps) are enabled, skip timestamps for this update. Does nothing if schema-level timestamps are not set.\n * @param {Boolean} [options.translateAliases=null] If set to `true`, translates any schema-defined aliases in `filter`, `projection`, `update`, and `distinct`. Throws an error if there are any conflicts where both alias and raw property are defined on the same object.\n * @return {Query}\n * @see Query docs https://mongoosejs.com/docs/queries.html\n * @see UpdateResult https://mongodb.github.io/node-mongodb-native/4.9/interfaces/UpdateResult.html\n * @return {Query}\n * @api public\n */\n\nModel.replaceOne = function replaceOne(conditions, doc, options) {\n  _checkContext(this, 'replaceOne');\n\n  const versionKey = this && this.schema && this.schema.options && this.schema.options.versionKey || null;\n  if (versionKey && !doc[versionKey]) {\n    doc[versionKey] = 0;\n  }\n\n  return _update(this, 'replaceOne', conditions, doc, options);\n};\n\n/**\n * Common code for `updateOne()`, `updateMany()`, `replaceOne()`, and `update()`\n * because they need to do the same thing\n * @api private\n */\n\nfunction _update(model, op, conditions, doc, options) {\n  const mq = new model.Query({}, {}, model, model.collection);\n\n  // gh-2406\n  // make local deep copy of conditions\n  if (conditions instanceof Document) {\n    conditions = conditions.toObject();\n  } else {\n    conditions = clone(conditions);\n  }\n  options = typeof options === 'function' ? options : clone(options);\n\n  const versionKey = model &&\n  model.schema &&\n  model.schema.options &&\n  model.schema.options.versionKey || null;\n  _decorateUpdateWithVersionKey(doc, options, versionKey);\n\n  return mq[op](conditions, doc, options);\n}\n\n/**\n * Performs [aggregations](https://www.mongodb.com/docs/manual/aggregation/) on the models collection.\n *\n * If a `callback` is passed, the `aggregate` is executed and a `Promise` is returned. If a callback is not passed, the `aggregate` itself is returned.\n *\n * This function triggers the following middleware.\n *\n * - `aggregate()`\n *\n * #### Example:\n *\n *     // Find the max balance of all accounts\n *     const res = await Users.aggregate([\n *       { $group: { _id: null, maxBalance: { $max: '$balance' }}},\n *       { $project: { _id: 0, maxBalance: 1 }}\n *     ]);\n *\n *     console.log(res); // [ { maxBalance: 98000 } ]\n *\n *     // Or use the aggregation pipeline builder.\n *     const res = await Users.aggregate().\n *       group({ _id: null, maxBalance: { $max: '$balance' } }).\n *       project('-id maxBalance').\n *       exec();\n *     console.log(res); // [ { maxBalance: 98 } ]\n *\n * #### Note:\n *\n * - Mongoose does **not** cast aggregation pipelines to the model's schema because `$project` and `$group` operators allow redefining the \"shape\" of the documents at any stage of the pipeline, which may leave documents in an incompatible format. You can use the [mongoose-cast-aggregation plugin](https://github.com/AbdelrahmanHafez/mongoose-cast-aggregation) to enable minimal casting for aggregation pipelines.\n * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).\n *\n * #### More About Aggregations:\n *\n * - [Mongoose `Aggregate`](https://mongoosejs.com/docs/api/aggregate.html)\n * - [An Introduction to Mongoose Aggregate](https://masteringjs.io/tutorials/mongoose/aggregate)\n * - [MongoDB Aggregation docs](https://www.mongodb.com/docs/manual/applications/aggregation/)\n *\n * @see Aggregate https://mongoosejs.com/docs/api/aggregate.html#Aggregate()\n * @see MongoDB https://www.mongodb.com/docs/manual/applications/aggregation/\n * @param {Array} [pipeline] aggregation pipeline as an array of objects\n * @param {Object} [options] aggregation options\n * @return {Aggregate}\n * @api public\n */\n\nModel.aggregate = function aggregate(pipeline, options) {\n  _checkContext(this, 'aggregate');\n\n  if (typeof options === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.aggregate() no longer accepts a callback');\n  }\n\n  const aggregate = new Aggregate(pipeline || []);\n  aggregate.model(this);\n  if (options != null) {\n    aggregate.option(options);\n  }\n\n  if (typeof callback === 'undefined') {\n    return aggregate;\n  }\n\n  return aggregate;\n};\n\n/**\n * Casts and validates the given object against this model's schema, passing the\n * given `context` to custom validators.\n *\n * #### Example:\n *\n *     const Model = mongoose.model('Test', Schema({\n *       name: { type: String, required: true },\n *       age: { type: Number, required: true }\n *     });\n *\n *     try {\n *       await Model.validate({ name: null }, ['name'])\n *     } catch (err) {\n *       err instanceof mongoose.Error.ValidationError; // true\n *       Object.keys(err.errors); // ['name']\n *     }\n *\n * @param {Object} obj\n * @param {Array|String} pathsToValidate\n * @param {Object} [context]\n * @return {Promise|undefined}\n * @api public\n */\n\nModel.validate = async function validate(obj, pathsToValidate, context) {\n  if ((arguments.length < 3) || (arguments.length === 3 && typeof arguments[2] === 'function')) {\n    // For convenience, if we're validating a document or an object, make `context` default to\n    // the model so users don't have to always pass `context`, re: gh-10132, gh-10346\n    context = obj;\n  }\n  if (typeof context === 'function' || typeof arguments[3] === 'function') {\n    throw new MongooseError('Model.validate() no longer accepts a callback');\n  }\n\n  let schema = this.schema;\n  const discriminatorKey = schema.options.discriminatorKey;\n  if (schema.discriminators != null && obj != null && obj[discriminatorKey] != null) {\n    schema = getSchemaDiscriminatorByValue(schema, obj[discriminatorKey]) || schema;\n  }\n  let paths = Object.keys(schema.paths);\n\n  if (pathsToValidate != null) {\n    const _pathsToValidate = typeof pathsToValidate === 'string' ? new Set(pathsToValidate.split(' ')) : new Set(pathsToValidate);\n    paths = paths.filter(p => {\n      const pieces = p.split('.');\n      let cur = pieces[0];\n\n      for (const piece of pieces) {\n        if (_pathsToValidate.has(cur)) {\n          return true;\n        }\n        cur += '.' + piece;\n      }\n\n      return _pathsToValidate.has(p);\n    });\n  }\n\n  for (const path of paths) {\n    const schemaType = schema.path(path);\n    if (!schemaType || !schemaType.$isMongooseArray || schemaType.$isMongooseDocumentArray) {\n      continue;\n    }\n\n    const val = get(obj, path);\n    pushNestedArrayPaths(paths, val, path);\n  }\n\n  let remaining = paths.length;\n  let error = null;\n\n  return new Promise((resolve, reject) => {\n    for (const path of paths) {\n      const schemaType = schema.path(path);\n      if (schemaType == null) {\n        _checkDone();\n        continue;\n      }\n\n      const pieces = path.indexOf('.') === -1 ? [path] : path.split('.');\n      let cur = obj;\n      for (let i = 0; i < pieces.length - 1; ++i) {\n        cur = cur[pieces[i]];\n      }\n\n      let val = get(obj, path, void 0);\n\n      if (val != null) {\n        try {\n          val = schemaType.cast(val);\n          cur[pieces[pieces.length - 1]] = val;\n        } catch (err) {\n          error = error || new ValidationError();\n          error.addError(path, err);\n\n          _checkDone();\n          continue;\n        }\n      }\n\n      schemaType.doValidate(val, err => {\n        if (err) {\n          error = error || new ValidationError();\n          error.addError(path, err);\n        }\n        _checkDone();\n      }, context, { path: path });\n    }\n\n    function _checkDone() {\n      if (--remaining <= 0) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      }\n    }\n  });\n};\n\n/**\n * Populates document references.\n *\n * Changed in Mongoose 6: the model you call `populate()` on should be the\n * \"local field\" model, **not** the \"foreign field\" model.\n *\n * #### Available top-level options:\n *\n * - path: space delimited path(s) to populate\n * - select: optional fields to select\n * - match: optional query conditions to match\n * - model: optional name of the model to use for population\n * - options: optional query options like sort, limit, etc\n * - justOne: optional boolean, if true Mongoose will always set `path` to a document, or `null` if no document was found. If false, Mongoose will always set `path` to an array, which will be empty if no documents are found. Inferred from schema by default.\n * - strictPopulate: optional boolean, set to `false` to allow populating paths that aren't in the schema.\n *\n * #### Example:\n *\n *     const Dog = mongoose.model('Dog', new Schema({ name: String, breed: String }));\n *     const Person = mongoose.model('Person', new Schema({\n *       name: String,\n *       pet: { type: mongoose.ObjectId, ref: 'Dog' }\n *     }));\n *\n *     const pets = await Pet.create([\n *       { name: 'Daisy', breed: 'Beagle' },\n *       { name: 'Einstein', breed: 'Catalan Sheepdog' }\n *     ]);\n *\n *     // populate many plain objects\n *     const users = [\n *       { name: 'John Wick', dog: pets[0]._id },\n *       { name: 'Doc Brown', dog: pets[1]._id }\n *     ];\n *     await User.populate(users, { path: 'dog', select: 'name' });\n *     users[0].dog.name; // 'Daisy'\n *     users[0].dog.breed; // undefined because of `select`\n *\n * @param {Document|Array} docs Either a single document or array of documents to populate.\n * @param {Object|String} options Either the paths to populate or an object specifying all parameters\n * @param {string} [options.path=null] The path to populate.\n * @param {string|PopulateOptions} [options.populate=null] Recursively populate paths in the populated documents. See [deep populate docs](https://mongoosejs.com/docs/populate.html#deep-populate).\n * @param {boolean} [options.retainNullValues=false] By default, Mongoose removes null and undefined values from populated arrays. Use this option to make `populate()` retain `null` and `undefined` array entries.\n * @param {boolean} [options.getters=false] If true, Mongoose will call any getters defined on the `localField`. By default, Mongoose gets the raw value of `localField`. For example, you would need to set this option to `true` if you wanted to [add a `lowercase` getter to your `localField`](https://mongoosejs.com/docs/schematypes.html#schematype-options).\n * @param {boolean} [options.clone=false] When you do `BlogPost.find().populate('author')`, blog posts with the same author will share 1 copy of an `author` doc. Enable this option to make Mongoose clone populated docs before assigning them.\n * @param {Object|Function} [options.match=null] Add an additional filter to the populate query. Can be a filter object containing [MongoDB query syntax](https://www.mongodb.com/docs/manual/tutorial/query-documents/), or a function that returns a filter object.\n * @param {Boolean} [options.skipInvalidIds=false] By default, Mongoose throws a cast error if `localField` and `foreignField` schemas don't line up. If you enable this option, Mongoose will instead filter out any `localField` properties that cannot be casted to `foreignField`'s schema type.\n * @param {Number} [options.perDocumentLimit=null] For legacy reasons, `limit` with `populate()` may give incorrect results because it only executes a single query for every document being populated. If you set `perDocumentLimit`, Mongoose will ensure correct `limit` per document by executing a separate query for each document to `populate()`. For example, `.find().populate({ path: 'test', perDocumentLimit: 2 })` will execute 2 additional queries if `.find()` returns 2 documents.\n * @param {Boolean} [options.strictPopulate=true] Set to false to allow populating paths that aren't defined in the given model's schema.\n * @param {Object} [options.options=null] Additional options like `limit` and `lean`.\n * @param {Function} [options.transform=null] Function that Mongoose will call on every populated document that allows you to transform the populated document.\n * @param {Function} [callback(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`.\n * @return {Promise}\n * @api public\n */\n\nModel.populate = async function populate(docs, paths) {\n  _checkContext(this, 'populate');\n  if (typeof paths === 'function' || typeof arguments[2] === 'function') {\n    throw new MongooseError('Model.populate() no longer accepts a callback');\n  }\n\n  const _this = this;\n\n  // normalized paths\n  paths = utils.populate(paths);\n  // data that should persist across subPopulate calls\n  const cache = {};\n\n  return new Promise((resolve, reject) => {\n    _populate(_this, docs, paths, cache, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n};\n\n/**\n * Populate helper\n *\n * @param {Model} model the model to use\n * @param {Document|Array} docs Either a single document or array of documents to populate.\n * @param {Object} paths\n * @param {never} cache Unused\n * @param {Function} [callback] Optional callback, executed upon completion. Receives `err` and the `doc(s)`.\n * @return {Function}\n * @api private\n */\n\nfunction _populate(model, docs, paths, cache, callback) {\n  let pending = paths.length;\n  if (paths.length === 0) {\n    return callback(null, docs);\n  }\n  // each path has its own query options and must be executed separately\n  for (const path of paths) {\n    populate(model, docs, path, next);\n  }\n\n  function next(err) {\n    if (err) {\n      return callback(err, null);\n    }\n    if (--pending) {\n      return;\n    }\n    callback(null, docs);\n  }\n}\n\n/*!\n * Populates `docs`\n */\nconst excludeIdReg = /\\s?-_id\\s?/;\nconst excludeIdRegGlobal = /\\s?-_id\\s?/g;\n\nfunction populate(model, docs, options, callback) {\n  const populateOptions = options;\n  if (options.strictPopulate == null) {\n    if (options._localModel != null && options._localModel.schema._userProvidedOptions.strictPopulate != null) {\n      populateOptions.strictPopulate = options._localModel.schema._userProvidedOptions.strictPopulate;\n    } else if (options._localModel != null && model.base.options.strictPopulate != null) {\n      populateOptions.strictPopulate = model.base.options.strictPopulate;\n    } else if (model.base.options.strictPopulate != null) {\n      populateOptions.strictPopulate = model.base.options.strictPopulate;\n    }\n  }\n\n  // normalize single / multiple docs passed\n  if (!Array.isArray(docs)) {\n    docs = [docs];\n  }\n  if (docs.length === 0 || docs.every(utils.isNullOrUndefined)) {\n    return callback();\n  }\n\n  const modelsMap = getModelsMapForPopulate(model, docs, populateOptions);\n\n  if (modelsMap instanceof MongooseError) {\n    return immediate(function() {\n      callback(modelsMap);\n    });\n  }\n  const len = modelsMap.length;\n  let vals = [];\n\n  function flatten(item) {\n    // no need to include undefined values in our query\n    return undefined !== item;\n  }\n\n  let _remaining = len;\n  let hasOne = false;\n  const params = [];\n  for (let i = 0; i < len; ++i) {\n    const mod = modelsMap[i];\n    let select = mod.options.select;\n    let ids = utils.array.flatten(mod.ids, flatten);\n    ids = utils.array.unique(ids);\n\n    const assignmentOpts = {};\n    assignmentOpts.sort = mod &&\n      mod.options &&\n      mod.options.options &&\n      mod.options.options.sort || void 0;\n    assignmentOpts.excludeId = excludeIdReg.test(select) || (select && select._id === 0);\n\n    // Lean transform may delete `_id`, which would cause assignment\n    // to fail. So delay running lean transform until _after_\n    // `_assign()`\n    if (mod.options &&\n        mod.options.options &&\n        mod.options.options.lean &&\n        mod.options.options.lean.transform) {\n      mod.options.options._leanTransform = mod.options.options.lean.transform;\n      mod.options.options.lean = true;\n    }\n\n    if (ids.length === 0 || ids.every(utils.isNullOrUndefined)) {\n      // Ensure that we set to 0 or empty array even\n      // if we don't actually execute a query to make sure there's a value\n      // and we know this path was populated for future sets. See gh-7731, gh-8230\n      --_remaining;\n      _assign(model, [], mod, assignmentOpts);\n      continue;\n    }\n\n    hasOne = true;\n    if (typeof populateOptions.foreignField === 'string') {\n      mod.foreignField.clear();\n      mod.foreignField.add(populateOptions.foreignField);\n    }\n    const match = createPopulateQueryFilter(ids, mod.match, mod.foreignField, mod.model, mod.options.skipInvalidIds);\n    if (assignmentOpts.excludeId) {\n      // override the exclusion from the query so we can use the _id\n      // for document matching during assignment. we'll delete the\n      // _id back off before returning the result.\n      if (typeof select === 'string') {\n        select = select.replace(excludeIdRegGlobal, ' ');\n      } else {\n        // preserve original select conditions by copying\n        select = utils.object.shallowCopy(select);\n        delete select._id;\n      }\n    }\n\n    if (mod.options.options && mod.options.options.limit != null) {\n      assignmentOpts.originalLimit = mod.options.options.limit;\n    } else if (mod.options.limit != null) {\n      assignmentOpts.originalLimit = mod.options.limit;\n    }\n    params.push([mod, match, select, assignmentOpts, _next]);\n  }\n  if (!hasOne) {\n    // If models but no docs, skip further deep populate.\n    if (modelsMap.length !== 0) {\n      return callback();\n    }\n    // If no models to populate but we have a nested populate,\n    // keep trying, re: gh-8946\n    if (populateOptions.populate != null) {\n      const opts = utils.populate(populateOptions.populate).map(pop => Object.assign({}, pop, {\n        path: populateOptions.path + '.' + pop.path\n      }));\n      model.populate(docs, opts).then(res => { callback(null, res); }, err => { callback(err); });\n      return;\n    }\n    return callback();\n  }\n\n  for (const arr of params) {\n    _execPopulateQuery.apply(null, arr);\n  }\n  function _next(err, valsFromDb) {\n    if (err != null) {\n      return callback(err, null);\n    }\n    vals = vals.concat(valsFromDb);\n    if (--_remaining === 0) {\n      _done();\n    }\n  }\n\n  function _done() {\n    for (const arr of params) {\n      const mod = arr[0];\n      const assignmentOpts = arr[3];\n      for (const val of vals) {\n        mod.options._childDocs.push(val);\n      }\n      try {\n        _assign(model, vals, mod, assignmentOpts);\n      } catch (err) {\n        return callback(err);\n      }\n    }\n\n    for (const arr of params) {\n      removeDeselectedForeignField(arr[0].foreignField, arr[0].options, vals);\n    }\n    for (const arr of params) {\n      const mod = arr[0];\n      if (mod.options && mod.options.options && mod.options.options._leanTransform) {\n        for (const doc of vals) {\n          mod.options.options._leanTransform(doc);\n        }\n      }\n    }\n    callback();\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction _execPopulateQuery(mod, match, select, assignmentOpts, callback) {\n  let subPopulate = clone(mod.options.populate);\n  const queryOptions = Object.assign({\n    skip: mod.options.skip,\n    limit: mod.options.limit,\n    perDocumentLimit: mod.options.perDocumentLimit\n  }, mod.options.options);\n\n  if (mod.count) {\n    delete queryOptions.skip;\n  }\n\n  if (queryOptions.perDocumentLimit != null) {\n    queryOptions.limit = queryOptions.perDocumentLimit;\n    delete queryOptions.perDocumentLimit;\n  } else if (queryOptions.limit != null) {\n    queryOptions.limit = queryOptions.limit * mod.ids.length;\n  }\n\n  const query = mod.model.find(match, select, queryOptions);\n  // If we're doing virtual populate and projection is inclusive and foreign\n  // field is not selected, automatically select it because mongoose needs it.\n  // If projection is exclusive and client explicitly unselected the foreign\n  // field, that's the client's fault.\n  for (const foreignField of mod.foreignField) {\n    if (foreignField !== '_id' &&\n        query.selectedInclusively() &&\n        !isPathSelectedInclusive(query._fields, foreignField)) {\n      query.select(foreignField);\n    }\n  }\n\n  // If using count, still need the `foreignField` so we can match counts\n  // to documents, otherwise we would need a separate `count()` for every doc.\n  if (mod.count) {\n    for (const foreignField of mod.foreignField) {\n      query.select(foreignField);\n    }\n  }\n\n  // If we need to sub-populate, call populate recursively\n  if (subPopulate) {\n    // If subpopulating on a discriminator, skip check for non-existent\n    // paths. Because the discriminator may not have the path defined.\n    if (mod.model.baseModelName != null) {\n      if (Array.isArray(subPopulate)) {\n        subPopulate.forEach(pop => { pop.strictPopulate = false; });\n      } else if (typeof subPopulate === 'string') {\n        subPopulate = { path: subPopulate, strictPopulate: false };\n      } else {\n        subPopulate.strictPopulate = false;\n      }\n    }\n    const basePath = mod.options._fullPath || mod.options.path;\n\n    if (Array.isArray(subPopulate)) {\n      for (const pop of subPopulate) {\n        pop._fullPath = basePath + '.' + pop.path;\n      }\n    } else if (typeof subPopulate === 'object') {\n      subPopulate._fullPath = basePath + '.' + subPopulate.path;\n    }\n\n    query.populate(subPopulate);\n  }\n\n  query.exec().then(\n    docs => {\n      for (const val of docs) {\n        leanPopulateMap.set(val, mod.model);\n      }\n      callback(null, docs);\n    },\n    err => {\n      callback(err);\n    }\n  );\n}\n\n/*!\n * ignore\n */\n\nfunction _assign(model, vals, mod, assignmentOpts) {\n  const options = mod.options;\n  const isVirtual = mod.isVirtual;\n  const justOne = mod.justOne;\n  let _val;\n  const lean = options &&\n    options.options &&\n    options.options.lean || false;\n  const len = vals.length;\n  const rawOrder = {};\n  const rawDocs = {};\n  let key;\n  let val;\n\n  // Clone because `assignRawDocsToIdStructure` will mutate the array\n  const allIds = clone(mod.allIds);\n  // optimization:\n  // record the document positions as returned by\n  // the query result.\n  for (let i = 0; i < len; i++) {\n    val = vals[i];\n    if (val == null) {\n      continue;\n    }\n    for (const foreignField of mod.foreignField) {\n      _val = utils.getValue(foreignField, val);\n      if (Array.isArray(_val)) {\n        _val = utils.array.unique(utils.array.flatten(_val));\n\n        for (let __val of _val) {\n          if (__val instanceof Document) {\n            __val = __val._id;\n          }\n          key = String(__val);\n          if (rawDocs[key]) {\n            if (Array.isArray(rawDocs[key])) {\n              rawDocs[key].push(val);\n              rawOrder[key].push(i);\n            } else {\n              rawDocs[key] = [rawDocs[key], val];\n              rawOrder[key] = [rawOrder[key], i];\n            }\n          } else {\n            if (isVirtual && !justOne) {\n              rawDocs[key] = [val];\n              rawOrder[key] = [i];\n            } else {\n              rawDocs[key] = val;\n              rawOrder[key] = i;\n            }\n          }\n        }\n      } else {\n        if (_val instanceof Document) {\n          _val = _val._id;\n        }\n        key = String(_val);\n        if (rawDocs[key]) {\n          if (Array.isArray(rawDocs[key])) {\n            rawDocs[key].push(val);\n            rawOrder[key].push(i);\n          } else if (isVirtual ||\n            rawDocs[key].constructor !== val.constructor ||\n            String(rawDocs[key]._id) !== String(val._id)) {\n            // May need to store multiple docs with the same id if there's multiple models\n            // if we have discriminators or a ref function. But avoid converting to an array\n            // if we have multiple queries on the same model because of `perDocumentLimit` re: gh-9906\n            rawDocs[key] = [rawDocs[key], val];\n            rawOrder[key] = [rawOrder[key], i];\n          }\n        } else {\n          rawDocs[key] = val;\n          rawOrder[key] = i;\n        }\n      }\n      // flag each as result of population\n      if (!lean) {\n        val.$__.wasPopulated = val.$__.wasPopulated || true;\n      }\n    }\n  }\n\n  assignVals({\n    originalModel: model,\n    // If virtual, make sure to not mutate original field\n    rawIds: mod.isVirtual ? allIds : mod.allIds,\n    allIds: allIds,\n    unpopulatedValues: mod.unpopulatedValues,\n    foreignField: mod.foreignField,\n    rawDocs: rawDocs,\n    rawOrder: rawOrder,\n    docs: mod.docs,\n    path: options.path,\n    options: assignmentOpts,\n    justOne: mod.justOne,\n    isVirtual: mod.isVirtual,\n    allOptions: mod,\n    populatedModel: mod.model,\n    lean: lean,\n    virtual: mod.virtual,\n    count: mod.count,\n    match: mod.match\n  });\n}\n\n/**\n * Compiler utility.\n *\n * @param {String|Function} name model name or class extending Model\n * @param {Schema} schema\n * @param {String} collectionName\n * @param {Connection} connection\n * @param {Mongoose} base mongoose instance\n * @api private\n */\n\nModel.compile = function compile(name, schema, collectionName, connection, base) {\n  const versioningEnabled = schema.options.versionKey !== false;\n\n  if (versioningEnabled && !schema.paths[schema.options.versionKey]) {\n    // add versioning to top level documents only\n    const o = {};\n    o[schema.options.versionKey] = Number;\n    schema.add(o);\n  }\n  let model;\n  if (typeof name === 'function' && name.prototype instanceof Model) {\n    model = name;\n    name = model.name;\n    schema.loadClass(model, false);\n    model.prototype.$isMongooseModelPrototype = true;\n  } else {\n    // generate new class\n    model = function model(doc, fields, skipId) {\n      model.hooks.execPreSync('createModel', doc);\n      if (!(this instanceof model)) {\n        return new model(doc, fields, skipId);\n      }\n      const discriminatorKey = model.schema.options.discriminatorKey;\n\n      if (model.discriminators == null || doc == null || doc[discriminatorKey] == null) {\n        Model.call(this, doc, fields, skipId);\n        return;\n      }\n\n      // If discriminator key is set, use the discriminator instead (gh-7586)\n      const Discriminator = model.discriminators[doc[discriminatorKey]] ||\n        getDiscriminatorByValue(model.discriminators, doc[discriminatorKey]);\n      if (Discriminator != null) {\n        return new Discriminator(doc, fields, skipId);\n      }\n\n      // Otherwise, just use the top-level model\n      Model.call(this, doc, fields, skipId);\n    };\n  }\n\n  model.hooks = schema.s.hooks.clone();\n  model.base = base;\n  model.modelName = name;\n\n  if (!(model.prototype instanceof Model)) {\n    Object.setPrototypeOf(model, Model);\n    Object.setPrototypeOf(model.prototype, Model.prototype);\n  }\n  model.model = function model(name) {\n    return this.db.model(name);\n  };\n\n  model.db = connection;\n  model.prototype.db = connection;\n  model.prototype[modelDbSymbol] = connection;\n  model.discriminators = model.prototype.discriminators = undefined;\n  model[modelSymbol] = true;\n  model.events = new EventEmitter();\n\n  schema._preCompile();\n\n  model.prototype.$__setSchema(schema);\n\n  const _userProvidedOptions = schema._userProvidedOptions || {};\n\n  const collectionOptions = {\n    schemaUserProvidedOptions: _userProvidedOptions,\n    capped: schema.options.capped,\n    Promise: model.base.Promise,\n    modelName: name\n  };\n  if (schema.options.autoCreate !== void 0) {\n    collectionOptions.autoCreate = schema.options.autoCreate;\n  }\n\n  model.prototype.collection = connection.collection(\n    collectionName,\n    collectionOptions\n  );\n\n  model.prototype.$collection = model.prototype.collection;\n  model.prototype[modelCollectionSymbol] = model.prototype.collection;\n\n  // apply methods and statics\n  applyMethods(model, schema);\n  applyStatics(model, schema);\n  applyHooks(model, schema);\n  applyStaticHooks(model, schema.s.hooks, schema.statics);\n\n  model.schema = model.prototype.$__schema;\n  model.collection = model.prototype.collection;\n  model.$__collection = model.collection;\n\n  // Create custom query constructor\n  model.Query = function() {\n    Query.apply(this, arguments);\n  };\n  Object.setPrototypeOf(model.Query.prototype, Query.prototype);\n  model.Query.base = Query.base;\n  model.Query.prototype.constructor = Query;\n  applyQueryMiddleware(model.Query, model);\n  applyQueryMethods(model, schema.query);\n\n  return model;\n};\n\n/**\n * Register custom query methods for this model\n *\n * @param {Model} model\n * @param {Schema} schema\n * @api private\n */\n\nfunction applyQueryMethods(model, methods) {\n  for (const i in methods) {\n    model.Query.prototype[i] = methods[i];\n  }\n}\n\n/**\n * Subclass this model with `conn`, `schema`, and `collection` settings.\n *\n * @param {Connection} conn\n * @param {Schema} [schema]\n * @param {String} [collection]\n * @return {Model}\n * @api private\n * @memberOf Model\n * @static\n * @method __subclass\n */\n\nModel.__subclass = function subclass(conn, schema, collection) {\n  // subclass model using this connection and collection name\n  const _this = this;\n\n  const Model = function Model(doc, fields, skipId) {\n    if (!(this instanceof Model)) {\n      return new Model(doc, fields, skipId);\n    }\n    _this.call(this, doc, fields, skipId);\n  };\n\n  Object.setPrototypeOf(Model, _this);\n  Object.setPrototypeOf(Model.prototype, _this.prototype);\n  Model.db = conn;\n  Model.prototype.db = conn;\n  Model.prototype[modelDbSymbol] = conn;\n\n  _this[subclassedSymbol] = _this[subclassedSymbol] || [];\n  _this[subclassedSymbol].push(Model);\n  if (_this.discriminators != null) {\n    Model.discriminators = {};\n    for (const key of Object.keys(_this.discriminators)) {\n      Model.discriminators[key] = _this.discriminators[key].\n        __subclass(_this.db, _this.discriminators[key].schema, collection);\n    }\n  }\n\n  const s = schema && typeof schema !== 'string'\n    ? schema\n    : _this.prototype.$__schema;\n\n  const options = s.options || {};\n  const _userProvidedOptions = s._userProvidedOptions || {};\n\n  if (!collection) {\n    collection = _this.prototype.$__schema.get('collection') ||\n      utils.toCollectionName(_this.modelName, this.base.pluralize());\n  }\n\n  const collectionOptions = {\n    schemaUserProvidedOptions: _userProvidedOptions,\n    capped: s && options.capped\n  };\n\n  Model.prototype.collection = conn.collection(collection, collectionOptions);\n  Model.prototype.$collection = Model.prototype.collection;\n  Model.prototype[modelCollectionSymbol] = Model.prototype.collection;\n  Model.collection = Model.prototype.collection;\n  Model.$__collection = Model.collection;\n  // Errors handled internally, so ignore\n  Model.init().catch(() => {});\n  return Model;\n};\n\n/**\n * Helper for console.log. Given a model named 'MyModel', returns the string\n * `'Model { MyModel }'`.\n *\n * #### Example:\n *\n *     const MyModel = mongoose.model('Test', Schema({ name: String }));\n *     MyModel.inspect(); // 'Model { Test }'\n *     console.log(MyModel); // Prints 'Model { Test }'\n *\n * @api public\n */\n\nModel.inspect = function() {\n  return `Model { ${this.modelName} }`;\n};\n\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  Model[util.inspect.custom] = Model.inspect;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Model;\n", "'use strict';\n\nmodule.exports = pluralize;\n\n/**\n * Pluralization rules.\n */\n\nexports.pluralization = [\n  [/human$/gi, 'humans'],\n  [/(m)an$/gi, '$1en'],\n  [/(pe)rson$/gi, '$1ople'],\n  [/(child)$/gi, '$1ren'],\n  [/^(ox)$/gi, '$1en'],\n  [/(ax|test)is$/gi, '$1es'],\n  [/(octop|vir)us$/gi, '$1i'],\n  [/(alias|status)$/gi, '$1es'],\n  [/(bu)s$/gi, '$1ses'],\n  [/(buffal|tomat|potat)o$/gi, '$1oes'],\n  [/([ti])um$/gi, '$1a'],\n  [/sis$/gi, 'ses'],\n  [/(?:([^f])fe|([lr])f)$/gi, '$1$2ves'],\n  [/(hive)$/gi, '$1s'],\n  [/([^aeiouy]|qu)y$/gi, '$1ies'],\n  [/(x|ch|ss|sh)$/gi, '$1es'],\n  [/(matr|vert|ind)ix|ex$/gi, '$1ices'],\n  [/([m|l])ouse$/gi, '$1ice'],\n  [/(kn|w|l)ife$/gi, '$1ives'],\n  [/(quiz)$/gi, '$1zes'],\n  [/^goose$/i, 'geese'],\n  [/s$/gi, 's'],\n  [/([^a-z])$/, '$1'],\n  [/$/gi, 's']\n];\nconst rules = exports.pluralization;\n\n/**\n * Uncountable words.\n *\n * These words are applied while processing the argument to `toCollectionName`.\n * @api public\n */\n\nexports.uncountables = [\n  'advice',\n  'energy',\n  'excretion',\n  'digestion',\n  'cooperation',\n  'health',\n  'justice',\n  'labour',\n  'machinery',\n  'equipment',\n  'information',\n  'pollution',\n  'sewage',\n  'paper',\n  'money',\n  'species',\n  'series',\n  'rain',\n  'rice',\n  'fish',\n  'sheep',\n  'moose',\n  'deer',\n  'news',\n  'expertise',\n  'status',\n  'media'\n];\nconst uncountables = exports.uncountables;\n\n/**\n * Pluralize function.\n *\n * @author TJ Holowaychuk (extracted from _ext.js_)\n * @param {String} string to pluralize\n * @api private\n */\n\nfunction pluralize(str) {\n  let found;\n  str = str.toLowerCase();\n  if (!~uncountables.indexOf(str)) {\n    found = rules.filter(function(rule) {\n      return str.match(rule[0]);\n    });\n    if (found[0]) {\n      return str.replace(found[0][0], found[0][1]);\n    }\n  }\n  return str;\n}\n", "/*!\n * Module requirements\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst util = require('util');\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\n\nclass SetOptionError extends MongooseError {\n  /**\n   * Mongoose.set Error\n   *\n   * @api private\n   * @inherits MongooseError\n   */\n  constructor() {\n    super('');\n\n    this.errors = {};\n  }\n\n  /**\n   * Console.log helper\n   */\n  toString() {\n    return combinePathErrors(this);\n  }\n\n  /**\n   * inspect helper\n   * @api private\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /**\n  * add message\n  * @param {String} key\n  * @param {String|Error} error\n  * @api private\n  */\n  addError(key, error) {\n    if (error instanceof SetOptionError) {\n      const { errors } = error;\n      for (const optionKey of Object.keys(errors)) {\n        this.addError(optionKey, errors[optionKey]);\n      }\n\n      return;\n    }\n\n    this.errors[key] = error;\n    this.message = combinePathErrors(this);\n  }\n}\n\n\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  SetOptionError.prototype[util.inspect.custom] = SetOptionError.prototype.inspect;\n}\n\n/**\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n * @api private\n */\nObject.defineProperty(SetOptionError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function() {\n    return Object.assign({}, this, { name: this.name, message: this.message });\n  }\n});\n\n\nObject.defineProperty(SetOptionError.prototype, 'name', {\n  value: 'SetOptionError'\n});\n\nclass SetOptionInnerError extends MongooseError {\n  /**\n   * Error for the \"errors\" array in \"SetOptionError\" with consistent message\n   * @param {String} key\n   */\n  constructor(key) {\n    super(`\"${key}\" is not a valid option to set`);\n  }\n}\n\nSetOptionError.SetOptionInnerError = SetOptionInnerError;\n\n/*!\n * Module exports\n */\n\nmodule.exports = SetOptionError;\n", "'use strict';\n\nconst utils = require('../utils');\n\nif (typeof jest !== 'undefined' && !process.env.SUPPRESS_JEST_WARNINGS) {\n  if (typeof window !== 'undefined') {\n    utils.warn('Mongoose: looks like you\\'re trying to test a Mongoose app ' +\n      'with Jest\\'s default jsdom test environment. Please make sure you read ' +\n      'Mongoose\\'s docs on configuring Jest to test Node.js apps: ' +\n      'https://mongoosejs.com/docs/jest.html. Set the SUPPRESS_JEST_WARNINGS to true ' +\n      'to hide this warning.');\n  }\n\n  if (setTimeout.clock != null && typeof setTimeout.clock.Date === 'function') {\n    utils.warn('Mongoose: looks like you\\'re trying to test a Mongoose app ' +\n      'with Jest\\'s mock timers enabled. Please make sure you read ' +\n      'Mongoose\\'s docs on configuring Jest to test Node.js apps: ' +\n      'https://mongoosejs.com/docs/jest.html. Set the SUPPRESS_JEST_WARNINGS to true ' +\n      'to hide this warning.');\n  }\n}\n", "/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst NodeJSDocument = require('./document');\nconst EventEmitter = require('events').EventEmitter;\nconst MongooseError = require('./error/index');\nconst Schema = require('./schema');\nconst ObjectId = require('./types/objectid');\nconst ValidationError = MongooseError.ValidationError;\nconst applyHooks = require('./helpers/model/applyHooks');\nconst isObject = require('./helpers/isObject');\n\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} schema\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter https://nodejs.org/api/events.html#class-eventemitter\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document(obj, schema, fields, skipId, skipInit) {\n  if (!(this instanceof Document)) {\n    return new Document(obj, schema, fields, skipId, skipInit);\n  }\n\n  if (isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  }\n\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n  schema = this.schema || schema;\n\n  // Generate ObjectId if it is missing, but it requires a scheme\n  if (!this.schema && schema.options._id) {\n    obj = obj || {};\n\n    if (obj._id === undefined) {\n      obj._id = new ObjectId();\n    }\n  }\n\n  if (!schema) {\n    throw new MongooseError.MissingSchemaError();\n  }\n\n  this.$__setSchema(schema);\n\n  NodeJSDocument.call(this, obj, fields, skipId, skipInit);\n\n  applyHooks(this, schema, { decorateDoc: true });\n\n  // apply methods\n  for (const m in schema.methods) {\n    this[m] = schema.methods[m];\n  }\n  // apply statics\n  for (const s in schema.statics) {\n    this[s] = schema.statics[s];\n  }\n}\n\n/*!\n * Inherit from the NodeJS document\n */\n\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n\n/*!\n * ignore\n */\n\nDocument.events = new EventEmitter();\n\n/*!\n * Browser doc exposes the event emitter API\n */\n\nDocument.$emitter = new EventEmitter();\n\n['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',\n  'removeAllListeners', 'addListener'].forEach(function(emitterFn) {\n  Document[emitterFn] = function() {\n    return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);\n  };\n});\n\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n", "'use strict';\n\n/* eslint-env browser */\n\n/*!\n * Module dependencies.\n */\nconst Document = require('./document.js');\nconst BrowserDocument = require('./browserDocument.js');\n\nlet isBrowser = false;\n\n/**\n * Returns the Document constructor for the current context\n *\n * @api private\n */\nmodule.exports = function() {\n  if (isBrowser) {\n    return BrowserDocument;\n  }\n  return Document;\n};\n\n/*!\n * ignore\n */\nmodule.exports.setBrowser = function(flag) {\n  isBrowser = flag;\n};\n", "'use strict';\n\n/*!\n * Module dependencies.\n */\n\nrequire('./driver').set(require('./drivers/node-mongodb-native'));\n\nconst Document = require('./document');\nconst EventEmitter = require('events').EventEmitter;\nconst Kareem = require('kareem');\nconst Schema = require('./schema');\nconst SchemaType = require('./schematype');\nconst SchemaTypes = require('./schema/index');\nconst VirtualType = require('./virtualtype');\nconst STATES = require('./connectionstate');\nconst VALID_OPTIONS = require('./validoptions');\nconst Types = require('./types');\nconst Query = require('./query');\nconst Model = require('./model');\nconst applyPlugins = require('./helpers/schema/applyPlugins');\nconst builtinPlugins = require('./plugins');\nconst driver = require('./driver');\nconst legacyPluralize = require('./helpers/pluralize');\nconst utils = require('./utils');\nconst pkg = require('../package.json');\nconst cast = require('./cast');\n\nconst Aggregate = require('./aggregate');\nconst trusted = require('./helpers/query/trusted').trusted;\nconst sanitizeFilter = require('./helpers/query/sanitizeFilter');\nconst isBsonType = require('./helpers/isBsonType');\nconst MongooseError = require('./error/mongooseError');\nconst SetOptionError = require('./error/setOptionError');\n\nconst defaultMongooseSymbol = Symbol.for('mongoose:default');\n\nrequire('./helpers/printJestWarning');\n\nconst objectIdHexRegexp = /^[0-9A-Fa-f]{24}$/;\n\n/**\n * Mongoose constructor.\n *\n * The exports object of the `mongoose` module is an instance of this class.\n * Most apps will only use this one instance.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     mongoose instanceof mongoose.Mongoose; // true\n *\n *     // Create a new Mongoose instance with its own `connect()`, `set()`, `model()`, etc.\n *     const m = new mongoose.Mongoose();\n *\n * @api public\n * @param {Object} options see [`Mongoose#set()` docs](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.set())\n */\nfunction Mongoose(options) {\n  this.connections = [];\n  this.nextConnectionId = 0;\n  this.models = {};\n  this.events = new EventEmitter();\n  this.__driver = driver.get();\n  // default global options\n  this.options = Object.assign({\n    pluralization: true,\n    autoIndex: true,\n    autoCreate: true\n  }, options);\n  const createInitialConnection = utils.getOption('createInitialConnection', this.options);\n  if (createInitialConnection == null || createInitialConnection) {\n    const conn = this.createConnection(); // default connection\n    conn.models = this.models;\n  }\n\n  if (this.options.pluralization) {\n    this._pluralize = legacyPluralize;\n  }\n\n  // If a user creates their own Mongoose instance, give them a separate copy\n  // of the `Schema` constructor so they get separate custom types. (gh-6933)\n  if (!options || !options[defaultMongooseSymbol]) {\n    const _this = this;\n    this.Schema = function() {\n      this.base = _this;\n      return Schema.apply(this, arguments);\n    };\n    this.Schema.prototype = Object.create(Schema.prototype);\n\n    Object.assign(this.Schema, Schema);\n    this.Schema.base = this;\n    this.Schema.Types = Object.assign({}, Schema.Types);\n  } else {\n    // Hack to work around babel's strange behavior with\n    // `import mongoose, { Schema } from 'mongoose'`. Because `Schema` is not\n    // an own property of a Mongoose global, Schema will be undefined. See gh-5648\n    for (const key of ['Schema', 'model']) {\n      this[key] = Mongoose.prototype[key];\n    }\n  }\n  this.Schema.prototype.base = this;\n\n  Object.defineProperty(this, 'plugins', {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: Object.values(builtinPlugins).map(plugin => ([plugin, { deduplicate: true }]))\n  });\n}\n\nMongoose.prototype.cast = cast;\n/**\n * Expose connection states for user-land\n *\n * @memberOf Mongoose\n * @property STATES\n * @api public\n */\nMongoose.prototype.STATES = STATES;\n\n/**\n * Expose connection states for user-land\n *\n * @memberOf Mongoose\n * @property ConnectionStates\n * @api public\n */\nMongoose.prototype.ConnectionStates = STATES;\n\n/**\n * Object with `get()` and `set()` containing the underlying driver this Mongoose instance\n * uses to communicate with the database. A driver is a Mongoose-specific interface that defines functions\n * like `find()`.\n *\n * @deprecated\n * @memberOf Mongoose\n * @property driver\n * @api public\n */\n\nMongoose.prototype.driver = driver;\n\n/**\n * Overwrites the current driver used by this Mongoose instance. A driver is a\n * Mongoose-specific interface that defines functions like `find()`.\n *\n * @memberOf Mongoose\n * @method setDriver\n * @api public\n */\n\nMongoose.prototype.setDriver = function setDriver(driver) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  if (_mongoose.__driver === driver) {\n    return _mongoose;\n  }\n\n  const openConnection = _mongoose.connections && _mongoose.connections.find(conn => conn.readyState !== STATES.disconnected);\n  if (openConnection) {\n    const msg = 'Cannot modify Mongoose driver if a connection is already open. ' +\n      'Call `mongoose.disconnect()` before modifying the driver';\n    throw new MongooseError(msg);\n  }\n  _mongoose.__driver = driver;\n\n  const Connection = driver.Connection;\n  _mongoose.connections = [new Connection(_mongoose)];\n  _mongoose.connections[0].models = _mongoose.models;\n\n  return _mongoose;\n};\n\n/**\n * Sets mongoose options\n *\n * `key` can be used a object to set multiple options at once.\n * If a error gets thrown for one option, other options will still be evaluated.\n *\n * #### Example:\n *\n *     mongoose.set('test', value) // sets the 'test' option to `value`\n *\n *     mongoose.set('debug', true) // enable logging collection methods + arguments to the console/file\n *\n *     mongoose.set('debug', function(collectionName, methodName, ...methodArgs) {}); // use custom function to log collection methods + arguments\n *\n *     mongoose.set({ debug: true, autoIndex: false }); // set multiple options at once\n *\n * Currently supported options are:\n * - `allowDiskUse`: Set to `true` to set `allowDiskUse` to true to all aggregation operations by default.\n * - `applyPluginsToChildSchemas`: `true` by default. Set to false to skip applying global plugins to child schemas\n * - `applyPluginsToDiscriminators`: `false` by default. Set to true to apply global plugins to discriminator schemas. This typically isn't necessary because plugins are applied to the base schema and discriminators copy all middleware, methods, statics, and properties from the base schema.\n * - `autoCreate`: Set to `true` to make Mongoose call [`Model.createCollection()`](https://mongoosejs.com/docs/api/model.html#Model.createCollection()) automatically when you create a model with `mongoose.model()` or `conn.model()`. This is useful for testing transactions, change streams, and other features that require the collection to exist.\n * - `autoIndex`: `true` by default. Set to false to disable automatic index creation for all models associated with this Mongoose instance.\n * - `bufferCommands`: enable/disable mongoose's buffering mechanism for all connections and models\n * - `bufferTimeoutMS`: If bufferCommands is on, this option sets the maximum amount of time Mongoose buffering will wait before throwing an error. If not specified, Mongoose will use 10000 (10 seconds).\n * - `cloneSchemas`: `false` by default. Set to `true` to `clone()` all schemas before compiling into a model.\n * - `debug`: If `true`, prints the operations mongoose sends to MongoDB to the console. If a writable stream is passed, it will log to that stream, without colorization. If a callback function is passed, it will receive the collection name, the method name, then all arguments passed to the method. For example, if you wanted to replicate the default logging, you could output from the callback `Mongoose: ${collectionName}.${methodName}(${methodArgs.join(', ')})`.\n * - `id`: If `true`, adds a `id` virtual to all schemas unless overwritten on a per-schema basis.\n * - `timestamps.createdAt.immutable`: `true` by default. If `false`, it will change the `createdAt` field to be [`immutable: false`](https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.immutable) which means you can update the `createdAt`\n * - `maxTimeMS`: If set, attaches [maxTimeMS](https://www.mongodb.com/docs/manual/reference/operator/meta/maxTimeMS/) to every query\n * - `objectIdGetter`: `true` by default. Mongoose adds a getter to MongoDB ObjectId's called `_id` that returns `this` for convenience with populate. Set this to false to remove the getter.\n * - `overwriteModels`: Set to `true` to default to overwriting models with the same name when calling `mongoose.model()`, as opposed to throwing an `OverwriteModelError`.\n * - `returnOriginal`: If `false`, changes the default `returnOriginal` option to `findOneAndUpdate()`, `findByIdAndUpdate`, and `findOneAndReplace()` to false. This is equivalent to setting the `new` option to `true` for `findOneAndX()` calls by default. Read our [`findOneAndUpdate()` tutorial](https://mongoosejs.com/docs/tutorials/findoneandupdate.html) for more information.\n * - `runValidators`: `false` by default. Set to true to enable [update validators](https://mongoosejs.com/docs/validation.html#update-validators) for all validators by default.\n * - `sanitizeFilter`: `false` by default. Set to true to enable the [sanitization of the query filters](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.sanitizeFilter()) against query selector injection attacks by wrapping any nested objects that have a property whose name starts with `$` in a `$eq`.\n * - `selectPopulatedPaths`: `true` by default. Set to false to opt out of Mongoose adding all fields that you `populate()` to your `select()`. The schema-level option `selectPopulatedPaths` overwrites this one.\n * - `strict`: `true` by default, may be `false`, `true`, or `'throw'`. Sets the default strict mode for schemas.\n * - `strictQuery`: `false` by default. May be `false`, `true`, or `'throw'`. Sets the default [strictQuery](https://mongoosejs.com/docs/guide.html#strictQuery) mode for schemas.\n * - `toJSON`: `{ transform: true, flattenDecimals: true }` by default. Overwrites default objects to [`toJSON()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.toJSON()), for determining how Mongoose documents get serialized by `JSON.stringify()`\n * - `toObject`: `{ transform: true, flattenDecimals: true }` by default. Overwrites default objects to [`toObject()`](https://mongoosejs.com/docs/api/document.html#Document.prototype.toObject())\n *\n * @param {String|Object} key The name of the option or a object of multiple key-value pairs\n * @param {String|Function|Boolean} value The value of the option, unused if \"key\" is a object\n * @returns {Mongoose} The used Mongoose instnace\n * @api public\n */\n\nMongoose.prototype.set = function(key, value) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  if (arguments.length === 1 && typeof key !== 'object') {\n    if (VALID_OPTIONS.indexOf(key) === -1) {\n      const error = new SetOptionError();\n      error.addError(key, new SetOptionError.SetOptionInnerError(key));\n      throw error;\n    }\n\n    return _mongoose.options[key];\n  }\n\n  let options = {};\n\n  if (arguments.length === 2) {\n    options = { [key]: value };\n  }\n\n  if (arguments.length === 1 && typeof key === 'object') {\n    options = key;\n  }\n\n  // array for errors to collect all errors for all key-value pairs, like \".validate\"\n  let error = undefined;\n\n  for (const [optionKey, optionValue] of Object.entries(options)) {\n    if (VALID_OPTIONS.indexOf(optionKey) === -1) {\n      if (!error) {\n        error = new SetOptionError();\n      }\n      error.addError(optionKey, new SetOptionError.SetOptionInnerError(optionKey));\n      continue;\n    }\n\n    _mongoose.options[optionKey] = optionValue;\n\n    if (optionKey === 'objectIdGetter') {\n      if (optionValue) {\n        Object.defineProperty(mongoose.Types.ObjectId.prototype, '_id', {\n          enumerable: false,\n          configurable: true,\n          get: function() {\n            return this;\n          }\n        });\n      } else {\n        delete mongoose.Types.ObjectId.prototype._id;\n      }\n    }\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  return _mongoose;\n};\n\n/**\n * Gets mongoose options\n *\n * #### Example:\n *\n *     mongoose.get('test') // returns the 'test' value\n *\n * @param {String} key\n * @method get\n * @api public\n */\n\nMongoose.prototype.get = Mongoose.prototype.set;\n\n/**\n * Creates a Connection instance.\n *\n * Each `connection` instance maps to a single database. This method is helpful when managing multiple db connections.\n *\n *\n * _Options passed take precedence over options included in connection strings._\n *\n * #### Example:\n *\n *     // with mongodb:// URI\n *     db = mongoose.createConnection('mongodb://user:pass@127.0.0.1:port/database');\n *\n *     // and options\n *     const opts = { db: { native_parser: true }}\n *     db = mongoose.createConnection('mongodb://user:pass@127.0.0.1:port/database', opts);\n *\n *     // replica sets\n *     db = mongoose.createConnection('mongodb://user:pass@127.0.0.1:port,anotherhost:port,yetanother:port/database');\n *\n *     // and options\n *     const opts = { replset: { strategy: 'ping', rs_name: 'testSet' }}\n *     db = mongoose.createConnection('mongodb://user:pass@127.0.0.1:port,anotherhost:port,yetanother:port/database', opts);\n *\n *     // initialize now, connect later\n *     db = mongoose.createConnection();\n *     db.openUri('127.0.0.1', 'database', port, [opts]);\n *\n * @param {String} uri mongodb URI to connect to\n * @param {Object} [options] passed down to the [MongoDB driver's `connect()` function](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/MongoClientOptions.html), except for 4 mongoose-specific options explained below.\n * @param {Boolean} [options.bufferCommands=true] Mongoose specific option. Set to false to [disable buffering](https://mongoosejs.com/docs/faq.html#callback_never_executes) on all models associated with this connection.\n * @param {String} [options.dbName] The name of the database you want to use. If not provided, Mongoose uses the database name from connection string.\n * @param {String} [options.user] username for authentication, equivalent to `options.auth.user`. Maintained for backwards compatibility.\n * @param {String} [options.pass] password for authentication, equivalent to `options.auth.password`. Maintained for backwards compatibility.\n * @param {Boolean} [options.autoIndex=true] Mongoose-specific option. Set to false to disable automatic index creation for all models associated with this connection.\n * @param {Class} [options.promiseLibrary] Sets the [underlying driver's promise library](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/MongoClientOptions.html#promiseLibrary).\n * @param {Number} [options.maxPoolSize=5] The maximum number of sockets the MongoDB driver will keep open for this connection. Keep in mind that MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See [Slow Trains in MongoDB and Node.js](https://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs).\n * @param {Number} [options.minPoolSize=1] The minimum number of sockets the MongoDB driver will keep open for this connection. Keep in mind that MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See [Slow Trains in MongoDB and Node.js](https://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs).\n * @param {Number} [options.socketTimeoutMS=0] How long the MongoDB driver will wait before killing a socket due to inactivity _after initial connection_. Defaults to 0, which means Node.js will not time out the socket due to inactivity. A socket may be inactive because of either no activity or a long-running operation. This option is passed to [Node.js `socket#setTimeout()` function](https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback) after the MongoDB driver successfully completes.\n * @param {Number} [options.family=0] Passed transparently to [Node.js' `dns.lookup()`](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback) function. May be either `0`, `4`, or `6`. `4` means use IPv4 only, `6` means use IPv6 only, `0` means try both.\n * @return {Connection} the created Connection object. Connections are not thenable, so you can't do `await mongoose.createConnection()`. To await use `mongoose.createConnection(uri).asPromise()` instead.\n * @api public\n */\n\nMongoose.prototype.createConnection = function(uri, options) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  const Connection = _mongoose.__driver.Connection;\n  const conn = new Connection(_mongoose);\n  _mongoose.connections.push(conn);\n  _mongoose.nextConnectionId++;\n  _mongoose.events.emit('createConnection', conn);\n\n  if (arguments.length > 0) {\n    conn.openUri(uri, { ...options, _fireAndForget: true });\n  }\n\n  return conn;\n};\n\n/**\n * Opens the default mongoose connection.\n *\n * #### Example:\n *\n *     mongoose.connect('mongodb://user:pass@127.0.0.1:port/database');\n *\n *     // replica sets\n *     const uri = 'mongodb://user:pass@127.0.0.1:port,anotherhost:port,yetanother:port/mydatabase';\n *     mongoose.connect(uri);\n *\n *     // with options\n *     mongoose.connect(uri, options);\n *\n *     // optional callback that gets fired when initial connection completed\n *     const uri = 'mongodb://nonexistent.domain:27000';\n *     mongoose.connect(uri, function(error) {\n *       // if error is truthy, the initial connection failed.\n *     })\n *\n * @param {String} uri mongodb URI to connect to\n * @param {Object} [options] passed down to the [MongoDB driver's `connect()` function](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/MongoClientOptions.html), except for 4 mongoose-specific options explained below.\n * @param {Boolean} [options.bufferCommands=true] Mongoose specific option. Set to false to [disable buffering](https://mongoosejs.com/docs/faq.html#callback_never_executes) on all models associated with this connection.\n * @param {Number} [options.bufferTimeoutMS=10000] Mongoose specific option. If `bufferCommands` is true, Mongoose will throw an error after `bufferTimeoutMS` if the operation is still buffered.\n * @param {String} [options.dbName] The name of the database we want to use. If not provided, use database name from connection string.\n * @param {String} [options.user] username for authentication, equivalent to `options.auth.user`. Maintained for backwards compatibility.\n * @param {String} [options.pass] password for authentication, equivalent to `options.auth.password`. Maintained for backwards compatibility.\n * @param {Number} [options.maxPoolSize=100] The maximum number of sockets the MongoDB driver will keep open for this connection. Keep in mind that MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See [Slow Trains in MongoDB and Node.js](https://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs).\n * @param {Number} [options.minPoolSize=0] The minimum number of sockets the MongoDB driver will keep open for this connection.\n * @param {Number} [options.serverSelectionTimeoutMS] If `useUnifiedTopology = true`, the MongoDB driver will try to find a server to send any given operation to, and keep retrying for `serverSelectionTimeoutMS` milliseconds before erroring out. If not set, the MongoDB driver defaults to using `30000` (30 seconds).\n * @param {Number} [options.heartbeatFrequencyMS] If `useUnifiedTopology = true`, the MongoDB driver sends a heartbeat every `heartbeatFrequencyMS` to check on the status of the connection. A heartbeat is subject to `serverSelectionTimeoutMS`, so the MongoDB driver will retry failed heartbeats for up to 30 seconds by default. Mongoose only emits a `'disconnected'` event after a heartbeat has failed, so you may want to decrease this setting to reduce the time between when your server goes down and when Mongoose emits `'disconnected'`. We recommend you do **not** set this setting below 1000, too many heartbeats can lead to performance degradation.\n * @param {Boolean} [options.autoIndex=true] Mongoose-specific option. Set to false to disable automatic index creation for all models associated with this connection.\n * @param {Class} [options.promiseLibrary] Sets the [underlying driver's promise library](https://mongodb.github.io/node-mongodb-native/4.9/interfaces/MongoClientOptions.html#promiseLibrary).\n * @param {Number} [options.socketTimeoutMS=0] How long the MongoDB driver will wait before killing a socket due to inactivity _after initial connection_. A socket may be inactive because of either no activity or a long-running operation. `socketTimeoutMS` defaults to 0, which means Node.js will not time out the socket due to inactivity. This option is passed to [Node.js `socket#setTimeout()` function](https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback) after the MongoDB driver successfully completes.\n * @param {Number} [options.family=0] Passed transparently to [Node.js' `dns.lookup()`](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback) function. May be either `0`, `4`, or `6`. `4` means use IPv4 only, `6` means use IPv6 only, `0` means try both.\n * @param {Boolean} [options.autoCreate=false] Set to `true` to make Mongoose automatically call `createCollection()` on every model created on this connection.\n * @param {Function} [callback]\n * @see Mongoose#createConnection https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.createConnection()\n * @api public\n * @return {Promise} resolves to `this` if connection succeeded\n */\n\nMongoose.prototype.connect = async function connect(uri, options) {\n  if (typeof options === 'function' || (arguments.length >= 3 && typeof arguments[2] === 'function')) {\n    throw new MongooseError('Mongoose.prototype.connect() no longer accepts a callback');\n  }\n\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n  const conn = _mongoose.connection;\n\n  return conn.openUri(uri, options).then(() => _mongoose);\n};\n\n/**\n * Runs `.close()` on all connections in parallel.\n *\n * @return {Promise} resolves when all connections are closed, or rejects with the first error that occurred.\n * @api public\n */\n\nMongoose.prototype.disconnect = async function disconnect() {\n  if (arguments.length >= 1 && typeof arguments[0] === 'function') {\n    throw new MongooseError('Mongoose.prototype.disconnect() no longer accepts a callback');\n  }\n\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  const remaining = _mongoose.connections.length;\n  if (remaining <= 0) {\n    return;\n  }\n  await Promise.all(_mongoose.connections.map(conn => conn.close()));\n};\n\n/**\n * _Requires MongoDB >= 3.6.0._ Starts a [MongoDB session](https://www.mongodb.com/docs/manual/release-notes/3.6/#client-sessions)\n * for benefits like causal consistency, [retryable writes](https://www.mongodb.com/docs/manual/core/retryable-writes/),\n * and [transactions](https://thecodebarbarian.com/a-node-js-perspective-on-mongodb-4-transactions.html).\n *\n * Calling `mongoose.startSession()` is equivalent to calling `mongoose.connection.startSession()`.\n * Sessions are scoped to a connection, so calling `mongoose.startSession()`\n * starts a session on the [default mongoose connection](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.connection).\n *\n * @param {Object} [options] see the [mongodb driver options](https://mongodb.github.io/node-mongodb-native/4.9/classes/MongoClient.html#startSession)\n * @param {Boolean} [options.causalConsistency=true] set to false to disable causal consistency\n * @param {Function} [callback]\n * @return {Promise<ClientSession>} promise that resolves to a MongoDB driver `ClientSession`\n * @api public\n */\n\nMongoose.prototype.startSession = function() {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  return _mongoose.connection.startSession.apply(_mongoose.connection, arguments);\n};\n\n/**\n * Getter/setter around function for pluralizing collection names.\n *\n * @param {Function|null} [fn] overwrites the function used to pluralize collection names\n * @return {Function|null} the current function used to pluralize collection names, defaults to the legacy function from `mongoose-legacy-pluralize`.\n * @api public\n */\n\nMongoose.prototype.pluralize = function(fn) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  if (arguments.length > 0) {\n    _mongoose._pluralize = fn;\n  }\n  return _mongoose._pluralize;\n};\n\n/**\n * Defines a model or retrieves it.\n *\n * Models defined on the `mongoose` instance are available to all connection\n * created by the same `mongoose` instance.\n *\n * If you call `mongoose.model()` with twice the same name but a different schema,\n * you will get an `OverwriteModelError`. If you call `mongoose.model()` with\n * the same name and same schema, you'll get the same schema back.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *\n *     // define an Actor model with this mongoose instance\n *     const schema = new Schema({ name: String });\n *     mongoose.model('Actor', schema);\n *\n *     // create a new connection\n *     const conn = mongoose.createConnection(..);\n *\n *     // create Actor model\n *     const Actor = conn.model('Actor', schema);\n *     conn.model('Actor') === Actor; // true\n *     conn.model('Actor', schema) === Actor; // true, same schema\n *     conn.model('Actor', schema, 'actors') === Actor; // true, same schema and collection name\n *\n *     // This throws an `OverwriteModelError` because the schema is different.\n *     conn.model('Actor', new Schema({ name: String }));\n *\n * _When no `collection` argument is passed, Mongoose uses the model name. If you don't like this behavior, either pass a collection name, use `mongoose.pluralize()`, or set your schemas collection name option._\n *\n * #### Example:\n *\n *     const schema = new Schema({ name: String }, { collection: 'actor' });\n *\n *     // or\n *\n *     schema.set('collection', 'actor');\n *\n *     // or\n *\n *     const collectionName = 'actor'\n *     const M = mongoose.model('Actor', schema, collectionName)\n *\n * @param {String|Function} name model name or class extending Model\n * @param {Schema} [schema] the schema to use.\n * @param {String} [collection] name (optional, inferred from model name)\n * @return {Model} The model associated with `name`. Mongoose will create the model if it doesn't already exist.\n * @api public\n */\n\nMongoose.prototype.model = function(name, schema, collection, options) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  if (typeof schema === 'string') {\n    collection = schema;\n    schema = false;\n  }\n\n  if (arguments.length === 1) {\n    const model = _mongoose.models[name];\n    if (!model) {\n      throw new MongooseError.MissingSchemaError(name);\n    }\n    return model;\n  }\n\n  if (utils.isObject(schema) && !(schema instanceof Schema)) {\n    schema = new Schema(schema);\n  }\n  if (schema && !(schema instanceof Schema)) {\n    throw new Error('The 2nd parameter to `mongoose.model()` should be a ' +\n      'schema or a POJO');\n  }\n\n  // handle internal options from connection.model()\n  options = options || {};\n\n  const originalSchema = schema;\n  if (schema) {\n    if (_mongoose.get('cloneSchemas')) {\n      schema = schema.clone();\n    }\n    _mongoose._applyPlugins(schema);\n  }\n\n  // connection.model() may be passing a different schema for\n  // an existing model name. in this case don't read from cache.\n  const overwriteModels = _mongoose.options.hasOwnProperty('overwriteModels') ?\n    _mongoose.options.overwriteModels :\n    options.overwriteModels;\n  if (_mongoose.models.hasOwnProperty(name) && options.cache !== false && overwriteModels !== true) {\n    if (originalSchema &&\n        originalSchema.instanceOfSchema &&\n        originalSchema !== _mongoose.models[name].schema) {\n      throw new _mongoose.Error.OverwriteModelError(name);\n    }\n    if (collection && collection !== _mongoose.models[name].collection.name) {\n      // subclass current model with alternate collection\n      const model = _mongoose.models[name];\n      schema = model.prototype.schema;\n      const sub = model.__subclass(_mongoose.connection, schema, collection);\n      // do not cache the sub model\n      return sub;\n    }\n    return _mongoose.models[name];\n  }\n  if (schema == null) {\n    throw new _mongoose.Error.MissingSchemaError(name);\n  }\n\n  const model = _mongoose._model(name, schema, collection, options);\n  _mongoose.connection.models[name] = model;\n  _mongoose.models[name] = model;\n\n  return model;\n};\n\n/*!\n * ignore\n */\n\nMongoose.prototype._model = function(name, schema, collection, options) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  let model;\n  if (typeof name === 'function') {\n    model = name;\n    name = model.name;\n    if (!(model.prototype instanceof Model)) {\n      throw new _mongoose.Error('The provided class ' + name + ' must extend Model');\n    }\n  }\n\n  if (schema) {\n    if (_mongoose.get('cloneSchemas')) {\n      schema = schema.clone();\n    }\n    _mongoose._applyPlugins(schema);\n  }\n\n  // Apply relevant \"global\" options to the schema\n  if (schema == null || !('pluralization' in schema.options)) {\n    schema.options.pluralization = _mongoose.options.pluralization;\n  }\n\n  if (!collection) {\n    collection = schema.get('collection') ||\n      utils.toCollectionName(name, _mongoose.pluralize());\n  }\n\n  const connection = options.connection || _mongoose.connection;\n  model = _mongoose.Model.compile(model || name, schema, collection, connection, _mongoose);\n  // Errors handled internally, so safe to ignore error\n  model.init().catch(function $modelInitNoop() {});\n\n  connection.emit('model', model);\n\n  if (schema._applyDiscriminators != null) {\n    for (const disc of Object.keys(schema._applyDiscriminators)) {\n      model.discriminator(disc, schema._applyDiscriminators[disc]);\n    }\n  }\n\n  return model;\n};\n\n/**\n * Removes the model named `name` from the default connection, if it exists.\n * You can use this function to clean up any models you created in your tests to\n * prevent OverwriteModelErrors.\n *\n * Equivalent to `mongoose.connection.deleteModel(name)`.\n *\n * #### Example:\n *\n *     mongoose.model('User', new Schema({ name: String }));\n *     console.log(mongoose.model('User')); // Model object\n *     mongoose.deleteModel('User');\n *     console.log(mongoose.model('User')); // undefined\n *\n *     // Usually useful in a Mocha `afterEach()` hook\n *     afterEach(function() {\n *       mongoose.deleteModel(/.+/); // Delete every model\n *     });\n *\n * @api public\n * @param {String|RegExp} name if string, the name of the model to remove. If regexp, removes all models whose name matches the regexp.\n * @return {Mongoose} this\n */\n\nMongoose.prototype.deleteModel = function(name) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  _mongoose.connection.deleteModel(name);\n  delete _mongoose.models[name];\n  return _mongoose;\n};\n\n/**\n * Returns an array of model names created on this instance of Mongoose.\n *\n * #### Note:\n *\n * _Does not include names of models created using `connection.model()`._\n *\n * @api public\n * @return {Array}\n */\n\nMongoose.prototype.modelNames = function() {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  const names = Object.keys(_mongoose.models);\n  return names;\n};\n\n/**\n * Applies global plugins to `schema`.\n *\n * @param {Schema} schema\n * @api private\n */\n\nMongoose.prototype._applyPlugins = function(schema, options) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  options = options || {};\n  options.applyPluginsToDiscriminators = _mongoose.options && _mongoose.options.applyPluginsToDiscriminators || false;\n  options.applyPluginsToChildSchemas = typeof (_mongoose.options && _mongoose.options.applyPluginsToDiscriminators) === 'boolean' ? _mongoose.options.applyPluginsToDiscriminators : true;\n  applyPlugins(schema, _mongoose.plugins, options, '$globalPluginsApplied');\n};\n\n/**\n * Declares a global plugin executed on all Schemas.\n *\n * Equivalent to calling `.plugin(fn)` on each Schema you create.\n *\n * @param {Function} fn plugin callback\n * @param {Object} [opts] optional options\n * @return {Mongoose} this\n * @see plugins https://mongoosejs.com/docs/plugins.html\n * @api public\n */\n\nMongoose.prototype.plugin = function(fn, opts) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n\n  _mongoose.plugins.push([fn, opts]);\n  return _mongoose;\n};\n\n/**\n * The Mongoose module's default connection. Equivalent to `mongoose.connections[0]`, see [`connections`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.connections).\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     mongoose.connect(...);\n *     mongoose.connection.on('error', cb);\n *\n * This is the connection used by default for every model created using [mongoose.model](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.model()).\n *\n * To create a new connection, use [`createConnection()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.createConnection()).\n *\n * @memberOf Mongoose\n * @instance\n * @property {Connection} connection\n * @api public\n */\n\nMongoose.prototype.__defineGetter__('connection', function() {\n  return this.connections[0];\n});\n\nMongoose.prototype.__defineSetter__('connection', function(v) {\n  if (v instanceof this.__driver.Connection) {\n    this.connections[0] = v;\n    this.models = v.models;\n  }\n});\n\n/**\n * An array containing all [connections](connection.html) associated with this\n * Mongoose instance. By default, there is 1 connection. Calling\n * [`createConnection()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.createConnection()) adds a connection\n * to this array.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     mongoose.connections.length; // 1, just the default connection\n *     mongoose.connections[0] === mongoose.connection; // true\n *\n *     mongoose.createConnection('mongodb://127.0.0.1:27017/test');\n *     mongoose.connections.length; // 2\n *\n * @memberOf Mongoose\n * @instance\n * @property {Array} connections\n * @api public\n */\n\nMongoose.prototype.connections;\n\n/**\n * An integer containing the value of the next connection id. Calling\n * [`createConnection()`](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.createConnection()) increments\n * this value.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     mongoose.createConnection(); // id `0`, `nextConnectionId` becomes `1`\n *     mongoose.createConnection(); // id `1`, `nextConnectionId` becomes `2`\n *     mongoose.connections[0].destroy() // Removes connection with id `0`\n *     mongoose.createConnection(); // id `2`, `nextConnectionId` becomes `3`\n *\n * @memberOf Mongoose\n * @instance\n * @property {Number} nextConnectionId\n * @api private\n */\n\nMongoose.prototype.nextConnectionId;\n\n/**\n * The Mongoose Aggregate constructor\n *\n * @method Aggregate\n * @api public\n */\n\nMongoose.prototype.Aggregate = Aggregate;\n\n/**\n * The Mongoose Collection constructor\n *\n * @memberOf Mongoose\n * @instance\n * @method Collection\n * @api public\n */\n\nObject.defineProperty(Mongoose.prototype, 'Collection', {\n  get: function() {\n    return this.__driver.Collection;\n  },\n  set: function(Collection) {\n    this.__driver.Collection = Collection;\n  }\n});\n\n/**\n * The Mongoose [Connection](https://mongoosejs.com/docs/api/connection.html#Connection()) constructor\n *\n * @memberOf Mongoose\n * @instance\n * @method Connection\n * @api public\n */\n\nObject.defineProperty(Mongoose.prototype, 'Connection', {\n  get: function() {\n    return this.__driver.Connection;\n  },\n  set: function(Connection) {\n    if (Connection === this.__driver.Connection) {\n      return;\n    }\n\n    this.__driver.Connection = Connection;\n  }\n});\n\n/**\n * The Mongoose version\n *\n * #### Example:\n *\n *     console.log(mongoose.version); // '5.x.x'\n *\n * @property version\n * @api public\n */\n\nMongoose.prototype.version = pkg.version;\n\n/**\n * The Mongoose constructor\n *\n * The exports of the mongoose module is an instance of this class.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     const mongoose2 = new mongoose.Mongoose();\n *\n * @method Mongoose\n * @api public\n */\n\nMongoose.prototype.Mongoose = Mongoose;\n\n/**\n * The Mongoose [Schema](https://mongoosejs.com/docs/api/schema.html#Schema()) constructor\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     const Schema = mongoose.Schema;\n *     const CatSchema = new Schema(..);\n *\n * @method Schema\n * @api public\n */\n\nMongoose.prototype.Schema = Schema;\n\n/**\n * The Mongoose [SchemaType](https://mongoosejs.com/docs/api/schematype.html#SchemaType()) constructor\n *\n * @method SchemaType\n * @api public\n */\n\nMongoose.prototype.SchemaType = SchemaType;\n\n/**\n * The various Mongoose SchemaTypes.\n *\n * #### Note:\n *\n * _Alias of mongoose.Schema.Types for backwards compatibility._\n *\n * @property SchemaTypes\n * @see Schema.SchemaTypes https://mongoosejs.com/docs/schematypes.html\n * @api public\n */\n\nMongoose.prototype.SchemaTypes = Schema.Types;\n\n/**\n * The Mongoose [VirtualType](https://mongoosejs.com/docs/api/virtualtype.html#VirtualType()) constructor\n *\n * @method VirtualType\n * @api public\n */\n\nMongoose.prototype.VirtualType = VirtualType;\n\n/**\n * The various Mongoose Types.\n *\n * #### Example:\n *\n *     const mongoose = require('mongoose');\n *     const array = mongoose.Types.Array;\n *\n * #### Types:\n *\n * - [Array](https://mongoosejs.com/docs/schematypes.html#arrays)\n * - [Buffer](https://mongoosejs.com/docs/schematypes.html#buffers)\n * - [Embedded](https://mongoosejs.com/docs/schematypes.html#schemas)\n * - [DocumentArray](https://mongoosejs.com/docs/api/documentarraypath.html)\n * - [Decimal128](https://mongoosejs.com/docs/api/mongoose.html#Mongoose.prototype.Decimal128)\n * - [ObjectId](https://mongoosejs.com/docs/schematypes.html#objectids)\n * - [Map](https://mongoosejs.com/docs/schematypes.html#maps)\n * - [Subdocument](https://mongoosejs.com/docs/schematypes.html#schemas)\n *\n * Using this exposed access to the `ObjectId` type, we can construct ids on demand.\n *\n *     const ObjectId = mongoose.Types.ObjectId;\n *     const id1 = new ObjectId;\n *\n * @property Types\n * @api public\n */\n\nMongoose.prototype.Types = Types;\n\n/**\n * The Mongoose [Query](https://mongoosejs.com/docs/api/query.html#Query()) constructor.\n *\n * @method Query\n * @api public\n */\n\nMongoose.prototype.Query = Query;\n\n/**\n * The Mongoose [Model](https://mongoosejs.com/docs/api/model.html#Model()) constructor.\n *\n * @method Model\n * @api public\n */\n\nMongoose.prototype.Model = Model;\n\n/**\n * The Mongoose [Document](https://mongoosejs.com/docs/api/document.html#Document()) constructor.\n *\n * @method Document\n * @api public\n */\n\nMongoose.prototype.Document = Document;\n\n/**\n * The Mongoose DocumentProvider constructor. Mongoose users should not have to\n * use this directly\n *\n * @method DocumentProvider\n * @api public\n */\n\nMongoose.prototype.DocumentProvider = require('./document_provider');\n\n/**\n * The Mongoose ObjectId [SchemaType](https://mongoosejs.com/docs/schematypes.html). Used for\n * declaring paths in your schema that should be\n * [MongoDB ObjectIds](https://www.mongodb.com/docs/manual/reference/method/ObjectId/).\n * Do not use this to create a new ObjectId instance, use `mongoose.Types.ObjectId`\n * instead.\n *\n * #### Example:\n *\n *     const childSchema = new Schema({ parentId: mongoose.ObjectId });\n *\n * @property ObjectId\n * @api public\n */\n\nMongoose.prototype.ObjectId = SchemaTypes.ObjectId;\n\n/**\n * Returns true if Mongoose can cast the given value to an ObjectId, or\n * false otherwise.\n *\n * #### Example:\n *\n *     mongoose.isValidObjectId(new mongoose.Types.ObjectId()); // true\n *     mongoose.isValidObjectId('0123456789ab'); // true\n *     mongoose.isValidObjectId(6); // true\n *     mongoose.isValidObjectId(new User({ name: 'test' })); // true\n *\n *     mongoose.isValidObjectId({ test: 42 }); // false\n *\n * @method isValidObjectId\n * @param {Any} v\n * @returns {boolean} true if `v` is something Mongoose can coerce to an ObjectId\n * @api public\n */\n\nMongoose.prototype.isValidObjectId = function(v) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n  return _mongoose.Types.ObjectId.isValid(v);\n};\n\n/**\n * Returns true if the given value is a Mongoose ObjectId (using `instanceof`) or if the\n * given value is a 24 character hex string, which is the most commonly used string representation\n * of an ObjectId.\n *\n * This function is similar to `isValidObjectId()`, but considerably more strict, because\n * `isValidObjectId()` will return `true` for _any_ value that Mongoose can convert to an\n * ObjectId. That includes Mongoose documents, any string of length 12, and any number.\n * `isObjectIdOrHexString()` returns true only for `ObjectId` instances or 24 character hex\n * strings, and will return false for numbers, documents, and strings of length 12.\n *\n * #### Example:\n *\n *     mongoose.isObjectIdOrHexString(new mongoose.Types.ObjectId()); // true\n *     mongoose.isObjectIdOrHexString('62261a65d66c6be0a63c051f'); // true\n *\n *     mongoose.isObjectIdOrHexString('0123456789ab'); // false\n *     mongoose.isObjectIdOrHexString(6); // false\n *     mongoose.isObjectIdOrHexString(new User({ name: 'test' })); // false\n *     mongoose.isObjectIdOrHexString({ test: 42 }); // false\n *\n * @method isObjectIdOrHexString\n * @param {Any} v\n * @returns {boolean} true if `v` is an ObjectId instance _or_ a 24 char hex string\n * @api public\n */\n\nMongoose.prototype.isObjectIdOrHexString = function(v) {\n  return isBsonType(v, 'ObjectId') || (typeof v === 'string' && objectIdHexRegexp.test(v));\n};\n\n/**\n *\n * Syncs all the indexes for the models registered with this connection.\n *\n * @param {Object} options\n * @param {Boolean} options.continueOnError `false` by default. If set to `true`, mongoose will not throw an error if one model syncing failed, and will return an object where the keys are the names of the models, and the values are the results/errors for each model.\n * @return {Promise} Returns a Promise, when the Promise resolves the value is a list of the dropped indexes.\n */\nMongoose.prototype.syncIndexes = function(options) {\n  const _mongoose = this instanceof Mongoose ? this : mongoose;\n  return _mongoose.connection.syncIndexes(options);\n};\n\n/**\n * The Mongoose Decimal128 [SchemaType](https://mongoosejs.com/docs/schematypes.html). Used for\n * declaring paths in your schema that should be\n * [128-bit decimal floating points](https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-decimal.html).\n * Do not use this to create a new Decimal128 instance, use `mongoose.Types.Decimal128`\n * instead.\n *\n * #### Example:\n *\n *     const vehicleSchema = new Schema({ fuelLevel: mongoose.Decimal128 });\n *\n * @property Decimal128\n * @api public\n */\n\nMongoose.prototype.Decimal128 = SchemaTypes.Decimal128;\n\n/**\n * The Mongoose Mixed [SchemaType](https://mongoosejs.com/docs/schematypes.html). Used for\n * declaring paths in your schema that Mongoose's change tracking, casting,\n * and validation should ignore.\n *\n * #### Example:\n *\n *     const schema = new Schema({ arbitrary: mongoose.Mixed });\n *\n * @property Mixed\n * @api public\n */\n\nMongoose.prototype.Mixed = SchemaTypes.Mixed;\n\n/**\n * The Mongoose Date [SchemaType](https://mongoosejs.com/docs/schematypes.html).\n *\n * #### Example:\n *\n *     const schema = new Schema({ test: Date });\n *     schema.path('test') instanceof mongoose.Date; // true\n *\n * @property Date\n * @api public\n */\n\nMongoose.prototype.Date = SchemaTypes.Date;\n\n/**\n * The Mongoose Number [SchemaType](https://mongoosejs.com/docs/schematypes.html). Used for\n * declaring paths in your schema that Mongoose should cast to numbers.\n *\n * #### Example:\n *\n *     const schema = new Schema({ num: mongoose.Number });\n *     // Equivalent to:\n *     const schema = new Schema({ num: 'number' });\n *\n * @property Number\n * @api public\n */\n\nMongoose.prototype.Number = SchemaTypes.Number;\n\n/**\n * The [MongooseError](https://mongoosejs.com/docs/api/error.html#Error()) constructor.\n *\n * @method Error\n * @api public\n */\n\nMongoose.prototype.Error = require('./error/index');\nMongoose.prototype.MongooseError = require('./error/mongooseError');\n\n/**\n * Mongoose uses this function to get the current time when setting\n * [timestamps](https://mongoosejs.com/docs/guide.html#timestamps). You may stub out this function\n * using a tool like [Sinon](https://www.npmjs.com/package/sinon) for testing.\n *\n * @method now\n * @returns Date the current time\n * @api public\n */\n\nMongoose.prototype.now = function now() { return new Date(); };\n\n/**\n * The Mongoose CastError constructor\n *\n * @method CastError\n * @param {String} type The name of the type\n * @param {Any} value The value that failed to cast\n * @param {String} path The path `a.b.c` in the doc where this cast error occurred\n * @param {Error} [reason] The original error that was thrown\n * @api public\n */\n\nMongoose.prototype.CastError = require('./error/cast');\n\n/**\n * The constructor used for schematype options\n *\n * @method SchemaTypeOptions\n * @api public\n */\n\nMongoose.prototype.SchemaTypeOptions = require('./options/SchemaTypeOptions');\n\n/**\n * The [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver Mongoose uses.\n *\n * @property mongo\n * @api public\n */\n\nMongoose.prototype.mongo = require('mongodb');\n\n/**\n * The [mquery](https://github.com/aheckmann/mquery) query builder Mongoose uses.\n *\n * @property mquery\n * @api public\n */\n\nMongoose.prototype.mquery = require('mquery');\n\n/**\n * Sanitizes query filters against [query selector injection attacks](https://thecodebarbarian.com/2014/09/04/defending-against-query-selector-injection-attacks.html)\n * by wrapping any nested objects that have a property whose name starts with `$` in a `$eq`.\n *\n * ```javascript\n * const obj = { username: 'val', pwd: { $ne: null } };\n * sanitizeFilter(obj);\n * obj; // { username: 'val', pwd: { $eq: { $ne: null } } });\n * ```\n *\n * @method sanitizeFilter\n * @param {Object} filter\n * @returns Object the sanitized object\n * @api public\n */\n\nMongoose.prototype.sanitizeFilter = sanitizeFilter;\n\n/**\n * Tells `sanitizeFilter()` to skip the given object when filtering out potential [query selector injection attacks](https://thecodebarbarian.com/2014/09/04/defending-against-query-selector-injection-attacks.html).\n * Use this method when you have a known query selector that you want to use.\n *\n * ```javascript\n * const obj = { username: 'val', pwd: trusted({ $type: 'string', $eq: 'my secret' }) };\n * sanitizeFilter(obj);\n *\n * // Note that `sanitizeFilter()` did not add `$eq` around `$type`.\n * obj; // { username: 'val', pwd: { $type: 'string', $eq: 'my secret' } });\n * ```\n *\n * @method trusted\n * @param {Object} obj\n * @returns Object the passed in object\n * @api public\n */\n\nMongoose.prototype.trusted = trusted;\n\n/**\n * Use this function in `pre()` middleware to skip calling the wrapped function.\n *\n * #### Example:\n *\n *     schema.pre('save', function() {\n *       // Will skip executing `save()`, but will execute post hooks as if\n *       // `save()` had executed with the result `{ matchedCount: 0 }`\n *       return mongoose.skipMiddlewareFunction({ matchedCount: 0 });\n *     });\n *\n * @method skipMiddlewareFunction\n * @param {any} result\n * @api public\n */\n\nMongoose.prototype.skipMiddlewareFunction = Kareem.skipWrappedFunction;\n\n/**\n * Use this function in `post()` middleware to replace the result\n *\n * #### Example:\n *\n *     schema.post('find', function(res) {\n *       // Normally you have to modify `res` in place. But with\n *       // `overwriteMiddlewarResult()`, you can make `find()` return a\n *       // completely different value.\n *       return mongoose.overwriteMiddlewareResult(res.filter(doc => !doc.isDeleted));\n *     });\n *\n * @method overwriteMiddlewareResult\n * @param {any} result\n * @api public\n */\n\nMongoose.prototype.overwriteMiddlewareResult = Kareem.overwriteResult;\n\n/**\n * The exports object is an instance of Mongoose.\n *\n * @api private\n */\n\nconst mongoose = module.exports = exports = new Mongoose({\n  [defaultMongooseSymbol]: true\n});\n", "/**\n * Export lib/mongoose\n *\n */\n\n'use strict';\n\nconst mongoose = require('./lib/');\n\nmodule.exports = mongoose;\nmodule.exports.default = mongoose;\nmodule.exports.mongoose = mongoose;\n\n// Re-export for ESM support\nmodule.exports.cast = mongoose.cast;\nmodule.exports.STATES = mongoose.STATES;\nmodule.exports.setDriver = mongoose.setDriver;\nmodule.exports.set = mongoose.set;\nmodule.exports.get = mongoose.get;\nmodule.exports.createConnection = mongoose.createConnection;\nmodule.exports.connect = mongoose.connect;\nmodule.exports.disconnect = mongoose.disconnect;\nmodule.exports.startSession = mongoose.startSession;\nmodule.exports.pluralize = mongoose.pluralize;\nmodule.exports.model = mongoose.model;\nmodule.exports.deleteModel = mongoose.deleteModel;\nmodule.exports.modelNames = mongoose.modelNames;\nmodule.exports.plugin = mongoose.plugin;\nmodule.exports.connections = mongoose.connections;\nmodule.exports.version = mongoose.version;\nmodule.exports.Mongoose = mongoose.Mongoose;\nmodule.exports.Schema = mongoose.Schema;\nmodule.exports.SchemaType = mongoose.SchemaType;\nmodule.exports.SchemaTypes = mongoose.SchemaTypes;\nmodule.exports.VirtualType = mongoose.VirtualType;\nmodule.exports.Types = mongoose.Types;\nmodule.exports.Query = mongoose.Query;\nmodule.exports.Model = mongoose.Model;\nmodule.exports.Document = mongoose.Document;\nmodule.exports.ObjectId = mongoose.ObjectId;\nmodule.exports.isValidObjectId = mongoose.isValidObjectId;\nmodule.exports.isObjectIdOrHexString = mongoose.isObjectIdOrHexString;\nmodule.exports.syncIndexes = mongoose.syncIndexes;\nmodule.exports.Decimal128 = mongoose.Decimal128;\nmodule.exports.Mixed = mongoose.Mixed;\nmodule.exports.Date = mongoose.Date;\nmodule.exports.Number = mongoose.Number;\nmodule.exports.Error = mongoose.Error;\nmodule.exports.MongooseError = mongoose.MongooseError;\nmodule.exports.now = mongoose.now;\nmodule.exports.CastError = mongoose.CastError;\nmodule.exports.SchemaTypeOptions = mongoose.SchemaTypeOptions;\nmodule.exports.mongo = mongoose.mongo;\nmodule.exports.mquery = mongoose.mquery;\nmodule.exports.sanitizeFilter = mongoose.sanitizeFilter;\nmodule.exports.trusted = mongoose.trusted;\nmodule.exports.skipMiddlewareFunction = mongoose.skipMiddlewareFunction;\nmodule.exports.overwriteMiddlewareResult = mongoose.overwriteMiddlewareResult;\n\n// The following properties are not exported using ESM because `setDriver()` can mutate these\n// module.exports.connection = mongoose.connection;\n// module.exports.Collection = mongoose.Collection;\n// module.exports.Connection = mongoose.Connection;\n", "// Requirements\r\nimport express, {urlencoded, json} from 'express'\r\nimport ServerlessHttp from 'serverless-http'\r\nimport cors from 'cors'\r\nimport 'dotenv/config'\r\nimport Mongoose from 'mongoose'\r\n\r\n// Import routes\r\nimport lineRoute from './routes/line.js'\r\nimport trainRoute from './routes/train.js'\r\n\r\n// Variables\r\nconst app = express()\r\nconst port = process.env.PORT || 3000\r\n\r\napp.use(cors())\r\napp.use(express.urlencoded({extended: true}))\r\napp.use(express.json())\r\n\r\n// Routes\r\napp.use('/line', lineRoute)\r\napp.use('/train', trainRoute)\r\n\r\n// Connect to DB\r\ntry {\r\n    Mongoose.connect(process.env.URI,\r\n        {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true\r\n        }\r\n    )\r\n    console.log('Connected to database')\r\n}\r\ncatch(err){\r\n    console.log(err)\r\n}\r\n\r\n// Start app\r\napp.listen(port, () => console.log(`Listening on ${port}`))\r\nexport const handler = ServerlessHttp(app)", "(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n", "import express from 'express'\r\nimport Line from '../models/line.js'\r\nimport Train from '../models/train.js'\r\n\r\nconst router = express.Router()\r\n\r\n// Get all lines\r\nrouter.get('/', async (req, res) => {\r\n    try{\r\n        const lines = await Line.find()\r\n        res.json(lines)\r\n    }\r\n    catch(err) {\r\n        res.status(500).json({error: err.message})\r\n    }\r\n})\r\n\r\n// Get all trains (for 1 line)\r\nrouter.get('/:id', async (req, res) => {\r\n    try{\r\n        const trains = await Train.find({line: req.params.id})\r\n        res.json(trains)\r\n    }\r\n    catch(err) {\r\n        res.status(500).json({error: err.message})\r\n    }\r\n})\r\n\r\n// Post new line\r\nrouter.post('/', async (req, res) => {\r\n    try{\r\n        const newLine = new Line(req.body)\r\n        await newLine.save()\r\n        res.json({success: 'Successfully saved line'})\r\n    }\r\n    catch(err) {\r\n        res.status(500).json({error: err.message})\r\n    }\r\n})\r\n\r\nexport default router", "import Mongoose from \"mongoose\";\r\n\r\nconst lineSchema = Mongoose.Schema({\r\n    company: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    line: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    name: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    stations: [String]\r\n})\r\n\r\nexport default Mongoose.model('Line', lineSchema)", "import Mongoose from \"mongoose\";\r\n\r\nconst stationSchema = Mongoose.Schema({\r\n    station: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    data: []    \r\n})\r\n\r\nconst trainSchema = Mongoose.Schema({\r\n    number: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    name: {\r\n        type: String\r\n    },\r\n    wagons: [],\r\n    line: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    stations: [stationSchema]\r\n})\r\n\r\nexport default Mongoose.model('Train', trainSchema)", "import express from 'express'\r\nimport Train from '../models/train.js'\r\n\r\nconst router = express.Router()\r\n\r\n// Get 1 train (and traffic around this)\r\nrouter.get('/:id', async (req, res) => {\r\n    try{\r\n        const train = await Train.findOne({_id: req.params.id})\r\n        \r\n        const destinationIndex = train.stations.length - 1\r\n        // Easier to use filter at the moment\r\n\r\n        let traffic = await Train.find({\r\n            _id: {$ne: train._id},\r\n            line: train.line\r\n        })\r\n        traffic = traffic.filter(item => \r\n\r\n            // Starts before player && arrives after\r\n            ((+item.stations[0].data[2] <= +train.stations[0].data[2] &&\r\n            +item.stations[0].data[3] <= +train.stations[0].data[3]) &&\r\n            (+item.stations[destinationIndex].data[2] >= +train.stations[destinationIndex].data[2] &&\r\n            +item.stations[destinationIndex].data[3] >= +train.stations[destinationIndex].data[3]))\r\n            \r\n            ||\r\n\r\n            // // Starts after player && arrives before\r\n            // ((+item.stations[0].data[2] >= +train.stations[0].data[2] &&\r\n            // +item.stations[0].data[3] >= +train.stations[0].data[3]) &&\r\n            // (+item.stations[destinationIndex].data[2] <= +train.stations[destinationIndex].data[2] &&\r\n            // +item.stations[destinationIndex].data[3] <= +train.stations[destinationIndex].data[3]))\r\n             \r\n            // ||\r\n\r\n            // // Starts from destination before player arrival\r\n            (+item.stations[destinationIndex].data[2] <= train.stations[destinationIndex].data[0] &&\r\n            +item.stations[destinationIndex].data[3] <= train.stations[destinationIndex].data[1])\r\n        )\r\n\r\n        res.json({train: train, traffic: traffic})\r\n    }\r\n    catch(err) {\r\n        res.status(500).json({error: err.message})\r\n    }\r\n})\r\n\r\n// Post new train\r\nrouter.post('/', async (req, res) => {\r\n    try{\r\n        const newTrain = new Train(req.body)\r\n        await newTrain.save()\r\n        res.json({success: 'New train saved'})\r\n    }\r\n    catch(err) {\r\n        res.status(500).json({error: err.message})\r\n    }\r\n})\r\n\r\nexport default router"],
  "mappings": "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",
  "names": []
}
